// === START: Peer Voice Chat ===
/*
...existing code...
*/
// === END: Peer Voice Chat ===


Translate = {};

Translate.Text = {};
Translate.Button = {};
Translate.General = {};
Translate.Title = {};
Translate.Msg = {};
Translate.Title.Alert = {};
Translate.Title.MenuList = {};
Translate.Title.Box = {};
Translate.Title.TH = {};

Translate.Button.MenuList = {};
Translate.Button.Hero = {};
Translate.Button.Building = {};
Translate.Button.General = {};
Translate.Button.Chat = {};

Translate.General.Crops = {
    "pt": "Plantaç",
    "es": "Cosechas",
    "de": "Getreide",
    "zh": "粮食",
    "en": "Crops",
    "ar": "غذاء"
};
Translate.General.Lumber = {
    "pt": "Madeira",
    "es": "Madera",
    "de": "Holz",
    "zh": "木材",
    "en": "Lumber",
    "ar": "اخشاب"
};
Translate.General.Stone = {
    "pt": "Pedra",
    "es": "Piedra",
    "de": "Stein",
    "zh": "石料",
    "en": "Stone",
    "ar": "احجار"
};
Translate.General.Iron = {
    "pt": "Ferro",
    "es": "Acero",
    "de": "Eisen",
    "zh": "铁锭",
    "en": "Iron",
    "ar": "حديد"
};
Translate.General.Item = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Item",
    "ar": "المادة"
};



Translate.Button.General.Action = {
    "pt": "Ação",
    "es": "Acción",
    "de": "Bewegung",
    "zh": "行动",
    "en": "Action",
    "ar": "اختر"
};
Translate.Button.General.GoTo = {
    "pt": "Ir Para",
    "es": "Ir a",
    "de": "wechseln",
    "zh": "跳转",
    "en": "Go To",
    "ar": "اذهب الى"
};
Translate.Button.General.Search = {
    "pt": "Procurar",
    "es": "Búsqueda",
    "de": "suchen",
    "zh": "查找",
    "en": "Search",
    "ar": "بحث"
};
Translate.Button.General.Upgrade = {
    "pt": "Aprim.",
    "es": "Mejorar",
    "de": "Versetzen",
    "zh": "升级",
    "en": "Upgrade",
    "ar": "تطوير"
};
Translate.Button.General.JoinAttack = {
    "pt": "Junte-se ao agressor",
    "es": "Unirse a Asaltante",
    "de": "Eintritt beim Angreifer",
    "zh": "加入进攻",
    "en": "Join Assailant",
    "ar": "الانظمام للهجوم"
};
Translate.Button.General.JoinDefence = {
    "pt": "Junte-se A Defender",
    "es": "unirte a Defensores",
    "de": "An Verteidigung teilnehmen",
    "zh": "加入防守",
    "en": "Join Defender",
    "ar": "الإنظمام للدفاع"
};
Translate.Button.General.Use = {
    "pt": "Usar",
    "es": "Usar",
    "de": "verwenden",
    "zh": "使用",
    "en": "Use",
    "ar": "استعمال"
};
Translate.Button.General.ViewRank = {
    "pt": "Meu Ranking",
    "es": "Mostrar mi Clasificación",
    "de": "Mein Rang",
    "zh": "我的排名",
    "en": "Show My Ranking",
    "ar": "اعرض تصنيفي"
};
Translate.Button.General.Cancel = {
    "pt": "Cancelar",
    "es": "Cancelar",
    "de": "Abbr.",
    "zh": "取消",
    "en": "Cancel",
    "ar": "الغاء"
};
Translate.Button.General.Confirm = {
    "pt": "Confirma",
    "es": "Confirmar",
    "de": "Ja",
    "zh": "确定",
    "en": "Confirm",
    "ar": "تاكيد"
};
Translate.Button.MenuList.GetSomeGold = {
    "pt": "Obt.Ouro",
    "es": "¡Adquiere Oro Ya!",
    "de": "Gold auf.",
    "zh": "充值",
    "en": "Get Some Gold Now!",
    "ar": "احصل على الذهب الان"
};
Translate.Button.MenuList.BuyItems = {
    "pt": "Comprar Item",
    "es": "Comprar Artículo",
    "de": "Requisiten kaufen",
    "zh": "购买道具",
    "en": "Buy Item",
    "ar": "شراء مواد"
};
Translate.Button.MenuList.Intelligence = {
    "pt": "Inteligência",
    "es": "Inteligencia",
    "de": "Informationen",
    "zh": "详细情报",
    "en": "Intelligence",
    "ar": "الاستخبارات"
};
Translate.Button.MenuList.RefreshHero = {
    "pt": "Atualizar # dos Heróis",
    "es": "Actualizar # Héroes",
    "de": "Gruppen aktualisieren",
    "zh": "刷新队列",
    "en": "Refresh # of Heroes",
    "ar": "تحديث المعركة والجنود"
};
Translate.Button.MenuList.AcceptReward = {
    "pt": "Aceitar Recompensa",
    "es": "Aceptar Premio",
    "de": "Auszeichnung erhalten",
    "zh": "领取奖励",
    "en": "Accept Reward",
    "ar": "قبول المكافاة"
};
Translate.Button.MenuList.DeleteSelected = {
    "pt": "Deletar Selecionados",
    "es": "Eliminar Seleccionados",
    "de": "Auswahl entfernen",
    "zh": "删除选定",
    "en": "Delete Selected",
    "ar": "حذف المحدد"
};
Translate.Button.MenuList.ToggelAll = {
    "pt": "Alternar",
    "es": "Seleccionar Todos",
    "de": "Alle auswählen",
    "zh": "全部选择",
    "en": "Toggle All",
    "ar": "اختيار الكل"
};
Translate.Button.MenuList.LeagueManagement = {
    "pt": "Gerência da Liga",
    "es": "Gestión de Liga",
    "de": "Allianz-Verwaltung",
    "zh": "联盟管理",
    "en": "League Management",
    "ar": "ادارة الحلف"
};
Translate.Button.MenuList.View = {
    "pt": "Ver",
    "es": "Ver",
    "de": "Sehen",
    "zh": "查看",
    "en": "View",
    "ar": "عرض"
};
Translate.Button.MenuList.ViewLeagueRank = {
    "pt": "Ver Rank da Liga",
    "es": "Ver Clasificación de Liga",
    "de": "Die Allianz-Liste prüfen",
    "zh": "查看联盟列表",
    "en": "View League Rank",
    "ar": "عرض تصنيف الحلف"
};
Translate.Button.MenuList.Deposite = {
    "pt": "Contribuir Para Depositório",
    "es": "Contribuir a Tesorería",
    "de": "spenden",
    "zh": "捐献",
    "en": "Contribute To Depository",
    "ar": "مساعده بالايداع"
};
Translate.Button.MenuList.BuyGold = {
    "pt": "Obt.Ouro",
    "es": "¡Adquiere Oro!",
    "de": "Gold auf.",
    "zh": "充值",
    "en": "Get Gold!",
    "ar": "شراء ذهب"
};
Translate.Button.MenuList.Buy = {
    "pt": "Volume",
    "es": "Cantidad",
    "de": "Kaufen",
    "zh": "量购",
    "en": "Buy",
    "ar": "بالجملة"
};
Translate.Button.MenuList.RelocateNow = {
    "pt": "Relocar Agora",
    "es": "Relocalizar Ahora",
    "de": "Stadt verlegen",
    "zh": "迁城",
    "en": "Relocate Now",
    "ar": "تغيير المكان"
};
Translate.Button.Hero.Dismiss = {
    "pt": "Demitir",
    "es": "Descartar",
    "de": "ausschließen",
    "zh": "开除",
    "en": "Dismiss",
    "ar": "طرد"
};
Translate.Button.Hero.Save = {
    "pt": "Salvar",
    "es": "Guardar",
    "de": "OK",
    "zh": "保存",
    "en": "Save",
    "ar": "حفظ"
};
Translate.Button.Hero.Reset = {
    "pt": "Reset.",
    "es": "Reinicio",
    "de": "Erneut",
    "zh": "重置",
    "en": "Reset",
    "ar": "اعادة تشغيل"
};
Translate.Button.Hero.AppointConsul = {
    "pt": "Apontar Cônsul",
    "es": "Nominar Cónsul",
    "de": "Konsul ernennen",
    "zh": "任命执政官",
    "en": "Appoint Consul",
    "ar": "تعيين قنصل"
};
Translate.Button.Hero.DismissConsul = {
    "pt": "Demitir Cônsul",
    "es": "Destituir Cónsul",
    "de": "Konsul entlassen",
    "zh": "解除执政官",
    "en": "Dismiss Consul",
    "ar": "طرد قنصل"
};
Translate.Button.Hero.Reverse = {
    "pt": "Reverter",
    "es": "Reset",
    "de": "Anfang",
    "zh": "初始化",
    "en": "Reverse",
    "ar": "اعادة التهيئة"
};
Translate.Button.Hero.Launch = {
    "pt": "Lançar",
    "es": "Lanzar",
    "de": "Angreifen",
    "zh": "发动进攻",
    "en": "Launch",
    "ar": "إبدأ الهجوم"
};
Translate.Button.Hero.Exercise = {
    "pt": "Exercício",
    "es": "Ejercitar",
    "de": "Training",
    "zh": "锻炼",
    "en": "Exercise",
    "ar": "تمرين"
};
Translate.Button.Hero.Educate = {
    "pt": "Educar",
    "es": "Educar",
    "de": "Ausbilden",
    "zh": "培养",
    "en": "Educate",
    "ar": "تعليم"
};
Translate.Button.Chat.World = {
    "pt": "Mundo",
    "es": "Mundo",
    "de": "Welt",
    "zh": "世界",
    "en": "World",
    "ar": "العالم"
};
Translate.Button.Chat.League = {
    "pt": "Liga",
    "es": "Liga",
    "de": "Allianz",
    "zh": "联盟名称",
    "en": "League",
    "ar": "الحلف"
};
Translate.Button.Chat.RoamTo = {
    "pt": "Ir Para",
    "es": "Dirigirse a",
    "de": "Check",
    "zh": "跳转",
    "en": "Roam To",
    "ar": "تجول الى"
};
Translate.Button.Building.Confirm = {
    "pt": "Confirma",
    "es": "Confirmar",
    "de": "Ja",
    "zh": "确定",
    "en": "Confirm",
    "ar": "تاكيد"
};
Translate.Button.Building.Produce = {
    "pt": "Produzir",
    "es": "Producir",
    "de": "herstellen",
    "zh": "生产",
    "en": "Produce",
    "ar": "انتاج"
};
Translate.Button.Building.Erect = {
    "pt": "Erguer",
    "es": "Erigir",
    "de": "Errichten",
    "zh": "建造",
    "en": "Erect",
    "ar": "انشاء"
};
Translate.Button.Building.ChooseDeity = {
    "pt": "Escolher Divind.",
    "es": "Elegir Deidad",
    "de": "Auswählen",
    "zh": "神殿选择",
    "en": "Choose Deity",
    "ar": "اختيار المساعد"
};
Translate.Button.Building.Maximize = {
    "pt": "Maximizar",
    "es": "Maximizar",
    "de": "Maximieren",
    "zh": "最大",
    "en": "Maximize",
    "ar": "الحد الاقصي"
};
Translate.Button.Building.TransportResources = {
    "pt": "Transp.Recursos",
    "es": "Transporte de Recursos",
    "de": "Transportieren",
    "zh": "运输",
    "en": "Transport Resources",
    "ar": "نقل الموارد"
};
Translate.Button.Building.Sell = {
    "pt": "Vend",
    "es": "Vender",
    "de": "sale",
    "zh": "卖",
    "en": "Sell",
    "ar": "بيع"
};
Translate.Button.Building.Study = {
    "pt": "Estudar",
    "es": "Estudiar",
    "de": "Forschung",
    "zh": "研究",
    "en": "Study",
    "ar": "دراسة"
};
Translate.Button.Building.ContractBuilders = {
    "pt": "Contratar Construt.",
    "es": "Más constructores",
    "de": "Bauorganisation",
    "zh": "建筑排程",
    "en": "Contract More Builders",
    "ar": "توظيف المزيد من البنائين"
};
Translate.Button.Building.ConfirmJopRate = {
    "pt": "Confirmar ajuste de TOE",
    "es": "Confirmar ajuste de TOOL",
    "de": "Änderung bestätigen",
    "zh": "确认目标开工率修改",
    "en": "Confirm TJOR Adjustment",
    "ar": "تم تعديل معدل التوظيف بنجاح"
};
Translate.Button.Building.ExpandCity = {
    "pt": "Expandir Cidade",
    "es": "Expandir Ciudad",
    "de": "Stadt ausbauen",
    "zh": "扩张城市",
    "en": "Expand City",
    "ar": "توسيع المدينة"
};
Translate.Button.Building.CreatJops = {
    "pt": "Criar Empregos",
    "es": "Crear Trabajos",
    "de": "ausbilden",
    "zh": "创建",
    "en": "Create Jobs",
    "ar": "قم بتوظيف"
};
Translate.Title.MenuList.Exchange = {
    "pt": "Trocas",
    "es": "Canjear",
    "de": "Nachschub",
    "zh": "补给物资",
    "en": "Exchange",
    "ar": "التبادل"
};
Translate.Title.MenuList.Report = {
    "pt": "Relatório",
    "es": "Informe",
    "de": "Bericht",
    "zh": "情报",
    "en": "Report",
    "ar": "تقرير"
};
Translate.Title.MenuList.Quest = {
    "pt": "Quest",
    "es": "Tareas",
    "de": "Aufgabe",
    "zh": "任务",
    "en": "Quest",
    "ar": "المهام"
};
Translate.Title.MenuList.Mail = {
    "pt": "Mail",
    "es": "Correo",
    "de": "Brief",
    "zh": "信件",
    "en": "Mail",
    "ar": "الرسائل"
};
Translate.Title.MenuList.League = {
    "pt": "Liga",
    "es": "Liga",
    "de": "Allianz",
    "zh": "联盟名称",
    "en": "League",
    "ar": "الحلف"
};
Translate.Title.MenuList.Ranking = {
    "pt": "Rinking",
    "es": "Ranking",
    "de": "Rekord",
    "zh": "最高记录",
    "en": "Ranking",
    "ar": "أكبر سجل"
};
Translate.Title.MenuList.ItemMall = {
    "pt": "Mercado",
    "es": "Almacén de Artículos",
    "de": "Shop",
    "zh": "商城",
    "en": "Item Mall",
    "ar": "مول المواد"
};
Translate.Title.MenuList.MyItems = {
    "pt": "Meus Itens",
    "es": "Mis Artículos",
    "de": "Meine Requisiten",
    "zh": "道具",
    "en": "My Items",
    "ar": "مواد خاصة"
};
Translate.Title.MenuList.BuyGold = {
    "pt": "Ouro",
    "es": "Oro",
    "de": "Goldmünze",
    "zh": "金币",
    "en": "Gold",
    "ar": "الذهب"
};
Translate.Title.Box.Hero = {
    "pt": "Herói",
    "es": "Héroe",
    "de": "Held",
    "zh": "英雄",
    "en": "Hero",
    "ar": "بطل"
};
Translate.Title.TH.LeagueName = {
    "pt": "Nome da Liga",
    "es": "Nombre de Liga",
    "de": "Allianzname",
    "zh": "联盟名称",
    "en": "League Name",
    "ar": "اسم الحلف"
};
Translate.Title.TH.LordName = {
    "pt": "Nome de lorde",
    "es": "Nombre de señor",
    "de": "Spielername",
    "zh": "玩家名",
    "en": "Lord name",
    "ar": "اسم الملك"
};
Translate.Title.TH.Resource = {
    "pt": "Recurso",
    "es": "Recursos",
    "de": "Auktion",
    "zh": "类型",
    "en": "Resource",
    "ar": "موارد"
};
Translate.Title.TH.AcquiredAmount = {
    "pt": "Qtd Adqurida",
    "es": "Cantidad adquirida",
    "de": "Summe erhalten",
    "zh": "获得数量",
    "en": "Acquired Amount",
    "ar": "المبلغ المتحصل عليه"
};
Translate.Title.TH.YouHave = {
    "pt": "Você Tem",
    "es": "Tienes",
    "de": "Du hast",
    "zh": "当前数量",
    "en": "You Have",
    "ar": "لديك"
};
Translate.Title.TH.RquiredNobleRank = {
    "pt": "Rank N. Necess.",
    "es": "Rango Requerido",
    "de": "Erforderl. Amt",
    "zh": "需要官职",
    "en": "Required Noble Rank",
    "ar": "مستوى النبيل المطلوب"
};
Translate.Title.TH.CurrentNobleRank = {
    "pt": "Rank nobre atual",
    "es": "Rango Noble actual",
    "de": "Aktueller Nobel Rang",
    "zh": "当前官职",
    "en": "Current Nobel Rank.",
    "ar": "تصنيف النبيل الحالي"
};
Translate.Title.TH.Ranking = {
    "pt": "Rinking",
    "es": "Ranking",
    "de": "Rekord",
    "zh": "最高记录",
    "en": "Ranking",
    "ar": "أكبر سجل"
};
Translate.Title.TH.Lord = {
    "pt": "Lorde",
    "es": "Señor",
    "de": "Fürst",
    "zh": "领主",
    "en": "Lord",
    "ar": "الملك"
};
Translate.Title.TH.League = {
    "pt": "Liga",
    "es": "Liga",
    "de": "Allianz",
    "zh": "联盟名称",
    "en": "League",
    "ar": "الحلف"
};
Translate.Title.TH.NobleRank = {
    "pt": "Rank Nobre",
    "es": "Rango de Nobleza",
    "de": "Amt",
    "zh": "官职",
    "en": "Noble Rank",
    "ar": "تصنيف النبيل"
};
Translate.Title.TH.Honor = {
    "pt": "Honra",
    "es": "Honor",
    "de": "Ehre",
    "zh": "荣誉",
    "en": "Honor",
    "ar": "شرف"
};
Translate.Title.TH.Prestige = {
    "pt": "Prestígio",
    "es": "Prestigio",
    "de": "Ansehen",
    "zh": "声望",
    "en": "Prestige",
    "ar": "البرستيج"
};
Translate.Title.TH.Population = {
    "pt": "População",
    "es": "Población",
    "de": "Bevölkerung",
    "zh": "人口",
    "en": "Population",
    "ar": "سكان"
};
Translate.Title.TH.Subject = {
    "pt": "Assunto",
    "es": "Asunto",
    "de": "Thema",
    "zh": "主题",
    "en": "Subject",
    "ar": "الموضوع"
};
Translate.Title.TH.Hero = {
    "pt": "Herói",
    "es": "Héroe",
    "de": "Held",
    "zh": "英雄",
    "en": "Hero",
    "ar": "بطل"
};
Translate.Title.TH.Lvl = {
    "pt": "Nv",
    "es": "Nivel",
    "de": "Stf",
    "zh": "等级",
    "en": "Lv",
    "ar": "مستوى"
};
Translate.Title.TH.Potential = {
    "pt": "Potencial (POT)",
    "es": "Potencial (POT)",
    "de": "Potential",
    "zh": "潜力",
    "en": "Potential (POT)",
    "ar": "الامكانيات"
};
Translate.Title.TH.Sway = {
    "pt": "Destrez",
    "es": "Influencia",
    "de": "Verwaltung",
    "zh": "管理",
    "en": "Sway",
    "ar": "قوة السيطرة"
};
Translate.Title.TH.Bravery = {
    "pt": "Bravura",
    "es": "Valentía",
    "de": "Gewalt",
    "zh": "武力",
    "en": "Bravery",
    "ar": "الشجاعة"
};
Translate.Title.TH.Parry = {
    "pt": "Bloqueio",
    "es": "Eludir",
    "de": "Intelligenz",
    "zh": "智力",
    "en": "Parry",
    "ar": "الدفاع"
};
Translate.Title.TH.Loyalty = {
    "pt": "Lealdade",
    "es": "Lealtad",
    "de": "Loyalität",
    "zh": "忠诚",
    "en": "Loyalty",
    "ar": "الولاء"
};
Translate.Title.TH.SignUpFee = {
    "pt": "Taxa de Inscrição",
    "es": "Tarifa de Inscripción",
    "de": "Anstellungsgebühr",
    "zh": "雇佣费用",
    "en": "Sign Up Fee",
    "ar": "اجرة الاستعمال"
};
Translate.Title.TH.Retainer = {
    "pt": "Retentor",
    "es": "Retención",
    "de": "Gehalt",
    "zh": "薪水",
    "en": "Retainer",
    "ar": "الراتب"
};
Translate.Title.TH.StorageCapacity = {
    "pt": "Capac. de Armazen. da Cidade (CAC)",
    "es": "Capacidad de Almacenaje (CAC)",
    "de": "Kapazitätsobergrenze",
    "zh": "容量上限",
    "en": "Citywide Storage Capacity (CSC)",
    "ar": "سعة مخازن المدينة"
};
Translate.Title.TH.StorageRatio = {
    "pt": "Relação de Armazenamento",
    "es": "Tasa de Almacenaje",
    "de": "Verteilungsverhältnis",
    "zh": "分配比列",
    "en": "Storage Ratio",
    "ar": "نسبة التخزين"
};
Translate.Title.TH.Wilderness = {
    "pt": "Área Desconhecida",
    "es": "Zonas Salvajes",
    "de": "Wildnis",
    "zh": "野地",
    "en": "Wilderness",
    "ar": "برية"
};
Translate.Title.TH.Coordinate = {
    "pt": "Coordenada",
    "es": "Coordenadas",
    "de": "Koordinaten",
    "zh": "坐标",
    "en": "Coordinate",
    "ar": "الموقع"
};
Translate.Title.TH.Intro = {
    "pt": "Introdução",
    "es": "Introducción",
    "de": "Einführung",
    "zh": "描述",
    "en": "Intro",
    "ar": "مقدمة"
};
Translate.Title.TH.PendingLeagueApplication = {
    "pt": "Aplicação de Liga Pendente (boa sorte!)",
    "es": "Solicitud de Liga Pendiente (¡buena suerte!)",
    "de": "Allianzen, die du beantragst",
    "zh": "您申请加入的联盟",
    "en": "Pending League Application (good luck!)",
    "ar": "في طور معالجة اقامة الحلف (تمنياتي بالتوفيق!)ا"
};
Translate.Title.TH.PendingLeagueInvitation = {
    "pt": "Convite Pendente (Aceitar 1 irá declinar os outros!)",
    "es": "Invitación Pendiente (Al aceptar una, las otras se cancelarán)",
    "de": "Allianzen, die dich einladen",
    "zh": "邀请您加入的联盟",
    "en": "Pending Invitation (Accepting one will decline others!)",
    "ar": "ارسال طلب الانضمام ( انضمام عضوقد يلغي اخر!)ا"
};
Translate.Title.TH.Friendly = {
    "pt": "Amigável",
    "es": "Amistoso",
    "de": "freundlich",
    "zh": "友好",
    "en": "Friendly",
    "ar": "صداقة"
};
Translate.Title.TH.Hostile = {
    "pt": "Hostil",
    "es": "Hostil",
    "de": "feindlich",
    "zh": "敌对",
    "en": "Hostile",
    "ar": "عداوة"
};
Translate.Title.TH.PendingApplicationApproval = {
    "pt": "Aplicação de Aprovação Pendente",
    "es": "Aprobación de Solicitud Pendiente",
    "de": "Mitgliederschaft beantragen",
    "zh": "成员申请",
    "en": "Pending Application Approval",
    "ar": "في انتظار الموافقة على الطلب"
};
Translate.Title.TH.Invite = {
    "pt": "Convidar",
    "es": "Invitar",
    "de": "einladen",
    "zh": "发言权",
    "en": "Invite",
    "ar": "دعوة العضو"
};
Translate.Title.TH.Member = {
    "pt": "Membro(s)",
    "es": "Miembro(s)",
    "de": "Mitglied",
    "zh": "成员",
    "en": "Member(s)",
    "ar": "اعضاء"
};
Translate.Title.TH.Post = {
    "pt": "Postar",
    "es": "Publicar",
    "de": "Position",
    "zh": "职位",
    "en": "Post",
    "ar": "مركز"
};
Translate.Title.TH.SwayPoints = {
    "pt": "Destrez",
    "es": "Influencia",
    "de": "Verwaltung",
    "zh": "管理",
    "en": "Sway",
    "ar": "قوة السيطرة"
};
Translate.Title.TH.BraveryPoints = {
    "pt": "Bravura",
    "es": "Valentía",
    "de": "Gewalt",
    "zh": "武力",
    "en": "Bravery",
    "ar": "الشجاعة"
};
Translate.Title.TH.ParryPoints = {
    "pt": "Bloqueio",
    "es": "Eludir",
    "de": "Intelligenz",
    "zh": "智力",
    "en": "Parry",
    "ar": "الدفاع"
};
Translate.Title.TH.SignUpRequire = {
    "pt": "Inscrição Necessária",
    "es": "Se requiere Inscripción",
    "de": "Rekrutierungsbedingung",
    "zh": "招募条件",
    "en": "Sign Up Require",
    "ar": "شروط التاجير"
};
Translate.Title.TH.NeadedAmount = {
    "pt": "Quantidade Necessária",
    "es": "Cantidad Necesaria",
    "de": "Erforderliche Menge",
    "zh": "需要数量",
    "en": "Needed Amount",
    "ar": "المبلغ المطلوب"
};
Translate.Title.TH.SestersYouHave = {
    "pt": "Você Tem",
    "es": "Tienes",
    "de": "Du hast",
    "zh": "当前数量",
    "en": "You Have",
    "ar": "لديك"
};
Translate.Title.TH.LuxuryItem = {
    "pt": "Item de Luxo",
    "es": "Artículo de Lujo",
    "de": "Bedarf an Luxusgütern",
    "zh": "奢侈品需求",
    "en": "Luxury Item",
    "ar": "المواد الكمالية"
};
Translate.Title.TH.Name = {
    "pt": "Nome",
    "es": "Nombre",
    "de": "Name",
    "zh": "名字",
    "en": "Name",
    "ar": "الاسم"
};
Translate.Title.TH.Host = {
    "pt": "Líder",
    "es": "Anfitrión",
    "de": "Führer",
    "zh": "盟主",
    "en": "Host",
    "ar": "المدير"
};
Translate.Title.TH.Members = {
    "pt": "Membro(s)",
    "es": "Miembro(s)",
    "de": "Mitglied",
    "zh": "成员",
    "en": "Member(s)",
    "ar": "اعضاء"
};
Translate.Title.TH.Expedition = {
    "pt": "Expedição",
    "es": "Expedición",
    "de": "Einen Feldzug machen",
    "zh": "出征",
    "en": "Expedition",
    "ar": "حملة"
};
Translate.Title.TH.HomeCity = {
    "pt": "Cidade Natal",
    "es": "Ciudad de Origen",
    "de": "Heimatstadt",
    "zh": "所属城市",
    "en": "Home City",
    "ar": "المدينة الام"
};
Translate.Title.TH.TargetArena = {
    "pt": "Arena Alvo",
    "es": "Arena Objetivo",
    "de": "Kampfziel",
    "zh": "作战目标",
    "en": "Target Arena",
    "ar": "وجهة المعركة"
};
Translate.Title.TH.ArrivalTime = {
    "pt": "Hora de Chegada",
    "es": "Hora de llegada",
    "de": "Ankunftszeit",
    "zh": "到达时间",
    "en": "Arrival Time",
    "ar": "موعد الوصول"
};
Translate.Title.TH.RemainingTime = {
    "pt": "Tempo Restante",
    "es": "Tiempo restante",
    "de": "Übrige Zeit",
    "zh": "剩余时间",
    "en": "Remaining Time",
    "ar": "الوقت المتبقي"
};
Translate.Title.TH.Scout = {
    "pt": "Explorar",
    "es": "Rastrear",
    "de": "aufklären",
    "zh": "侦察",
    "en": "Scout",
    "ar": "تجسس"
};
Translate.Title.TH.Duration = {
    "pt": "Duração",
    "es": "Duración",
    "de": "Dauer",
    "zh": "持续时间",
    "en": "Duration",
    "ar": "مده"
};
Translate.Title.TH.Select = {
    "pt": "Selecionar",
    "es": "Seleccionar",
    "de": "Auswählen",
    "zh": "选择",
    "en": "Select",
    "ar": "اختيار"
};
Translate.Title.TH.TimeOfreceipt = {
    "pt": "Hora de Recepção",
    "es": "Fecha de recepción",
    "de": "Empfangszeit",
    "zh": "接收时间",
    "en": "Time of Receipt",
    "ar": "تاريخ الاستلام"
};
Translate.Title.TH.Sender = {
    "pt": "Remetente",
    "es": "Remitente",
    "de": "Absender",
    "zh": "发信人",
    "en": "Sender",
    "ar": "المرسل"
};
Translate.Title.TH.Recipient = {
    "pt": "Destinatário",
    "es": "Destinatario",
    "de": "Empfänger",
    "zh": "收信人",
    "en": "Recipient",
    "ar": "المستقبل"
};
Translate.Title.TH.Quantity = {
    "pt": "Quantidade",
    "es": "Cantidad",
    "de": "Summe",
    "zh": "数量",
    "en": "Quantity",
    "ar": "الكمية"
};
Translate.Title.TH.UnitePrice = {
    "pt": "Preço Unitário",
    "es": "Precio Unitario",
    "de": "Einzelpreis",
    "zh": "单价",
    "en": "Unit Price",
    "ar": "سعر الوحدة"
};
Translate.Title.TH.TotalPrice = {
    "pt": "Preço Total",
    "es": "Precio Total",
    "de": "Gesamtpreis",
    "zh": "总价",
    "en": "Total Price",
    "ar": "السعر الكلي"
};
Translate.Title.TH.Done = {
    "pt": "Feito",
    "es": "Hecho",
    "de": "Abschließen",
    "zh": "成交",
    "en": "Done",
    "ar": "تم"
};
Translate.Title.TH.Resources = {
    "pt": "Recursos",
    "es": "Recursos",
    "de": "Ressourcensorte",
    "zh": "资源种类",
    "en": "Resources",
    "ar": "موارد"
};
Translate.Title.TH.Cancel = {
    "pt": "Recursos",
    "es": "Recursos",
    "de": "Ressourcensorte",
    "zh": "资源种类",
    "en": "Resources",
    "ar": "موارد"
};
Translate.Title.TH.Time = {
    "pt": "Hora",
    "es": "Tiempo",
    "de": "Zeit",
    "zh": "时间",
    "en": "Time",
    "ar": "الوقت"
};
Translate.Button.General.Soon = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Soon",
    "ar": "قريبا"
};
Translate.Button.MenuList.DeleteAll = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Delete All",
    "ar": "حذف الكل"
};
Translate.Button.Building.AddItem = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Add Item",
    "ar": "اضافة مادة"
};
Translate.Button.Building.AddHero = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Add Hero",
    "ar": "اضافة بطل"
};
Translate.Title.Alert.ShowHero = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Show Hero",
    "ar": "عرض البطل"
};
Translate.Title.MenuList.Dominance = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Dominant",
    "ar": "سيطرة"
};
Translate.Title.MenuList.GodGate = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Gods Gate",
    "ar": "بوابات التسليح"
};
Translate.Title.TH.TotalPoints = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Total Points",
    "ar": "مجموع النقاط"
};
Translate.Title.TH.Language = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Language",
    "ar": "اللغة"
};
Translate.Title.TH.PrizeShare = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Prize Share",
    "ar": "نسبة الجوائز"
};
Translate.Title.TH.LastSeen = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Last Seen",
    "ar": "اخر تواجد"
};
Translate.Title.TH.Info = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Info",
    "ar": "معلومات"
};
Translate.Title.TH.Capital = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Capital",
    "ar": "العاصمة"
};
Translate.Title.TH.Dominant = {
    "pt": "",
    "es": "",
    "de": "",
    "zh": "",
    "en": "Dominant",
    "ar": "المسيطر"
};



Translate.Msg.ConfirmChanegeLanguage = {
    "pt": "Confirme para alterar o idioma padrão para Português",
    "es": "Confirme para cambiar el idioma predeterminado al español",
    "de": "Bestätigen Sie, um die Standardsprache in Deutsch zu ändern",
    "zh": "确认将默认语言更改为中文",
    "en": "Confirm to Change Default Language to English",
    "ar": "تأكيد تغير اللغة الى العربية"
};

Translate.Title.Box.pleaseSelect = {
    "pt": "Item(ns) Opcional(is)",
    "es": "Artículo(s) opcional(es)",
    "de": "Triff eine Auswahl.",
    "zh": "请选择",
    "en": "Optional Item(s)",
    "ar": "مواد اختيارية"
};
Translate.Text.Province = {
    "pt": "Província",
    "es": "Provincia",
    "de": "Provinz",
    "zh": "区域",
    "en": "Province",
    "ar": "مقاطعة"
};



const EnLan = "en";
const ArLang = "ar";
const EsLang = "es";
const PtLang = "pt";
const DeLang = "de";
const CnLang = "zh";
const DefaultLang = EnLan;


var UserLag = {};
UserLag.isDefault = false;



if (player.lang) {
    UserLag.language = player.lang;
} else {

    var lang = (navigator.language || navigator.userLanguage).slice(0, 2);

    if (lang === ArLang) {
        UserLag.language = ArLang;
    } else if (lang === EsLang) {
        UserLag.language = EsLang;
    } else if (lang === PtLang) {
        UserLag.language = PtLang;
    } else if (lang === DeLang) {
        UserLag.language = DeLang;
    } else if (lang === CnLang) {
        UserLag.language = CnLang;
    } else {
        UserLag.language = EnLan;
    }

    UserLag.isDefault = true;
}


UserLag.LANG_DIC = {
    "ar": /[\u0600-\u06FF]/
};

UserLag.Translte = function(text) {



    return $.ajax({
        url: "https://translation.googleapis.com/language/translate/v2",
        type: 'GET',
        data: {
            q: text,
            target: UserLag.language,
            key: "AIzaSyD8OF2mZYMNT2o4ASG6eRUFZGX_ecQLIZA"
        },
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

        },
        error: function(jqXHR, textStatus, errorThrown) {
            console.log(jqXHR);
        }
    });

};

UserLag.TranslateChatMsg = function(msg) {

    if ((/\[\s*\d{1,3}\,\s*\d{1,3}\s*\]/g).test(msg.text))
        return;

    if (UserLag.language === ArLang && (/[\u0600-\u06FF\u0750-\u077F]/g).test(msg.text)) {


    } else {
        UserLag.Translte(msg.text).done(function(data) {
            if (data.data && data.data.translations[0]) {
                $("#mg-id-" + msg.id + " .msg-text").html(Extract.coords(extractEmjoi(extractUrl(data.data.translations[0].translatedText))) + `<i class="translated trans">مترجم</i>`);
                $("#mg-id-" + msg.id + " .msg-text").attr("data-msg-translated", data.data.translations[0].translatedText);

            }
        });
    }



};



$(document).on("click", "#msg-area .msg-body .trans", function() {

    var orgMsg = $(this).parent(".msg-text").attr("data-msg-org");
    $(this).parent(".msg-text").html(orgMsg + `<i class="translated antiTrans">ترجم</i>`);
});

$(document).on("click", "#msg-area .msg-body .antiTrans", function() {

    var orgMsg = $(this).parent(".msg-text").attr("data-msg-translated");
    $(this).parent(".msg-text").html(orgMsg + `<i class="translated trans">مترجم</i>`);
});

var NavBar = {};

NavBar.Exchange = [{
        "title_ar": "جميع الموارد",
        "title_en": "All Resources",
        "title": "trade-all",
        "title_es": "Todos los Recursos",
        "title_pt": "Todos os recursos",
        "title_zh": "全部物资",
        "title_de": "Alle Ressourcen"
    },
    {
        "title_ar": "الموارد اليومية",
        "title_en": "Daily Resources",
        "title": "trade-daily"
    },
    {
        "title_ar": "خط الانتاج من المجلس الاعلى",
        "title_en": "Senate Supply",
        "title": "trade-millirty",
        "title_es": "Suministro del Senado",
        "title_pt": "Suprimento do Senado",
        "title_zh": "元老院补给",
        "title_de": "Senatsnachschub"
    },
    {
        "title_ar": "هدايا الفعاليات",
        "title_en": "Divine Offering",
        "title": "trade-gifts",
        "title_es": "Ofrenda Divina",
        "title_pt": "Oferenda Divina",
        "title_zh": "神的恩赐",
        "title_de": "Geschenk Gottes"
    }
];
NavBar.Report = [{
        "title_ar": "ارض المعركة",
        "title_en": "Arena",
        "title": "battle",
        "title_es": "Arena",
        "title_pt": "Arena",
        "title_zh": "战局情报",
        "title_de": "Arena"
    },
    {
        "title_en": "Expedition to War",
        "txt": "المغادرة للحرب",
        "title": "attacking",
        "title_ar": "المغادرة للحرب",
        "title_es": "Expedición de Guerra",
        "title_pt": "Expedição para Guerra",
        "title_zh": "出征作战",
        "title_de": "Einen Kriegszug unternehmen"
    },
    {
        "title_en": "Troops Movement",
        "title_ar": "تحرك القوات",
        "title": "army_moving",
        "title_es": "Movimiento de Tropas",
        "title_pt": "Movimento de Tropas",
        "title_zh": "军队动态",
        "title_de": "Truppenzustand"
    },
    {
        "title_en": "Allied Troops",
        "title_ar": "القوات الحليفة",
        "title": "allais",
        "title_es": "Tropas Aliadas",
        "title_pt": "Tropas Aliadas",
        "title_zh": "盟友军队",
        "title_de": "Verbündete Truppen"
    },
    {
        "title_en": "Scout",
        "title_ar": "تجسس",
        "title": "spy",
        "title_es": "Rastrear",
        "title_pt": "Explorar",
        "title_zh": "侦察",
        "title_de": "aufklären"
    }
];
NavBar.Quest = [{
        "title_en": "<div class=\"nav-notif\" id=\"Quest-growth-notif\"></div>n                <lable>Growth</lable>",
        "title_ar": "<div class=\"nav-notif\" id=\"Quest-growth-notif\"></div>n                <lable>نمو</lable>",
        "title": "growth_quest"
    },
    {
        "title_en": "<div class=\"nav-notif\" id=\"Quest-daily-notif\"></div>n            <lable>Daily</lable>",
        "title_ar": "<div class=\"nav-notif\" id=\"Quest-daily-notif\"></div>n            <lable>مهمات يومية</lable>",
        "title": "daily_quest"
    },
    {
        "title_en": "<div class=\"nav-notif\" id=\"Quest-trade-notif\"></div>n            <lable>Daily Barter</lable>",
        "title_ar": "<div class=\"nav-notif\" id=\"Quest-trade-notif\"></div>n            <lable>التبادل اليومى</lable>",
        "title": "daily_quest_trade"
    }
];
NavBar.Mail = [{
        "title_en": "Inbox",
        "title_ar": "البريد الوارد",
        "title": "mail_in",
        "title_es": "Bandeja de Entrada",
        "title_pt": "Caixa de Entrada",
        "title_zh": "收件箱",
        "title_de": "Posteingang"
    },
    {
        "title_en": "Battle Report",
        "title_ar": "تقرير المعركة",
        "title": "battel_report",
        "title_es": "Informe de Batalla",
        "title_pt": "Relatório de Batalha",
        "title_zh": "战报",
        "title_de": "Kriegsbericht"
    },
    {
        "title_en": "Scout Reports",
        "title_ar": "تقرير التجسس",
        "title": "spy_report"
    },
    {
        "title_en": "Misc Reports",
        "title_ar": "تقارير متفرقة",
        "title": "coll_report",
        "title_es": "Informes Varios",
        "title_pt": "Relatórios Mistos",
        "title_zh": "报告",
        "title_de": "Bericht"
    },
    {
        "title_en": "Outbox",
        "title_ar": "البريد الصادر",
        "title": "mail_out",
        "title_es": "Bandeja de Salida",
        "title_pt": "Caixa de Saída",
        "title_zh": "发件箱",
        "title_de": "Postausgang"
    },
    {
        "title_en": "Write Mail",
        "title_ar": "انشئ رسالة",
        "title": "mail_write",
        "title_es": "Escribir Mensaje",
        "title_pt": "Escrever Email",
        "title_zh": "写信件",
        "title_de": "Briefe schreiben"
    }
];
NavBar.League = [{
        "title_en": "League Information",
        "title_ar": "معلومات الحلف",
        "title": "guild_data",
        "title_es": "Información de la Liga",
        "title_pt": "Informação da Liga",
        "title_zh": "联盟信息",
        "title_de": "Allianz-Information"
    },
    {
        "title_en": "Membership",
        "title_ar": "علاقة",
        "title": "g_relation",
        "title_es": "Membresía",
        "title_pt": "Membro",
        "title_zh": "成员",
        "title_de": "Mitgliedschaft"
    },
    {
        "title_en": "Upgrade League / Depository",
        "title_ar": "تطوير الحلف - الايداع",
        "title": "upgrade_guild",
        "title_es": "Mejorar Liga / Depósito",
        "title_pt": "Aprimorar Liga/ Depósito",
        "title_zh": "盟库",
        "title_de": "Allianz-Lager"
    }
];
NavBar.Ranking = [{
        "title_en": "Player",
        "title_ar": "لاعب",
        "title": "rank_player",
        "title_es": "Jugador",
        "title_pt": "Jogador",
        "title_zh": "玩家",
        "title_de": "Spieler"
    },
    {
        "title_en": "League",
        "title_ar": "تحالف",
        "title": "rank_union",
        "title_es": "Liga",
        "title_pt": "Liga",
        "title_zh": "联盟",
        "title_de": "Allianz"
    },
    {
        "title_en": "Hero",
        "title_ar": "بطل",
        "title": "rank_hero",
        "title_es": "Héroe",
        "title_pt": "Herói",
        "title_zh": "英雄",
        "title_de": "Held"
    },
    {
        "title_en": "City",
        "title_ar": "مدينة تابعة",
        "title": "rank_city",
        "title_es": "Ciudad",
        "title_pt": "Cidade",
        "title_zh": "城市数",
        "title_de": "Städte"
    }
];
NavBar.ItemMall = [{
        "title_en": "Main",
        "title_ar": "رئيسي",
        "title": "mall-main",
        "title_es": "Principal",
        "title_pt": "Principal",
        "title_zh": "道具",
        "title_de": "Requisit"
    },
    {
        "title_en": "Speed Up",
        "title_ar": "تسريع",
        "title": "mall-finishing",
        "title_es": "Acelerar",
        "title_pt": "Acelerar",
        "title_zh": "加速",
        "title_de": "Schneller"
    },
    {
        "title_en": "Production",
        "title_ar": "منتجات",
        "title": "mall-prouducts",
        "title_es": "Producción",
        "title_pt": "Produção",
        "title_zh": "生产",
        "title_de": "herstellen"
    },
    {
        "title_en": "Chest",
        "title_ar": "صندوق",
        "title": "mall-box",
        "title_es": "Cofre",
        "title_pt": "Baú",
        "title_zh": "宝箱",
        "title_de": "Schatzkasten"
    },
    {
        "title_en": "Luxury",
        "title_ar": "رفاهية",
        "title": "mall-walfare",
        "title_es": "Lujo",
        "title_pt": "Luxo",
        "title_zh": "奢侈品",
        "title_de": "Luxusgut"
    },
    {
        "title_en": "Equipment",
        "title_ar": "معدات",
        "title": "mall-equipments",
        "title_es": "Equipamiento",
        "title_pt": "Equipamento",
        "title_zh": "装备",
        "title_de": "Ausrüstung"
    },
    {
        "title_en": "Event Zone",
        "title_ar": "ساحة الحدث",
        "title": "mall-sologn",
        "title_es": "Zona de Evento",
        "title_pt": "Zona de Eventos",
        "title_zh": "活动专区",
        "title_de": "Event-Zone"
    }
];
NavBar.Dominance = [{
        "title_en": "Army Capital",
        "title_ar": "العاصمة",
        "title": "dominant-capital"
    },
    {
        "title_en": "Army Capital",
        "title_ar": "المدن التابعة",
        "title": "colonizer-city"
    },
    {
        "title_en": "Army Capital",
        "title_ar": "المدن المستعمرة",
        "title": "my-colonized-city"
    },
    {
        "title_en": "Fortress",
        "title_ar": "قلعة التمرُّد",
        "title": "dominant_RC",
        "title_es": "Fortaleza",
        "title_pt": "Fortaleza",
        "title_zh": "NPC名称",
        "title_de": "Festung"
    },
    {
        "title_en": "Castles",
        "title_ar": "القلاع",
        "title": "dominant_RC"
    },
    {
        "title_en": "Kingdoms",
        "title_ar": "الممالك",
        "title": "dominant_RC"
    },
    {
        "title_en": "Islands",
        "title_ar": "الجُزر",
        "title": "dominant_RC"
    }
];
NavBar.MatrialBox = [{
        "title_en": "Main",
        "title_ar": "رئيسي",
        "title": "main",
        "title_es": "Principal",
        "title_pt": "Principal",
        "title_zh": "道具",
        "title_de": "Requisit"
    },
    {
        "title_en": "Speed Up",
        "title_ar": "تسريع",
        "title": "finishing",
        "title_es": "Acelerar",
        "title_pt": "Acelerar",
        "title_zh": "加速",
        "title_de": "Schneller"
    },
    {
        "title_en": "Production",
        "title_ar": "منتجات",
        "title": "prouducts",
        "title_es": "Producción",
        "title_pt": "Produção",
        "title_zh": "生产",
        "title_de": "herstellen"
    },
    {
        "title_en": "Chest",
        "title_ar": "صندوق",
        "title": "box",
        "title_es": "Cofre",
        "title_pt": "Baú",
        "title_zh": "宝箱",
        "title_de": "Schatzkasten"
    },
    {
        "title_en": "Luxury",
        "title_ar": "رفاهية",
        "title": "walfare",
        "title_es": "Lujo",
        "title_pt": "Luxo",
        "title_zh": "奢侈品",
        "title_de": "Luxusgut"
    },
    {
        "title_en": "Equipment",
        "title_ar": "معدات",
        "title": "equipments",
        "title_es": "Equipamiento",
        "title_pt": "Equipamento",
        "title_zh": "装备",
        "title_de": "Ausrüstung"
    },
    {
        "title_en": "Event Zone",
        "title_ar": "ساحة الحدث",
        "title": "sologn",
        "title_es": "Zona de Evento",
        "title_pt": "Zona de Eventos",
        "title_zh": "活动专区",
        "title_de": "Event-Zone"
    }
];
NavBar.Hero = [{
        "title_en": "Hero",
        "title_ar": "بطل",
        "title": "hero",
        "title_es": "Héroe",
        "title_pt": "Herói",
        "title_zh": "英雄",
        "title_de": "Held"
    },
    {
        "title_en": "Transfer",
        "title_ar": "تحويل",
        "title": "trade",
        "title_es": "Transferir",
        "title_pt": "Transferir",
        "title_zh": "编制",
        "title_de": "Führen"
    },
    {
        "title_en": "Equipment",
        "title_ar": "معدات",
        "title": "equi",
        "title_es": "Equipamiento",
        "title_pt": "Equipamento",
        "title_zh": "装备",
        "title_de": "Ausrüstung"
    },
    {
        "title_en": "Expedition",
        "title_ar": "مغادرة",
        "title": "camp",
        "title_es": "Expedición",
        "title_pt": "Expedição",
        "title_zh": "任务",
        "title_de": "Art"
    },
    {
        "title_en": "Educate",
        "title_ar": "تعليم",
        "title": "hero_learning",
        "title_es": "Educar",
        "title_pt": "Educar",
        "title_zh": "培养",
        "title_de": "Ausbilden"
    }
];




NavBar.Building = {};


NavBar.Building.Cottage = [{
    "title_en": "Upgrade Info",
    "title_ar": "معلومات التحديث",
    "title": "upgrade_req",
    "title_es": "Información de mejora",
    "title_pt": "Info Aprim.",
    "title_zh": "升级条件",
    "title_de": "Versetzungsbedingung"
}];

NavBar.Building.Warehouse = [{
        "title_en": "Warehouse Management",
        "title_ar": "ادارة المخازن",
        "title": "storage_management",
        "title_es": "Administración de Depósitos",
        "title_pt": "Gestão de Armazém",
        "title_zh": "仓库管理",
        "title_de": "Lagerverwaltung"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    }
];

NavBar.Building.Barracks = [{
        "title_en": "Troops List",
        "title_ar": "انتاج القوات",
        "title": "build_army",
        "title_es": "Lista de Tropas",
        "title_pt": "Lista De Tropas",
        "title_zh": "军队列表",
        "title_de": "Truppenliste"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    },
    {
        "title_en": "Stable",
        "title_ar": "الاسطبل",
        "title": "go_stabl",
        "title_es": "Estable",
        "title_pt": "Estável",
        "title_zh": "稳定",
        "title_de": "stabil"
    },
    {
        "title_en": "Workshop",
        "title_ar": "ورشة العمل",
        "title": "go_workShop"
    }
];

NavBar.Building.Stable = [{
        "title_en": "Troops List",
        "title_ar": "انتاج القوات",
        "title": "build_army",
        "title_es": "Lista de Tropas",
        "title_pt": "Lista De Tropas",
        "title_zh": "军队列表",
        "title_de": "Truppenliste"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    },
    {
        "title_en": "Barracks",
        "title_ar": "ثكنات",
        "title": "go_thaknat"
    },
    {
        "title_en": "Workshop",
        "title_ar": "ورشة العمل",
        "title": "go_workShop"
    }
];

NavBar.Building.Workshop = [{
        "title_en": "Barracks",
        "title_ar": "انتاج القوات",
        "title": "build_army"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    },
    {
        "title_en": "Barracks",
        "title_ar": "ثكنات",
        "title": "go_thaknat"
    },
    {
        "title_en": "Stable",
        "title_ar": "الاسطبل",
        "title": "go_stabl",
        "title_es": "Estable",
        "title_pt": "Estável",
        "title_zh": "稳定",
        "title_de": "stabil"
    }
];

NavBar.Building.Amphitheatre = [{
        "title_en": "Recruitable Hero List",
        "title_ar": "انتاج الابطال",
        "title": "produce_heros",
        "title_es": "Lista de Héroes Reclutables",
        "title_pt": "Lista de Heróis Recrutáveis",
        "title_zh": "在野英雄",
        "title_de": "Held der Wildnis"
    },
    {
        "title_en": "Refresh List",
        "title_ar": "تحديث الابطال",
        "title": "refresh_hero_with_mat"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    }
];

NavBar.Building.BarterCenter = [{
        "title_en": "Items Barter",
        "title_ar": "تجارة المواد",
        "title": "matrial_trade"
    },
    {
        "title_en": "Hero Barter",
        "title_ar": "تجارة الابطال",
        "title": "hero_trade"
    },
    {
        "title_en": "Resources Barter",
        "title_ar": "تجارة الموارد",
        "title": "resource_trade"
    },
    {
        "title_en": "Equipment Barter",
        "title_ar": "تجارة المعدات",
        "title": "equip_trade"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    }
];

NavBar.Building.University = [{
        "title_en": "Civilian Technology List",
        "title_ar": "التكنولوجيا المدنية",
        "title": "uni_tech",
        "title_es": "Lista de Tecnología Civil",
        "title_pt": "Lista de Tecnologia Civil",
        "title_zh": "民用科技列表",
        "title_de": "Liste der Ziviltechnologie"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    },
    {
        "title_en": "Academy",
        "title_ar": "الاكاديمية",
        "title": "go_acad"
    }
];

NavBar.Building.Academy = [{
        "title_en": "Civilian Technology List",
        "title_ar": "التكنولوجيا المدنية",
        "title": "acad_tech",
        "title_es": "Lista de Tecnología Civil",
        "title_pt": "Lista de Tecnologia Civil",
        "title_zh": "民用科技列表",
        "title_de": "Liste der Ziviltechnologie"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    },
    {
        "title_en": "University",
        "title_ar": "الجامعة",
        "title": "go_uni"
    }
];

NavBar.Building.Temple = [{
        "title_en": "Deity Worship",
        "title_ar": " المساعد",
        "title": "choose_helper",
        "title_es": "Adorar Deidad",
        "title_pt": "Adoração de Divindades",
        "title_zh": "敬奉神祗",
        "title_de": "Götter anbeten"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    }
];

NavBar.Building.Plaza = [{
        "title_en": "Infimary",
        "title_ar": "القوات المصابة",
        "title": "wounded_forces"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    }
];

NavBar.Building.Palace = [{
        "title_en": "Contract More Builders",
        "title_ar": " البنائين",
        "title": "motiv",
        "title_es": "Más constructores",
        "title_pt": "Contratar Construt.",
        "title_zh": "建筑排程",
        "title_de": "Bauorganisation"
    },
    {
        "title_en": "Production",
        "title_ar": " الانتاج",
        "title": "production",
        "title_es": "Producción",
        "title_pt": "Produção",
        "title_zh": "生产",
        "title_de": "herstellen"
    },
    {
        "title_en": "Tax Rate",
        "title_ar": " الضريبة",
        "title": "taxs",
        "title_es": "Tasa Impositiva",
        "title_pt": "Taxa de Impostos",
        "title_zh": "税率",
        "title_de": "Steuersatz"
    },
    {
        "title_en": "Change City Name",
        "title_ar": " اسم المدينة",
        "title": "city_name",
        "title_es": "Cambiar Nombre de Ciudad",
        "title_pt": "Mud.Nome da Cidade",
        "title_zh": "城市改名",
        "title_de": "Stadt umbenennen"
    },
    {
        "title_en": "Expand City",
        "title_ar": "توسيع ",
        "title": "expantion",
        "title_es": "Expandir Ciudad",
        "title_pt": "Expandir Cidade",
        "title_zh": "扩建城市",
        "title_de": "Stadt ausbauen"
    },
    {
        "title_en": "Wilds",
        "title_ar": "البرارى",
        "title": "city_wilds"
    },
    {
        "title_en": "Garisson",
        "title_ar": "حراس المدينة",
        "title": "city_garrison"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    }
];

NavBar.Building.Wall = [{
        "title_en": "Fortifications",
        "title_ar": "قائمة التحصينات",
        "title": "wall_army_list",
        "title_es": "Fortificaciones",
        "title_pt": "Fortificações",
        "title_zh": "城防列表",
        "title_de": "Liste der Stadtverteidigungen"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    }
];

NavBar.Building.Market = [{
        "title_en": "Resources Auction",
        "title_ar": "تجارة الموارد",
        "title": "sell_buy_resources",
        "title_es": "Subasta de Recursos",
        "title_pt": "Leilão de Recursos",
        "title_zh": "资源交易",
        "title_de": "Ressourcenhandel"
    },
    {
        "title_en": "Transport Resources",
        "title_ar": "نقل الموارد",
        "title": "transport_resources",
        "title_es": "Transporte de Recursos",
        "title_pt": "Transp.Recursos",
        "title_zh": "运输",
        "title_de": "Transportieren"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": " معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    }
];

NavBar.Building.Sawmill = [{
        "title_en": "Resources",
        "title_ar": "قائمة الوظائف",
        "title": "jop_list",
        "title_es": "Recursos",
        "title_pt": "Recursos",
        "title_zh": "资源",
        "title_de": "Ressourcen"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    }
];

NavBar.Building.Farm = [{
        "title_en": "Resources",
        "title_ar": "قائمة الوظائف",
        "title": "jop_list",
        "title_es": "Recursos",
        "title_pt": "Recursos",
        "title_zh": "资源",
        "title_de": "Ressourcen"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    }
];

NavBar.Building.Quarry = [{
        "title_en": "Resources",
        "title_ar": "قائمة الوظائف",
        "title": "jop_list",
        "title_es": "Recursos",
        "title_pt": "Recursos",
        "title_zh": "资源",
        "title_de": "Ressourcen"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    }
];

NavBar.Building.IronMine = [{
        "title_en": "Resources",
        "title_ar": "قائمة الوظائف",
        "title": "jop_list",
        "title_es": "Recursos",
        "title_pt": "Recursos",
        "title_zh": "资源",
        "title_de": "Ressourcen"
    },
    {
        "title_en": "Upgrade Info",
        "title_ar": "معلومات التحديث",
        "title": "upgrade_req",
        "title_es": "Información de mejora",
        "title_pt": "Info Aprim.",
        "title_zh": "升级条件",
        "title_de": "Versetzungsbedingung"
    }
];

NavBar.Building.SeaPort = [{
        "title_en": "Coming Soon",
        "title_ar": "قريبا",
        "title": "soon"
    },
    {
        "title_en": "Coming Soon",
        "title_ar": "قريبا",
        "title": "soon"
    }
];

NavBar.Building.Lighthouse = [{
        "title_en": "Coming Soon",
        "title_ar": "قريبا",
        "title": "soon"
    },
    {
        "title_en": "Coming Soon",
        "title_ar": "قريبا",
        "title": "soon"
    }
];
$.ajaxSetup({
    crossDomain: true
});
var FIXED_WORLD_UNIT = [];
var ALL_WORLD_CITY = [];
var WORLD_ALL_UNIT = [];
var game = {};
game.MAX_SCREEN_WIDTH = $(document).width();
game.MAX_SCREEN_HEIGHT = $(document).height();
game.worldAllUnits = new Array(500 * 500);
game.Player = {};
game.DPlayer = {
    Player: {},
    GuildData: {},
    PlayerState: {},
    PlayerEdu: {},
    Items: {},
    City: {},
    Heros: [],
    Equip: []
};
game.World = {};
game.Ui = {};
game.Ui.Select = {};
game.World.Province = {};
game.World.Map = {};
game.MenuList = {};
game.Building = {};
game.Building.Palace = {};
game.Building.Theater = {};
game.Animation = {};
game.WsLib = {};
game.Contribute = {};
game.Hero = {};
game.CurrentHero = {};
game.NextHero = {};
game.Army = {};
game.Equip = {};
game.Item = {};
game.Guild = {
    GuildData: {},
    LeaderName: "",
    prizeShare: 0,
    Allay: [],
    Invetaions: [],
    Requests: [],
    MemberList: []
};

game.CurrentWorldUnit = {
    AttackQueList: [],
    Army: {
        army_a: 0,
        army_b: 0,
        army_c: 0,
        army_d: 0,
        army_e: 0,
        army_f: 0
    },
    EQuip: {
        boot: {},
        armor: {},
        shield: {},
        helmet: {},
        sword: {},
        belt: {},
        necklace: {},
        pendant: {},
        ring: {},
        steed: {}
    },
    xCoord: 0,
    yCoord: 0
};

game.TimedTask = {
    TaskList: {
        Building: {},
        Study: {},
        Army: {},
        Jop: {}
    }

};


game.Battel = {
    Battels: [],
    LeavinHeros: [],
    HeroBack: [],
    HeroGarrison: [],
    SpyingList: [],
    CurrentBattel: {}
};

game.ServerData = {};

game.LBase = {};
game.Config = {
    WsPort: 0,
    WsHost: "",
    JsVersion: "",
    OuthToken: "",
    idServer: 0,
    UserLang: "ar",
    idCities: []
};


game.City = {};
game.CurrentCity = {};



game.BaseData = {};
game.GE = {};

game.GE.CLoadingScene = {};
game.GE.CCityScene = {};
game.GE.CWorldScene = {};

game.GE.LoadingScene = {};
game.GE.CityScene = {};
game.GE.WorldScene = {};

game.World.WorldMapIcon = {};


game.GE.LPreLoad = function() {

    game.GE.LoadingScene.load.image('worldFloor', BASE_ASSET_BATH + 'images/world/worldFloor.jpg');
    game.GE.LoadingScene.load.image('city_0', BASE_ASSET_BATH + 'images/world/city_0.png');
    game.GE.LoadingScene.load.image('city_1', BASE_ASSET_BATH + 'images/world/city_1.png');
    game.GE.LoadingScene.load.image('city_2', BASE_ASSET_BATH + 'images/world/city_2.png');
    game.GE.LoadingScene.load.image('city_3', BASE_ASSET_BATH + 'images/world/city_3.png');
    game.GE.LoadingScene.load.image('city_4', BASE_ASSET_BATH + 'images/world/city_4.png');
    game.GE.LoadingScene.load.image('d_1', BASE_ASSET_BATH + 'images/world/wild/d_1.png');
    game.GE.LoadingScene.load.image('d_2', BASE_ASSET_BATH + 'images/world/wild/d_2.png');
    game.GE.LoadingScene.load.image('d_3', BASE_ASSET_BATH + 'images/world/wild/d_3.png');
    game.GE.LoadingScene.load.image('d_4', BASE_ASSET_BATH + 'images/world/wild/d_4.png');
    game.GE.LoadingScene.load.image('d_5', BASE_ASSET_BATH + 'images/world/wild/d_5.png');
    game.GE.LoadingScene.load.image('d_6', BASE_ASSET_BATH + 'images/world/wild/d_6.png');
    game.GE.LoadingScene.load.image('d_7', BASE_ASSET_BATH + 'images/world/wild/d_7.png');
    game.GE.LoadingScene.load.image('d_8', BASE_ASSET_BATH + 'images/world/wild/d_8.png');
    game.GE.LoadingScene.load.image('d_9', BASE_ASSET_BATH + 'images/world/wild/d_9.png');
    game.GE.LoadingScene.load.image('d_10', BASE_ASSET_BATH + 'images/world/wild/d_10.png');
    game.GE.LoadingScene.load.image('m_1', BASE_ASSET_BATH + 'images/world/wild/m_1.png');
    game.GE.LoadingScene.load.image('m_2', BASE_ASSET_BATH + 'images/world/wild/m_2.png');
    game.GE.LoadingScene.load.image('m_3', BASE_ASSET_BATH + 'images/world/wild/m_3.png');
    game.GE.LoadingScene.load.image('m_4', BASE_ASSET_BATH + 'images/world/wild/m_4.png');
    game.GE.LoadingScene.load.image('m_5', BASE_ASSET_BATH + 'images/world/wild/m_5.png');
    game.GE.LoadingScene.load.image('m_6', BASE_ASSET_BATH + 'images/world/wild/m_6.png');
    game.GE.LoadingScene.load.image('m_7', BASE_ASSET_BATH + 'images/world/wild/m_7.png');
    game.GE.LoadingScene.load.image('m_8', BASE_ASSET_BATH + 'images/world/wild/m_8.png');
    game.GE.LoadingScene.load.image('m_9', BASE_ASSET_BATH + 'images/world/wild/m_9.png');
    game.GE.LoadingScene.load.image('m_10', BASE_ASSET_BATH + 'images/world/wild/m_10.png');
    game.GE.LoadingScene.load.image('w_1', BASE_ASSET_BATH + 'images/world/wild/w_1.png');
    game.GE.LoadingScene.load.image('w_2', BASE_ASSET_BATH + 'images/world/wild/w_2.png');
    game.GE.LoadingScene.load.image('w_3', BASE_ASSET_BATH + 'images/world/wild/w_3.png');
    game.GE.LoadingScene.load.image('w_4', BASE_ASSET_BATH + 'images/world/wild/w_4.png');
    game.GE.LoadingScene.load.image('w_5', BASE_ASSET_BATH + 'images/world/wild/w_5.png');
    game.GE.LoadingScene.load.image('w_6', BASE_ASSET_BATH + 'images/world/wild/w_6.png');
    game.GE.LoadingScene.load.image('w_7', BASE_ASSET_BATH + 'images/world/wild/w_7.png');
    game.GE.LoadingScene.load.image('w_8', BASE_ASSET_BATH + 'images/world/wild/w_8.png');
    game.GE.LoadingScene.load.image('w_9', BASE_ASSET_BATH + 'images/world/wild/w_9.png');
    game.GE.LoadingScene.load.image('w_10', BASE_ASSET_BATH + 'images/world/wild/w_10.png');
    game.GE.LoadingScene.load.spritesheet('f_1', BASE_ASSET_BATH + 'images/world/wild/f_1.png', {
        frameWidth: 128,
        frameHeight: 128
    });
    game.GE.LoadingScene.load.spritesheet('f_2', BASE_ASSET_BATH + 'images/world/wild/f_2.png', {
        frameWidth: 128,
        frameHeight: 128
    });
    game.GE.LoadingScene.load.spritesheet('f_3', BASE_ASSET_BATH + 'images/world/wild/f_3.png', {
        frameWidth: 128,
        frameHeight: 128
    });
    game.GE.LoadingScene.load.spritesheet('flagOverCity', BASE_ASSET_BATH + 'images/animation/flags.png', {
        frameWidth: 34,
        frameHeight: 24
    });
    game.GE.LoadingScene.load.image('arrow', BASE_ASSET_BATH + 'images/animation/currentUnit.png');
    game.GE.LoadingScene.load.image('godGateBtn', BASE_ASSET_BATH + 'images/godGate/godGate.png');
    game.GE.LoadingScene.load.image('fireBtn', BASE_ASSET_BATH + 'images/animation/fireBtn.png');
    game.GE.LoadingScene.load.image('mnawrat', BASE_ASSET_BATH + 'images/world/30.png');
    game.GE.LoadingScene.load.image('front_squad', BASE_ASSET_BATH + 'images/world/front_squad.png');
    game.GE.LoadingScene.load.image('front_band', BASE_ASSET_BATH + 'images/world/front_band.png');
    game.GE.LoadingScene.load.image('front_squadron', BASE_ASSET_BATH + 'images/world/front_squadron.png');
    game.GE.LoadingScene.load.image('front_division', BASE_ASSET_BATH + 'images/world/front_division.png');
    game.GE.LoadingScene.load.image('armed_light_squad', BASE_ASSET_BATH + 'images/world/armed_light_squad.png');
    game.GE.LoadingScene.load.image('armed_light_band', BASE_ASSET_BATH + 'images/world/armed_light_band.png');
    game.GE.LoadingScene.load.image('armed_light_squadron', BASE_ASSET_BATH + 'images/world/armed_light_squadron.png');
    game.GE.LoadingScene.load.image('armed_light_division', BASE_ASSET_BATH + 'images/world/armed_light_division.png');
    game.GE.LoadingScene.load.image('armed_heavy_squad', BASE_ASSET_BATH + 'images/world/armed_heavy_squad.png');
    game.GE.LoadingScene.load.image('armed_heavy_band', BASE_ASSET_BATH + 'images/world/armed_heavy_band.png');
    game.GE.LoadingScene.load.image('armed_heavy_squadron', BASE_ASSET_BATH + 'images/world/armed_heavy_squadron.png');
    game.GE.LoadingScene.load.image('armed_heavy_division', BASE_ASSET_BATH + 'images/world/armed_heavy_division.png');
    game.GE.LoadingScene.load.image('guard_squad', BASE_ASSET_BATH + 'images/world/guard_squad.png');
    game.GE.LoadingScene.load.image('guard_band', BASE_ASSET_BATH + 'images/world/guard_band.png');
    game.GE.LoadingScene.load.image('guard_squadron', BASE_ASSET_BATH + 'images/world/guard_squadron.png');
    game.GE.LoadingScene.load.image('guard_division', BASE_ASSET_BATH + 'images/world/guard_division.png');
    game.GE.LoadingScene.load.image('brave_thunder', BASE_ASSET_BATH + 'images/world/brave_thunder.png');
    game.GE.LoadingScene.load.image('gang', BASE_ASSET_BATH + 'images/world/gang.png');
    game.GE.LoadingScene.load.image('mugger', BASE_ASSET_BATH + 'images/world/mugger.png');
    game.GE.LoadingScene.load.image('thief', BASE_ASSET_BATH + 'images/world/thief.png');
    game.GE.LoadingScene.load.image('carthage_gang', BASE_ASSET_BATH + 'images/world/carthage/gang.png');
    game.GE.LoadingScene.load.image('carthage_teams', BASE_ASSET_BATH + 'images/world/carthage/teams.png');
    game.GE.LoadingScene.load.image('carthage_rebels', BASE_ASSET_BATH + 'images/world/carthage/rebels.png');
    game.GE.LoadingScene.load.image('carthage_forces', BASE_ASSET_BATH + 'images/world/carthage/forces.png');
    game.GE.LoadingScene.load.image('carthage_capital', BASE_ASSET_BATH + 'images/world/carthage/capital.png');
    game.GE.LoadingScene.load.image('army_capital', BASE_ASSET_BATH + 'images/world/army-capital.png');
    game.GE.LoadingScene.load.image('queenCity_1', BASE_ASSET_BATH + 'images/world/queenCity_1.png');
    game.GE.LoadingScene.load.image('queenCity_2', BASE_ASSET_BATH + 'images/world/queenCity_2.png');
    game.GE.LoadingScene.load.image('queenCity_3', BASE_ASSET_BATH + 'images/world/queenCity_3.png');
    game.GE.LoadingScene.load.image('repleCastle_1', BASE_ASSET_BATH + 'images/world/repleCastle_1.png');
    game.GE.LoadingScene.load.image('repleCastle_2', BASE_ASSET_BATH + 'images/world/repleCastle_2.png');
    game.GE.LoadingScene.load.image('repleCastle_3', BASE_ASSET_BATH + 'images/world/repleCastle_3.png');
    game.GE.LoadingScene.load.image('wolfStatue', BASE_ASSET_BATH + 'images/world/wolf.png');
    game.GE.LoadingScene.load.image('arena', BASE_ASSET_BATH + 'images/world/arena.png');
    game.GE.LoadingScene.load.image('seaCity_1', BASE_ASSET_BATH + 'images/world/seaCity_1.png');
    game.GE.LoadingScene.load.image('seaCity_2', BASE_ASSET_BATH + 'images/world/seaCity_2.png');
    game.GE.LoadingScene.load.image('seaCity_3', BASE_ASSET_BATH + 'images/world/seaCity_3.png');
    game.GE.LoadingScene.load.image('seaCity_4', BASE_ASSET_BATH + 'images/world/seaCity_4.png');
    game.GE.LoadingScene.load.image('seaCity_5', BASE_ASSET_BATH + 'images/world/seaCity_5.png');
    game.GE.LoadingScene.load.image('seaCity_6', BASE_ASSET_BATH + 'images/world/seaCity_6.png');
    game.GE.LoadingScene.load.image('challangeFieldPlayer', BASE_ASSET_BATH + 'images/world/challangeFieldPlayer.png');
    game.GE.LoadingScene.load.image('challangeFieldGuild', BASE_ASSET_BATH + 'images/world/challangeFieldGuild.png');
    game.GE.LoadingScene.load.image('challangeFieldTeam', BASE_ASSET_BATH + 'images/world/challangeFieldTeam.png');
    game.GE.LoadingScene.load.image('challangeFieldServer', BASE_ASSET_BATH + 'images/world/challangeFieldServer.png');
    game.GE.LoadingScene.load.image('fightChallangePlayer', BASE_ASSET_BATH + 'images/world/fightChallangePlayer.png');
    game.GE.LoadingScene.load.image('fightChallangeGuild', BASE_ASSET_BATH + 'images/world/fightChallangeGuild.png');
    game.GE.LoadingScene.load.image('fightChallangeTeam', BASE_ASSET_BATH + 'images/world/fightChallangeTeam.png');
    game.GE.LoadingScene.load.image('fightChallangeServer', BASE_ASSET_BATH + 'images/world/fightChallangeServer.png');
    game.GE.LoadingScene.load.image('city_shield', BASE_ASSET_BATH + 'images/world/city_shield.png');
    game.GE.LoadingScene.load.image('palace', BASE_ASSET_BATH + 'images/city/palace.png');
    game.GE.LoadingScene.load.image('wall_0', BASE_ASSET_BATH + 'images/city/wall_0_.png');
    game.GE.LoadingScene.load.image('wall_1', BASE_ASSET_BATH + 'images/city/wall_1_.png');
    game.GE.LoadingScene.load.image('wall_2', BASE_ASSET_BATH + 'images/city/wall_2_.png');
    game.GE.LoadingScene.load.image('wall_3', BASE_ASSET_BATH + 'images/city/wall_3_.png');
    game.GE.LoadingScene.load.image('wall_4', BASE_ASSET_BATH + 'images/city/wall_4_.png');
    game.GE.LoadingScene.load.image('seaport', BASE_ASSET_BATH + 'images/city/_seaport.png');
    game.GE.LoadingScene.load.image('market', BASE_ASSET_BATH + 'images/city/_market.png');
    game.GE.LoadingScene.load.image('farm', BASE_ASSET_BATH + 'images/city/_farm.png');
    game.GE.LoadingScene.load.image('mine', BASE_ASSET_BATH + 'images/city/_mine.png');
    game.GE.LoadingScene.load.image('stone', BASE_ASSET_BATH + 'images/city/_mahger.png');
    game.GE.LoadingScene.load.image('wood', BASE_ASSET_BATH + 'images/city/_wood_maker.png');
    game.GE.LoadingScene.load.image('lighthouse', BASE_ASSET_BATH + 'images/city/_lighthouse.png');
    game.GE.LoadingScene.load.image('B1', BASE_ASSET_BATH + 'images/city/_B1.png');
    game.GE.LoadingScene.load.image('B2', BASE_ASSET_BATH + 'images/city/_B2.png');
    game.GE.LoadingScene.load.image('B3', BASE_ASSET_BATH + 'images/city/_B3.png');
    game.GE.LoadingScene.load.image('B4', BASE_ASSET_BATH + 'images/city/_B4.png');
    game.GE.LoadingScene.load.image('B5', BASE_ASSET_BATH + 'images/city/_B5.png');
    game.GE.LoadingScene.load.image('B6', BASE_ASSET_BATH + 'images/city/_B6.png');
    game.GE.LoadingScene.load.image('B7', BASE_ASSET_BATH + 'images/city/_B7.png');
    game.GE.LoadingScene.load.image('B8', BASE_ASSET_BATH + 'images/city/_B8.png');
    game.GE.LoadingScene.load.image('B9', BASE_ASSET_BATH + 'images/city/_B9.png');
    game.GE.LoadingScene.load.image('B10', BASE_ASSET_BATH + 'images/city/_B10.png');
    game.GE.LoadingScene.load.image('B11', BASE_ASSET_BATH + 'images/city/_B11.png');
    game.GE.LoadingScene.load.image('no_building', BASE_ASSET_BATH + 'images/city/no_building.png');
    game.GE.LoadingScene.load.image('city_floor', BASE_ASSET_BATH + 'images/city/city_floor.jpg');


    game.GE.LoadingScene.load.image('fountain', BASE_ASSET_BATH + 'images/animation/fountain.png');
    game.GE.LoadingScene.load.image('ani_wood_maker', BASE_ASSET_BATH + 'images/animation/wood_maker.png');
    game.GE.LoadingScene.load.image('ani_wood_man', BASE_ASSET_BATH + 'images/animation/wood_man.png');
    game.GE.LoadingScene.load.image('mine_man', BASE_ASSET_BATH + 'images/animation/mine_man.png');
    game.GE.LoadingScene.load.image('stone_man', BASE_ASSET_BATH + 'images/animation/stone_man.png');
    game.GE.LoadingScene.load.image('stone_carry', BASE_ASSET_BATH + 'images/animation/stone_carry.png');
    game.GE.LoadingScene.load.image('no_carry', BASE_ASSET_BATH + 'images/animation/no_carry.png');
    game.GE.LoadingScene.load.spritesheet('WorldUnitFire', BASE_ASSET_BATH + 'images/animation/attack_fire.png', {
        frameWidth: 42,
        frameHeight: 63
    });

    game.GE.LoadingScene.load.image('cloud', BASE_ASSET_BATH + 'images/animation/cloud.png');
    game.GE.LoadingScene.load.image('unit_floor', BASE_ASSET_BATH + 'images/world/unit_floor.png');
    game.GE.LoadingScene.load.image('building_lvl_lable_1', BASE_ASSET_BATH + 'images/background/lvl_lable/lable_1.png');
    game.GE.LoadingScene.load.image('building_lvl_lable_2', BASE_ASSET_BATH + 'images/background/lvl_lable/lable_2.png');
    game.GE.LoadingScene.load.image('building_lvl_lable_3', BASE_ASSET_BATH + 'images/background/lvl_lable/lable_3.png');
    game.GE.LoadingScene.load.image('building_lvl_lable_4', BASE_ASSET_BATH + 'images/background/lvl_lable/lable_4.png');
    game.GE.LoadingScene.load.image('building_lvl_lable_5', BASE_ASSET_BATH + 'images/background/lvl_lable/lable_5.png');

    game.GE.LoadingScene.load.image('MapIconAttack', BASE_ASSET_BATH + 'images/world/WorldFloorIcon/Attack.png');
    game.GE.LoadingScene.load.image('MapIconOccupy', BASE_ASSET_BATH + 'images/world/WorldFloorIcon/Occupy.png');
    game.GE.LoadingScene.load.image('MapIconRainForce', BASE_ASSET_BATH + 'images/world/WorldFloorIcon/RainForce.png');
    game.GE.LoadingScene.load.image('MapIconSpy', BASE_ASSET_BATH + 'images/world/WorldFloorIcon/Spy.png');
    game.GE.LoadingScene.load.image('MapIconTransPort', BASE_ASSET_BATH + 'images/world/WorldFloorIcon/TransPort.png');
    game.GE.LoadingScene.load.image('MapIconEnter', BASE_ASSET_BATH + 'images/world/WorldFloorIcon/Enter.png');
    game.GE.LoadingScene.load.image('MapIconArena', BASE_ASSET_BATH + 'images/world/WorldFloorIcon/BattelField.png');
    game.GE.LoadingScene.load.image('CoordHolder', BASE_ASSET_BATH + 'images/world/WorldFloorIcon/CoordHolder.png');
    game.GE.LoadingScene.load.image('DashedLineRed', BASE_ASSET_BATH + 'images/world/DashedLine/DashedLineRed.png');
    game.GE.LoadingScene.load.image('DashedLineGreen', BASE_ASSET_BATH + 'images/world/DashedLine/DashedLineGreen.png');
    game.GE.LoadingScene.load.image('DashedLineLGreen', BASE_ASSET_BATH + 'images/world/DashedLine/DashedLineLGreen.png');
    game.GE.LoadingScene.load.image('DashedLineBlue', BASE_ASSET_BATH + 'images/world/DashedLine/DashedLineBlue.png');
    game.GE.LoadingScene.load.image('DashedLineGray', BASE_ASSET_BATH + 'images/world/DashedLine/DashedLineGray.png');


    game.GE.LoadingScene.load.image('goSourceA', BASE_ASSET_BATH + 'images/world/DashedLine/goSourceA.png');
    game.GE.LoadingScene.load.image('goSourceH', BASE_ASSET_BATH + 'images/world/DashedLine/goSourceH.png');
    game.GE.LoadingScene.load.image('goSourceD', BASE_ASSET_BATH + 'images/world/DashedLine/goSourceD.png');
    game.GE.LoadingScene.load.image('goSourceN', BASE_ASSET_BATH + 'images/world/DashedLine/goSourceN.png');


    game.GE.LoadingScene.load.image('SFaceA1', BASE_ASSET_BATH + 'images/hero/faceA1.png');
    game.GE.LoadingScene.load.image('SFaceA1', BASE_ASSET_BATH + 'images/hero/faceA1.png');
    game.GE.LoadingScene.load.image('SFaceA1', BASE_ASSET_BATH + 'images/hero/faceA1.png');
    game.GE.LoadingScene.load.image('SFaceA1', BASE_ASSET_BATH + 'images/hero/faceA1.png');
    game.GE.LoadingScene.load.image('SFaceA1', BASE_ASSET_BATH + 'images/hero/faceA1.png');

    game.GE.LoadingScene.load.spritesheet('FarmLabor', BASE_ASSET_BATH + 'images/animation/City/FarmLabor.png', {
        frameWidth: 42,
        frameHeight: 42
    });
    game.GE.LoadingScene.load.spritesheet('FarmLaborCarryR', BASE_ASSET_BATH + 'images/animation/City/FarmLaborCarryR.png', {
        frameWidth: 42,
        frameHeight: 42
    });
    game.GE.LoadingScene.load.spritesheet('FarmLaborCarryD', BASE_ASSET_BATH + 'images/animation/City/FarmLaborCarryD.png', {
        frameWidth: 42,
        frameHeight: 42
    });


    game.GE.LoadingScene.load.spritesheet('StoneLabor', BASE_ASSET_BATH + 'images/animation/City/StoneLabor.png', {
        frameWidth: 42,
        frameHeight: 42
    });
    game.GE.LoadingScene.load.spritesheet('StoneLaborCarryL', BASE_ASSET_BATH + 'images/animation/City/StoneLaborCarryL.png', {
        frameWidth: 42,
        frameHeight: 42
    });
    game.GE.LoadingScene.load.spritesheet('StoneLaborCarryD', BASE_ASSET_BATH + 'images/animation/City/StoneLaborCarryD.png', {
        frameWidth: 42,
        frameHeight: 42
    });

    game.GE.LoadingScene.load.spritesheet('IronLabor', BASE_ASSET_BATH + 'images/animation/City/IronLabor.png', {
        frameWidth: 42,
        frameHeight: 42
    });
    game.GE.LoadingScene.load.spritesheet('WoodLabor', BASE_ASSET_BATH + 'images/animation/City/WoodLabor.png', {
        frameWidth: 42,
        frameHeight: 42
    });
    game.GE.LoadingScene.load.spritesheet('WoodTool', BASE_ASSET_BATH + 'images/animation/City/WoodTool.png', {
        frameWidth: 65,
        frameHeight: 46
    });

    game.GE.LoadingScene.load.spritesheet('Horse', BASE_ASSET_BATH + 'images/animation/City/Horse.png', {
        frameWidth: 34,
        frameHeight: 20
    });
    game.GE.LoadingScene.load.spritesheet('Fountain', BASE_ASSET_BATH + 'images/animation/City/Fountain.png', {
        frameWidth: 40,
        frameHeight: 32
    });
    game.GE.LoadingScene.load.spritesheet('Woman', BASE_ASSET_BATH + 'images/animation/City/Woman.png', {
        frameWidth: 28,
        frameHeight: 28
    });

    game.GE.LoadingScene.load.spritesheet('noCarryWorkerD', BASE_ASSET_BATH + 'images/animation/City/noCarryWorkerD.png', {
        frameWidth: 42,
        frameHeight: 42
    });
    game.GE.LoadingScene.load.spritesheet('noCarryWorkerR', BASE_ASSET_BATH + 'images/animation/City/noCarryWorkerR.png', {
        frameWidth: 42,
        frameHeight: 42
    });

    game.GE.LoadingScene.load.spritesheet('UpgradingHammer', BASE_ASSET_BATH + 'images/animation/City/UpgradingHammer.png', {
        frameWidth: 161,
        frameHeight: 120
    });

    game.GE.LoadingScene.load.spritesheet('UpgradingLaborL', BASE_ASSET_BATH + 'images/animation/City/UpgradingLaborL.png', {
        frameWidth: 42,
        frameHeight: 42
    });
    game.GE.LoadingScene.load.spritesheet('UpgradingLaborR', BASE_ASSET_BATH + 'images/animation/City/UpgradingLaborR.png', {
        frameWidth: 42,
        frameHeight: 42
    });
    game.GE.LoadingScene.load.image('UpgradingSupportsU', BASE_ASSET_BATH + 'images/animation/City/UpgradingSupportsU.png');
    game.GE.LoadingScene.load.image('UpgradingSupportsD', BASE_ASSET_BATH + 'images/animation/City/UpgradingSupportsD.png');
    game.GE.LoadingScene.load.image('UpgradingPalaceSupU', BASE_ASSET_BATH + 'images/animation/City/UpgradingPalaceSupU.png');
    game.GE.LoadingScene.load.image('UpgradingPalaceSupD', BASE_ASSET_BATH + 'images/animation/City/UpgradingPalaceSupD.png');
    game.GE.LoadingScene.load.image('ConstructingHammer', BASE_ASSET_BATH + 'images/city/Space.png');

    game.GE.LoadingScene.load.atlas('MainCityBG_01', 'images/CityFloor/mainCityBGHall_1.png', 'images/CityFloor/mainCityBGHall_1.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_02', 'images/CityFloor/mainCityBGHall_2.png', 'images/CityFloor/mainCityBGHall_2.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_03', 'images/CityFloor/mainCityBGHall_3.png', 'images/CityFloor/mainCityBGHall_3.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_04', 'images/CityFloor/mainCityBGHall_4.png', 'images/CityFloor/mainCityBGHall_4.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_05', 'images/CityFloor/mainCityBGHall_5.png', 'images/CityFloor/mainCityBGHall_5.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_06', 'images/CityFloor/mainCityBGHall_6.png', 'images/CityFloor/mainCityBGHall_6.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_07', 'images/CityFloor/mainCityBGHall_7.png', 'images/CityFloor/mainCityBGHall_7.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_08', 'images/CityFloor/mainCityBGHall_8.png', 'images/CityFloor/mainCityBGHall_8.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_09', 'images/CityFloor/mainCityBGHall_9.png', 'images/CityFloor/mainCityBGHall_9.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_10', 'images/CityFloor/mainCityBGHall_10.png', 'images/CityFloor/mainCityBGHall_10.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_11', 'images/CityFloor/mainCityBGHall_11.png', 'images/CityFloor/mainCityBGHall_11.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_12', 'images/CityFloor/mainCityBGHall_12.png', 'images/CityFloor/mainCityBGHall_12.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_13', 'images/CityFloor/mainCityBGHall_13.png', 'images/CityFloor/mainCityBGHall_13.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_14', 'images/CityFloor/mainCityBGHall_14.png', 'images/CityFloor/mainCityBGHall_14.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_15', 'images/CityFloor/mainCityBGHall_15.png', 'images/CityFloor/mainCityBGHall_15.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_16', 'images/CityFloor/mainCityBGHall_16.png', 'images/CityFloor/mainCityBGHall_16.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_17', 'images/CityFloor/mainCityBGHall_17.png', 'images/CityFloor/mainCityBGHall_17.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_18', 'images/CityFloor/mainCityBGHall_18.png', 'images/CityFloor/mainCityBGHall_18.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_19', 'images/CityFloor/mainCityBGHall_19.png', 'images/CityFloor/mainCityBGHall_19.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_20', 'images/CityFloor/mainCityBGHall_20.png', 'images/CityFloor/mainCityBGHall_20.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_21', 'images/CityFloor/mainCityBGHall_21.png', 'images/CityFloor/mainCityBGHall_21.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_22', 'images/CityFloor/mainCityBGHall_22.png', 'images/CityFloor/mainCityBGHall_22.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_23', 'images/CityFloor/mainCityBGHall_23.png', 'images/CityFloor/mainCityBGHall_23.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_24', 'images/CityFloor/mainCityBGHall_24.png', 'images/CityFloor/mainCityBGHall_24.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_25', 'images/CityFloor/mainCityBGHall_25.png', 'images/CityFloor/mainCityBGHall_25.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_26', 'images/CityFloor/mainCityBGHall_26.png', 'images/CityFloor/mainCityBGHall_26.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_27', 'images/CityFloor/mainCityBGHall_27.png', 'images/CityFloor/mainCityBGHall_27.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_28', 'images/CityFloor/mainCityBGHall_28.png', 'images/CityFloor/mainCityBGHall_28.json');
    game.GE.LoadingScene.load.atlas('MainCityBG_top', 'images/CityFloor/mainCityBGHall_top.png', 'images/CityFloor/mainCityBGHall_top.json');


};

game.GE.ConfigCityAnims = function() {


    var Scene = game.GE.CityScene;
    Scene.anims.create({
        key: 'FarmLabor.A',
        frames: Scene.anims.generateFrameNumbers('FarmLabor'),
        frameRate: 6,
        repeat: -1
    });
    Scene.anims.create({
        key: 'FarmLaborCarryR.A',
        frames: Scene.anims.generateFrameNumbers('FarmLaborCarryR'),
        frameRate: 6,
        repeat: -1
    });
    Scene.anims.create({
        key: 'FarmLaborCarryD.A',
        frames: Scene.anims.generateFrameNumbers('FarmLaborCarryD'),
        frameRate: 6,
        repeat: -1
    });

    Scene.anims.create({
        key: 'noCarryWorkerD.A',
        frames: Scene.anims.generateFrameNumbers('noCarryWorkerD'),
        frameRate: 6,
        repeat: -1
    });
    Scene.anims.create({
        key: 'noCarryWorkerR.A',
        frames: Scene.anims.generateFrameNumbers('noCarryWorkerR'),
        frameRate: 6,
        repeat: -1
    });

    Scene.anims.create({
        key: 'StoneLabor.A',
        frames: Scene.anims.generateFrameNumbers('StoneLabor'),
        frameRate: 6,
        repeat: -1
    });
    Scene.anims.create({
        key: 'StoneLaborCarryL.A',
        frames: Scene.anims.generateFrameNumbers('StoneLaborCarryL'),
        frameRate: 6,
        repeat: -1
    });

    Scene.anims.create({
        key: 'IronLabor.A',
        frames: Scene.anims.generateFrameNumbers('IronLabor'),
        frameRate: 6,
        repeat: -1
    });
    Scene.anims.create({
        key: 'WoodLabor.A',
        frames: Scene.anims.generateFrameNumbers('WoodLabor'),
        frameRate: 6,
        repeat: -1
    });
    Scene.anims.create({
        key: 'WoodTool.A',
        frames: Scene.anims.generateFrameNumbers('WoodTool'),
        frameRate: 6,
        repeat: -1
    });


    Scene.anims.create({
        key: 'Horse.A',
        frames: Scene.anims.generateFrameNumbers('Horse'),
        frameRate: 6,
        repeat: -1
    });
    Scene.anims.create({
        key: 'Fountain.A',
        frames: Scene.anims.generateFrameNumbers('Fountain'),
        frameRate: 6,
        repeat: -1
    });
    Scene.anims.create({
        key: 'WomanFace.A',
        frames: Scene.anims.generateFrameNumbers('Woman', {
            frames: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
        }),
        frameRate: 6,
        repeat: -1
    });
    Scene.anims.create({
        key: 'WomanBack.A',
        frames: Scene.anims.generateFrameNumbers('Woman', {
            frames: [10, 11, 12, 13, 14, 15, 16, 17, 18, 19]
        }),
        frameRate: 6,
        repeat: -1
    });
    Scene.anims.create({
        key: 'Woman.A',
        frames: Scene.anims.generateFrameNumbers('Woman'),
        frameRate: 6,
        repeat: -1
    });

    Scene.anims.create({
        key: 'UpgradingHammer.A',
        frames: Scene.anims.generateFrameNumbers('UpgradingHammer'),
        frameRate: 10,
        repeat: -1
    });
    Scene.anims.create({
        key: 'UpgradingLaborL.A',
        frames: Scene.anims.generateFrameNumbers('UpgradingLaborL'),
        frameRate: 6,
        repeat: -1
    });
    Scene.anims.create({
        key: 'UpgradingLaborR.A',
        frames: Scene.anims.generateFrameNumbers('UpgradingLaborR'),
        frameRate: 6,
        repeat: -1
    });

    Animation.FixedCityAnimation();
};

game.GE.ConfigAnims = function() {

    var Scene = game.GE.WorldScene;
    game.GE.WorldScene.anims.create({
        key: 'Forest.1',
        frames: game.GE.WorldScene.anims.generateFrameNumbers('f_1'),
        frameRate: 3,
        repeat: -1
    });
    game.GE.WorldScene.anims.create({
        key: 'Forest.2',
        frames: game.GE.WorldScene.anims.generateFrameNumbers('f_2'),
        frameRate: 3,
        repeat: -1
    });
    game.GE.WorldScene.anims.create({
        key: 'Forest.3',
        frames: game.GE.WorldScene.anims.generateFrameNumbers('f_3'),
        frameRate: 3,
        repeat: -1
    });
    game.GE.WorldScene.anims.create({
        key: 'CityFlag.Nut',
        frames: game.GE.WorldScene.anims.generateFrameNumbers('flagOverCity', {
            frames: [0, 6, 12, 18, 24, 30]
        }),
        frameRate: 6,
        repeat: -1
    });
    game.GE.WorldScene.anims.create({
        key: 'CityFlag.Fri',
        frames: game.GE.WorldScene.anims.generateFrameNumbers('flagOverCity', {
            frames: [1, 7, 13, 19, 25, 31]
        }),
        frameRate: 6,
        repeat: -1
    });
    game.GE.WorldScene.anims.create({
        key: 'CityFlag.All',
        frames: game.GE.WorldScene.anims.generateFrameNumbers('flagOverCity', {
            frames: [2, 8, 14, 20, 26, 32]
        }),
        frameRate: 6,
        repeat: -1
    });
    game.GE.WorldScene.anims.create({
        key: 'CityFlag.Min',
        frames: game.GE.WorldScene.anims.generateFrameNumbers('flagOverCity', {
            frames: [3, 9, 15, 21, 27, 33]
        }),
        frameRate: 6,
        repeat: -1
    });
    game.GE.WorldScene.anims.create({
        key: 'CityFlag.Ene',
        frames: game.GE.WorldScene.anims.generateFrameNumbers('flagOverCity', {
            frames: [4, 10, 16, 22, 28, 34]
        }),
        frameRate: 6,
        repeat: -1
    });
    game.GE.WorldScene.anims.create({
        key: 'CityFlag.Dea',
        frames: game.GE.WorldScene.anims.generateFrameNumbers('flagOverCity', {
            frames: [5, 11, 17, 23, 29, 35]
        }),
        frameRate: 6,
        repeat: -1
    });
    game.GE.WorldScene.anims.create({
        key: 'WorldUnitFire.Ani',
        frames: game.GE.WorldScene.anims.generateFrameNumbers('WorldUnitFire', {
            frames: [0, 1, 2, 3, 4, 5, 6, 7]
        }),
        frameRate: 6,
        repeat: -1
    });
};


game.GE.Loading = function(percent) {
    $("#load-percent").html(Math.floor(percent) + "%");
    $("#load-bar div").css({
        width: percent + "%"
    });
};


game.GE.CLoadingScene = new Phaser.Class({
    Extends: Phaser.Scene,
    initialize: function() {
        Phaser.Scene.call(this, {
            "key": "LoadingScene"
        });
        game.GE.LoadingScene = this;
    },
    init: function() {},
    preload: function() {

        game.GE.LPreLoad();
        this.load.on('progress', function(value) {
            game.GE.Loading(value * 100);
        });
        this.load.on('complete', function() {
            $.ajax({
                url: API_URL + "/home/HLogIn/playerEnterServerWeb",
                type: 'POST',
                data: {
                    server: SERVER_ID,
                    outhToken: TOKEN
                },
                beforeSend: function(xhr) {

                },
                success: function(data, textStatus, jqXHR) {
                    if (!game['LBase']['isJson'](data)) {
                        alert(data), console['log'](data);
                        return;
                    }
                    var JsonData = JSON['parse'](data);
                    if (JsonData['state'] !== 'ok')
                        console['log'](JsonData);
                    console.log(JsonData);
                    game['Config']['WsPort'] = JsonData['WsPort'];
                    game['Config']['WsHost'] = JsonData['WsHost'];
                    game['DPlayer']['Player'] = JsonData['Player'];
                    game['ServerData'] = JsonData.Server;
                    game['Config']['OuthToken'] = TOKEN;
                    game['Config']['idServer'] = JsonData['idServer'];
                    game['Config']['idCities'] = JsonData['idCities'];
                    game['Config']['JsVersion'] = JsonData['JsVersion'];
                    game['Config']['PayLink'] = JsonData['PayLink'];
                    game['Config']['RechCode'] = JsonData['RechCode'];

                    if (game['DPlayer']['Player']['panned'] >= $['now']() / 1000) {
                        alert('هذا الحساب محظور');
                        return;
                    }

                    $['ajaxSetup']({
                        'data': {
                            'idPlayerV': game['DPlayer']['Player']['id_player']
                        }
                        /*,
                                                 beforeSend(){
                                                 $("button").attr("disabled", "disabled");
                                                 $("button").prop("disabled", true);
                                                 },
                                                 complete(){
                                                 $("button").removeAttr("disabled");
                                                 $("button").prop("disabled", false);
                                                 }*/
                    });

                    $('html')['trigger']('PlayerReady');

                },
                error: function(jqXHR, textStatus, errorThrown) {

                }

            });

        });
    },
    create: function() {
        game.GE.LoadingScene.events.on('transitionout', function(targetScene, duration) {});
    },
    update: function() {}
});


var game;
var speedMult = 0.7;
var friction = 0.99;


game.GE.CCityScene = new Phaser.Class({
    Extends: Phaser.Scene,
    initialize: function() {
        Phaser.Scene.call(this, {
            "key": "City"
        });
        game.GE.CityScene = this;
    },
    init: function() {},
    preload: function() {},
    create: function() {

        this.events.on('transitionstart', function(fromScene, duration) {});
        var floor_width = 2500;
        var floor_height = 1400;
        this.ConstructingHammer = {};

        game.GE.ConfigCityAnims();
        fillCityWithBuilding();
        this.input.mousePointer.motionFactor = 0.5;
        this.input.pointer1.motionFactor = 0.5;

        var cam = this.cameras.main.setBounds(0, 0, floor_width, floor_height);
        this.add.image(0, 0, "city_floor").setOrigin(0, 0);
        this.Scrolling = {};
        var This = this;
        var downObj;
        this.input.on('gameobjectdown', function(p, obj, E) {
            if (this.isMapDraging)
                return;
            downObj = obj;
            E.stopPropagation();

        });
        this.input.on('gameobjectup', function(P, Obj, E) {

            if (P.downElement !== game.GE.Game.canvas || P.getDuration() > 250)
                return;
            Obj.emit("click", Obj, P, E);
            E.stopPropagation();
        });

        this.input.on('pointerdown', function(p) {
            console.log(p.worldX, p.worldY)
            This.Scrolling.movingSpeed = 0;

        });
        this.input.on('pointerup', function(p) {
            This.Scrolling.isBeingDragged = false;
            This.Scrolling.DeltaTime = p.downTime - p.upTime;
            This.Scrolling.Distance = Phaser.Math.Distance.Between(p.downX, p.downY, p.upX, p.upY);
            This.Scrolling.Angle = Phaser.Math.Angle.Between(p.downX, p.downY, p.upX, p.upY);
            This.Scrolling.movingSpeed = This.Scrolling.Distance * 10 / This.Scrolling.DeltaTime;
            This.input.stopPropagation();
        });

        this.input.on('pointermove', function(p) {
            if (!p.isDown)
                return;
            This.Scrolling.isBeingDragged = true;
            cam.scrollX -= (p.x - p.prevPosition.x) / cam.zoom;
            cam.scrollY -= (p.y - p.prevPosition.y) / cam.zoom;
        });

        this.input.on('gameobjectover', function(Pointer, GameObject, Event) {
            console.log(arguments)
            if (Pointer.isDown)
                return;

            if (This.ConstructingHammer.destroy)
                This.ConstructingHammer.destroy();

            if (GameObject.data) {
                console.log("dasdasdasdadsadsadsad")
                const BuildingPlace = GameObject.data.get("BuildingPlace")
                if (game.City.getCity().BuildingType[BuildingPlace] == BUILDING_TYPS.SPACE) {
                    This.ConstructingHammer = This.add.image(GameObject.x + 18, GameObject.y + 18, "ConstructingHammer").setDepth(100).setOrigin(0, 0);
                }
            }



        });



        this.input.on('gameobjectout', function(Pointer, GameObject, Event) {
            if (This.ConstructingHammer.destroy)
                This.ConstructingHammer.destroy();
        });



        this.input.on('wheel', function(pointer, gameObjects, deltaX, deltaY, deltaZ) {

            if (deltaY < 0) {
                if (cam.zoom >= 2)
                    return cam.zoom = 2;
                cam.zoom += 0.1;
            } else {
                if (cam.zoom <= 1)
                    return cam.zoom = 1;
                cam.zoom -= 0.1;
            }

        });
        cam.pan(BuildingOnFloor.palace.x, BuildingOnFloor.palace.y, 700);



        var controlConfig = {
            camera: this.cameras.main,
            left: this.input.keyboard.addKey('left'),
            right: this.input.keyboard.addKey('right'),
            up: this.input.keyboard.addKey('up'),
            down: this.input.keyboard.addKey('down'),
            acceleration: 0.06,
            drag: 0.0005,
            maxSpeed: 1.0
        };

        this.controls = new Phaser.Cameras.Controls.SmoothedKeyControl(controlConfig);
        //Crafty.viewport.centerOn(BuildingOnFloor.palace, 1);
    },
    update: function(time, delta) {
        this.controls.update(delta);
    }
});


game.GE.CWorldScene = new Phaser.Class({
    Extends: Phaser.Scene,
    initialize: function() {
        Phaser.Scene.call(this, {
            "key": "World"
        });
        game.GE.WorldScene = this;
    },
    init: function() {},
    preload: function() {},
    create: function() {

        game.GE.ConfigAnims();
        var cam = this.cameras.main;
        cam.scrollX = game.World.Map.posX(game.CurrentCity.City.x, game.CurrentCity.City.y) - game.MAX_SCREEN_WIDTH / 2 + 64;
        cam.scrollY = game.World.Map.posY(Number(game.CurrentCity.City.x), Number(game.CurrentCity.City.y)) - game.MAX_SCREEN_HEIGHT / 2 + 128;
        Animation.currentUnitArrow.add();
        cam.on("camerapancomplete", function() {

            game.World.MapBattel.AddBattels();
            game.World.Map.RefreshWorld();
        });

        game.World.Map.Scroll(true);

        var This = this;
        var downObj;
        this.isMapDraging = false;

        this.input.on('gameobjectdown', function(p, obj, E) {
            if (this.isMapDraging)
                return;
            downObj = obj;
            E.stopPropagation();

        });
        this.input.on('gameobjectup', function(P, Obj, E) {

            if (P.downElement !== game.GE.Game.canvas || P.getDuration() > 250)
                return;
            Obj.emit("click", Obj, P, E);
            E.stopPropagation();
        });


        this.input.on('pointerdown', game.World.Map.mouseDownFn);
        this.input.on('pointerup', game.World.Map.mouseUpFn);
        this.input.on('pointermove', game.World.Map.mouseMoveFn);
        this.UnitFloor = this.add.image(0, 0, "unit_floor").setOrigin(0, 0).setDepth(0);
        this.UnitFloor.ignoreDestroy = true;
        this.WorldUnitIcons = {};

        this.time.delayedCall(1000, function() {
            game.World.MapBattel.AddBattels();
        });
        this.cursors = {
            left: this.input.keyboard.addKey('left'),
            right: this.input.keyboard.addKey('right'),
            up: this.input.keyboard.addKey('up'),
            down: this.input.keyboard.addKey('down')
        };
        this.KeySpeed = 4;
        this.input.keyboard.on('keyup', function(eventName, event) {
            This.KeySpeed = 4;
            This.time.delayedCall(500, function() {
                This.isMapDraging = false;
            });

        });
    },
    update: function(time, delta) {

        for (var iii in game.World.MapBattel.BattelList) {
            let OneBattel = game.World.MapBattel.BattelList[iii];

            if (OneBattel && OneBattel.Line)
                OneBattel.Line.tilePositionX -= 0.25;
        }

        if (this.cursors.up.isDown) {
            this.isMapDraging = true;
            this.cameras.main.scrollY -= this.KeySpeed;
            this.KeySpeed = Math.min(this.KeySpeed + 0.5, 20);
            if (time % 5 == 0)
                game.World.Map.Scroll(true);
            if (time % 10 == 0)
                game.World.Map.clear();
            if (time % 20 == 0)
                game.World.MapBattel.AddBattels();


        } else if (this.cursors.down.isDown) {
            this.isMapDraging = true;
            this.cameras.main.scrollY += this.KeySpeed;
            this.KeySpeed = Math.min(this.KeySpeed + 0.5, 20);
            if (time % 5 == 0)
                game.World.Map.Scroll(true);
            if (time % 10 == 0)
                game.World.Map.clear();
            if (time % 20 == 0)
                game.World.MapBattel.AddBattels();

        }

        if (this.cursors.left.isDown) {
            this.isMapDraging = true;
            this.cameras.main.scrollX -= this.KeySpeed;
            this.KeySpeed = Math.min(this.KeySpeed + 0.5, 20);
            if (time % 5 == 0)
                game.World.Map.Scroll(true);
            if (time % 10 == 0)
                game.World.Map.clear();
            if (time % 20 == 0)
                game.World.MapBattel.AddBattels();

        } else if (this.cursors.right.isDown) {
            this.isMapDraging = true;
            this.cameras.main.scrollX += this.KeySpeed;
            this.KeySpeed = Math.min(this.KeySpeed + 0.5, 20);
            if (time % 5 == 0)
                game.World.Map.Scroll(true);
            if (time % 10 == 0)
                game.World.Map.clear();
            if (time % 20 == 0)
                game.World.MapBattel.AddBattels();
        }


    }
});



$(document).ready(function() {
    const phaserConfig = {
        type: Phaser.AUTO,
        parent: "GameWindow",
        width: window.innerWidth,
        height: window.innerHeight,
        backgroundColor: "#000000",
        scene: [game.GE.CLoadingScene, game.GE.CCityScene, game.GE.CWorldScene],
        /* input: {
         windowEvents: false
         }*/
        fps: {
            min: 10,
            target: 20
        }
    };

    game.GE.Game = new Phaser.Game(phaserConfig);
});

game.LBase.Error = function(data) {

    alert(data);
    console.log(data);
};

game.LBase.isJson = function(str) {
    try {
        JSON.parse(str);
    } catch (e) {
        return false;
    }
    return true;

};


const THINGS_TO_LOAD = {
    "sprites": {

        "images/world/city_0.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "city_0": [0, 0, 1, 1]
            }
        },
        "images/world/city_1.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "city_1": [0, 0, 1, 1]
            }
        },
        "images/world/city_2.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "city_2": [0, 0, 1, 1]
            }
        },
        "images/world/city_3.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "city_3": [0, 0, 1, 1]
            }
        },
        "images/world/city_4.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "city_4": [0, 0, 1, 1]
            }
        },

        "images/world/wild/d_1.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "d_1": [0, 0, 1, 1]
            }
        },
        "images/world/wild/d_2.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "d_2": [0, 0, 1, 1]
            }
        },
        "images/world/wild/d_3.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "d_3": [0, 0, 1, 1]
            }
        },
        "images/world/wild/d_4.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "d_4": [0, 0, 1, 1]
            }
        },
        "images/world/wild/d_5.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "d_5": [0, 0, 1, 1]
            }
        },
        "images/world/wild/d_6.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "d_6": [0, 0, 1, 1]
            }
        },
        "images/world/wild/d_7.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "d_7": [0, 0, 1, 1]
            }
        },
        "images/world/wild/d_8.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "d_8": [0, 0, 1, 1]
            }
        },
        "images/world/wild/d_9.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "d_9": [0, 0, 1, 1]
            }
        },
        "images/world/wild/d_10.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "d_10": [0, 0, 1, 1]
            }
        },

        "images/world/wild/m_1.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "m_1": [0, 0, 1, 1]
            }
        },
        "images/world/wild/m_2.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "m_2": [0, 0, 1, 1]
            }
        },
        "images/world/wild/m_3.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "m_3": [0, 0, 1, 1]
            }
        },
        "images/world/wild/m_4.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "m_4": [0, 0, 1, 1]
            }
        },
        "images/world/wild/m_5.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "m_5": [0, 0, 1, 1]
            }
        },
        "images/world/wild/m_6.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "m_6": [0, 0, 1, 1]
            }
        },
        "images/world/wild/m_7.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "m_7": [0, 0, 1, 1]
            }
        },
        "images/world/wild/m_8.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "m_8": [0, 0, 1, 1]
            }
        },
        "images/world/wild/m_9.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "m_9": [0, 0, 1, 1]
            }
        },
        "images/world/wild/m_10.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "m_10": [0, 0, 1, 1]
            }
        },

        "images/world/wild/w_1.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "w_1": [0, 0, 1, 1]
            }
        },
        "images/world/wild/w_2.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "w_2": [0, 0, 1, 1]
            }
        },
        "images/world/wild/w_3.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "w_3": [0, 0, 1, 1]
            }
        },
        "images/world/wild/w_4.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "w_4": [0, 0, 1, 1]
            }
        },
        "images/world/wild/w_5.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "w_5": [0, 0, 1, 1]
            }
        },
        "images/world/wild/w_6.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "w_6": [0, 0, 1, 1]
            }
        },
        "images/world/wild/w_7.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "w_7": [0, 0, 1, 1]
            }
        },
        "images/world/wild/w_8.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "w_8": [0, 0, 1, 1]
            }
        },
        "images/world/wild/w_9.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "w_9": [0, 0, 1, 1]
            }
        },
        "images/world/wild/w_10.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "w_10": [0, 0, 1, 1]
            }
        },

        "images/animation/currentUnit.png": {
            "tile": 18,
            "tileh": 21,
            "map": {
                "arrow": [0, 0, 1, 1]
            }
        },
        "images/godGate/godGate.png": {
            "tile": 62,
            "tileh": 65,
            "map": {
                "godGateBtn": [0, 0, 1, 1]
            }
        },
        "images/animation/fireBtn.png": {
            "tile": 64,
            "tileh": 54,
            "map": {
                "fireBtn": [0, 1]
            }
        },

        "images/world/30.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "mnawrat": [0, 0, 1, 1]
            }
        },
        "images/world/front_squad.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "front_squad": [0, 0, 1, 1]
            }
        },
        "images/world/front_band.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "front_band": [0, 0, 1, 1]
            }
        },
        "images/world/front_squadron.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "front_squadron": [0, 0, 1, 1]
            }
        },
        "images/world/front_division.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "front_division": [0, 0, 1, 1]
            }
        },
        "images/world/armed_light_squad.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "armed_light_squad": [0, 0, 1, 1]
            }
        },
        "images/world/armed_light_band.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "armed_light_band": [0, 0, 1, 1]
            }
        },
        "images/world/armed_light_squadron.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "armed_light_squadron": [0, 0, 1, 1]
            }
        },
        "images/world/armed_light_division.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "armed_light_division": [0, 0, 1, 1]
            }
        },
        "images/world/armed_heavy_squad.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "armed_heavy_squad": [0, 0, 1, 1]
            }
        },
        "images/world/armed_heavy_band.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "armed_heavy_band": [0, 0, 1, 1]
            }
        },
        "images/world/armed_heavy_squadron.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "armed_heavy_squadron": [0, 0, 1, 1]
            }
        },
        "images/world/armed_heavy_division.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "armed_heavy_division": [0, 0, 1, 1]
            }
        },
        "images/world/guard_squad.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "guard_squad": [0, 0, 1, 1]
            }
        },
        "images/world/guard_band.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "guard_band": [0, 0, 1, 1]
            }
        },
        "images/world/guard_squadron.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "guard_squadron": [0, 0, 1, 1]
            }
        },
        "images/world/guard_division.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "guard_division": [0, 0, 1, 1]
            }
        },
        "images/world/brave_thunder.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "brave_thunder": [0, 0, 1, 1]
            }
        },
        "images/world/gang.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "gang": [0, 0, 1, 1]
            }
        },
        "images/world/mugger.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "mugger": [0, 0, 1, 1]
            }
        },
        "images/world/thief.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "thief": [0, 0, 1, 1]
            }
        },
        "images/world/carthage/gang.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "carthage_gang": [0, 0, 1, 1]
            }
        },
        "images/world/carthage/teams.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "carthage_teams": [0, 0, 1, 1]
            }
        },
        "images/world/carthage/rebels.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "carthage_rebels": [0, 0, 1, 1]
            }
        },
        "images/world/carthage/forces.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "carthage_forces": [0, 0, 1, 1]
            }
        },
        "images/world/carthage/capital.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "carthage_capital": [0, 0, 1, 1]
            }
        },
        "images/world/army-capital.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "army_capital": [0, 0, 1, 1]
            }
        },
        "images/world/queenCity_1.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "queenCity_1": [0, 0, 1, 1]
            }
        },
        "images/world/queenCity_2.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "queenCity_2": [0, 0, 1, 1]
            }
        },
        "images/world/queenCity_3.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "queenCity_3": [0, 0, 1, 1]
            }
        },

        "images/world/repleCastle_1.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "repleCastle_1": [0, 0, 1, 1]
            }
        },
        "images/world/repleCastle_2.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "repleCastle_2": [0, 0, 1, 1]
            }
        },
        "images/world/repleCastle_3.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "repleCastle_3": [0, 0, 1, 1]
            }
        },
        "images/world/wolf.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "wolfStatue": [0, 0, 1, 1]
            }
        },

        "images/world/arena.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "arena": [0, 0, 1, 1]
            }
        },
        'images/world/seaCity_1.png': {
            'tile': 0x180,
            'tileh': 0x180,
            'map': {
                'seaCity_1': [0x0, 0x0, 0x1, 0x1]
            }
        },
        'images/world/seaCity_2.png': {
            'tile': 0x180,
            'tileh': 0x180,
            'map': {
                'seaCity_2': [0x0, 0x0, 0x1, 0x1]
            }
        },
        'images/world/seaCity_3.png': {
            'tile': 0x180,
            'tileh': 0x180,
            'map': {
                'seaCity_3': [0x0, 0x0, 0x1, 0x1]
            }
        },
        'images/world/seaCity_4.png': {
            'tile': 0x180,
            'tileh': 0x180,
            'map': {
                'seaCity_4': [0x0, 0x0, 0x1, 0x1]
            }
        },
        'images/world/seaCity_5.png': {
            'tile': 0x180,
            'tileh': 0x180,
            'map': {
                'seaCity_5': [0x0, 0x0, 0x1, 0x1]
            }
        },
        'images/world/seaCity_6.png': {
            'tile': 0x180,
            'tileh': 0x180,
            'map': {
                'seaCity_6': [0x0, 0x0, 0x1, 0x1]
            }
        },
        'images/world/challangeFieldPlayer.png': {
            'tile': 0x180,
            'tileh': 0x180,
            'map': {
                'challangeFieldPlayer': [0x0, 0x0, 0x1, 0x1]
            }
        },
        'images/world/challangeFieldGuild.png': {
            'tile': 0x180,
            'tileh': 0x180,
            'map': {
                'challangeFieldGuild': [0x0, 0x0, 0x1, 0x1]
            }
        },
        'images/world/challangeFieldTeam.png': {
            'tile': 0x180,
            'tileh': 0x180,
            'map': {
                'challangeFieldTeam': [0x0, 0x0, 0x1, 0x1]
            }
        },
        'images/world/challangeFieldServer.png': {
            'tile': 0x180,
            'tileh': 0x180,
            'map': {
                'challangeFieldServer': [0x0, 0x0, 0x1, 0x1]
            }
        },
        'images/world/fightChallangePlayer.png': {
            'tile': 0x180,
            'tileh': 0x180,
            'map': {
                'fightChallangePlayer': [0x0, 0x0, 0x1, 0x1]
            }
        },
        'images/world/fightChallangeGuild.png': {
            'tile': 0x180,
            'tileh': 0x180,
            'map': {
                'fightChallangeGuild': [0x0, 0x0, 0x1, 0x1]
            }
        },
        'images/world/fightChallangeTeam.png': {
            'tile': 0x180,
            'tileh': 0x180,
            'map': {
                'fightChallangeTeam': [0x0, 0x0, 0x1, 0x1]
            }
        },
        'images/world/fightChallangeServer.png': {
            'tile': 0x180,
            'tileh': 0x180,
            'map': {
                'fightChallangeServer': [0x0, 0x0, 0x1, 0x1]
            }
        },
        "images/world/city_shield.png": {
            "tile": 128,
            "tileh": 128,
            "map": {
                "city_shield": [0, 0, 1, 1]
            }
        },
        "images/city/palace.png": {
            "tile": 256,
            "tileh": 162,
            "map": {
                "palace": [0, 0, 1, 1]
            }
        },
        "images/city/wall_0_.png": {
            "tile": 680,
            "tileh": 394,
            "map": {
                "wall_0": [0, 0, 1, 1]
            }
        },
        "images/city/wall_1_.png": {
            "tile": 680,
            "tileh": 394,
            "map": {
                "wall_1": [0, 0, 1, 1]
            }
        },
        "images/city/wall_2_.png": {
            "tile": 680,
            "tileh": 394,
            "map": {
                "wall_2": [0, 0, 1, 1]
            }
        },
        "images/city/wall_3_.png": {
            "tile": 680,
            "tileh": 394,
            "map": {
                "wall_3": [0, 0, 1, 1]
            }
        },
        "images/city/wall_4_.png": {
            "tile": 680,
            "tileh": 394,
            "map": {
                "wall_4": [0, 0, 1, 1]
            }
        },
        "images/city/_seaport.png": {
            "tile": 518,
            "tileh": 285,
            "map": {
                "seaport": [0, 0, 1, 1]
            }
        },
        "images/city/_market.png": {
            "tile": 256,
            "tileh": 256,
            "map": {
                "market": [0, 0, 1, 1]
            }
        },
        "images/city/_farm.png": {
            "tile": 350,
            "tileh": 206,
            "map": {
                "farm": [0, 0, 1, 1]
            }
        },
        "images/city/_mine.png": {
            "tile": 412,
            "tileh": 243,
            "map": {
                "mine": [0, 0, 1, 1]
            }
        },
        "images/city/_mahger.png": {
            "tile": 412,
            "tileh": 243,
            "map": {
                "mahger": [0, 0, 1, 1]
            }
        },
        "images/city/_wood_maker.png": {
            "tile": 192,
            "tileh": 128,
            "map": {
                "wood_maker": [0, 0, 1, 1]
            }
        },
        "images/city/_lighthouse.png": {
            "tile": 160,
            "tileh": 353,
            "map": {
                "lighthouse": [0, 0, 1, 1]
            }
        },
        "images/city/_B1.png": { // 
            "tile": 160,
            "tileh": 120,
            "map": {
                "B1": [0, 0, 1, 1]
            }
        },
        "images/city/_B2.png": { // 
            "tile": 160,
            "tileh": 120,
            "map": {
                "B2": [0, 0, 1, 1]
            }
        },
        "images/city/_B3.png": { // 
            "tile": 160,
            "tileh": 120,
            "map": {
                "B3": [0, 0, 1, 1]
            }
        },
        "images/city/_B4.png": { // 
            "tile": 160,
            "tileh": 120,
            "map": {
                "B4": [0, 0, 1, 1]
            }
        },
        "images/city/_B5.png": { // 
            "tile": 160,
            "tileh": 120,
            "map": {
                "B5": [0, 0, 1, 1]
            }
        },
        "images/city/_B6.png": { // 
            "tile": 160,
            "tileh": 120,
            "map": {
                "B6": [0, 0, 1, 1]
            }
        },
        "images/city/_B7.png": { // 
            "tile": 192,
            "tileh": 192,
            "map": {
                "B7": [0, 0, 1, 1]
            }
        },
        "images/city/_B8.png": { // 
            "tile": 160,
            "tileh": 120,
            "map": {
                "B8": [0, 0, 1, 1]
            }
        },
        "images/city/_B9.png": { // 
            "tile": 160,
            "tileh": 120,
            "map": {
                "B9": [0, 0, 1, 1]
            }
        },
        "images/city/_B10.png": { // 
            "tile": 160,
            "tileh": 120,
            "map": {
                "B10": [0, 0, 1, 1]
            }
        },
        "images/city/_B11.png": { // 
            "tile": 160,
            "tileh": 120,
            "map": {
                "B11": [0, 0, 1, 1]
            }
        },
        "images/city/no_building.png": {
            "tile": 160,
            "tileh": 120,
            "map": {
                "no_building": [0, 0, 1, 1]
            }
        },

        "images/city/city_floor.jpg": {
            "tile": 2500,
            "tileh": 1400,
            "map": {
                "city_floor": [0, 0, 1, 1]
            }
        },
        "images/animation/upgrading_hammer.png": {
            // This is the width of each image in pixels
            tile: 161.3,
            // The height of each image
            tileh: 120,
            // We give names to three individual images
            map: {
                hammer_start: [0, 0],
                hammer_end: [8, 0]
            }
        },
        "images/animation/fountain.png": {
            // This is the width of each image in pixels
            tile: 40,
            // The height of each image
            tileh: 32,
            // We give names to three individual images
            map: {
                fountain: [0, 0]
            }
        },
        "images/animation/wood_maker.png": {
            // This is the width of each image in pixels
            tile: 90.35,
            // The height of each image
            tileh: 64,
            // We give names to three individual images
            map: {
                ani_wood_maker: [0, 0]
            }
        },
        "images/animation/wood_man.png": {
            // This is the width of each image in pixels
            tile: 58,
            // The height of each image
            tileh: 58,
            // We give names to three individual images
            map: {
                ani_wood_man: [0, 0]
            }
        },
        "images/animation/mine_man.png": {
            // This is the width of each image in pixels
            tile: 58,
            // The height of each image
            tileh: 58,
            // We give names to three individual images
            map: {
                mine_man: [0, 0]
            }
        },
        "images/animation/stone_man.png": {
            // This is the width of each image in pixels
            tile: 58,
            // The height of each image
            tileh: 58,
            // We give names to three individual images
            map: {
                stone_man: [0, 0]
            }
        },
        "images/animation/stone_carry.png": {
            // This is the width of each image in pixels
            tile: 58,
            // The height of each image
            tileh: 58,
            // We give names to three individual images
            map: {
                stone_carry: [0, 0]
            }
        },
        "images/animation/no_carry.png": {
            // This is the width of each image in pixels
            tile: 58,
            // The height of each image
            tileh: 58,
            // We give names to three individual images
            map: {
                no_carry: [0, 0]
            }
        },
        "images/animation/attack_fire.png": {
            // This is the width of each image in pixels
            tile: 42,
            // The height of each image
            tileh: 63,
            // We give names to three individual images
            map: {
                fire_start: [0, 0],
                fire_end: [7, 0]
            }
        },
        "images/animation/flags.png": {
            // This is the width of each image in pixels
            tile: 34,
            // The height of each image
            tileh: 24,
            // We give names to three individual images
            map: {
                flag_over_city: [0, 0]
            }
        },
        "images/animation/cloud.png": {
            // This is the width of each image in pixels
            tile: 150,
            // The height of each image
            tileh: 150,
            // We give names to three individual images
            map: {
                cloud: [0, 0]
            }
        },
        "images/world/unit_floor.png": {
            // This is the width of each image in pixels
            tile: 128,
            // The height of each image
            tileh: 96,
            // We give names to three individual images
            map: {
                unit_floor: [0, 0],
            }

        }

    },
    "audio": {
        "war_sound": "sounds/war_sound.mp3",
        "upgrade_done": "sounds/upgrade_done.mp3",
        "bird_sound": "sounds/bird_sound.mp3",
        "click_sound": "sounds/click_sound.mp3",
        "close_sound": "sounds/door_close.mp3"
    },
    'images': [
        'images/style/matrail_bg.png',
        'images/style/head_bar.png',
        'images/background/profile_name.png',
        'images/world/smallMap.jpg',
        'images/background/bar_L.png',
        'images/icons/header_resources4.png',
        'images/background/bg_lvl.png',
        'images/style/attack.png',
        'images/style/defense.png',
        'images/style/sp.jpg', 'images/icon-menu/1_h.png',
        'images/icon-menu/1_n.png', 'images/icon-menu/2_h.png',
        'images/icon-menu/2_n.png', 'images/icon-menu/3_h.png',
        'images/icon-menu/3_n.png', 'images/icon-menu/4_h.png',
        'images/icon-menu/4_n.png', 'images/icon-menu/5_h.png',
        'images/icon-menu/5_n.png', 'images/icon-menu/6_h.png',
        'images/icon-menu/6_n.png', 'images/icon-menu/7_h.png',
        'images/icon-menu/7_n.png', 'images/background/alert_box.png',
        'images/background/frame.png', 'images/btns/building/upgrade.png',
        'images/btns/building/upgrade-a.png', 'images/btns/building/upgrade-h.png',
        'images/btns/global/full-btn-1x.png', 'images/btns/global/full-btn-1x-a.png',
        'images/btns/global/full-btn-1x-h.png', 'images/btns/global/full-btn-2x.png',
        'images/btns/global/full-btn-a-2x.png', 'images/btns/global/full-btn-h-2x.png',
        'images/btn-small/speed-up.png', 'images/btn-small/speed-up-active.png',
        'images/btn-small/speed-up-hover.png', 'images/skins/palace.png',
        'images/skins/desc-rect.png', 'images/skins/table-rect.png',
        'images/tools/luck_wheel.png', 'images/tools/image-frame.png',
        'images/tools/gete-left.png', 'images/tools/gate-right.png',
        'images/tools/gate-left-lion.png', 'images/tools/gate-right-lion.png',
        'images/tools/title-red.png', 'images/tools/title-background.png'
    ]


};


game.BaseData.Promotion = [{
        Title: "مواطن"
    },
    {
        Title: "عريف"
    },
    {
        Title: "رقيب"
    },
    {
        Title: "قسطور"
    },
    {
        Title: "قسطور اعلى"
    },
    {
        Title: "نائب"
    },
    {
        Title: "قاضى"
    },
    {
        Title: "موفد"
    },
    {
        Title: "ديكتاتور"
    },
    {
        Title: "قائد الفيلق الخامس"
    },
    {
        Title: "قائد الفيلق الرابع"
    },
    {
        Title: "قائد الفيلق الثالث"
    },
    {
        Title: "قائد الفيلق الثانى"
    },
    {
        Title: "قائد الفيلق الاول"
    },
    {
        Title: "لواء"
    },
    {
        Title: "فريق"
    },
    {
        Title: "فريق درجة 1"
    },
    {
        Title: "فريق درجة 2"
    },
    {
        Title: "فريق درجة 3"
    },
    {
        Title: "مارشال"
    },
    {
        Title: "رقيب درجة 9"
    },
    {
        Title: "رقيب درجة 8"
    },
    {
        Title: "رقيب درجة 7"
    },
    {
        Title: "رقيب درجة 6"
    },
    {
        Title: "رقيب درجة 5"
    },
    {
        Title: "رقيب درجة 4"
    },
    {
        Title: "رقيب درجة 3"
    },
    {
        Title: "رقيب درجة 2"
    },
    {
        Title: "رقيب درجة 1"
    },
    {
        Title: "قيصر"
    }
];


game.BaseData.Building = {};


game.BaseData.HeroAvatar = [
    "images/hero/faceA1.jpg",
    "images/hero/faceA2.jpg",
    "images/hero/faceA3.jpg",
    "images/hero/faceA4.jpg",
    "images/hero/faceA5.jpg",
    "images/hero/faceA6.jpg",
    "images/hero/faceA7.jpg",
    "images/hero/faceA8.jpg",
    "images/hero/faceA9.jpg",
    "images/hero/faceA10.jpg",
    "images/hero/faceB1.jpg",
    "images/hero/faceB2.jpg",
    "images/hero/faceB3.jpg",
    "images/hero/faceB4.jpg",
    "images/hero/faceB5.jpg",
    "images/hero/faceB6.jpg",
    "images/hero/faceB7.jpg",
    "images/hero/faceB8.jpg",
    "images/hero/faceB9.jpg",
    "images/hero/faceB9.jpg"
];


const BUILDING_TYPS = {
    SPACE: 0, // 
    COTTAGE: 1, //
    STORE: 2, //
    BARRACKS: 3, //
    STABL: 4, //
    WORKSHOP: 5, //
    THEATER: 6, //
    STATION: 7, //
    UNIVERSITY: 8, //
    ACADEMY: 9, //
    WORSHIP: 10, //
    HOSPITAL: 11, //
    PALACE: 12, //
    WALL: 13, //
    MARKET: 14, //
    WOOD: 15, //
    FARM: 16, //
    MINE: 17, //
    STONE: 18, //
    SEAPORT: 19, //
    LIGHTHOUSE: 20 //
};

game.BaseData.Items = {};



$(document).on("PlayerReady", "html", function() {


    $.ajax({
        url: `${API_URL}/js${game.Config.JsVersion}/json/ItemLang/${game.Config.UserLang}.json`,
        success: function(Items, textStatus, jqXHR) {
            $.ajax({
                url: API_URL + "/js" + game.Config.JsVersion + "/json/itemBase.json",
                success: function(ItemBase, textStatus, jqXHR) {
                    $.ajax({
                        url: `${API_URL}/api/AItem/getAllItemPrice`,
                        data: {
                            token: game.Config.OuthToken,
                            server: game.Config.idServer
                        },
                        success: function(ItemPrize, textStatus, jqXHR) {
                            if (!game.LBase.isJson(ItemPrize))
                                return game.LBase.Error(ItemPrize);
                            var ItemArr = JSON.parse(ItemPrize);

                            for (var iii in ItemArr) {
                                if (Items[ItemArr[iii].id_item])
                                    Items[ItemArr[iii].id_item].gold = ItemArr[iii].gold;

                            }

                            game.BaseData.Items = Items;
                            Player_profile.refreshMatrialBox();

                            game.Item.useItemFunc();
                            game.Item.useItemBoxFunc();
                            game.Item.useArmyBackFunc();
                        }
                    });


                }
            });

        }
    });


});

game.BaseData.HeroToCity = {
    "0": 0,
    "1": "army_a",
    "2": "army_b",
    "3": "army_c",
    "4": "army_d",
    "5": "army_e",
    "6": "army_f"
};

game.BaseData.ArmyPower = {
    0: {
        "attack": 0,
        "def": 0,
        "vit": 0,
        "dam": 0,
        "break": 0,
        "anti_break": 0,
        "strike": 0,
        "immunity": 0,
        "res_cap": 0
    },
    "army_a": {
        "attack": 8,
        "def": 8,
        "vit": 60,
        "dam": 3,
        "break": 1,
        "anti_break": 1,
        "strike": 3,
        "immunity": 1,
        "res_cap": 100
    },
    "army_b": {
        "attack": 30,
        "def": 20,
        "vit": 250,
        "dam": 35,
        "break": 5,
        "anti_break": 2,
        "strike": 2,
        "immunity": 2,
        "res_cap": 200
    },
    "army_c": {
        "attack": 25,
        "def": 30,
        "vit": 400,
        "dam": 40,
        "break": 10,
        "anti_break": 10,
        "strike": 10,
        "immunity": 10,
        "res_cap": 220
    },
    "army_d": {
        "attack": 9,
        "def": 5,
        "vit": 45,
        "dam": 3,
        "break": 1,
        "anti_break": 1,
        "strike": 4,
        "immunity": 1,
        "res_cap": 75
    },
    "army_e": {
        "attack": 19,
        "def": 25,
        "vit": 100,
        "dam": 19,
        "break": 2,
        "anti_break": 2,
        "strike": 12,
        "immunity": 2,
        "res_cap": 35
    },
    "army_f": {
        "attack": 40,
        "def": 20,
        "vit": 600,
        "dam": 70,
        "break": 12,
        "anti_break": 10,
        "strike": 10,
        "immunity": 10,
        "res_cap": 75
    },
    "spies": {
        "attack": 0,
        "def": 0,
        "vit": 0,
        "dam": 0,
        "break": 0,
        "anti_break": 0,
        "strike": 0,
        "immunity": 0,
        "res_cap": 75
    },
    "wall_a": {
        "attack": 20,
        "def": 10,
        "vit": 300,
        "dam": 10,
        "break": 5,
        "anti_break": 4,
        "strike": 15,
        "immunity": 5,
        "res_cap": 75
    },
    "wall_b": {
        "attack": 19,
        "def": 25,
        "vit": 400,
        "dam": 35,
        "break": 5,
        "anti_break": 4,
        "strike": 15,
        "immunity": 5,
        "res_cap": 75
    },
    "wall_c": {
        "attack": 40,
        "def": 20,
        "vit": 600,
        "dam": 70,
        "break": 5,
        "anti_break": 4,
        "strike": 15,
        "immunity": 5,
        "res_cap": 75
    }
};

game.BaseData.Army = {
    "0": {
        food: 0,
        wood: 0,
        stone: 0,
        metal: 0,
        coin: 0,
        people: 0,
        time: 0,
        condetion: [

        ],
        ar_title: "جواسيس",
        image: "images/tech/no_army.png",
        desc: `الفرسا اسرع الفرسان مش عارف اى 
                                    ليس على كل لاعب الالتذام بذالك `,
        vit: 0,
        attack: 0,
        defence: 0,
        damage: 0,
        "break": 0,
        anti_break: 0,
        strike: 0,
        immunity: 0,
        eating: 0,
        speed: 0,
        capacity: 0,
        dismess: {
            food: 0,
            wood: 0,
            stone: 0,
            metal: 0
        }
    },
    "spies": { // جواسيس
        food: 600,
        wood: 150,
        stone: 0,
        metal: 350,
        coin: 90,
        people: 1,
        time: 60,
        condetion: {
            place: BUILDING_TYPS.STABL,
            place_lvl: 1,
            study: "riding",
            lvl: 1
        },
        ar_title: "جواسيس",
        image: "images/items/item027.jpg",
        desc: `كانت الجواسيس هى سلاح الاستخبارت فى العصور الوسطى و كانت اهميتها تكمن فى جب الاخبار من المدن الاخرى 
            ولكن لا يمكنك الوثوق بهذه المعلومات بسسب قلة كفائة الجواسيس لديك`,
        vit: 80,
        attack: 10,
        defence: 12,
        damage: "6-9",
        "break": 0,
        anti_break: 0,
        strike: 0,
        immunity: 0,
        eating: 6,
        speed: 200,
        capacity: 1,
        dismess: {
            food: 180,
            wood: 45,
            stone: 0,
            metal: 105
        }
    },
    "army_a": { // مشاه
        food: 150,
        wood: 500,
        stone: 0,
        metal: 100,
        coin: 18,
        people: 1,
        time: 50,
        condetion: {
            place: BUILDING_TYPS.BARRACKS,
            place_lvl: 1,
            study: 'infantry',
            lvl: 1
        },
        ar_title: "مشاه",
        image: "images/tech/soldier01.jpg",
        desc: `اكثر انواع الجيوش استعمالا اثناء الامبراطورية الرومانية 
                وذلك بسسب سهولة تدريبها  وتسليحها وتكمن قوتها  فى  الاسرار الحربية لديها`,
        vit: 60,
        attack: 8,
        defence: 8,
        damage: "3-6",
        "break": 1,
        anti_break: 1,
        strike: 3,
        immunity: 2,
        eating: 4,
        speed: 300,
        capacity: 40,
        dismess: {
            food: 45,
            wood: 150,
            stone: 0,
            metal: 30
        }
    },
    "army_b": { // اسطبل
        food: 1500,
        wood: 800,
        stone: 0,
        metal: 750,
        coin: 500,
        people: 3,
        time: 300,
        condetion: {
            place: BUILDING_TYPS.STABL,
            place_lvl: 5,
            study: "riding",
            lvl: 3
        },
        ar_title: "فرسان",
        image: "images/tech/soldier02.jpg",
        desc: `سلاح الفرسان هو نموذج الفارس الممتاز في الجيش الروماني من حيث تسليحه عالي المستوى. يخيف هجوم سلاح الفرسان الخصم غير المستعدّ على الرغم من أنهم ليسوا أسرع القوات. مشكلتهم تكلفة صيانتهم لما يتوجب على من يدرّبهم من رصدٍ لطعام الفارس وفرسه.`,
        vit: 250,
        attack: 30,
        defence: 20,
        damage: "33-38",
        "break": 10,
        anti_break: 4,
        strike: 1,
        immunity: 2,
        eating: 18,
        speed: 900,
        capacity: 100,
        dismess: {
            food: 450,
            wood: 240,
            stone: 0,
            metal: 225
        }
    },
    "army_c": { // مدرعين
        food: 2000,
        wood: 500,
        stone: 0,
        metal: 2500,
        coin: 600,
        people: 6,
        time: 500,
        condetion: {
            place: BUILDING_TYPS.BARRACKS,
            place_lvl: 9,
            study: 'infantry',
            lvl: 6
        },
        ar_title: "مدرعين",
        image: "images/tech/soldier03.jpg",
        desc: `المدرعين هم اساس القوات الرومانية بتسليحهم المعقد وتدريباتهم المكثفة يمكن الاعتبار انها من اقوى انواع الجيوش
            يستغرق تدريب الابطال كمية كبيرة كدا من الوقت وذلك بسبب الالتزام لصنع اقوى الابطال`,
        vit: 400,
        attack: 25,
        defence: 30,
        damage: "40-60",
        "break": 10,
        anti_break: 5,
        strike: 10,
        immunity: 5,
        eating: 36,
        speed: 600,
        capacity: 120,
        dismess: {
            food: 600,
            wood: 150,
            stone: 0,
            metal: 750
        }
    },
    "army_d": { // رماه
        food: 300,
        wood: 350,
        stone: 0,
        metal: 300,
        coin: 30,
        people: 1,
        time: 120,
        condetion: {
            place: BUILDING_TYPS.BARRACKS,
            place_lvl: 2,
            study: 'infantry',
            lvl: 2
        },
        ar_title: "رماه",
        image: "images/tech/soldier04.jpg",
        desc: `رماة السهم او  النبالين كانوا زمرة الجيش الرومانى.
                يمكنك الاعتماد عليهم فى الهجوم اما  بالنسبة الى الى الدفاع فلا يمكن ابدا الاعتماد عليهم.
                بسبب ضعف البنية الجسمانية لديهم ولكن يمكن لهذة القوات تنفيذ العديد من الاصابات البالغة  للاعداء`,
        vit: 45,
        attack: 9,
        defence: 5,
        damage: "3-5",
        "break": 2,
        anti_break: 2,
        strike: 3,
        immunity: 2,
        eating: 5,
        speed: 250,
        capacity: 25,
        dismess: {
            food: 90,
            wood: 105,
            stone: 0,
            metal: 90
        }
    },
    "army_e": { // مقاليع
        food: 1000,
        wood: 1200,
        stone: 0,
        metal: 800,
        coin: 120,
        people: 4,
        time: 180,
        condetion: {
            place: BUILDING_TYPS.WORKSHOP,
            place_lvl: 3,
            study: 'army',
            lvl: 1
        },
        ar_title: "مقاليع",
        image: "images/tech/soldier05.jpg",
        desc: `كانت العصور الرومانية عصور ازدهار هندسى ومعمارى .
                احد الأدلة على ذلك هو  سلاح المقاليع لدى الجيوش الرمانية .
                يلحق هذا النوع ضرر كبير جدا  بالاعداء  مهما كانت قوتهم ويشتت جمعهم`,
        vit: 100,
        attack: 19,
        defence: 25,
        damage: "18-20",
        "break": 5,
        anti_break: 2,
        strike: 15,
        immunity: 8,
        eating: 20,
        speed: 150,
        capacity: 35,
        dismess: {
            food: 300,
            wood: 360,
            stone: 0,
            metal: 240
        }
    },
    "army_f": { // منجنيق
        food: 3000,
        wood: 3000,
        stone: 6000,
        metal: 1200,
        coin: 450,
        time: 1000,
        people: 8,
        condetion: {
            place: BUILDING_TYPS.WORKSHOP,
            place_lvl: 7,
            study: 'army',
            lvl: 6
        },
        ar_title: "منجنيق",
        image: "images/tech/soldier06.jpg",
        desc: `اقوى  انوع القوات على الاطلاق .
                لا شك فى ذلك حيث ان هذه القوات مسؤلة عن هدم الاسوار والمبانى الشاهقة.
                فليس من الصعب عليها سحق  الاعداء`,
        vit: 600,
        attack: 40,
        defence: 20,
        damage: "70-70",
        "break": 15,
        anti_break: 4,
        strike: 5,
        immunity: 15,
        eating: 150,
        speed: 100,
        capacity: 75,
        dismess: {
            food: 900,
            wood: 900,
            stone: 1800,
            metal: 360
        }
    },
    "wall_a": { //كمائن
        food: 50,
        wood: 500,
        stone: 100,
        metal: 50,
        coin: 0,
        time: 60,
        people: 0,
        condetion: {
            place: BUILDING_TYPS.WALL,
            place_lvl: 1,
            study: "safe",
            lvl: 1
        },
        ar_title: "كمائن",
        image: "images/tech/defense01.jpg",
        desc: `يتم دس الكمائن داخ السور لعرقلة الاعداء.
                ولكن لا يمكن الاعتماد عليها  فى صد الهجمات`,
        vit: 0,
        attack: 0,
        defence: 0,
        damage: "0-0",
        "break": 0,
        anti_break: 0,
        strike: 0,
        immunity: 0,
        eating: 0,
        speed: 0,
        capacity: 0,
        dismess: {
            food: 15,
            wood: 150,
            stone: 30,
            metal: 15
        },
        wall_space: 1

    },
    "wall_b": { // ابراج
        food: 200,
        wood: 2000,
        stone: 1000,
        metal: 500,
        coin: 0,
        people: 0,
        time: 180,
        condetion: {
            place: BUILDING_TYPS.WALL,
            place_lvl: 3,
            study: "safe",
            lvl: 2
        },
        ar_title: "ابراج",
        image: "images/tech/defense02.jpg",
        desc: `لا تنحصر وظيفة الابراج فى الرقابة على المدن, 
            ولكن تلعب دور هام فى الدفاع عن المدينة عند الهجوم عليها.
            تتميز الابراج بارتفاعتها الشاهقة مما يجعل منها افضلية هجومية ودفاعية ايضا`,
        vit: 200,
        attack: 18,
        defence: 15,
        damage: "12-15",
        "break": 0,
        anti_break: 0,
        strike: 0,
        immunity: 0,
        eating: 0,
        speed: 0,
        capacity: 0,
        dismess: {
            food: 60,
            wood: 600,
            stone: 300,
            metal: 150
        },
        wall_space: 3
    },
    "wall_c": { // احجار  متساقطة
        food: 600,
        wood: 0,
        stone: 8000,
        metal: 0,
        coin: 0,
        time: 600,
        people: 0,
        condetion: {
            place: BUILDING_TYPS.WALL,
            place_lvl: 5,
            study: "safe",
            lvl: 6
        },
        ar_title: "احجار متساقطة",
        image: "images/tech/defense03.jpg",
        desc: `الاحجار المتساقطة من اقوى الاسلحة الدفاعية للمدينة .
                يمكن الاعتماد عليها بالحاق الضرر الجسيم للمعتدى`,
        vit: 0,
        attack: 0,
        defence: 40,
        damage: "40-60",
        "break": 0,
        anti_break: 0,
        strike: 0,
        immunity: 0,
        eating: 0,
        speed: 0,
        capacity: 0,
        dismess: {
            food: 180,
            wood: 0,
            stone: 2400,
            metal: 0
        },
        wall_space: 5
    }

};


game.BaseData.PlayerStateData = {

    motiv: {
        image: "images/icons/list/motiv.jpg",
        title: "خطبة تحفيزية",
        ar_title: "",
        en_title: ""
    },
    medical: {
        image: "images/icons/list/medical.png",
        title: "تمثال الشفاء",
        ar_title: "",
        en_title: ""
    },
    wheat: {
        image: "images/icons/list/wheat.png",
        title: "انتاح الغذاء",
        ar_title: "",
        en_title: ""
    },
    metal: {
        image: "images/icons/list/metal.png",
        title: "زبادة انتاج الحديد",
        ar_title: "",
        en_title: ""
    },
    stone: {
        image: "images/icons/list/stone.png",
        title: "زبادة انتاج الصخور",
        ar_title: "",
        en_title: ""
    },
    wood: {
        image: "images/icons/list/wood.png",
        title: "زبادة انتاج الاخشاب",
        ar_title: "",
        en_title: ""
    },
    attack_10: {
        image: "images/icons/list/attack.png",
        title: "زبادة نسبة الهجوم",
        ar_title: "",
        en_title: ""
    },
    defence_10: {
        image: "images/icons/list/deff.png",
        title: "زبادة نسبة الدفاع",
        ar_title: "",
        en_title: ""
    },
    peace: {
        image: "images/icons/list/peace.png",
        title: " الحماية",
        ar_title: "",
        en_title: ""
    },
    silance: {
        image: "images/icons/list/silance.png",
        title: "الصمت",
        ar_title: "",
        en_title: ""
    }

};

game.BaseData.Edu = {
    "farming": {
        ar_title: "علم الزراعة",
        image: "images/tech/technology01.jpg",
        StudyPlace: "uni",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "الحقل مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.FARM,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الجامعة مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.UNIVERSITY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }


            return condtions;
        }
    },
    "wooding": {
        ar_title: "علم الاخشاب",
        image: "images/tech/technology02.jpg",
        StudyPlace: "uni",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "الغابات مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.WOOD,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الجامعة مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.UNIVERSITY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }



            return condtions;
        }
    },
    "stoning": {
        ar_title: " علم الاحجار",
        image: "images/tech/technology03.jpg",
        StudyPlace: "uni",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "المحجر مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.STONE,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الجامعة مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.UNIVERSITY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }



            return condtions;
        }
    },
    "mining": {
        ar_title: "علم التعدين",
        image: "images/tech/technology04.jpg",
        StudyPlace: "uni",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "المنجم مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.MINE,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الجامعة مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.UNIVERSITY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }



            return condtions;
        }
    },
    "accounting": {
        ar_title: "المحاسبة",
        image: "images/tech/technology05.jpg",
        StudyPlace: "uni",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "دار المساعدة مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.WORSHIP,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الجامعة مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.UNIVERSITY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }

            return condtions;
        }
    },
    "storing": {
        ar_title: "علم التخزين",
        image: "images/tech/technology06.jpg",
        StudyPlace: "uni",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "المخازن مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.STORE,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الجامعة مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.UNIVERSITY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }

            return condtions;
        }
    },
    "building": {
        ar_title: "الهندسة المعمارية",
        image: "images/tech/technology07.jpg",
        StudyPlace: "uni",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "السور مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.WALL,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الجامعة مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.UNIVERSITY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }

            return condtions;
        }
    },
    "scholership": {
        ar_title: "المنح الدراسية",
        image: "images/tech/technology08.jpg",
        StudyPlace: "uni",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "المسرح مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.THEATER,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الجامعة مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.UNIVERSITY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }



            return condtions;
        }
    },
    "maintenace": {
        ar_title: "علم الصيانة",
        image: "images/tech/technology09.jpg",
        StudyPlace: "uni",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "السور مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.WALL,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الجامعة مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.UNIVERSITY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }

            return condtions;
        }
    },
    "infantry": {
        ar_title: "المشاة",
        image: "images/tech/technology11.jpg",
        StudyPlace: "acad",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "الثكنات مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.BARRACKS,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الاكاديمية مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.ACADEMY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }

            return condtions;
        }
    },
    "riding": {
        ar_title: "الفروسية",
        image: "images/tech/technology12.jpg",
        StudyPlace: "acad",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "الاسطبل مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.STABL,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الاكاديمية مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.ACADEMY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }
            return condtions;
        }
    },
    "army": {
        ar_title: "الجيش",
        image: "images/tech/technology13.jpg",
        StudyPlace: "acad",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "ورشة العمل  مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.WORKSHOP,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الاكاديمية مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.ACADEMY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }
            return condtions;
        }
    },
    "spying": {
        ar_title: "الاستخبارات",
        image: "images/tech/technology14.jpg",
        StudyPlace: "acad",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "الاسطبل مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.STABL,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الاكاديمية مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.ACADEMY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }
            return condtions;
        }
    },
    "leader": {
        ar_title: "القيادة",
        image: "images/tech/technology15.jpg",
        StudyPlace: "acad",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "المسرح مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.THEATER,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الاكاديمية مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.ACADEMY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }
            return condtions;
        }
    },
    "safe": {
        ar_title: "الامن",
        image: "images/tech/technology16.jpg",
        StudyPlace: "acad",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "البلازا  مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.HOSPITAL,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الاكاديمية مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.ACADEMY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }
            return condtions;
        }
    },
    "medicine": {
        ar_title: "الطب",
        image: "images/tech/technology17.jpg",
        StudyPlace: "acad",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "البلازا مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.HOSPITAL,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الاكاديمية مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.ACADEMY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }
            return condtions;
        }
    },
    "logistic": {
        ar_title: "الدعم اللوجستى",
        image: "images/tech/technology18.jpg",
        StudyPlace: "acad",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "البلازا  مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.HOSPITAL,
                building_lvl: Math.max(1, lvl)
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }
            return condtions;
        }
    },
    "navigating": {
        ar_title: "الملاحة",
        image: "images/tech/technology19.jpg",
        StudyPlace: "acad",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "البلازا  مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.HOSPITAL,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الاكاديمية مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.ACADEMY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }
            return condtions;
        }
    },
    "supplying": {
        ar_title: "الامداد",
        image: "images/tech/technology20.jpg",
        StudyPlace: "acad",
        getCondetion: function(lvl) {
            var condtions = [];
            condtions[0] = {
                title: "البلازا مستوى " + getArabicNumbers(Math.max(1, lvl)),
                con_type: "building",
                building_type: BUILDING_TYPS.HOSPITAL,
                building_lvl: Math.max(1, lvl)
            };
            condtions[1] = {
                title: "الاكاديمية مستوى " + getArabicNumbers(Number(lvl) + 1),
                con_type: "building",
                building_type: BUILDING_TYPS.ACADEMY,
                building_lvl: Number(lvl) + 1
            };
            if (lvl >= 25) {
                condtions[2] = {
                    title: `1 x قانون رومانى`,
                    con_type: "matrial",
                    matrial: "law_3",
                    amount: 1
                };
            } else if (lvl >= 20) {

                condtions[2] = {
                    title: `1 x جدول الثانى عشر`,
                    con_type: "matrial",
                    matrial: "law_2",
                    amount: 1
                };

            } else if (lvl >= 10) {

                condtions[2] = {
                    title: ` 1 x  قانون دراكو`,
                    con_type: "matrial",
                    matrial: "law_1",
                    amount: 1
                };

            }
            return condtions;
        }
    }
};


game.BaseData.HeroTheaterName = [
    "ماكسيموس",
    "اشرف",
    "مصطفى",
    "اليكس",
    "اليسا",
    "بطليموس",
    "كليوباترا",
    "هكس",
    "ماجد",
    "يويليوس",
    "مارس",
    "ماكس",
    "صلاح الدين",
    "سيورس",
    "سيزار",
    "اغسطس",
    "جلادياتور",
    "سما",
    "زين",
    "شادو",
    "الملك",
    "القاهر",
    "الاسد",
    "اليس",
    "حورس",
    "يورك"
];

game.BaseData.BattelTasks = {
    BATTEL_TASK_OPEN_BATTEL_FIELD: -1,
    BATTEL_TASK_CONQUER: 0,
    BATTEL_TASK_DOMINATE: 1,
    BATTEL_TASK_JOIN_ATT: 2,
    BATTEL_TASK_JOIN_DEF: 3,
    BATTEL_TASK_SPY: 4,
    BATTEL_TASK_SUPPORT: 5,
    BATTEL_TASK_HERO_TRANS: 6,
    BATTEL_TASK_SUPPLY: 7,
    BATTEL_TASK_ENTER_CITY: 8,
    BATTEL_TASK_CHALLANGE: 10
};


game.BaseData.BattelTaskData = {
    [game['BaseData']['BattelTasks']['BATTEL_TASK_CONQUER']]: {
        'Title': 'غزو'
    },
    [game['BaseData']['BattelTasks']['BATTEL_TASK_DOMINATE']]: {
        'Title': 'استيلاء'
    },
    [game['BaseData']['BattelTasks']['BATTEL_TASK_JOIN_ATT']]: {
        'Title': 'انضمام للهجوم '
    },
    [game['BaseData']['BattelTasks']['BATTEL_TASK_JOIN_DEF']]: {
        'Title': 'انضمام للدفاع'
    },
    [game['BaseData']['BattelTasks']['BATTEL_TASK_SPY']]: {
        'Title': 'تجسس'
    },
    [game['BaseData']['BattelTasks']['BATTEL_TASK_SUPPORT']]: {
        'Title': 'امداد'
    },
    [game['BaseData']['BattelTasks']['BATTEL_TASK_HERO_TRANS']]: {
        'Title': 'نقل'
    }
};
game.BaseData.BattelSides = {
    'SideAttack': 1,
    'SideDefence': 0
};

game.BaseData.Building.UpgradeBinfit = {};

game.BaseData.Building.UpgradeBinfit[BUILDING_TYPS.STORE] = [
    8e4, 16e4, 32e4, 64e4, 128e4, 256e4, 512e4, 1024e4, 2048e4, 4096e4,
    49152e3, 51200e3, 53248e3, 55296e3, 57344e3, 59392e3, 6144e4, 63488e3, 65536e3, 67584e3,
    69632e3, 7168e4, 73728e3, 75776e3, 77824e3, 79872e3, 8192e4, 83968e3, 86016e3, 88064e3
];

game['BaseData']['Building']['UpgradeBinfit'][BUILDING_TYPS['COTTAGE']] = [0x64, 0xfa, 0x1f4, 0x2ee, 0x3e8, 0x5dc, 0x7d0, 0xabe, 0xdac, 0x1194, 0x1518, 0x15f9, 0x16da, 0x17bb,
        0x189c, 0x197d, 0x1a5e, 0x1b3f, 0x1c20, 0x1d01, 0x1de2, 0x1ec3, 0x1fa4, 0x2085, 0x2166, 0x2247, 0x2328,
        0x2409, 0x24ea, 0x25cb
    ],
    game.BaseData.RankIcon = [
        'images/number/1st.png', 'images/number/2nd.png',
        'images/number/3rd.png', 'images/number/4th.png',
        'images/number/5th.png'
    ];
game.BaseData.GuildRelation = {
    'RelationAllay': 0,
    'RelationEnemy': 1,
    'RelationFriend': 2
};
game.BaseData.GuildRelationTitle = {
    [game.BaseData.GuildRelation.RelationAllay]: 'محايد',
    [game.BaseData.GuildRelation.RelationEnemy]: 'عدو',
    [game.BaseData.GuildRelation.RelationFriend]: 'صديق'
};


game.World.UnitData = {

    "0": {

        snapShoot: "river_3.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [64, 64, 128, 96, 64, 128, 0, 96],
        tileName: {
            "0": "floor"
        },
        getTitle: (x_coord, y_coord) => {
            return "مكان خالى";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "1": {
        snapShoot: "river_3.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [64, 64, 128, 96, 64, 128, 0, 96],
        tileName: {
            "0": "river_1"
        },
        getTitle: (x_coord, y_coord) => {
            return "بحيرة";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "17": {
        snapShoot: "river_3.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [112, 95, 70, 118, 23, 92, 65, 70],
        tileName: {
            "0": "city_0"
        },
        getTitle: (x_coord, y_coord) => {
            return "مدينة مستوى 1";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "18": {

        snapShoot: "river_3.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [103, 78, 106, 100, 63, 118, 18, 98, 17, 83, 58, 56],
        tileName: {
            "0": "city_1"
        },
        getTitle: (x_coord, y_coord) => {
            return "مدينة مستوى 2";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "19": {

        snapShoot: "river_3.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [105, 72, 107, 100, 63, 125, 15, 97, 21, 72, 61, 50],
        tileName: {
            "0": "city_2"
        },
        getTitle: (x_coord, y_coord) => {
            return "مدينة مستوى 3";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "20": {

        snapShoot: "river_3.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            "0": "city_3"
        },
        getTitle: (x_coord, y_coord) => {
            return "مدينة مستوى 4";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "21": {

        snapShoot: "mountain_1.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [101, 94, 67, 115, 27, 96, 63, 72],
        tileName: {
            1: "m_1",
            2: "m_2",
            3: "m_3",
            4: "m_4"
        },
        getTitle: (x_coord, y_coord) => {
            return "هضبة";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "22": {

        snapShoot: "mountain_2.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [123, 96, 67, 123, 12, 96, 49, 66, 74, 52],
        tileName: {
            5: "m_5",
            6: "m_6",
            7: "m_7"
        },
        getTitle: (x_coord, y_coord) => {
            return "جبل";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "23": {

        snapShoot: "mountain_3.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [119, 92, 70, 122, 11, 90, 61, 27, 88, 31],
        tileName: {
            8: "m_8",
            9: "m_9",
            10: "m_10"
        },
        getTitle: (x_coord, y_coord) => {
            return "جبال";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "24": {

        snapShoot: "desert_1.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [65, 67, 20, 91, 73, 118, 105, 92],
        tileName: {
            1: "d_1",
            2: "d_2",
            3: "d_3",
            4: "d_4"
        },
        getTitle: (x_coord, y_coord) => {
            return "رمال";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "25": {

        snapShoot: "desert_2.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [112, 98, 60, 120, 15, 96, 60, 72, 86, 66],
        tileName: {
            5: "d_5",
            6: "d_6",
            7: "d_7"
        },
        getTitle: (x_coord, y_coord) => {
            return "صحراء";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "26": {

        snapShoot: "desert_3.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [119, 97, 62, 120, 19, 95, 41, 77, 47, 56, 86, 58],
        tileName: {
            8: "d_8",
            9: "d_9",
            "10": "d_10"
        },
        getTitle: (x_coord, y_coord) => {
            return "صحراء";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "27": {

        snapShoot: "wood_1.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [63, 72, 90, 83, 92, 97, 67, 112, 39, 99, 47, 84],
        tileName: {
            1: "w_1",
            2: "w_2",
            3: "w_3",
            4: "w_4"
        },
        getTitle: (x_coord, y_coord) => {
            return "احراش";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "28": {

        snapShoot: "wood_2.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [64, 64, 106, 86, 109, 101, 66, 122, 27, 97, 33, 80],
        tileName: {
            5: "w_5",
            6: "w_6",
            7: "w_7"
        },
        getTitle: (x_coord, y_coord) => {
            return "اخشاب";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "29": {

        snapShoot: "wood_3.png",
        desc: null,
        maxLvl: 0,
        prom_lvl: 0,
        fitness: 0,
        make_req: [],
        join_req: [],
        hitArea: [62, 48, 116, 77, 120, 97, 65, 127, 15, 100, 16, 74],
        tileName: {
            8: "w_8",
            9: "w_9",
            10: "w_10"
        },
        getTitle: (x_coord, y_coord) => {
            return "غابات";
        },
        timeNextRest: () => {
            return null;
        }

    },
    "30": {
        snapShoot: "monwrat.png",
        ar_title: "مناورات",
        prom_title: "مواطن",
        prom_lvl: 0,
        fitness: 40,
        make_req: ["necklace_4"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "مناورات";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,
        maxLvl: 50,
        hitArea: [64, 0, 128, 32, 128, 96, 64, 128, 0, 96, 0, 32],
        tileName: {
            0: "mnawrat"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }

    },
    "31": {
        snapShoot: "camps.png",
        ar_title: "معسكرات",
        prom_title: "مواطن",
        prom_lvl: 0,
        fitness: 40,
        make_req: ["necklace_4"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            if (x_coord === 136 && y_coord === 160) {
                return `المعسكر الفرنسى المتمرد`;
            } else if (x_coord === 407 && y_coord === 66) {
                return `المعسكر الاسيوى المتمرد`;
            } else if (x_coord === 106 && y_coord === 19) {
                return `المعسكر البريطانى المتمرد`;
            } else if (x_coord === 392 && y_coord === 213) {
                return `المعسكر المقدونى المتمرد`;
            } else if (x_coord === 266 && y_coord === 245) {
                return `المعسكر الايطالى المتمرد`;
            } else if (x_coord === 78 && y_coord === 300) {
                return `المعسكر الاسبانى المتمرد`;
            } else if (x_coord === 427 && y_coord === 337) {
                return `المعسكر الفارسى المتمرد`;
            } else if (x_coord === 316 && y_coord === 450) {
                return `المعسكر المصرى المتمرد`;
            } else if (x_coord === 88 && y_coord === 444) {
                return `المعسكر القرطاجى المتمرد`;
            } else if (x_coord === 246 && y_coord === 111) {
                return `المعسكر الالمانى المتمرد`;
            }
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 50,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "city_4"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "32": {
        snapShoot: "front_squad.png",
        ar_title: "الفرقة الامامية",
        prom_lvl: 3,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        getTitle: function(x_coord, y_coord) {
            return "الفرقة الامامية";
        },
        maxLvl: 40,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "front_squad"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "33": {
        snapShoot: "front_squad.png",
        ar_title: "السرية الامامية",
        prom_lvl: 3,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        getTitle: function(x_coord, y_coord) {
            return "السرية الامامية";
        },
        maxLvl: 40,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "front_band"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "34": {
        snapShoot: "front_band.png",
        ar_title: "الجماعة الامامية",
        prom_lvl: 3,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        getTitle: function(x_coord, y_coord) {
            return "الجماعة الامامية";
        },
        maxLvl: 40,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "front_squadron"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "35": {
        snapShoot: "front_division.png",
        ar_title: "الكتيبة الامامية",
        prom_lvl: 3,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "الكتيبة الامامية";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 40,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "front_division"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "36": {
        snapShoot: "armed_light_squad.png",
        ar_title: "فرقة التسليح الخفيف",
        prom_lvl: 10,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "فرقة التسليح الخفيف";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 30,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "armed_light_squad"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "37": {
        snapShoot: "armed_light_band.png",
        ar_title: "سرية التسليح الخفيف",
        prom_lvl: 10,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "سرية التسليح الخفيف";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 30,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "armed_light_band"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "38": {
        snapShoot: "armed_light_squadron.png",
        ar_title: "جماعة التسليح الخفيف",
        prom_lvl: 10,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "جماعة التسليح الخفيف";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 30,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "armed_light_squadron"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "39": {
        snapShoot: "armed_light_division.png",
        ar_title: "كتيبة التسليح الخفيف",
        prom_lvl: 10,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "كتيبة التسليح الخفيف";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 30,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "armed_light_division"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "40": {
        snapShoot: "armed_heavy_squad.png",
        ar_title: "فرقة التسليح الثقيل",
        prom_lvl: 20,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "فرقة التسليح الثقيل";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 20,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "armed_heavy_squad"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "41": {
        snapShoot: "armed_heavy_band.png",
        ar_title: "سرية التسليح الثقيل",
        prom_lvl: 20,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "سرية التسليح الثقيل";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 20,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "armed_heavy_band"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "42": {
        snapShoot: "armed_heavy_squadron.png",
        ar_title: "جماعة التسليح الثقيل",
        prom_lvl: 20,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "جماعة التسليح الثقيل";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 20,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "armed_heavy_squadron"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "43": {
        snapShoot: "armed_heavy_division.png",
        ar_title: "كتيبة التسليح الثقيل",
        prom_lvl: 20,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "كتيبة التسليح الثقيل";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 20,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "armed_heavy_division"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "44": {
        snapShoot: "guard_squad.png",
        ar_title: "فرقة الحراسة",
        prom_lvl: 25,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "فرقة الحراسة";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 20,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "guard_squad"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "45": {
        snapShoot: "guard_band.png",
        ar_title: "سرية الحراسة",
        prom_lvl: 25,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "سرية الحراسة";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 20,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "guard_band"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "46": {
        snapShoot: "guard_squadron.png",
        ar_title: "جماعة الحراسة",
        prom_lvl: 25,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "جماعة الحراسة";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 20,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "guard_squadron"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "47": {
        snapShoot: "guard_division.png",
        ar_title: "كتيبة الحراسة",
        prom_lvl: 25,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "كتيبة الحراسة";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 20,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "guard_division"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "48": {
        snapShoot: "thunder.png",
        ar_title: "الساندرز",
        prom_lvl: 29,
        fitness: 40,
        make_req: ["truce_pack"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "الساندرز الشجاع";
        },
        desc: `
            مرحبا بكم في فتح باب الدم. ثق بي ، هذه مجرد البداية.

            بعد سلسلة من الحروب الطويلة ، أصبحت قوة قوات المتمردين في الجمهورية الرومانية أضعف وأضعف.
             النجاح الكبير لا يرجع فقط إلى تصميم مجلس الشيوخ ، ولكن أيضًا يرتبط ارتباطًا وثيقًا باستراتيجية عسكرية جديدة وافق عليها جميع قضاة المقاطعات سابقًا.
             وفقًا للاستراتيجية ، يلعب مجلس الشيوخ في الواقع لعبة القط والفأر مع المتمردين ، بهدف القضاء عليهم جميعًا في وقت واحد في المستقبل.
             هنا تأتي الفرصة الآن. لقد جمع المتمردون أخيرًا في الشمال الشرقي شديد البرودة كما هو متوقع.
             ومع ذلك ، فقد شكلوا مجموعة قوية للغاية تسمى محور الاستقلال وأعلنت Fearless Skullbearer كزعيم.
              Fearless Skullbearer هو مقاتلة حديدية الوحد الذي يوحد الغشاشين ويلهم قوات المتمردين. 
            مع نظر العالم إلى الشمال الشرقي للجمهورية الرومانية ، ينادي مجلس الشيوخ بهجوم عام ضد محور الاستقلال.`,

        maxLvl: 10,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "brave_thunder"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "49": {
        snapShoot: "gang.png",
        ar_title: "العصابات",
        prom_lvl: 1,
        fitness: 20,
        make_req: ["t_map"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "العصابات";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 2,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "gang"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "50": {
        snapShoot: "mugger.png",
        ar_title: "قطاع الطرق",
        prom_lvl: 1,
        fitness: 20,
        make_req: ["t_map"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "قطاع الطريق";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 2,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "mugger"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "51": {
        snapShoot: "thief.png",
        ar_title: "اللصوص",
        prom_lvl: 1,
        fitness: 20,
        make_req: ["t_map"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "اللصوص";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 2,
        hitArea: [63, 37, 11, 60, 6, 94, 66, 126, 124, 100, 115, 66],
        tileName: {
            0: "thief"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "52": {
        snapShoot: "c_gang.png",
        ar_title: "العصابات القرطاجية",
        prom_lvl: 4,
        fitness: 20,
        make_req: ["repel_trumpet_1"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "العصابات القرطاجية";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [69, 110, 90, 101, 90, 69, 63, 53, 42, 64, 41, 97],
        tileName: {
            0: "carthage_gang"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "53": {
        snapShoot: "c_teams.png",
        ar_title: "فرق العصيان القرطاجى",
        prom_lvl: 1,
        fitness: 30,
        make_req: ["repel_trumpet_1"],
        join_req: [""],
        getTitle: function(x_coord, y_coord) {
            return "فرق العصيان القرطاجى";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [63, 112, 97, 96, 94, 71, 65, 54, 35, 68, 34, 98],
        tileName: {
            0: "carthage_teams"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "54": {
        snapShoot: "c_rebels.png",
        ar_title: "متمردى قرطاجة",
        prom_lvl: 7,
        fitness: 40,
        make_req: ["repel_trumpet_2"],
        join_req: ["repel_trumpet_2"],
        getTitle: function(x_coord, y_coord) {
            return "متمردى قرطاجة";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [69, 115, 104, 102, 97, 68, 61, 48, 34, 64, 31, 98],
        tileName: {
            0: "carthage_rebels"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "55": {
        snapShoot: "c_forces.png",
        ar_title: "القوات الخاصة القرطاجية",
        prom_lvl: 14,
        fitness: 50,
        make_req: ["repel_trumpet_2"],
        join_req: ["repel_trumpet_2"],
        getTitle: function(x_coord, y_coord) {
            return "القوات الخاصة القرطاجية";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [67, 116, 110, 100, 101, 67, 69, 47, 31, 65, 29, 100],
        tileName: {
            0: "carthage_forces"
        },
        timeNextRest: function() {
            return TimeRest.restEvery6();
        }
    },
    "56": {
        snapShoot: "c_capital.png",
        ar_title: "عاصمة التمرد",
        prom_lvl: 19,
        fitness: 60,
        make_req: ["repel_medal"],
        join_req: ["repel_medal"],
        getTitle: function(x_coord, y_coord) {
            return "عاصمة التمرد";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [62, 116, 108, 97, 102, 67, 71, 46, 29, 64, 27, 98],
        tileName: {
            0: "carthage_capital"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "100": {
        snapShoot: "armyCapital.png",
        ar_title: "عاصمة المشاة",
        prom_lvl: 1,
        fitness: 50,
        make_req: ["warrior_medal"],
        join_req: [],
        hero_army_req: 1,
        getTitle: function(x_coord, y_coord) {
            return "عاصمة المشاة";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "army_capital"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "101": {
        snapShoot: "armyCapital.png",
        ar_title: "عاصمة الفرسان",
        prom_lvl: 1,
        fitness: 50,
        hero_army_req: 2,
        make_req: ["warrior_medal"],
        join_req: [],
        getTitle: function(x_coord, y_coord) {
            return "عاصمة الفرسان";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "army_capital"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "102": {
        snapShoot: "armyCapital.png",
        ar_title: "عاصمة المدرعين",
        prom_lvl: 1,
        fitness: 50,
        hero_army_req: 3,
        make_req: ["warrior_medal"],
        join_req: [],
        getTitle: function(x_coord, y_coord) {
            return "عاصمة المدرعين";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "army_capital"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "103": {
        snapShoot: "armyCapital.png",
        ar_title: "عاصمة رماة السهم",
        prom_lvl: 1,
        fitness: 50,
        hero_army_req: 4,
        make_req: ["warrior_medal"],
        join_req: [],
        getTitle: function(x_coord, y_coord) {
            return "عاصمة رماة السهم";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "army_capital"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "104": {
        snapShoot: "armyCapital.png",
        ar_title: "عاصمة المقاليعٍ",
        prom_lvl: 1,
        fitness: 50,
        hero_army_req: 5,
        make_req: ["warrior_medal"],
        join_req: [],
        getTitle: function(x_coord, y_coord) {
            return "عاصمة المقاليع";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "army_capital"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "105": {
        snapShoot: "armyCapital.png",
        ar_title: "عاصمة المنجنيق",
        prom_lvl: 1,
        fitness: 50,
        hero_army_req: 6,
        make_req: ["warrior_medal"],
        join_req: [],
        getTitle: function(x_coord, y_coord) {
            return "عاصمة المنجنيق";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "army_capital"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "125": {
        snapShoot: "arena.png",
        ar_title: "حلبة التحدى",
        prom_lvl: 1,
        fitness: 10,
        make_req: [],
        join_req: [],
        getTitle: function(x_coord, y_coord) {
            return "حلبة التحدى";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "arena"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "126": {
        snapShoot: "arena.png",
        ar_title: "حلبة الموت",
        prom_lvl: 1,
        fitness: 10,
        make_req: [],
        join_req: [],
        getTitle: function(x_coord, y_coord) {
            return "حلبة الموت";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "arena"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "127": {
        snapShoot: "arena.png",
        ar_title: "حلبة تحدى الاحلاف",
        prom_lvl: 1,
        fitness: 10,
        make_req: [],
        join_req: [],
        getTitle: function(x_coord, y_coord) {
            return "حلبة تحدى الاحلاف";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "arena"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "130": {
        snapShoot: "queenCityS.png",
        ar_title: "الملكة الصغرى",
        prom_lvl: 3,
        fitness: 40,
        make_req: ["bronze_horn"],
        join_req: ["bronze_horn"],
        getTitle: function(x_coord, y_coord) {
            return "الملكة الصغرى";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "queenCity_1"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "131": {
        snapShoot: "queenCityM.png",
        ar_title: "الملكة الوسطى",
        prom_lvl: 4,
        fitness: 50,
        make_req: ["silver_horn"],
        join_req: ["silver_horn"],
        getTitle: function(x_coord, y_coord) {
            return "الملكة الصغرى";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "queenCity_2"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "132": {
        snapShoot: "queenCityH.png",
        ar_title: "الملكة الكبرى",
        prom_lvl: 5,
        fitness: 60,
        make_req: ["gold_horn"],
        join_req: ["gold_horn"],
        getTitle: function(x_coord, y_coord) {
            return "الملكة الصغرى";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "queenCity_3"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "134": {
        snapShoot: "repleCastleS.png",
        ar_title: "القلاع الصغرى",
        prom_lvl: 3,
        fitness: 40,
        make_req: ["bronze_horn"],
        join_req: ["bronze_horn"],
        getTitle: function(x_coord, y_coord) {
            return "القلاع الصغرى";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "repleCastle_1"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "135": {
        snapShoot: "repleCastleM.png",
        ar_title: "القلاع الوسطى",
        prom_lvl: 4,
        fitness: 50,
        make_req: ["silver_horn"],
        join_req: ["silver_horn"],
        getTitle: function(x_coord, y_coord) {
            return "القلاع الوسطى";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "repleCastle_2"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "136": {
        snapShoot: "repleCastleH.png",
        ar_title: "القلاع الكبرى",
        prom_lvl: 5,
        fitness: 60,
        make_req: ["gold_horn"],
        join_req: ["gold_horn"],
        getTitle: function(x_coord, y_coord) {
            return "القلاع الكبرى";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        hitArea: [81, 30, 39, 32, 26, 110, 62, 129, 106, 118],
        tileName: {
            0: "repleCastle_3"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "150": {
        snapShoot: "statueWar_1.png",
        ar_title: "تمثال الحرب الاصغر",
        prom_lvl: 29,
        fitness: 100,
        make_req: ["evil_army_pass"],
        join_req: [],
        getTitle: function(x_coord, y_coord) {
            return "تمثال الحرب الاصغر";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 75,
        heroNum: 3,
        techLvl: 10,
        heroLvl: 255,
        hitArea: [33, 111, 56, 126, 85, 113, 78, 37, 53, 34],
        tileName: {
            0: "wolfStatue"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "151": {
        snapShoot: "statueWar_2.png",
        ar_title: "تمثال الحرب الاوسط",
        prom_lvl: 29,
        fitness: 100,
        make_req: ["evil_army_pass"],
        join_req: [],
        getTitle: function(x_coord, y_coord) {
            return "تمثال الحرب الاوسط";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 50,
        heroNum: 3,
        techLvl: 10,
        heroLvl: 255,
        hitArea: [33, 111, 56, 126, 85, 113, 78, 37, 53, 34],
        tileName: {
            0: "wolfStatue"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "152": {
        snapShoot: "statueWar_3.png",
        ar_title: "تمثال الحرب الاكبر",
        prom_lvl: 5,
        fitness: 60,
        make_req: ["evil_army_pass"],
        join_req: [],
        getTitle: function(x_coord, y_coord) {
            return "تمثال الحرب الاكبر";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 25,
        heroNum: 3,
        techLvl: 10,
        heroLvl: 255,
        hitArea: [33, 111, 56, 126, 85, 113, 78, 37, 53, 34],
        tileName: {
            0: "wolfStatue"
        },
        timeNextRest: function() {
            return TimeRest.restEvery12();
        }
    },
    "153": {
        snapShoot: "wolf_1.png",
        ar_title: "مجموعة الذئب 1",
        prom_lvl: 29,
        fitness: 100,
        make_req: ["evil_pass"],
        join_req: [],
        getTitle: function(x_coord, y_coord) {
            return "مجموعة الذئب 1";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        heroNum: 3,
        techLvl: 10,
        heroLvl: 255,
        hitArea: [33, 111, 56, 126, 85, 113, 78, 37, 53, 34],
        tileName: {
            0: "wolfStatue"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "154": {
        snapShoot: "wolf_2.png",
        ar_title: "مجموعة الذئب 2",
        prom_lvl: 29,
        fitness: 100,
        make_req: ["evil_pass"],
        join_req: [],
        getTitle: function(x_coord, y_coord) {
            return "مجموعة الذئب 2";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        heroNum: 3,
        techLvl: 10,
        heroLvl: 255,
        hitArea: [33, 111, 56, 126, 85, 113, 78, 37, 53, 34],
        tileName: {
            0: "wolfStatue"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },
    "155": {
        snapShoot: "wolf_3.png",
        ar_title: "مجموعة الذئب 3",
        prom_lvl: 29,
        fitness: 100,
        make_req: ["evil_pass"],
        join_req: [],
        getTitle: function(x_coord, y_coord) {
            return "مجموعة الذئب 3";
        },
        desc: `التخلي عن النضال عديمة الفائدة! أنا هنا لإنهاء حياتك السلمية.

الجمهورية الرومانية تتعرض للهجوم من قبل              Skullbearer Fearless ويشارك اللوردات في المعركة مع قوات المتمردين.
             وبالتالي لا يوجد عدد كاف من القوات للحفاظ على النظام في المدن.
            في هذا الوقت ، تتعرض الثروة الشعبية للتهديد من قبل مجرمين مثل اللصوص وعصابات العصابات المتجولين وعصابات العصابات ،
             وكلهم يختبئون في الجمهورية الرومانية لفترة طويلة. إنهم يقرعون ويقتلون السكان ، مما يجعل الناس يعانون.
            أيضا ، يحرقون المنازل لإخراج الناس من المكان الذي يعيشون فيه ، مما يسبب عدم استقرار المجتمع.
            الآن المواطنون الرومانيون يتوقون إلى الحياة السلمية وينتظرون المنقذ الذي يمكنه القضاء على الجرائم وتقديمهم إلى الحياة السعيدة السابقة.`,

        maxLvl: 10,
        heroNum: 3,
        techLvl: 10,
        heroLvl: 255,
        hitArea: [33, 111, 56, 126, 85, 113, 78, 37, 53, 34],
        tileName: {
            0: "wolfStatue"
        },
        timeNextRest: function() {
            return TimeRest.restEvery4();
        }
    },

    isPromLvlOk: function(type) {
        var camp = game.World.UnitTypeData[type];
        return (game.DPlayer.Player.porm >= camp.reqProm);
    },

    isAttackable: function(type) {
        var camp = game.World.UnitTypeData[type];
        for (var mat in camp.MakeReq) {
            if (Matrial.getPlayerAmount(camp.MakeReq[mat].Item) < camp.MakeReq[mat].amount) {
                return false;
            }
        }
        return (game.DPlayer.Player.porm >= camp.reqProm);
    }



};
const NODE_URL = `https://${WS_HOST}:${WS_PORT}`;

function isJson(str) {
    try {
        JSON.parse(str);
    } catch (e) {
        return false;
    }
    return true;
}


$.ajaxSetup({
    data: {
        server: SERVER_ID
    }
});

function isInt(num) {
    return num % 1 === 0;
}


FAVORIT_LIST = [{
        id: 1,
        x_coord: 200,
        y_coord: 150,
        type: 27,
        lvl: 5,
        title: "mohamed"
    },
    {
        id: 2,
        x_coord: 458,
        y_coord: 125,
        type: 27,
        lvl: 5,
        title: "Mosta"
    },
    {
        id: 3,
        x_coord: 45,
        y_coord: 52,
        type: 27,
        lvl: 5,
        title: "morad"
    },
    {
        id: 4,
        x_coord: 45,
        y_coord: 52,
        type: 27,
        lvl: 5,
        title: "نغم"
    }
];


$(document).on("mouseenter", "#city-profile .page_content .army_type", function() {

    var army = $(this).attr("data-army");



    var tooltip = `  <div class="tooltip tooltip-army">
                        <div class="top">
                            <div class="left">
                                <div class="title">
                                    ${game.BaseData.Army[army].ar_title}
                                </div>
                                <div class="image">
                                    <img src="${game.BaseData.Army[army].image}"/>
                                </div>
                            </div>
                            <div class="right" >
                                <p class="desc">${game.BaseData.Army[army].desc}</p>
                            </div>

                        </div>
                        <div class="bottom">
                            <ul>
                                <li>
                                    <div class="image">
                                        <img src="images/icons/army/vitilty.png"/>
                                    </div>
                                    <div class="value">${game.BaseData.ArmyPower[army].vit}</div>
                                </li>
                                <li>
                                    <div class="image">
                                        <img src="images/icons/army/attack.png"/>
                                    </div>
                                    <div class="value">${game.BaseData.ArmyPower[army].attack}</div>
                                </li>
                                <li>
                                    <div class="image">
                                        <img src="images/icons/army/defence.png"/>
                                    </div>
                                    <div class="value">${game.BaseData.ArmyPower[army].def}</div>
                                </li>
                                <li>
                                    <div class="image">
                                        <img src="images/icons/army/damage.png"/>
                                    </div>
                                    <div class="value">${game.BaseData.ArmyPower[army].dam}</div>
                                </li>
                                <li>
                                    <div class="image">
                                        <img src="images/icons/army/break.png" style="width:20px; height: 20px"/>
                                    </div>
                                    <div class="value">${game.BaseData.ArmyPower[army].break}</div>
                                </li>
                                <li>
                                    <div class="image">
                                        <img src="images/icons/army/anti-break.png" style="width:20px; height: 20px"/>
                                    </div>
                                    <div class="value">${game.BaseData.ArmyPower[army].anti_break}</div>
                                </li>
                                <li>
                                    <div class="image">
                                        <img src="images/icons/army/strike.png" style="width:20px; height: 20px"/>
                                    </div>
                                    <div class="value">${game.BaseData.ArmyPower[army].strike}</div>
                                </li>
                                <li>
                                    <div class="image">
                                        <img src="images/icons/army/immunity.png" style="width:20px; height: 20px"/>
                                    </div>
                                    <div class="value">${game.BaseData.ArmyPower[army].immunity}</div>
                                </li>
                                <li>
                                    <div class="image">
                                        <img src="images/icons/army/food.png"/>
                                    </div>
                                    <div class="value">${game.BaseData.ArmyPower[army].eating}</div>
                                </li>
                                <li>
                                    <div class="image">
                                        <img src="images/icons/army/speed.png"/>
                                    </div>
                                    <div class="value">${game.BaseData.Army[army].speed}</div>
                                </li>
                                <li>
                                    <div class="image">
                                        <img src="images/icons/army/capacity.png"/>
                                    </div>
                                    <div class="value">${game.BaseData.Army[army].capacity}</div>
                                </li>
                                <li>
                                    <div class="image">
                                        <img src="images/icons/army/pop.png"/>
                                    </div>
                                    <div class="value">${game.BaseData.Army[army].people}</div>
                                </li>
                            </ul>
                        </div>
                    </div>`;

    $("#city-profile-tooltipe").html(tooltip);

});


$(document).on("mouseleave", "#city-profile .page_content .army_type", function() {
    $("#city-profile-tooltipe").html("");
});


var isMobile = false; //initiate as false
// device detection
if (/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent) ||
    /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(navigator.userAgent.substr(0, 4))) {
    isMobile = true;
}



$(document).on("PlayerReady", "html", function() {

    $['getJSON'](API_URL + '/js' + game['Config']['JsVersion'] + '/json/UnitArmy.json', {}, function(UnitArmy, _0x1d2e97, _0x190ef9) {
        game['World']['UnitArmy'] = UnitArmy;
    });
    $.getJSON(
        API_URL + "/js" + game.Config.JsVersion + "/json/worldUnitData.json", {},
        function(data, textStatus, jqXHR) {
            game.World.UnitTypeData = data;
        }
    );

    $.ajax({
        url: API_URL + "/js" + game.Config.JsVersion + "/json/WorldBarrary.json",
        data: {},
        type: 'GET',
        cache: true,
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            var data_array = data.split(",");
            var iii = 0;
            var end = data_array.length;
            for (; iii < end; iii++) {
                var temp = data_array[iii].split("_");

                game.worldAllUnits[Number(temp[0]) * 500 + Number(temp[1])] = {
                    x: temp[0],
                    y: temp[1],
                    ut: temp[2],
                    l: temp[3],
                    p: temp[4],
                    t: temp[5],
                    on_map: false
                };
            }

            var xxx = 0;
            var yyy = 0;
            var crEl;

            setTimeout(function() {
                for (xxx = 0; xxx < 500; xxx++) {
                    for (yyy = 0; yyy < 500; yyy++) {



                        if (!game.worldAllUnits[xxx * 500 + yyy]) {

                            game.worldAllUnits[xxx * 500 + yyy] = {
                                x: xxx,
                                y: yyy,
                                t: 0,
                                ut: 0,
                                l: 0,
                                on_map: false
                            };

                        }


                    }
                }
            });
            $("#WorldCity").removeAttr("disabled");

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });


});



function waitCursor() {
    $("body").attr("id", "wait");
}

function unwaitCursor() {
    $("body").removeAttr("id");
}


var uri_pattern = /\b((?:[a-z][\w-]+:(?:\/{1,3}|[a-z0-9%])|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}\/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'".,<>?«»“”‘’]))/ig;

const SAVE_URL = [
    "www.game.com",
    "game.com",
    "forum.game.com",
    "stackoverflow.com",
    "ar.islamway.net",
    "en.islamway.net",
    "fr.islamway.net",
    "du.islamway.net",
    "www.facebook.com",
    "www.fb.com",
    "www.anghami.com",
    "soundcloud.com",
    "www.instagram.com",
    "prnt.sc",
    "prntscr.com",
    "egy.best",
    "www.yallakora.com",
    "www.netflix.com"
];

function extractUrl(text) {
    if (!text)
        return;

    function checkBaseUrl(match, offset, string) {
        var hostName = extractHostname(match);
        return `<a rel="no-follow" href="${match}" class=" ${SAVE_URL.indexOf(hostName) > -1 ? "safe-url" : "not-safe-url"}" target="_blank">` + hostName + `</a>`;
    }
    return text.replace(uri_pattern, checkBaseUrl);
}



function extractHostname(url) {
    var hostname;
    //find & remove protocol (http, ftp, etc.) and get hostname

    if (url.indexOf("//") > -1) {
        hostname = url.split('/')[2];
    } else {
        hostname = url.split('/')[0];
    }

    //find & remove port number
    hostname = hostname.split(':')[0];
    //find & remove "?"
    hostname = hostname.split('?')[0];

    return hostname;
}




$(document).ready(function() {
    var ctrlDown = false,
        ctrlKey = 17,
        cmdKey = 91,
        vKey = 86,
        cKey = 67;

    $(document).keydown(function(e) {
        if (e.keyCode == ctrlKey || e.keyCode == cmdKey)
            ctrlDown = true;
    }).keyup(function(e) {
        if (e.keyCode == ctrlKey || e.keyCode == cmdKey)
            ctrlDown = false;
    });



    // Document Ctrl + C/V 
    $(document).keydown(function(e) {
        if (ctrlDown && (e.keyCode == cKey))
            document.execCommand("copy");
        if (ctrlDown && (e.keyCode == vKey))
            document.execCommand("paste");
    });


    document.onpaste = function(event) {
        var items = (event.clipboardData || event.originalEvent.clipboardData).items;
        for (index in items) {
            var item = items[index];
            if (item.kind === 'file') {
                var blob = item.getAsFile();
                var reader = new FileReader();
                reader.onload = function(event) {

                    if (Number(USER_GROUP) < 3) {
                        alert_box.confirmMessage("هذة الخاصية متاحة فقط للادارة");
                        return;
                    }

                    var json_obj = {

                        type: "CHAT_IMAGE_PUBLIC",
                        url: "Chat/publicMsgImage",
                        data: {
                            image: event.target.result,
                            idPlayer: ID_PLAYER,
                            token: TOKEN,
                            p_name: player.name,
                            p_avatar: player.avatar,
                            userGroup: USER_GROUP
                        }
                    };

                    ws.send(JSON.stringify(json_obj));

                }; // data url!

                reader.readAsDataURL(blob);
            }
        }
    }
});

function getSelectionText() {
    var selectedText = ""
    if (window.getSelection) { // all modern browsers and IE9+
        selectedText = window.getSelection().toString();
    }
    return selectedText
}

function extractEmjoi(str) {

    if (!str)
        return;
    return str.replace(/("[^"]+")|\S+/g, function(match, em) {

        if (Emjoi[match]) {
            return `<label class="emjoi" style="background-image: url(images/emjoi/${Emjoi[match]})"></label>`;

        }
        return match;
    });

}


var Extract = {

    coords: function(txt) {
        if (!txt)
            return;
        return txt.replace(/\[\s*\d{1,3}\s*\,\s*\d{1,3}\s*\]/g, function(match) {
            var coords = Extract.digits(match);
            return `<label class="clickable-coords font-2" data-x-coord="${coords[0]}" data-y-coord="${coords[1]}"><i>${match}</i></label>`;

        });
    },
    'coordDirect': function(xCoord, yCoord) {
        return ` <label class="clickable-coords font-2"  data-x-coord="${xCoord}" data-y-coord="${yCoord}"> <i>[${xCoord},${yCoord}]</i></label> `;
    },
    digits: function(txt) {
        if (!txt)
            return;
        return txt.match(/\d+/g);

    }

};







$(document).on("click", ".clickable-coords", function() {

    var coordX = Number($(this).attr("data-x-coord"));
    var coordY = Number($(this).attr("data-y-coord"));



    if ($("#WorldCity").attr("data-view") === "city") {
        $("#WorldCity").trigger("click");
    }




    $("#x_coord-input input").val(coordX);
    $("#y_coord-input input").val(coordY);
    $("#nav-btn button").click();

});





$(document).on("input keydown keyup mousedown mouseup select contextmenu drop", ".only_num", function(e) {

    var val = this.value;
    var max = $(this).attr("max") || 999999;
    var regExpVal = /^\d*$/;

    if ($(this).attr("fraction") === "true") {
        regExpVal = /^\d*[.]?\d*$/;
    }

    if ((regExpVal.test(val) && (val === "" || Number(val) <= max))) {

        this.oldValue = this.value;
        this.oldSelectionStart = this.selectionStart;
        this.oldSelectionEnd = this.selectionEnd;

    } else if (Number(val) > max) {

        this.value = max;
        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);

    } else if (this.hasOwnProperty("oldValue")) {

        this.value = this.oldValue;
        this.setSelectionRange(this.oldSelectionStart, this.oldSelectionEnd);

    }

});


$(document).on("click", ".number-arrow-wrapper .up", function() {

    var input = $(this).parents(".number-arrow-wrapper").prev(".only_num");
    input.val(Math.min(Number(input.val() || 0) + Number(input.attr("step") || 1), Number(input.attr("max"))));
    input.trigger("keyup");

});

$(document).on("click", ".number-arrow-wrapper .down", function() {

    var input = $(this).parents(".number-arrow-wrapper").prev(".only_num");
    input.val(Math.max(Number(input.val() || 0) - Number(input.attr("step") || 1), 0));
    input.trigger("keyup");

});



$(document).on("mouseup", "#dialg_box", function(e) {
    e.stopPropagation();
});
$(document).on("mousedown", "#dialg_box", function(e) {
    e.stopPropagation();
});

$(document).on("mouseup", "#over_lay_alert", function(e) {
    e.stopPropagation();
});
$(document).on("mousedown", "#over_lay_alert", function(e) {
    e.stopPropagation();
});

$(document).on("mouseup", "#over_lay", function(e) {
    e.stopPropagation();
});
$(document).on("mousedown", "#over_lay", function(e) {
    e.stopPropagation();
});

$(document).on("mouseup", "#alert_container", function(e) {
    e.stopPropagation();
});
$(document).on("mousedown", "#alert_container", function(e) {
    e.stopPropagation();
});


$(document).on("mouseup", "#city-profile", function(e) {
    e.stopPropagation();
});
$(document).on("mousedown", "#city-profile", function(e) {
    e.stopPropagation();
});


$(document).on("mouseup", "#chat-box", function(e) {
    e.stopPropagation();
});
$(document).on("mousedown", "#chat-box", function(e) {
    e.stopPropagation();
});

$(document).on("mouseup", "#current-tasks", function(e) {
    e.stopPropagation();
});
$(document).on("mousedown", "#current-tasks", function(e) {
    e.stopPropagation();
});
$(document).on("mouseup", "#city_col", function(e) {
    e.stopPropagation();
});
$(document).on("mousedown", "#city_col", function(e) {
    e.stopPropagation();
});
$(document).on("mouseup", "#player-profile", function(e) {
    e.stopPropagation();
});
$(document).on("mousedown", "#player-profile", function(e) {
    e.stopPropagation();
});


$(document).on("mouseup", "#godGateBtnWrapper", function(e) {
    e.stopPropagation();
});
$(document).on("mousedown", "#godGateBtnWrapper", function(e) {
    e.stopPropagation();
});

$(document).on("mouseup", "#helpGateBtnWrapper", function(e) {
    e.stopPropagation();
});
$(document).on("mousedown", "#helpGateBtnWrapper", function(e) {
    e.stopPropagation();
});

$(document).on("mouseup", "#ArenaChallangeBtnWrapper", function(e) {
    e.stopPropagation();
});
$(document).on("mousedown", "#ArenaChallangeBtnWrapper", function(e) {
    e.stopPropagation();
});



$(document).keydown(function(event) {
    var keyCode = (event.keyCode ? event.keyCode : event.which);
    if (keyCode == 13) {
        $('.enter').last().trigger('click');
        event.preventDefault();
        event.stopPropagation();
    }
});
var BoxMid = {};

BoxMid.box = function(title, navBar, content) {


    var navBarList = "";

    for (var iii in navBar) {

        navBarList += `<li class="font-2" data-nav-tag="${navBar[iii].title}">${navBar[iii].txt}</li>`;

    }


    var box = ` <div id="Box-mid">
                    <div class="title font-2">
                        ${title}
                    </div>
                    <div class="box-close">
                        <button></button>
                    </div>
                    <div class="nav-bar">
                        <ul>
                            ${navBarList}
                        </ul>
                    </div>
                    <div class="content-wrapper">  
                        ${content}
                    </div>
                </div>`;

    $("body").append(box);

};

BoxMid.close = function() {
    $("#Box-mid").remove();
};


$(document).on("click", "#Box-mid .box-close button", BoxMid.close);




$(document).on("click", "#Box-mid .nav-bar ul li", function() {

    $("#Box-mid .nav-bar ul .selected").removeClass("selected");
    $(this).addClass("selected");

    var navTag = $(this).attr("data-nav-tag");


    if (navTag === "god-gate-1")
        GodGate.rank("gate_1", 0);
    else if (navTag === "god-gate-2")
        GodGate.rank("gate_2", 0);
    else if (navTag === "god-gate-3")
        GodGate.rank("gate_3", 0);
    else if (navTag === "god-gate-4")
        GodGate.rank("gate_4", 0);

});
var Player_profile = {


    refresh_view: function() {

        $("#player_honor span").html(game.DPlayer.Player.honor);
        $("#player_prestige span").html(game.DPlayer.Player.prestige);
        $("#player_rank span").html(game.DPlayer.Player.rank);
        $("#player_gold span").html(game.DPlayer.Player.gold);
        $("#player_guild span").html(game.DPlayer.GuildData ? game.DPlayer.GuildData.name : "");
        $("#player_title span").html(game.BaseData.Promotion[game.DPlayer.Player.porm].Title);
        $(".avatar-img img").attr("src", game.BaseData.HeroAvatar[game.DPlayer.Player.avatar]);

    },
    getPlayerBaseData: function() {

        return $.ajax({
            url: API_URL + "/api/APlayer/refreshPlayerData",
            type: 'GET',
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    alert(data);

                var jsonObj = JSON.parse(data);
                game.DPlayer.Player = jsonObj;
                Player_profile.refresh_view();

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    },
    getPlayerStateData: function() {

        return $.ajax({
            url: API_URL + "/api/APlayer/getPlayerState",
            type: 'GET',
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    alert(data);

                var jsonObj = JSON.parse(data);
                game.DPlayer.PlayerState = jsonObj;
                Player_profile.refresh_view();
                Fixed.refresePlayerStateList();

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    },
    getPlayerGuildData: function() {

        return $.ajax({
            url: API_URL + "/api/APlayer/getPlayerGuildData",
            type: 'GET',
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    alert(data);

                var jsonObj = JSON.parse(data);
                game.DPlayer.GuildData = jsonObj.GuildData;
                Player_profile.refresh_view();

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    },
    getPlayerEdu: function() {

        return $.ajax({
            url: API_URL + "/api/APlayerEdu/getPlayerEduLvl",
            type: 'GET',
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    alert(data);

                var jsonObj = JSON.parse(data);
                game.DPlayer.PlayerEdu = jsonObj;
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    },
    refresh_player_data: function() {


        this.getPlayerBaseData();
        this.getPlayerGuildData();
        this.getPlayerStateData();
        this.refresh_view();
    },

    refreshMatrialBox: function(matrial) {
        return $.ajax({

            url: API_URL + "/api/APlayerItem/getPlayerItems",
            data: {

                server: game.Config.idServer,
                token: game.Config.OuthToken
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var json_data = JSON.parse(data);

                for (var ii in json_data) {
                    if (!matrial_player[json_data[ii].table])
                        matrial_player[json_data[ii].table] = {};

                    matrial_player[json_data[ii].table][json_data[ii].id_item] = json_data[ii].amount;
                    game.DPlayer.Items[json_data[ii].id_item] = json_data[ii].amount;

                    if (game.BaseData.Items[json_data[ii].id_item])
                        game.BaseData.Items[json_data[ii].id_item].playerAmount = json_data[ii].amount;

                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });
    },

    refreshPlayerNotif: function() {

        return $.ajax({
            url: `${API_URL}/api/APlayer/getAllNotif`,
            data: {
                server: game.Config.idServer,
                token: game.Config.OuthToken
            },
            type: 'GET',
            success: function(data, textStatus, jqXHR) {
                if (isJson(data)) {
                    PLAYER_NOTIF = JSON.parse(data);
                    Fixed.refreshPlayerNotif();
                }
            }
        });
    }




};




$(document).on("PlayerReady", "html", function() {
    Player_profile.getPlayerEdu();
    Player_profile.getPlayerGuildData();
    Player_profile.getPlayerStateData();
    game.ArenaChallange.getArenaData();
});
game.World.Province.canvasCtx = document.createElement('canvas').getContext('2d');
game.World.Province.coloredCoordImage = new Image(100, 100);
game.World.Province.coloredCoordImage.src = 'images/world/provinceImage/provinceColored.png';
game.World.Province.coloredCoordImage.onload = function() {
    game.World.Province.canvasCtx.drawImage(game.World.Province.coloredCoordImage, 0, 0, 100, 100);

};


game.World.Province.colorCode = {
    "1": {
        r: 0,
        g: 0,
        b: 255
    }, // بريطانيا
    "2": {
        r: 0,
        g: 0,
        b: 0
    }, //rich
    "3": {
        r: 102,
        g: 102,
        b: 102
    }, // Asia
    "4": {
        r: 0,
        g: 255,
        b: 0
    }, // France
    "5": {
        r: 255,
        g: 0,
        b: 255
    }, // Macdon
    "6": {
        r: 0,
        g: 255,
        b: 255
    }, // Spain
    "7": {
        r: 255,
        g: 0,
        b: 0
    }, // Italia
    "8": {
        r: 102,
        g: 0,
        b: 153
    }, // Parsia
    "9": {
        r: 255,
        g: 255,
        b: 255
    }, // Cartage
    "10": {
        r: 255,
        g: 255,
        b: 0
    } // Egypt
};

game.World.Province.Title = {
    "1": {
        "en": "BRITONS",
        "ar": "بريطانيا",
        "de": "Britannien",
        "es": "BRITANIA",
        "pt": "BRITÂNICOS",
        "zh": "不列颠"
    },
    "2": {
        "en": "REICH",
        "ar": "المانيا",
        "de": "Reich",
        "es": "GERMANIA",
        "pt": "REICH",
        "zh": "日耳曼"
    },
    "3": {
        "en": "ASIANA",
        "ar": "آسيا",
        "de": "Hunne",
        "es": "ASIANA",
        "pt": "ASIANA",
        "zh": "匈奴"
    },
    "4": {
        "en": "GAULS",
        "ar": "فرنسا",
        "de": "Gallien",
        "es": "GALIA",
        "pt": "GAULESES",
        "zh": "高卢"
    },
    "5": {
        "en": "MACEDON",
        "ar": "مقدونيا",
        "de": "Mazedonien",
        "es": "MACEDONIA",
        "pt": "MACEDÔNIA",
        "zh": "马其顿"
    },
    "6": {
        "en": "HISPANIA",
        "ar": "اسبانيا",
        "de": "Spanien",
        "es": "HISPANIA",
        "pt": "HISPANIA",
        "zh": "西班牙"
    },
    "7": {
        "en": "ITALIA",
        "ar": "ايطاليا",
        "de": "Rom",
        "es": "ITALIA",
        "pt": "ITALIA",
        "zh": "罗马"
    },
    "8": {
        "en": "PARTHIA",
        "ar": "الفرس",
        "de": "Perserreich",
        "es": "PARTHIA",
        "pt": "PÁRTIA",
        "zh": "波斯"
    },
    "9": {
        "en": "CARTHAGE",
        "ar": "قرطاجة",
        "de": "Karthago",
        "es": "CARTAGO",
        "pt": "CARTAGO",
        "zh": "迦太基"
    },
    "10": {
        "en": "Egypt",
        "ar": "مصر",
        "de": "Ägypten",
        "es": "EGIPTO",
        "pt": "EGITO",
        "zh": "埃及"
    }
};

game.World.Province.getTitle = function(x, y) {

    x = Math.floor(x / 5);
    y = Math.floor(y / 5);
    const pixelColor = game.World.Province.canvasCtx.getImageData(x, y, 1, 1).data;

    for (var ii in game.World.Province.colorCode) {

        if (game.World.Province.colorCode[ii].r === pixelColor[0] && game.World.Province.colorCode[ii].g === pixelColor[1] && game.World.Province.colorCode[ii].b === pixelColor[2]) {
            return game.World.Province.Title[ii][UserLag.language];
        }

    }

};





$(document)['on']('click', '#relocate-city-now', function() {
    var province = $('#move-city-to .select-list')['attr']('data-value');
    return $.ajax({
        'url': NODE_URL + '/api/AItemUse/useRandomMove',
        'type': 'POST',
        'data': {
            'Item': 'random_move',
            'amount': 1,
            'idCity': game['CurrentCity']['City']['id_city'],
            token: game['Config']['OuthToken'],
            server: game['Config']['idServer'],
            'province': province
        },
        success: function(data, _0x3fd769, _0x4d0cb6) {
            if (!game['LBase']['isJson'](data))
                return game['LBase']['Error'](data);
            var JsonData = JSON['parse'](data);
            if (JsonData['state'] === 'ok') {
                game['City']['getCityBase']()['done'](function(_0x5bcbd8) {
                    $('#city-data .coords')['html']('[ ' + game['CurrentCity']['City']['y'] + ' , ' + game['CurrentCity']['City']['x'] + ' ]');
                    alert_box['succesMessage'](
                        'قد تم نقل مدينتك بنجاح الى الاحداثيات الاتية <br/>' +
                        '[ ' + game['CurrentCity']['City']['x'] +
                        ' , ' + game['CurrentCity']['City']['y'] + ' ]');
                    if ($('#WorldCity')['attr']('data-view') === 'world') {
                        $('#x_coord-input input')['val'](game['CurrentCity']['City']['x']);
                        $('#y_coord-input input')['val'](game['CurrentCity']['City']['y']);
                        $('#nav-btn button')['click']();
                    }


                });
            } else if (JsonData['state'] === 'error_no_place_empty') {
                setTimeout(function() {
                    alert_box['confirmMessage']('للاسف لا يمكنك نقل المدينة فى هذ المكان حيث ان المكان ليس خالى :]');
                }, 0x64)
            } else {
                (alert(data), console['log'](data));
            }
        }
    });
});

var city_building;


game.City.getCity = function(idCity) {

    if (!idCity)
        return game.CurrentCity;

    for (var id in game.DPlayer.City)
        if (Number(id) === Number(idCity))
            return game.DPlayer.City[id];

    return game.CurrentCity;
};


game.City.getCityBase = function(idCity) {


    if (!idCity)
        idCity = game.CurrentCity.City.id_city;


    return $.ajax({
        url: `${API_URL}/api/ACity/refreshCityBase`,
        type: 'GET',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            var City = JSON.parse(data);


            game.City.getCity(idCity).City = JSON.parse(data);
            city_profile.refresh_resource_view();
            city_profile.refresh_army_view();
            city_profile.refresh_hero_view();
            city_profile.refresh_wild_view();
            game.City.refreshBtnList();

        }
    });

};

game.City.getCityBuilding = function(idCity) {


    if (!idCity)
        idCity = game.CurrentCity.City.id_city;

    return $.ajax({
        url: `${API_URL}/api/ACityBuilding/getCityBuilding`,
        type: 'GET',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var City = JSON.parse(data);

            game.City.getCity(idCity).BuildingLvl = City.lvl;
            game.City.getCity(idCity).BuildingType = City.type;


        }
    });

};


game.City.getCityJop = function(idCity) {


    if (!idCity)
        idCity = game.CurrentCity.City.id_city;
    return $.ajax({
        url: `${API_URL}/api/ACityJop/getCityJop`,
        type: 'GET',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);


            game.City.getCity(idCity).Jop = JSON.parse(data);


        }
    });

};

game.City.getCityWounded = function(idCity) {


    if (!idCity)
        idCity = game.CurrentCity.City.id_city;
    return $.ajax({
        url: `${API_URL}/api/ACityWounded/getCityWounded`,
        type: 'GET',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            game.City.getCity(idCity).Wounded = JSON.parse(data);


        }
    });

};

game.City.getCityStorage = function(idCity) {


    if (!idCity)
        idCity = game.CurrentCity.City.id_city;
    return $.ajax({
        url: `${API_URL}/api/ACityStorage/getCityStorage`,
        type: 'GET',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            game.City.getCity(idCity).Storage = JSON.parse(data);


        }
    });

};


game.City.getCityBarray = function(idCity) {

    if (!idCity)
        idCity = game.CurrentCity.City.id_city;

    return $.ajax({
        url: `${API_URL}/api/ACityBarrary/getCityBarray`,
        type: 'GET',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            game.City.getCity(idCity).Barray = JSON.parse(data);
            city_profile.refresh_wild_view();
            $(".for_building .left-nav .selected").click();

        }
    });

};


game.City.getCityGarrison = function(idCity) {

    if (!idCity)
        idCity = game.CurrentCity.City.id_city;


    return $.ajax({
        url: `${API_URL}/api/ACityPalace/getCityGarrison`,
        type: 'GET',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity,
            xCoord: game.City.getCity(idCity).City.x,
            yCoord: game.City.getCity(idCity).City.y
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            game.City.getCity(idCity).Garrison = JSON.parse(data);

        }
    });

};

game.City.getCityHeroTheater = function(idCity) {
    if (!idCity)
        idCity = game.CurrentCity.idCity;


    return $.ajax({
        url: `${API_URL}/api/ACityHero/refreshHeroTheater`,
        type: 'POST',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            game.City.getCity(idCity).HeroTheater = JSON.parse(data);

        }
    });
};

game.City.getCityHero = function(idCity) {


    if (!idCity)
        idCity = game.CurrentCity.City.id_city;
    return $.ajax({
        url: `${API_URL}/api/ACityHero/getCityHero`,
        type: 'GET',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            var HeroList = JSON.parse(data);

            for (var iii in HeroList) {

                if (!game.Hero.getHero(HeroList[iii].id_hero))
                    game.DPlayer.Heros.push({
                        idHero: HeroList[iii].id_hero
                    });

                var Hero = game.Hero.getHero(HeroList[iii].id_hero);

                Hero.Hero = HeroList[iii];
                Hero.idHero = HeroList[iii].id_hero;


            }

            game.Hero.orderHeors();
            if (!game.CurrentHero.Hero && game.DPlayer.Heros[0])
                game.CurrentHero = game.Hero.getHero(game.DPlayer.Heros[0].idHero);

            game.City.getCityHeroEquip(idCity);
            city_profile.refresh_hero_view();
        }
    });

};

game.City.getCityHeroArmy = function(idCity) {


    if (!idCity)
        idCity = game.CurrentCity.City.id_city;
    return $.ajax({
        url: `${API_URL}/api/ACityHero/getCityHeroArmy`,
        type: 'GET',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            var HeroList = JSON.parse(data);

            for (var iii in HeroList) {

                if (!game.Hero.getHero(HeroList[iii].id_hero))
                    game.DPlayer.Heros.push({
                        idHero: HeroList[iii].id_hero
                    });


                var Hero = game.Hero.getHero(HeroList[iii].id_hero);
                Hero.Army = HeroList[iii];
                Hero.idHero = HeroList[iii].id_hero;

            }


        }
    });

};

game.City.getCityHeroMedal = function(idCity) {


    if (!idCity)
        idCity = game.CurrentCity.City.id_city;
    return $.ajax({
        url: `${API_URL}/api/ACityHero/getCityHeroMedal`,
        type: 'GET',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            var HeroList = JSON.parse(data);

            for (var iii in HeroList) {

                if (!game.Hero.getHero(HeroList[iii].id_hero))
                    game.DPlayer.Heros.push({
                        idHero: HeroList[iii].id_hero
                    });


                var Hero = game.Hero.getHero(HeroList[iii].id_hero);
                Hero.Medal = HeroList[iii];
                Hero.idHero = HeroList[iii].id_hero;
            }


        }
    });

};


game.City.getCityHeroEquip = function(idCity) {

    game.Equip.distributeEquip();

};


game.City.getCityByCoord = function(xCoord, yCoord) {

    for (var iii in game.DPlayer.City) {

        if (Number(game.DPlayer.City[iii].City.x) !== Number(xCoord))
            continue;
        if (Number(game.DPlayer.City[iii].City.y) !== Number(yCoord))
            continue;

        return game.DPlayer.City[iii];
    }

    return game.CurrentCity;
};


game.City.RefreshCityHeros = function(idCity) {

    game.City.getCityHero(idCity);
    game.City.getCityHeroArmy(idCity);
    game.City.getCityHeroMedal(idCity);
    game.City.getCityHeroEquip(idCity);

};





game.City.refreshBtnList = function() {
    var BtnList = "";
    var idCity = Number(game.CurrentCity.idCity);
    for (var iii = Object.keys(game.DPlayer.City).length - 1; iii >= 0; iii--) {

        var CCity = game.DPlayer.City[Object.keys(game.DPlayer.City)[iii]];

        if (!CCity.City) {
            continue;
        }

        var console_hero = game.Hero.getHero(CCity.City.console);
        BtnList += `<li data-index="${iii}" data-id-city="${CCity.City.id_city}" ${idCity === Number(CCity.City.id_city) ? `class="selected"` : ""}>
                                 <div class="console pull-R" style="background-image: url(${console_hero ? game.BaseData.HeroAvatar[console_hero.Hero.avatar] : "images/world/city-list/no-console.png"})">
                                        <label class="stroke">${CCity.City.name}</label>
                                 </div>
                                <button class="nav-to-city pull-L" data-x-coord="${CCity.City.x}" data-y-coord="${CCity.City.y}"></button>
                             </li>`;

    }

    $("#player-city-list ul").html(BtnList);
    if ($("#player-city-list ul .selected").length <= 0)
        $("#player-city-list ul li:last-child").addClass("selected");
};


game.City.prepareCity = function(idCity) {
    game.DPlayer.City[idCity] = {
        idCity: idCity
    };

    if (Number(idCity) === Number(game.Config.idCities[0]))
        game.CurrentCity = game.City.getCity(idCity);

    game.City.getCityJop(idCity).done(function(data) {

        game.City.getCityBase(idCity).done(function() {

            setInterval(function() {
                resourcesRefresh();
                refreshTime();

            }, 1000);
            game.City.getCityBuilding(idCity).done(function() {
                game.City.getCityGarrison(idCity);
                game.Building.getJsonData().done(function() {
                    if (Number(idCity) === Number(game.Config.idCities[0])) {

                        game.GE.LoadingScene.scene.transition({
                            target: "City",
                            duration: 1000,
                            remove: true,
                            data: {
                                idCity: 0
                            }
                        });

                        $("#loader-layer").remove();
                    }
                });

            });

        });


        game.TimedTask.getCityBuildingTasks(idCity);
        game.TimedTask.getCityStudyTasks(idCity);
        game.TimedTask.getCityJopTasks(idCity);
        game.TimedTask.getCityArmyTasks(idCity);


        game.City.getCityBarray(idCity);
        game.City.getCityWounded(idCity);

        game.City.getCityStorage(idCity);

        game.City.getCityHero(idCity).done(function() {
            game.City.getCityHeroArmy(idCity);
            game.City.getCityHeroEquip(idCity);
            game.City.getCityHeroMedal(idCity);
            game.City.refreshBtnList();
        });




    });



}

$(document).on("PlayerReady", "html", function() {


    for (var ii in game.Config.idCities) {
        game.City.prepareCity(game.Config.idCities[ii]);
    }





});



var city_heros = [];
var city_floor;
var interv = false;
var BuildingConstData = [{
        image: "images/city/no_building.png", // مكان خالى0
        icon: "images/building/building01.jpg",
        nav_bar: [],
        sprit_name: "no_building",
        hitArea: [83, 46, 4, 84, 83, 120, 155, 85]
    },
    {
        image: "images/city/_B1.png", // كوخ1
        icon: "images/building/building01.jpg",
        nav_bar: NavBar.Building.Cottage,
        getCondetion: function(lvl) {

            var condtions = [];
            var palace_lvl = Math.max(lvl - 1, 1);

            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.PALACE,
                lvl: palace_lvl,
                txt: "القصر مستوى " + getArabicNumbers(palace_lvl)
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        sprit_name: "B1",
        hitArea: [138, 66, 79, 40, 23, 70, 83, 112, 138, 96]

    },
    {
        image: "images/city/_B2.png", //2 مخزن 
        icon: "images/building/building02.jpg",
        nav_bar: NavBar.Building.Warehouse,
        getCondetion: function(lvl) {
            var lvl_array = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.COTTAGE,
                lvl: lvl_array[lvl - 1],
                txt: "الكوخ مستوى " + getArabicNumbers(lvl_array[lvl - 1])
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        sprit_name: "B2",
        hitArea: [119, 87, 79, 106, 40, 89, 41, 60, 72, 25, 103, 36, 120, 56]
    },
    {
        image: "images/city/_B3.png", //3 ثكنات
        icon: "images/building/building03.jpg",
        nav_bar: NavBar.Building.Barracks,
        getCondetion: function(lvl) {
            var lvl_array = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.HOSPITAL,
                lvl: lvl_array[lvl - 1],
                txt: "البلازا مستوى " + getArabicNumbers(lvl_array[lvl - 1])
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        sprit_name: "B3",
        hitArea: [131, 89, 82, 116, 27, 88, 27, 59, 85, 30, 126, 50]
    },
    {
        image: "images/city/_B4.png", //4 اسطبل
        icon: "images/building/building04.jpg",
        nav_bar: NavBar.Building.Stable,
        getCondetion: function(lvl) {
            var lvl_array = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.HOSPITAL,
                lvl: lvl_array[lvl - 1],
                txt: "البلازا مستوى " + getArabicNumbers(lvl_array[lvl - 1])
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        sprit_name: "B4",
        hitArea: [129, 92, 76, 118, 22, 92, 63, 30, 120, 48]
    },
    {
        image: "images/city/_B5.png", //5 ورشة عمل
        icon: "images/building/building05.jpg",
        nav_bar: NavBar.Building.Workshop,
        getCondetion: function(lvl) {
            var lvl_array = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.HOSPITAL,
                lvl: lvl_array[lvl - 1],
                txt: "البلازا مستوى " + getArabicNumbers(lvl_array[lvl - 1])
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        sprit_name: "B5",
        hitArea: [79, 28, 135, 60, 137, 90, 88, 112, 24, 90, 23, 55]
    },
    {
        image: "images/city/_B6.png", // 6 مسرح
        icon: "images/building/building06.jpg",
        nav_bar: NavBar.Building.Amphitheatre,
        getCondetion: function(lvl) {
            var lvl_array = [2, 2, 2, 2, 5, 5, 5, 5, 9, 9, 12, 12, 12, 12, 15, 15, 15, 15, 19, 19, 22, 22, 22, 22, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.COTTAGE,
                lvl: lvl_array[lvl - 1],
                txt: "الكوخ مستوى " + getArabicNumbers(lvl_array[lvl - 1])
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        sprit_name: "B6",
        hitArea: [123, 36, 38, 37, 32, 92, 75, 106, 127, 93, 139, 67]
    },
    {
        image: "images/city/_B7.png", //7 مركز  
        icon: "images/building/building08.jpg",
        nav_bar: NavBar.Building.BarterCenter,
        getCondetion: function(lvl) {
            var lvl_array = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.COTTAGE,
                lvl: lvl_array[lvl - 1],
                txt: "الكوخ مستوى " + getArabicNumbers(lvl_array[lvl - 1])
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        sprit_name: "B7",
        hitArea: [133, 84, 82, 112, 31, 95, 37, 68, 56, 57, 55, 36, 82, 27, 119, 44]
    },
    {
        image: "images/city/_B8.png", //8  جامعة
        icon: "images/building/building09.jpg",
        nav_bar: NavBar.Building.University,
        getCondetion: function(lvl) {
            var lvl_array = [2, 2, 2, 2, 5, 5, 5, 5, 9, 9, 12, 12, 12, 12, 15, 15, 15, 15, 19, 19, 22, 22, 22, 22, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.PALACE,
                lvl: lvl_array[lvl - 1],
                txt: "القصر مستوى " + getArabicNumbers(lvl_array[lvl - 1])
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        sprit_name: "B8",
        hitArea: [75, 24, 138, 56, 140, 85, 79, 117, 20, 88, 24, 60]
    },
    {
        image: "images/city/_B9.png", // 9  اكاديمية
        icon: "images/building/building10.jpg",
        nav_bar: NavBar.Building.Academy,
        getCondetion: function(lvl) {
            var lvl_array_hos = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29];
            var lvl_array_uni = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.UNIVERSITY,
                lvl: lvl_array_uni[lvl - 1],
                txt: "الجامعة مستوى " + getArabicNumbers(lvl_array_uni[lvl - 1])
            };
            condtions[1] = {
                type: "building",
                building_type: BUILDING_TYPS.HOSPITAL,
                lvl: lvl_array_hos[lvl - 1],
                txt: "البلازا  مستوى " + getArabicNumbers(lvl_array_hos[lvl - 1])
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        sprit_name: "B9",
        hitArea: [75, 24, 138, 56, 140, 85, 79, 117, 20, 88, 24, 60]
    },
    {
        image: "images/city/_B10.png", //10 دار المساعدة
        icon: "images/building/building11.jpg",
        nav_bar: NavBar.Building.Temple,
        getCondetion: function(lvl) {
            var lvl_array_hos = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.PALACE,
                lvl: lvl_array_hos[lvl - 1],
                txt: "القصر مستوى " + getArabicNumbers(lvl_array_hos[lvl - 1])
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        helpers: [{
                title: "المساعد الاول ",
                ar_title: "المساعد الاول ",
                en_title: "Jupiter",
                image: "images/city/Jupiter.jpg",
                desc: " يقصر المدة الزمية اللازمة للباء وتطوير المبانى فى المدينة"
            },
            {
                title: "المساعد الثانى ",
                ar_title: "المساعد الثانى ",
                en_title: "Juno",
                image: "images/city/Junon.jpg",
                desc: "يساعد هذا المساعد على زيادة واكثار السكان فى المدينة"
            },
            {
                title: "المساعد الثالث ",
                ar_title: "المساعد الثالث ",
                en_title: "Minerva",
                image: "images/city/Minerva.jpg",
                desc: "يقصر المدة الزمية اللازمة لبناء وتطوير القوات"
            }
        ],
        sprit_name: "B10",
        hitArea: [143, 88, 85, 118, 19, 80, 52, 58, 59, 20, 102, 25, 114, 68]
    },
    {
        image: "images/city/_B11.png", //بلازة11 
        icon: "images/building/building12.jpg",
        nav_bar: NavBar.Building.Plaza,
        getCondetion: function(lvl) {
            var lvl_array = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.PALACE,
                lvl: lvl_array[lvl - 1],
                txt: "القصر مستوى " + getArabicNumbers(lvl_array[lvl - 1])
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        sprit_name: "B11",
        hitArea: [147, 82, 78, 112, 17, 77, 23, 51, 84, 24, 138, 47]
    },
    {
        image: "images/city/palace.png", //palace 12 القصر 
        icon: "images/building/building13.jpg",
        nav_bar: NavBar.Building.Palace,
        getCondetion: function(lvl) {
            var lvl_array_hos = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.WALL,
                lvl: Math.max(1, lvl - 2),
                txt: "السور مستوى " + getArabicNumbers(Math.max(1, lvl - 2))
            };
            if (lvl < 10) {
                condtions[1] = {
                    type: "people",
                    amount: Math.ceil(Math.min(Math.pow(1.8, lvl - 1) * 100, 45 * 1000)),
                    txt: " عدد السكان " + Math.ceil(Math.min(Math.pow(1.8, lvl - 1) * 100, 45 * 1000))
                };
            } else if (lvl < 20) {
                var require = [5, 5, 5, 8, 8, 8, 10, 10, 10, 10]
                condtions[1] = {
                    type: "matrial",
                    amount: require[lvl - 10],
                    mat_type: "law_1",
                    txt: " قانون دراكو " + getArabicNumbers(require[lvl - 10])
                };
            } else if (lvl < 25) {
                condtions[1] = {
                    type: "matrial",
                    amount: 5,
                    mat_type: "law_2",
                    txt: "  قانون الجداول " + getArabicNumbers(5)
                };
            } else {
                condtions[1] = {
                    type: "matrial",
                    amount: 5,
                    mat_type: "law_3",
                    txt: "  قانون الرومانى " + getArabicNumbers(5)
                };
            }
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        hitArea: [147, 10, 133, 48, 100, 53, 67, 125, 139, 157, 229, 125, 221, 76]
    },
    {
        image: "images/stabl_1.png", //wall 13 السور 
        icon: "images/building/building16.jpg",
        getIcon: function() {
            if (Number(game.City.getCity().BuildingLvl.wall) >= 10) {
                return "images/building/building17.jpg";
            } else if (Number(game.City.getCity().BuildingLvl.wall) >= 8) {
                return "images/building/building16.jpg";
            } else if (Number(game.City.getCity().BuildingLvl.wall) >= 4) {
                return "images/building/building15.jpg";
            } else if (Number(game.City.getCity().BuildingLvl.wall) >= 1) {
                return "images/building/building14.jpg";
            } else {
                return "images/building/building14.jpg";
            }
        },
        nav_bar: NavBar.Building.Wall,
        getCondetion: function(lvl) {
            var lvl_array_stone = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 12, 12, 12, 12, 12, 12, 12, 12, 12, 12, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22];
            var lvl_array_palace = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.STONE,
                lvl: lvl_array_stone[Math.max(lvl - 1, 1)],
                txt: "المحجر مستوى " + getArabicNumbers(lvl_array_stone[Math.max(lvl - 1, 1)])
            };
            condtions[1] = {
                type: "building",
                building_type: BUILDING_TYPS.PALACE,
                lvl: lvl_array_palace[Math.max(lvl - 1, 1)],
                txt: "القصر  مستوى " + getArabicNumbers(lvl_array_palace[Math.max(lvl - 1, 1)])
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        getHitArea: function() {
            if (Number(game.City.getCity().BuildingLvl.wall) >= 10) {
                return [510, 3, 1, 256, 5, 388, 576, 104, 609, 11];
            } else if (Number(game.City.getCity().BuildingLvl.wall) >= 8) {
                return [598, 11, 588, 92, 9, 391, 7, 299, 267, 161, 259, 150, 295, 130, 323, 133, 560, 12];
            } else if (Number(game.City.getCity().BuildingLvl.wall) >= 4) {
                return [559, 37, 4, 328, 26, 391, 565, 136, 577, 53];
            } else if (Number(game.City.getCity().BuildingLvl.wall) >= 1) {
                return [5, 342, 564, 51, 579, 39, 596, 51, 560, 122, 41, 392];
            } else {
                return [564, 92, 1, 369, 22, 389, 565, 120];
            }
        },
        sprit_name: "wall_1",
        getSpriteName: function() {
            if (Number(game.City.getCity().BuildingLvl.wall) >= 10) {
                return "wall_4";
            } else if (Number(game.City.getCity().BuildingLvl.wall) >= 8) {
                return "wall_3";
            } else if (Number(game.City.getCity().BuildingLvl.wall) >= 4) {
                return "wall_2";
            } else if (Number(game.City.getCity().BuildingLvl.wall) >= 1) {
                return "wall_1";
            } else {
                return "wall_0";
            }
        }
    },
    {
        image: "images/stabl_1.png", //market 14 السوق 
        icon: "images/building/building07.jpg",
        nav_bar: NavBar.Building.Market,
        getCondetion: function(lvl) {
            var lvl_array_palace = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.PALACE,
                lvl: lvl_array_palace[lvl],
                txt: "القصر مستوى " + getArabicNumbers(lvl_array_palace[lvl - 1])
            };
            if (lvl < 10) {
                condtions[1] = {
                    type: "people",
                    amount: Math.pow(2, lvl - 1) * 100,
                    txt: " عدد السكان " + getArabicNumbers(Math.max(1, lvl - 2))
                };
            }
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        hitArea: [160, 90, 87, 124, 17, 87, 18, 52, 97, 28, 155, 48],
        sprit_name: "market",

    },

    {
        image: "images/stabl_1.png", //wood 15 غايات 
        icon: "images/building/building19.jpg",
        nav_bar: NavBar.Building.Sawmill,
        res_for_jop: {
            food: "15",
            wood: "10",
            stone: "20",
            metal: "30",
            coin: "0",
            time: 30
        },
        getCondetion: function(lvl) {
            var lvl_array_palace = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.PALACE,
                lvl: lvl_array_palace[lvl],
                txt: "القصر مستوى " + getArabicNumbers(lvl_array_palace[lvl - 1]) + "</li>"
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        hitArea: [173, 97, 97, 124, 30, 84, 59, 56, 108, 8, 158, 40]
    },
    {
        image: "images/stabl_1.png", // farm 16 مزارع 
        icon: "images/building/building18.jpg",
        nav_bar: NavBar.Building.Farm,
        res_for_jop: {
            food: "10",
            wood: "20",
            stone: "30",
            metal: "15",
            coin: "0",
            time: 30
        },
        getCondetion: function(lvl) {
            var lvl_array_palace = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.PALACE,
                lvl: lvl_array_palace[lvl],
                txt: "القصر مستوى " + getArabicNumbers(lvl_array_palace[lvl - 1])
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        hitArea: [333, 116, 164, 204, 7, 134, 152, 12, 244, 55]
    },
    {
        image: "images/stabl_1.png", //mine 17 مناجم 
        icon: "images/building/building21.jpg",
        nav_bar: NavBar.Building.IronMine,
        res_for_jop: {
            food: "20",
            wood: "30",
            stone: "15",
            metal: "10",
            coin: "0",
            time: 30
        },
        getCondetion: function(lvl) {
            var lvl_array_palace = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.PALACE,
                lvl: lvl_array_palace[lvl],
                txt: "القصر مستوى " + getArabicNumbers(lvl_array_palace[lvl - 1])
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        hitArea: [349, 130, 178, 236, 4, 145, 173, 16, 287, 43]
    },
    {
        image: "images/stabl_1.png", //stone 18 محاجر  
        icon: "images/building/building20.jpg",
        nav_bar: NavBar.Building.Quarry,
        res_for_jop: {
            food: "30",
            wood: "15",
            stone: "10",
            metal: "20",
            coin: "0",
            time: 30
        },
        getCondetion: function(lvl) {
            var lvl_array_palace = [1, 1, 1, 1, 5, 5, 5, 5, 5, 9, 11, 11, 11, 11, 15, 15, 15, 15, 19, 19, 21, 21, 21, 21, 25, 25, 25, 25, 29, 29];
            var condtions = [];
            condtions[0] = {
                type: "building",
                building_type: BUILDING_TYPS.PALACE,
                lvl: lvl_array_palace[lvl],
                txt: "القصر مستوى " + getArabicNumbers(lvl_array_palace[lvl - 1]) + "</li>"
            };
            return condtions;
        },
        getTime: function(lvl) {
            return lvl * 3 * 60;
        },
        hitArea: [297, 114, 200, 194, 94, 190, 16, 101, 51, 21, 206, 15]
    },
    {
        image: "images/stabl_1.png", //seaport 19 الميناء  
        title: "الميناء",
        ar_title: "الميناء",
        en_title: "Seaport",
        icon: "images/building/building20.jpg",
        nav_bar: NavBar.Building.SeaPort,
        func: "",
        paragraph: " المبنى المسؤل عن انشاء وادارة القوات البحرية فى المدينة ",
        getCondetion: function(lvl) {
            var condtions = [];
            return condtions;
        },
        getTime: function(lvl) {
            return 0;
        },
        hitArea: [129, 3, 41, 59, 2, 163, 60, 191, 110, 176, 201, 178, 290, 135, 257, 55]
    },
    {
        image: "images/stabl_1.png", //lighthouse 20 المنارة  
        title: "المنارة",
        ar_title: "المنارة",
        en_title: "Lighthouse",
        icon: "images/building/building20.jpg",
        nav_bar: NavBar.Building.Lighthouse,
        food: "1800",
        wood: "2500",
        stone: "350",
        metal: "850",
        coin: "0",
        func: "",
        paragraph: " المبنى المسؤل عن ارسال البعثات البحرية",
        getCondetion: function(lvl) {
            var condtions = [];
            return condtions;
        },
        getTime: function(lvl) {
            return 0;
        },
        hitArea: [109, 283, 1, 280, 3, 235, 19, 226, 22, 136, 33, 139, 34, 8, 73, 8, 82, 137, 95, 174, 106, 217]
    }

];

game.Building.getJsonData = function() {
    return $.getJSON(`js${JS_VERSION}/json/building/${UserLag.language}.json`, function(BuildingText) {
        BuildingConstData[BUILDING_TYPS.SPACE].title = BuildingText[BUILDING_TYPS.SPACE].name;

        BuildingConstData[BUILDING_TYPS.COTTAGE].title = BuildingText[BUILDING_TYPS.COTTAGE].name;
        BuildingConstData[BUILDING_TYPS.COTTAGE].func = BuildingText[BUILDING_TYPS.COTTAGE].func;
        BuildingConstData[BUILDING_TYPS.COTTAGE].functionDesc = BuildingText[BUILDING_TYPS.COTTAGE].functionDesc;

        BuildingConstData[BUILDING_TYPS.STORE].title = BuildingText[BUILDING_TYPS.STORE].name;
        BuildingConstData[BUILDING_TYPS.STORE].func = BuildingText[BUILDING_TYPS.STORE].func;
        BuildingConstData[BUILDING_TYPS.STORE].functionDesc = BuildingText[BUILDING_TYPS.STORE].functionDesc;

        BuildingConstData[BUILDING_TYPS.BARRACKS].title = BuildingText[BUILDING_TYPS.BARRACKS].name;
        BuildingConstData[BUILDING_TYPS.BARRACKS].func = BuildingText[BUILDING_TYPS.BARRACKS].func;
        BuildingConstData[BUILDING_TYPS.BARRACKS].functionDesc = BuildingText[BUILDING_TYPS.BARRACKS].functionDesc;

        BuildingConstData[BUILDING_TYPS.STABL].title = BuildingText[BUILDING_TYPS.STABL].name;
        BuildingConstData[BUILDING_TYPS.STABL].func = BuildingText[BUILDING_TYPS.STABL].func;
        BuildingConstData[BUILDING_TYPS.STABL].functionDesc = BuildingText[BUILDING_TYPS.STABL].functionDesc;

        BuildingConstData[BUILDING_TYPS.WORKSHOP].title = BuildingText[BUILDING_TYPS.WORKSHOP].name;
        BuildingConstData[BUILDING_TYPS.WORKSHOP].func = BuildingText[BUILDING_TYPS.WORKSHOP].func;
        BuildingConstData[BUILDING_TYPS.WORKSHOP].functionDesc = BuildingText[BUILDING_TYPS.WORKSHOP].functionDesc;

        BuildingConstData[BUILDING_TYPS.THEATER].title = BuildingText[BUILDING_TYPS.THEATER].name;
        BuildingConstData[BUILDING_TYPS.THEATER].func = BuildingText[BUILDING_TYPS.THEATER].func;
        BuildingConstData[BUILDING_TYPS.THEATER].functionDesc = BuildingText[BUILDING_TYPS.THEATER].functionDesc;

        BuildingConstData[BUILDING_TYPS.STATION].title = BuildingText[BUILDING_TYPS.STATION].name;
        BuildingConstData[BUILDING_TYPS.STATION].func = BuildingText[BUILDING_TYPS.STATION].func;
        BuildingConstData[BUILDING_TYPS.STATION].functionDesc = BuildingText[BUILDING_TYPS.STATION].functionDesc;

        BuildingConstData[BUILDING_TYPS.UNIVERSITY].title = BuildingText[BUILDING_TYPS.UNIVERSITY].name;
        BuildingConstData[BUILDING_TYPS.UNIVERSITY].func = BuildingText[BUILDING_TYPS.UNIVERSITY].func;
        BuildingConstData[BUILDING_TYPS.UNIVERSITY].functionDesc = BuildingText[BUILDING_TYPS.UNIVERSITY].functionDesc;

        BuildingConstData[BUILDING_TYPS.ACADEMY].title = BuildingText[BUILDING_TYPS.ACADEMY].name;
        BuildingConstData[BUILDING_TYPS.ACADEMY].func = BuildingText[BUILDING_TYPS.ACADEMY].func;
        BuildingConstData[BUILDING_TYPS.ACADEMY].functionDesc = BuildingText[BUILDING_TYPS.ACADEMY].functionDesc;

        BuildingConstData[BUILDING_TYPS.WORSHIP].title = BuildingText[BUILDING_TYPS.WORSHIP].name;
        BuildingConstData[BUILDING_TYPS.WORSHIP].func = BuildingText[BUILDING_TYPS.WORSHIP].func;
        BuildingConstData[BUILDING_TYPS.WORSHIP].functionDesc = BuildingText[BUILDING_TYPS.WORSHIP].functionDesc;

        BuildingConstData[BUILDING_TYPS.HOSPITAL].title = BuildingText[BUILDING_TYPS.HOSPITAL].name;
        BuildingConstData[BUILDING_TYPS.HOSPITAL].func = BuildingText[BUILDING_TYPS.HOSPITAL].func;
        BuildingConstData[BUILDING_TYPS.HOSPITAL].functionDesc = BuildingText[BUILDING_TYPS.HOSPITAL].functionDesc;

        BuildingConstData[BUILDING_TYPS.PALACE].title = BuildingText[BUILDING_TYPS.PALACE].name;
        BuildingConstData[BUILDING_TYPS.PALACE].func = BuildingText[BUILDING_TYPS.PALACE].func;
        BuildingConstData[BUILDING_TYPS.PALACE].functionDesc = BuildingText[BUILDING_TYPS.PALACE].functionDesc;

        BuildingConstData[BUILDING_TYPS.WALL].title = BuildingText[BUILDING_TYPS.WALL].name;
        BuildingConstData[BUILDING_TYPS.WALL].func = BuildingText[BUILDING_TYPS.WALL].func;
        BuildingConstData[BUILDING_TYPS.WALL].functionDesc = BuildingText[BUILDING_TYPS.WALL].functionDesc;

        BuildingConstData[BUILDING_TYPS.MARKET].title = BuildingText[BUILDING_TYPS.MARKET].name;
        BuildingConstData[BUILDING_TYPS.MARKET].func = BuildingText[BUILDING_TYPS.MARKET].func;
        BuildingConstData[BUILDING_TYPS.MARKET].functionDesc = BuildingText[BUILDING_TYPS.MARKET].functionDesc;

        BuildingConstData[BUILDING_TYPS.WOOD].title = BuildingText[BUILDING_TYPS.WOOD].name;
        BuildingConstData[BUILDING_TYPS.WOOD].func = BuildingText[BUILDING_TYPS.WOOD].func;
        BuildingConstData[BUILDING_TYPS.WOOD].functionDesc = BuildingText[BUILDING_TYPS.WOOD].functionDesc;

        BuildingConstData[BUILDING_TYPS.FARM].title = BuildingText[BUILDING_TYPS.FARM].name;
        BuildingConstData[BUILDING_TYPS.FARM].func = BuildingText[BUILDING_TYPS.FARM].func;
        BuildingConstData[BUILDING_TYPS.FARM].functionDesc = BuildingText[BUILDING_TYPS.FARM].functionDesc;

        BuildingConstData[BUILDING_TYPS.MINE].title = BuildingText[BUILDING_TYPS.MINE].name;
        BuildingConstData[BUILDING_TYPS.MINE].func = BuildingText[BUILDING_TYPS.MINE].func;
        BuildingConstData[BUILDING_TYPS.MINE].functionDesc = BuildingText[BUILDING_TYPS.MINE].functionDesc;

        BuildingConstData[BUILDING_TYPS.STONE].title = BuildingText[BUILDING_TYPS.STONE].name;
        BuildingConstData[BUILDING_TYPS.STONE].func = BuildingText[BUILDING_TYPS.STONE].func;
        BuildingConstData[BUILDING_TYPS.STONE].functionDesc = BuildingText[BUILDING_TYPS.STONE].functionDesc;


        game.TimedTask.refreshListView();


    });
};







/*
 * 
 *   Variable holds all  building on floor
 */

var BuildingOnFloor = {};

const X_GRID = 128;
const Y_GRID = 64;

function MouseOverBuilding() {

    this.attr({
        alpha: 0.8
    });
    if (this._children[1]) {

        this._children[1].attr({
            alpha: 1.0
        });

    }

}

function MouseOutBuilding() {

    this.attr({
        alpha: 1.0
    });
    if (this._children[1]) {

        this._children[1].attr({
            alpha: 0.0
        });

    }

}


function building_title(x, y, place) {

    return game.GE.CityScene.add.text(x + 0.25 * X_GRID, y + 1.5 * Y_GRID, BuildingConstData[game.City.getCity().BuildingType[place]].title, game.GE.TextConfig);


}

function building_lvl_lable(x, y, place) {

    var lvl = Number(game.City.getCity().BuildingLvl[place]);
    if (lvl == 0)
        return;


    var lable = "building_lvl_lable_1";

    if (game.City.getCity().BuildingLvl[place] > 20) {
        lable = "building_lvl_lable_5";
    } else if (game.City.getCity().BuildingLvl[place] > 15) {
        lable = "building_lvl_lable_4";
    } else if (game.City.getCity().BuildingLvl[place] > 10) {
        lable = "building_lvl_lable_3";
    } else if (game.City.getCity().BuildingLvl[place] > 5) {
        lable = "building_lvl_lable_2";
    }

    BuildingOnFloor[place].LvlText = game.GE.CityScene.add.text(x + 0.5 * X_GRID, y + 1 * Y_GRID, lvl, {
        color: '#FFFFFF',
        stroke: '#000000',
        strokeThickness: 3,
        fontStyle: "bold",
        align: "center",
        fontSize: 14,
        fixedWidth: 30,
        fixedHeight: 30
    }).setOrigin(0, 0).setDepth(4);
    BuildingOnFloor[place].LvlImage = game.GE.CityScene.add.image(x + 0.5 * X_GRID, y + 1 * Y_GRID - 10, lable).setOrigin(0, 0).setDisplaySize(30, 30).setDepth(3)

    return BuildingOnFloor[place].LvlImage;

}

var Check = true;

game.GE.AddCityBuilding = function(x, y, BuildingPlace) {
    BuildingOnFloor[BuildingPlace] = game.GE.CityScene.add.image(x, y, BuildingConstData[game.City.getCity().BuildingType[BuildingPlace]].sprit_name).setInteractive({
            hitArea: new Phaser.Geom.Polygon(BuildingConstData[game.City.getCity().BuildingType[BuildingPlace]].hitArea),
            hitAreaCallback: Phaser.Geom.Polygon.Contains
        }).setOrigin(0, 0).setDepth(2)
        .on("click", function() {
            buildingClick(BuildingPlace);
        })
        .on(Phaser.Input.Events.GAMEOBJECT_OVER, MouseOverBuilding)
        .on(Phaser.Input.Events.GAMEOBJECT_OUT, MouseOutBuilding);
    BuildingOnFloor[BuildingPlace].Lable = building_lvl_lable(x, y, BuildingPlace);
    building_hammer_animate(BuildingPlace);
    return BuildingOnFloor[BuildingPlace];
};


game.GE.AddCityFixedBuilding = function() {

    BuildingOnFloor.palace = game.GE.CityScene.add.image(1190, 545, "palace").setInteractive({
            hitArea: new Phaser.Geom.Polygon(BuildingConstData[game.City.getCity().BuildingType["palace"]].hitArea),
            hitAreaCallback: Phaser.Geom.Polygon.Contains
        }).setOrigin(0, 0).setDepth(2)
        .on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, function() {
            buildingClick("palace");
        })
        .on(Phaser.Input.Events.GAMEOBJECT_OVER, MouseOverBuilding)
        .on(Phaser.Input.Events.GAMEOBJECT_OUT, MouseOutBuilding);
    building_lvl_lable(1260, 580, "palace");
    building_hammer_animate("palace");


    BuildingOnFloor.wall = game.GE.CityScene.add.image(0, 0, BuildingConstData[game.City.getCity().BuildingType["wall"]].getSpriteName()).setInteractive({
            hitArea: new Phaser.Geom.Polygon(BuildingConstData[game.City.getCity().BuildingType["wall"]].getHitArea()),
            hitAreaCallback: Phaser.Geom.Polygon.Contains
        }).setOrigin(0, 0).setDepth(2)
        .on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, function() {
            buildingClick("wall");
        })
        .on(Phaser.Input.Events.GAMEOBJECT_OVER, MouseOverBuilding)
        .on(Phaser.Input.Events.GAMEOBJECT_OUT, MouseOutBuilding);
    building_lvl_lable(1.75 * X_GRID, 2.5 * Y_GRID, "wall");
    building_hammer_animate("wall");




    BuildingOnFloor.seaport = game.GE.CityScene.add.image(16 * X_GRID, 9.75 * Y_GRID, "seaport").setInteractive({
            hitArea: new Phaser.Geom.Polygon(BuildingConstData[game.City.getCity().BuildingType["seaport"]].hitArea),
            hitAreaCallback: Phaser.Geom.Polygon.Contains
        }).setOrigin(0, 0).setDepth(2)
        .on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, function() {
            buildingClick("seaport");
        })
        .on(Phaser.Input.Events.GAMEOBJECT_OVER, MouseOverBuilding)
        .on(Phaser.Input.Events.GAMEOBJECT_OUT, MouseOutBuilding);
    building_lvl_lable(14 * X_GRID, 3.25 * Y_GRID, "seaport");
    building_hammer_animate("seaport");


    BuildingOnFloor.lighthouse = game.GE.CityScene.add.image(15.5 * X_GRID, 5 * Y_GRID, "lighthouse").setInteractive({
            hitArea: new Phaser.Geom.Polygon(BuildingConstData[game.City.getCity().BuildingType["lighthouse"]].hitArea),
            hitAreaCallback: Phaser.Geom.Polygon.Contains
        }).setOrigin(0, 0).setDepth(2)
        .on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, function() {
            buildingClick("lighthouse");
        })
        .on(Phaser.Input.Events.GAMEOBJECT_OVER, MouseOverBuilding)
        .on(Phaser.Input.Events.GAMEOBJECT_OUT, MouseOutBuilding);
    building_lvl_lable(14 * X_GRID, 3.25 * Y_GRID, "lighthouse");
    building_hammer_animate("lighthouse");


    BuildingOnFloor.farm = game.GE.CityScene.add.image(13 * X_GRID, 14.25 * Y_GRID, "farm").setInteractive({
            hitArea: new Phaser.Geom.Polygon(BuildingConstData[game.City.getCity().BuildingType["farm"]].hitArea),
            hitAreaCallback: Phaser.Geom.Polygon.Contains
        }).setOrigin(0, 0).setDepth(2)
        .on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, function() {
            buildingClick("farm");
        })
        .on(Phaser.Input.Events.GAMEOBJECT_OVER, MouseOverBuilding)
        .on(Phaser.Input.Events.GAMEOBJECT_OUT, MouseOutBuilding);
    building_lvl_lable(13.5 * X_GRID, 14.75 * Y_GRID, "farm");
    building_hammer_animate("farm");



    BuildingOnFloor.mine = game.GE.CityScene.add.image(7.75 * X_GRID, 2.25 * Y_GRID, "mine").setInteractive({
            hitArea: new Phaser.Geom.Polygon(BuildingConstData[game.City.getCity().BuildingType["mine"]].hitArea),
            hitAreaCallback: Phaser.Geom.Polygon.Contains
        }).setOrigin(0, 0).setDepth(2)
        .on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, function() {
            buildingClick("mine");
        })
        .on(Phaser.Input.Events.GAMEOBJECT_OVER, MouseOverBuilding)
        .on(Phaser.Input.Events.GAMEOBJECT_OUT, MouseOutBuilding);
    building_lvl_lable(8.5 * X_GRID, 3.25 * Y_GRID, "mine");
    building_hammer_animate("mine");



    BuildingOnFloor.stone = game.GE.CityScene.add.image(11.5 * X_GRID, 5.5 * Y_GRID, "stone").setInteractive({
            hitArea: new Phaser.Geom.Polygon(BuildingConstData[game.City.getCity().BuildingType["stone"]].hitArea),
            hitAreaCallback: Phaser.Geom.Polygon.Contains
        }).setOrigin(0, 0).setDepth(2)
        .on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, function() {
            buildingClick("stone");
        })
        .on(Phaser.Input.Events.GAMEOBJECT_OVER, MouseOverBuilding)
        .on(Phaser.Input.Events.GAMEOBJECT_OUT, MouseOutBuilding);
    building_lvl_lable(12.25 * X_GRID, 5.5 * Y_GRID, "stone");
    building_hammer_animate("stone");


    BuildingOnFloor.wood = game.GE.CityScene.add.image(2 * X_GRID, 6.5 * Y_GRID, "wood").setInteractive({
            hitArea: new Phaser.Geom.Polygon(BuildingConstData[game.City.getCity().BuildingType["wood"]].hitArea),
            hitAreaCallback: Phaser.Geom.Polygon.Contains
        }).setOrigin(0, 0).setDepth(2)
        .on(Phaser.Input.Events.GAMEOBJECT_POINTER_UP, function() {
            buildingClick("wood");
        })
        .on(Phaser.Input.Events.GAMEOBJECT_OVER, MouseOverBuilding)
        .on(Phaser.Input.Events.GAMEOBJECT_OUT, MouseOutBuilding);
    building_lvl_lable(2.25 * X_GRID, 6.25 * Y_GRID, "wood");
    building_hammer_animate("wood");

};
game.GE.TextConfig = {
    color: '#FFFFFF',
    stroke: '#000000',
    strokeThickness: 3,
    fontStyle: "bold",
    align: "center",
    fontSize: 14,
    fixedWidth: 100,
    fixedHeight: 24,
    backgroundColor: "#000000",
    padding: {
        y: 5
    }
};

function fillCityWithBuilding() {
    for (var prop in BuildingOnFloor) {
        BuildingOnFloor[prop].destroy();
        if (BuildingOnFloor[prop].LvlImage)
            BuildingOnFloor[prop].LvlImage.destroy();
        if (BuildingOnFloor[prop].LvlText)
            BuildingOnFloor[prop].LvlText.destroy();
        for (var iii in BuildingOnFloor[prop].BuildingAni)
            if (BuildingOnFloor[prop].BuildingAni[iii] && BuildingOnFloor[prop].BuildingAni[iii].destroy)
                BuildingOnFloor[prop].BuildingAni[iii].destroy();
        delete BuildingOnFloor[prop];
    }
    /*Crafty("hammer_start").each(function () {
     this.destroy();
     });*/

    if (!game.City.getCity().BuildingType) {
        if (Check)
            game.City.getCityBuilding().done(function() {
                fillCityWithBuilding();
            });
        Check = false;
        return;
    }


    game.GE.AddCityFixedBuilding();
    game.GE.AddCityBuilding(14 * X_GRID, 3.25 * Y_GRID, "market");
    game.GE.AddCityBuilding(1780, 461, "light_house_1");
    game.GE.AddCityBuilding(1685, 506, "light_house_2");
    game.GE.AddCityBuilding(1587, 556, "light_house_3");
    game.GE.AddCityBuilding(1487, 603, "light_house_4");
    game.GE.AddCityBuilding(1792, 557, "light_house_5");
    game.GE.AddCityBuilding(1695, 609, "light_house_6");
    game.GE.AddCityBuilding(1595, 659, "light_house_7");
    game.GE.AddCityBuilding(1807, 663, "light_house_8");
    game.GE.AddCityBuilding(1702, 714, "light_house_9");
    game.GE.AddCityBuilding(1802, 775, "light_house_10");


    game.GE.AddCityBuilding(1353, 673, "under_palace_1");
    game.GE.AddCityBuilding(1249, 715, "under_palace_2");
    game.GE.AddCityBuilding(1145, 763, "under_palace_3");
    game.GE.AddCityBuilding(1458, 724, "under_palace_4");
    game.GE.AddCityBuilding(1353, 769, "under_palace_5");
    game.GE.AddCityBuilding(1246, 813, "under_palace_6");
    game.GE.AddCityBuilding(1568, 779, "under_palace_7");
    game.GE.AddCityBuilding(1464, 822, "under_palace_8");
    game.GE.AddCityBuilding(1352, 876, "under_palace_9");
    game.GE.AddCityBuilding(1674, 829, "under_palace_10");
    game.GE.AddCityBuilding(1565, 880, "under_palace_11");
    game.GE.AddCityBuilding(1457, 923, "under_palace_12");


    if (Number(game.CurrentCity.City.lvl) > 0)
        fillCityLvl_1();
    if (Number(game.CurrentCity.City.lvl) > 1)
        fillCityLvl_2();
    if (Number(game.CurrentCity.City.lvl) > 2)
        fillCityLvl_3();
    if (game.CurrentCity.City.food)
        Animation.cityProductionRate();

    for (var BuildingPlace in BuildingOnFloor) {
        BuildingOnFloor[BuildingPlace].setDataEnabled();
        BuildingOnFloor[BuildingPlace].data.set("BuildingPlace", BuildingPlace);
    }

}




function fillCityLvl_3() {

    game.GE.AddCityBuilding(1172, 368, "above_palace_1").setFlipX(true);
    game.GE.AddCityBuilding(1070, 417, "above_palace_2").setFlipX(true);
    game.GE.AddCityBuilding(1278, 420, "above_palace_3").setFlipX(true);
    game.GE.AddCityBuilding(1173, 469, "above_palace_4").setFlipX(true);
    game.GE.AddCityBuilding(1012, 554, "above_palace_5").setFlipX(true);
    game.GE.AddCityBuilding(904, 606, "above_palace_6").setFlipX(true);

    game.GE.AddCityBuilding(471, 413, "around_wood_1").setFlipX(true);
    game.GE.AddCityBuilding(580, 464, "around_wood_2").setFlipX(true);
    game.GE.AddCityBuilding(479, 516, "around_wood_3").setFlipX(true);

}



function fillCityLvl_2() {

    game.GE.AddCityBuilding(628, 139, "under_wall_1").setFlipX(true);
    game.GE.AddCityBuilding(525, 185, "under_wall_2").setFlipX(true);
    game.GE.AddCityBuilding(423, 229, "under_wall_3").setFlipX(true);
    game.GE.AddCityBuilding(728, 187, "under_wall_4").setFlipX(true);
    game.GE.AddCityBuilding(628, 233, "under_wall_5").setFlipX(true);
    game.GE.AddCityBuilding(526, 279, "under_wall_6").setFlipX(true);
    game.GE.AddCityBuilding(823, 239, "under_wall_7").setFlipX(true);
    game.GE.AddCityBuilding(725, 284, "under_wall_8").setFlipX(true);
    game.GE.AddCityBuilding(627, 333, "under_wall_9").setFlipX(true);
    game.GE.AddCityBuilding(930, 287, "under_wall_10").setFlipX(true);
    game.GE.AddCityBuilding(836, 337, "under_wall_11").setFlipX(true);
    game.GE.AddCityBuilding(737, 383, "under_wall_12").setFlipX(true);



}


function fillCityLvl_1() {

    game.GE.AddCityBuilding(625, 918, "hill_1").setFlipX(true);
    game.GE.AddCityBuilding(732, 864, "hill_2").setFlipX(true);
    game.GE.AddCityBuilding(832, 814, "hill_3").setFlipX(true);
    game.GE.AddCityBuilding(517, 867, "hill_4").setFlipX(true);
    game.GE.AddCityBuilding(628, 810, "hill_5").setFlipX(true);
    game.GE.AddCityBuilding(729, 759, "hill_6").setFlipX(true);
    game.GE.AddCityBuilding(820, 712, "hill_7").setFlipX(true);
    game.GE.AddCityBuilding(478, 785, "hill_8").setFlipX(true);
    game.GE.AddCityBuilding(575, 733, "hill_9").setFlipX(true);
    game.GE.AddCityBuilding(672, 685, "hill_10").setFlipX(true);
    game.GE.AddCityBuilding(374, 732, "hill_11").setFlipX(true);
    game.GE.AddCityBuilding(478, 680, "hill_12").setFlipX(true);
}


/*!
 * screenfull
 * v3.3.2 - 2017-10-27
 * (c) Sindre Sorhus; MIT License
 */

! function() {
    "use strict";
    var a = "undefined" != typeof window && void 0 !== window.document ? window.document : {},
        b = "undefined" != typeof module && module.exports,
        c = "undefined" != typeof Element && "ALLOW_KEYBOARD_INPUT" in Element,
        d = function() {
            for (var b, c = [
                    ["requestFullscreen", "exitFullscreen", "fullscreenElement", "fullscreenEnabled", "fullscreenchange", "fullscreenerror"],
                    ["webkitRequestFullscreen", "webkitExitFullscreen", "webkitFullscreenElement", "webkitFullscreenEnabled", "webkitfullscreenchange", "webkitfullscreenerror"],
                    ["webkitRequestFullScreen", "webkitCancelFullScreen", "webkitCurrentFullScreenElement", "webkitCancelFullScreen", "webkitfullscreenchange", "webkitfullscreenerror"],
                    ["mozRequestFullScreen", "mozCancelFullScreen", "mozFullScreenElement", "mozFullScreenEnabled", "mozfullscreenchange", "mozfullscreenerror"],
                    ["msRequestFullscreen", "msExitFullscreen", "msFullscreenElement", "msFullscreenEnabled", "MSFullscreenChange", "MSFullscreenError"]
                ], d = 0, e = c.length, f = {}; d < e; d++)
                if ((b = c[d]) && b[1] in a) {
                    for (d = 0; d < b.length; d++) f[c[0][d]] = b[d];
                    return f
                }
            return !1
        }(),
        e = {
            change: d.fullscreenchange,
            error: d.fullscreenerror
        },
        f = {
            request: function(b) {
                var e = d.requestFullscreen;
                b = b || a.documentElement, / Version\/5\.1(?:\.\d+)? Safari\//.test(navigator.userAgent) ? b[e]() : b[e](c && Element.ALLOW_KEYBOARD_INPUT)
            },
            exit: function() {
                a[d.exitFullscreen]()
            },
            toggle: function(a) {
                this.isFullscreen ? this.exit() : this.request(a)
            },
            onchange: function(a) {
                this.on("change", a)
            },
            onerror: function(a) {
                this.on("error", a)
            },
            on: function(b, c) {
                var d = e[b];
                d && a.addEventListener(d, c, !1)
            },
            off: function(b, c) {
                var d = e[b];
                d && a.removeEventListener(d, c, !1)
            },
            raw: d
        };
    if (!d) return void(b ? module.exports = !1 : window.screenfull = !1);
    Object.defineProperties(f, {
        isFullscreen: {
            get: function() {
                return Boolean(a[d.fullscreenElement])
            }
        },
        element: {
            enumerable: !0,
            get: function() {
                return a[d.fullscreenElement]
            }
        },
        enabled: {
            enumerable: !0,
            get: function() {
                return Boolean(a[d.fullscreenEnabled])
            }
        }
    }), b ? module.exports = f : window.screenfull = f
}();
var alert_box = {
    alert: function(title, content) {

        var box = '<div id="over_lay_alert">' +
            '    <div id="alert_container">' +
            '        <div id="alert_head">' +
            '            <div>' +
            '                <img src="images/panner/king_name.png"/>' +
            '            </div>' +
            '            <div id="alert-title">' +
            title +
            '            </div>' +
            '            <img src="images/btns/close_b.png" class="img-sml close-alert"/>' +
            '        </div>' +
            content +
            '    </div>' +
            '</div>';
        return box;
    },
    alert_content_army: function(el_from, el_to, max) {

        var army_content = ` <div id="alert_box" class="alert_for_hero_trade">
                                <div class="row-1"> 
                                    <label class="remin">
                                        0
                                    </label>
                                    <input type="range" min="1" max="${max}" id="range_input" value="1"/>
                                    <label class="avail">
                                         ${max}
                                    </label>
                                </div>
                                <div class="row-2">
                                    <input type="text" max="${max}" min="1" step="${(max-1)}" id="input-army-move"  class="amount-input only_num input numeric pull-L" value="${(max>0 ? 1:0)}"/> 
                                    <div class="number-arrow-wrapper pull-L" style="margin-left: -31px; margin-top: 4.5px;">
                                        <label class="number-arrow up"></label>
                                        <label class="number-arrow down"></label>
                                    </div>
                                    <label style="line-height: 38px;"> / ${max}</label>
                                    
                                </div>
                                <div  class="row-3">
                                    <div class="confim-btn">
                                        <button class="full-btn full-btn-3x trans-con enter ellipsis">${Translate.Button.General.Confirm[UserLag.language]}</button>
                                    </div>
                                </div>
                            </div>`;

        return army_content;
    },
    alert_content_Guild_FE_list: function() {

        var army_content = `   <div id="alert_box" class="F_E-list">
                                    <div class="row-1"> 
                                        <input id="GuildEneFriInput" type="text" data-id-guild="null" class="input">
                                        <label class="th ellipsis">${Translate.Title.TH.LeagueName[UserLag.language]}</label>
                                        <div id="g-search_result"class="search_res">
                                            <ul> 
                                                
                                            </ul>
                                        </div>

                                    </div>
                                    <div class="row-2">
                                        <ul>
                                            <li>    
                                                <input id="trigger_1" type="radio" name="guild_relation" value="${game.BaseData.GuildRelation.RelationEnemy}" >
                                                <label for="trigger_1" class="checker"></label>
                                                <span> عدو</span>
                                            </li>
                                            <li>    
                                                <input id="trigger_2" type="radio" name="guild_relation" value="${game.BaseData.GuildRelation.RelationFriend}">
                                                <label for="trigger_2" class="checker"></label>
                                                <span>صديق</span>
                                            </li>
                                            <li>    
                                                <input id="trigger_3" type="radio" name="guild_relation"  checked value="${game.BaseData.GuildRelation.RelationAllay}">
                                                <label for="trigger_3" class="checker" ></label>
                                                <span> محايد</span>
                                            </li>
                                        </ul>
                                    </div>
                                    <div class="row-3">
                                        <div class="confim-btn">

                                            <button class="full-btn  full-btn-3x"   id="submit-guild-relation">
                                                تأكيد
                                            </button>

                                        </div>

                                    </div>
                                </div> `;

        return army_content;
    },
    alert_content_Guild_Invite: function() {

        var army_content = `   <div id="alert_box" class="F_E-list">
                                    <div class="row-1"> 
                                        <input type="text"  id="search_by_name_forGuild" class="input">
                                        <label class="th ellipsis">${Translate.Title.TH.LordName[UserLag.language]}</label>
                                        <div id="search_result"  class="search_res">
                                            <ul> 
                                                
                                            </ul>
                                        </div>

                                    </div>
                                    
                                    <div class="row-3">
                                        <div class="confim-btn">

                                            <button class="full-btn full-btn-3x"   id="submit-guild-invite">
                                                ارسال دعوة
                                            </button>

                                        </div>

                                    </div>
                                </div> `;

        return army_content;
    },
    alert_content_attack: function(task, coords) {
        var content = `<div id="alert_box" class="for_battel">        
                            <div class="row-2">
                                ${task}</br>
                                ${coords}
                            </div>    
                            <div class="row-3">        
                                <div class="confim-btn">            
                                    <button class="full-btn full-btn-3x battel-con pull-R enter ellipsis">${Translate.Button.Building.Confirm[UserLag.language]}</button>    
                                    <button class="full-btn full-btn-3x battel-can pull-L ellipsis">${Translate.Button.General.Cancel[UserLag.language]}</button>  
                                </div>    
                            </div>
                        </div> `;


        return content;
    },
    confirmUse_single: function(use_for, matrial, title, other) {
        var content = `<div id="alert_box" class="for_battel">        
                            <div class="row-2">
                                ${title}
                            </div>    
                            <div class="row-3">        
                                <div class="confim-btn">            
                                    <button id="useItemButton" class="full-btn  full-btn-3x pull-R enter ellipsis" data-use-for="${use_for}" data-item="${matrial}" data-other="${other}" >${Translate.Button.Building.Confirm[UserLag.language]}</button>    
                                    <button class="full-btn full-btn-3x battel-can pull-L ellipsis">${Translate.Button.General.Cancel[UserLag.language]}</button>  
                                </div>    
                            </div>
                        </div> `;
        return content;
    },
    confirmMessage: function(title) {
        var content = `<div id="alert_box">        
                            <div class="row-2" style="text-align:center">
                                ${title}
                            </div>    
                            <div class="row-3">        
                                <div class="confim-btn">            
                                    <button id="closeAlertBoxButton" class="full-btn full-btn-3x pull-R enter ellipsis">${Translate.Button.Building.Confirm[UserLag.language]}</button>    
                                    
                                </div>    
                            </div>
                        </div> `;


        $("body").append(this.alert("تنبيه", content));

    },
    close: function() {
        $('.close-alert').trigger('click');
    },

    succesMessage: function(msg) {


        var box = `<div id="fade-msg">
                        <p class="success stroke">
                            ${msg}
                        </p>
                    </div>`;

        $("#fade-msg").remove();
        $("body").append(box);
        $("#fade-msg").animate({
            top: "30%"
        }, 3000, "linear", function() {
            $(this).animate({
                top: "150px",
                opacity: '0'
            }, 2000, "linear", function() {

                $(this).remove();

            });
        });

    },
    failMessage: function(msg) {


        var box = `<div id="fade-msg">
                        <p class="fail stroke">
                            ${msg}
                        </p>
                    </div>`;

        $("#fade-msg").remove();
        $("body").append(box);
        $("#fade-msg").animate({
            top: "30%"
        }, 3000, "linear", function() {
            $(this).animate({
                top: "150px",
                opacity: '0'
            }, 2000, "linear", function() {

                $(this).remove();

            });
        });

    },

    confirmDialog: function(msg, yesCallBack) {

        var content = ` <div id="alert_box" class="for_battel">        
                            <div class="row-2">
                                ${msg}
                            </div>    
                            <div class="row-3">        
                                <div class="confim-btn">            
                                    <button class="full-btn full-btn-3x pull-R enter ellipsis" id="btn-confirm-yes">${Translate.Button.Building.Confirm[UserLag.language]}</button>    
                                    <button class="full-btn full-btn-3x pull-L ellipsis" id="btn-confirm-no">${Translate.Button.General.Cancel[UserLag.language]}</button>  
                                </div>    
                            </div>
                        </div> `;

        $("body").append(alert_box.alert(Translate.Button.Building.Confirm[UserLag.language], content));

        $("#btn-confirm-yes").click(function() {


            if (typeof yesCallBack === "function") {

                yesCallBack();

            }

            alert_box.close();

        });

        $("#btn-confirm-no").click(function() {

            alert_box.close();

        });

    },
    confirmWithInput: function(msg, container, yesCallBack) {

        var content = `<div id="alert-with-input">
                            <div class="wrapper">
                                <div class="paragraph">
                                    ${msg}
                                </div>
                                <div class="container">
                                    ${container}
                                </div>
                            </div>
                            <div class="row-3">        
                                <div class="confim-btn">            
                                    <button class="full-btn full-btn-3x pull-R ellipsis" id="btn-confirm-yes">${Translate.Button.Building.Confirm[UserLag.language]}</button>    
                                    <button class="full-btn full-btn-3x pull-L ellipsis" id="btn-confirm-no">${Translate.Button.General.Cancel[UserLag.language]}</button>  
                                </div>    
                            </div>
                        </div> `;

        $("body").append(alert_box.alert(Translate.Button.Building.Confirm[UserLag.language], content));

        $("#btn-confirm-yes").click(function() {


            if (typeof yesCallBack === "function") {

                yesCallBack();

            }

            alert_box.close();

        });

        $("#btn-confirm-no").click(function() {

            alert_box.close();

        });

    }

};




alert_box.systemChatMessage = function(message) {


    var msg = `<div class="msg-unit sysetm-chat-notif"  >
                            <div class="msg-body">
                                <P>
                                   ${message}
                                </P>
                            </div>
                        </div>`;
    $("#msg-area").append(msg);

    if ($("#msg-area").getNiceScroll(0).page.maxh - $("#msg-area").getNiceScroll(0).getScrollTop() < 5) {
        setTimeout(function() {
            $("#msg-area").getNiceScroll(0).doScrollTop($("#msg-area").getNiceScroll(0).getContentSize().h, 0);
        }, 100);
    }


};



alert_box.downGradeBuilding = function(place) {

    var content = ` <div id="downdrade-box">
                        <div class="paragraph">
                            هل انت متاكد من انزل  المستوى الحالى للمبنى
                        </div>
                        <div class="two-btn">
                            <button class="full-btn pull-R full-btn-2x ellipsis" id="btn-confirm-no" id="closeAlertBoxButton">${Translate.Button.General.Cancel[UserLag.language]}</button>
                            <button class="full-btn pull-R full-btn-2x" id="downgrade-building-lvl" data-place="${place}">خفض المستوى</button>
                            <button class="full-btn pull-R full-btn-2x" id="downgradeBuildingConfirmButton" data-building-place="${place}">تفجير</button>
                        </div>
                    </div>`;

    $("body").append(alert_box.alert(`خفض مستوى ${BuildingConstData[game.City.getCity().BuildingType[place]].title}`, content));


};

alert_box.dismisArmy = function(place) {

    var selected_type = $("#dialg_box .mili_building .middle-content .selected_sol").attr("army_type");
    var content = ` 
                    <div id="over_lay_alert">  
                        <div  id="dismiss-army-container" class="bg-general">    
                            <div id="alert_head">        
                                <div>             
                                    <img src="images/panner/king_name.png">     
                                </div>  
                                <div id="alert-title">طرد الجنود            </div>    
                                <img src="images/btns/close_b.png" class="img-sml close-alert">    
                            </div> 
                            <div id="dismiss-army-box">
                                <div class="table">
                                    <div class="th">
                                        <div class="td_1 ellipsis">${Translate.Title.TH.Resource[UserLag.language]}</div>
                                        <div class="td_2 ellipsis">${Translate.Title.TH.AcquiredAmount[UserLag.language]}</div>
                                        <div class="td_3 ellipsis">${Translate.Title.TH.YouHave[UserLag.language]}</div>
                                    </div>
                                    <div class="tr" data-resouce="food">
                                        <div class="td_1 ellipsis">غذاء</div>
                                        <div class="td_2 ellipsis">${game.BaseData.Army[selected_type].dismess.food}</div>
                                        <div class="td_3 ellipsis">${Math.floor(game.CurrentCity.City.food)}</div>
                                    </div>
                                    <div class="tr" data-resouce="wood">
                                        <div class="td_1 ellipsis">اخشاب</div>
                                        <div class="td_2 ellipsis">${game.BaseData.Army[selected_type].dismess.wood}</div>
                                        <div class="td_3 ellipsis">${Math.floor(game.CurrentCity.City.wood)}</div>
                                    </div>
                                    <div class="tr" data-resouce="stone">
                                        <div class="td_1 ellipsis">احجار</div>
                                        <div class="td_2 ellipsis">${game.BaseData.Army[selected_type].dismess.stone}</div>
                                        <div class="td_3 ellipsis">${Math.floor(game.CurrentCity.City.stone)}</div>
                                    </div>
                                    <div class="tr" data-resouce="metal">
                                        <div class="td_1 ellipsis">حديد</div>
                                        <div class="td_2 ellipsis">${game.BaseData.Army[selected_type].dismess.metal}</div>
                                        <div class="td_3 ellipsis">${Math.floor(game.CurrentCity.City.metal)}</div>
                                    </div>
                                </div>
                                <div class="dismiss-amount-input">
                                    <div class="pull-L">
                                        <img  src="${game.BaseData.Army[selected_type].image}"/>
                                    </div>
                                    <div class="pull-R">
                                        <div class="wrapper">
                                            <label class="pull-L">${Translate.Button.Hero.Dismiss[UserLag.language]}</label>
                                            <input type="text" id="number-to-dismiss" class="only_num input numeric pull-L" step="${game.CurrentCity.City[selected_type]}" max="${game.CurrentCity.City[selected_type]}" min="0"/>
                                            <div class="number-arrow-wrapper pull-L">
                                                <label class="number-arrow up"></label>
                                                <label class="number-arrow down"></label>
                                            </div>
                                            <div class="possess">
                                                تمتلك  ${game.CurrentCity.City[selected_type]}
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="two-btn">
                                    <button class="full-btn pull-R full-btn-2x" id="closeAlertBoxButton">الغاء</button>
                                    <button class="full-btn pull-L full-btn-2x" id="dismissArmyButton" data-place="undefined">طرد</button>
                                </div>
                            </div>  
                        </div>`;

    $("body").append(content);


};

alert_box.jopFireEmployee = function(place) {

    var fireBenfit = Jop.jops[place].fireBenfit;
    var content = ` 
                    <div id="over_lay_alert">  
                        <div  id="dismiss-army-container" class="bg-general">    
                            <div id="alert_head">        
                                <div>             
                                    <img src="images/panner/king_name.png">     
                                </div>  
                                <div id="alert-title">طرد الجنود            </div>    
                                <img src="images/btns/close_b.png" class="img-sml close-alert">    
                            </div> 
                            <div id="dismiss-army-box">
                                <div class="table">
                                    <div class="th">
                                        <div class="td_1 ellipsis">${Translate.Title.TH.Resource[UserLag.language]}</div>
                                        <div class="td_2 ellipsis">${Translate.Title.TH.AcquiredAmount[UserLag.language]}</div>
                                        <div class="td_3 ellipsis">${Translate.Title.TH.YouHave[UserLag.language]}</div>
                                    </div>
                                    <div class="tr" data-resouce="food">
                                        <div class="td_1 ellipsis">غذاء</div>
                                        <div class="td_2 ellipsis">${fireBenfit.food}</div>
                                        <div class="td_3 ellipsis">${Math.floor(game.CurrentCity.City.food)}</div>
                                    </div>
                                    <div class="tr" data-resouce="wood">
                                        <div class="td_1 ellipsis">اخشاب</div>
                                        <div class="td_2 ellipsis">${fireBenfit.wood}</div>
                                        <div class="td_3 ellipsis">${Math.floor(game.CurrentCity.City.wood)}</div>
                                    </div>
                                    <div class="tr" data-resouce="stone">
                                        <div class="td_1 ellipsis">احجار</div>
                                        <div class="td_2 ellipsis">${fireBenfit.stone}</div>
                                        <div class="td_3 ellipsis">${Math.floor(game.CurrentCity.City.stone)}</div>
                                    </div>
                                    <div class="tr" data-resouce="metal">
                                        <div class="td_1 ellipsis">حديد</div>
                                        <div class="td_2 ellipsis">${fireBenfit.metal}</div>
                                        <div class="td_3 ellipsis">${Math.floor(game.CurrentCity.City.metal)}</div>
                                    </div>
                                </div>
                                <div class="dismiss-amount-input">
                                    <div class="pull-L">
                                        <img  src="${Jop.jops[place].image}"/>
                                    </div>
                                    <div class="pull-R">
                                        <div class="wrapper">
                                            <label class="pull-L">${Translate.Button.Hero.Dismiss[UserLag.language]}</label>
                                            <input type="text" id="number-to-dismiss" class="only_num numeric pull-L input" step="${game.City.getCity().Jop[Jop.jops[place].produce]}" max="${game.City.getCity().Jop[Jop.jops[place].produce]}" min="0"/>
                                            <div class="number-arrow-wrapper pull-L">
                                                <label class="number-arrow up"></label>
                                                <label class="number-arrow down"></label>
                                            </div>
                                            <div class="possess">
                                                تمتلك  ${game.City.getCity().Jop[Jop.jops[place].produce]}
                                            </div>
                                        </div>
                                    </div>

                                </div>
                                <div class="two-btn">
                                    <button class="full-btn pull-R full-btn-2x" id="closeAlertBoxButton">${Translate.Button.General.Cancel[UserLag.language]}</button>
                                    <button class="full-btn pull-L full-btn-2x" id="fireJopLaborButton" data-produce="${Jop.jops[place].produce}">${Translate.Button.Hero.Dismiss[UserLag.language]}</button>
                                </div>
                            </div>  
                        </div>`;

    $("body").append(content);


};

alert_box.alert3X2 = function(title, content) {

    var content = ` <div id="over_lay">
                        <div id="overview-palace-bg">
                            <div class="header">
                                <div class="right">
                                    <div id="close-over-lay" class="close"></div>
                                </div>
                                <div class="middel">
                                    <div class="title">
                                        ${title}
                                    </div>
                                </div>
                                <div class="left">

                                </div>
                            </div>
                            <div class="content">
                                ${content}
                            </div>
                        </div>
                    </div>`;

    $("body").append(content);
    $("#close-over-lay").click(function() {
        $("#over_lay").remove();
    });
};

alert_box.heroReviewDetail = function(hero) {

    if (!hero)
        hero = game.CurrentHero;

    var sword = getEquipData(hero.Equip.sword);
    var helmet = getEquipData(hero.Equip.helmet);
    var boot = getEquipData(hero.Equip.boot);
    var armor = getEquipData(hero.Equip.armor);
    var shield = getEquipData(hero.Equip.shield);

    var container = `<div id="hero-over-view">
                        <div class="right">
                            <div class="equip-review">
                                <ul>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(${helmet.image})"></div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(images/tech/no_army.png)"></div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(${armor.image})"></div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(${boot.image})"></div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(${sword.image})"></div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(${shield.image})"></div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(images/tech/no_army.png)"></div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(images/tech/no_army.png)"></div>
                                        </div>
                                    </li>
                                    <li style="margin-left: 25%;">
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(images/tech/no_army.png)"></div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(images/tech/no_army.png)"></div>
                                        </div>
                                    </li>
                                </ul>
                                    
                            </div>
                            <div class="row row-3">
                                <div class="pull-L col-1">الجنود- الفيلق</div>                       
                                <div class="pull-L col-2">
                                    <div class="over-text">${getHeroCapById(hero.Hero.id_hero) +"/"+ getHeroMaxCap(hero)}</div>
                                    <div class="colored-bar filak" style="width: ${(getHeroCap(hero.Army)*100/getHeroMaxCap(hero))}%"></div>
                                </div>
                                <div class="pull-L col-3">
                                </div>
                            </div>
                            <div class="dicor"></div>
                            
                            <div class="army-review">
                                
                                <ul>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(images/tech/${army_typs[hero.Army.f_1_type]})">
                                                <div class="amount ${Fixed.getArmyAmountColor(hero.Army.f_1_num)}"> ${hero.Army.f_1_num}</div>
                                            </div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(images/tech/${army_typs[hero.Army.f_2_type]})">
                                                <div class="amount ${Fixed.getArmyAmountColor(hero.Army.f_2_num)}"> ${hero.Army.f_2_num}</div>
                                            </div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(images/tech/${army_typs[hero.Army.f_3_type]})">
                                                <div class="amount ${Fixed.getArmyAmountColor(hero.Army.f_3_num)}"> ${hero.Army.f_3_num}</div>
                                            </div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(images/tech/${army_typs[hero.Army.b_1_type]})">
                                                <div class="amount ${Fixed.getArmyAmountColor(hero.Army.b_1_num)}"> ${hero.Army.b_1_num}</div>
                                            </div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(images/tech/${army_typs[hero.Army.b_2_type]})">
                                                <div class="amount ${Fixed.getArmyAmountColor(hero.Army.b_2_num)}"> ${hero.Army.b_2_num}</div>
                                            </div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <div class="img" style="background-image: url(images/tech/${army_typs[hero.Army.b_3_type]})">
                                                <div class="amount ${Fixed.getArmyAmountColor(hero.Army.b_3_num)}"> ${hero.Army.b_3_num}</div>
                                            </div>
                                        </div>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="middel">
                            
                        </div>
                        <div class="left">
                            <div class="hero-data">
                                <div class="name">
                                    <div class="wrapper">
                                        Mutapha
                                    </div>
                                </div>
                                <div class="image">
                                    <div class="wrapper">
                                        <div class="avatar-hero" style="background-image: url(${game.BaseData.HeroAvatar[hero.Hero.avatar]})">
                                            <div class="lvl">${hero.Hero.lvl}</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="hero-points">
                                <table border="1">
                                    <tr>
                                        <td>قوة السيطرة</td>
                                        <td> <span style=" color: #008c10;"> ${hero.Hero.point_a} + ${hero.Hero.point_a_plus}</span></td>
                                    </tr>
                                    <tr>
                                        <td>الشجاعة</td>
                                        <td> <span style="color: #b43d02;"> ${hero.Hero.point_b} + ${hero.Hero.point_b_plus}</span></td>
                                    </tr>
                                    <tr>
                                        <td>الدفاع</td>
                                        <td> <span style="color: #0065ac;"> ${hero.Hero.point_c} + ${hero.Hero.point_c_plus}</span></td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                    </div>`;
    alert_box.alert3X2(Translate.Title.Alert.ShowHero[UserLag.language], container);
};



alert_box.randomMove = function() {
    var list = [];

    for (var iii in game.World.Province.Title) {
        list.push({
            title: game.World.Province.Title[iii][UserLag.language],
            value: iii
        });
    }



    var box = ` <div id="matral-box-use" class="bg-general"> 
                <div id="alert_head">    
                    <div>        
                        <img src="images/panner/king_name.png">    
                    </div>       
                    <div id="alert-title">${Translate.Button.MenuList.RelocateNow[UserLag.language]}</div>            
                    <img src="images/btns/close_b.png" class="img-sml close-alert_container">       
                </div>
                <div id="alert_box" class="matrial-show">        
                    <div id="move-city-to">
                        <div class="header-wrapper">
                            <div class="wrapper flex">
                                <div class="name">${Translate.Text.Province[UserLag.language]}:</div>
                                ${game.Ui.Select.make(list , 0)}
                                <div class="con-btn">
                                    <button id="relocate-city-now" class="red-btn-wide relocate">${Translate.Button.MenuList.RelocateNow[UserLag.language]}</button>
                                </div>
                            </div>
                        </div>
                        <div class="body-wrapper">
                            <div class="content">

                            </div>
                        </div>
                    </div>
                </div>   
            </div>
                `;
    $("#matral-box-use").remove();
    $("body").append(`<div id="over_lay_alert">${box}</div>`);
};

$(document).on("click", ".close-alert", function() {
    $(document).off("click", ".trans-con");
    $("#over_lay_alert").remove();
});

/*  
 * هظبط الانبوت بتاع الجيش*/
$(document).on("keydown", ".amount-input", function() {

    var max_val = parseInt($(this).attr("max"));
    var amount = parseInt($(this).val()) || 0;
    if (amount > max_val) {
        $(this).val(max_val);
    }

    $("#range_input").val(amount);
});

/*    RANGE INPUT  */
$(document).on("input", "#range_input", function() {
    $(".amount-input").val($(this).val());
});




$(document).on("click", "#useItemButton", function() {
    var useFor = $(this).attr("data-use-for");
    var item = $(this).attr("data-item");
    var other = $(this).attr("data-other");
    useMatrial(useFor, item, other);
});



$(document).on("click", "#closeAlertBoxButton", function() {
    alert_box.close();
});

//<button class="full-btn pull-R full-btn-2x" id="downgradeBuildingConfirmButton" onclick="BoxOfMatrialToUse(['powder_keg'], 'downgrade-building-lvl', 1 , '${place}');">تفجير</button>
$(document).on("click", "#downgradeBuildingConfirmButton", function() {
    var place = $(this).attr("data-building-place");
    BoxOfMatrialToUse(['powder_keg'], 'downgrade-building-lvl', 1, place);
});

//<button class="full-btn pull-L full-btn-2x" id="dismissArmyButton" onclick="" data-place="undefined">طرد</button>

$(document).on("click", "#dismissArmyButton", function() {
    $("#dismissArmyButton").prop("disabled", true);
    game.Army.armyDismes();
});


//<button class="full-btn pull-L full-btn-2x" id="fireJopLaborButton" data-produce="${Jop.jops[place].produce}" onclick="Jop.fireLabor('${Jop.jops[place].produce}');">${Translate.Button.Hero.Dismiss[UserLag.language]}</button>
$(document).on("click", "#fireJopLaborButton", function() {
    var produce = $(this).attr("data-produce");
    Jop.fireLabor(produce);
}); /*______________________________________________________________________________*/
/*________________________________________-city PROFILE OBJECT___________________*/


var city_profile = {


    resource_veiw: function() {

        if (!game.CurrentCity.City)
            return;
        if (!game.City.getCity().Jop)
            return;
        // console.log();
        var taxs = 100 - Number(game.CurrentCity.City["taxs"]);
        var pop = game.CurrentCity.City.pop;
        var avail_pop = Math.max(0,
            (pop - game.City.getCity().Jop.food -
                game.City.getCity().Jop.wood -
                game.City.getCity().Jop.stone -
                game.City.getCity().Jop.metal));

        var coin = Number(game.CurrentCity.City.coin);
        var food = Number(game.CurrentCity.City.food);
        var wood = Number(game.CurrentCity.City.wood);
        var stone = Number(game.CurrentCity.City.stone);
        var metal = Number(game.CurrentCity.City.metal);
        var coin_total = (game.CurrentCity.City.coin_in - game.CurrentCity.City.coin_out);
        var food_total = (game.CurrentCity.City.food_in - game.CurrentCity.City.food_out);
        var wood_total = (game.CurrentCity.City.wood_in - game.CurrentCity.City.wood_out);
        var stone_total = (game.CurrentCity.City.stone_in - game.CurrentCity.City.stone_out);
        var metal_total = (game.CurrentCity.City.metal_in - game.CurrentCity.City.metal_out);


        var output = `<table>
                            <tr>
                                <td>
                                    <div class="left" id="city-taxs-in-cp" title="الضرائب">
                                        <lable class="img" style="background-image: url(images/icons/taxs_collect.png);"></lable>
                                        <span class="count"> ${getArabicNumbers(game.CurrentCity.City["taxs"])}% </span>
                                    </div>
                                    <div class="middle_td">
                                        <lable class="img" style="margin-left: 20px; background-image: url(images/icons/loyal.png) ; height:22px"></lable>
                                        <span class="count"> ${getArabicNumbers(game.CurrentCity.City.loy)}/${game.CurrentCity.City.dis_loy}</span>
                                    </div>
                                    <div class="right">
                                        <lable class="pluse" src="images/icons/plus.png" id="increase-city-loy"></lable>
                                    </div>
                                </td>
                                <td>
                                    <div class="left" title=""تعداد السكان>
                                        <lable class="img" style="background-image: url(images/style/population.png);"></lable>
                                        <span class="count">${getArabicNumbers(parseInt(pop))}</span>
                                    </div>
                                    <div class="right">
                                        <span class="wrapper-rate rate"> ${getArabicNumbers(parseInt(avail_pop))}</span>
                                         <lable  class="pluse" src="images/icons/plus.png" id="increase-city-pop"></lable>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td class="resource" data-count="coin_cap" title="سعة القصر للعملات" data-cap="${game.CurrentCity.City.coin_cap}" data-resource="coin">
                                    <div class="left">
                                         <lable class="img" style="background-image: url(images/style/coin.png);"></lable>
                                         <span class="count-wrapper ${coin >= game.CurrentCity.City.coin_cap ? "over-rate" : "count"}"> ${Math.floor(coin)} </span>
                                    </div>
                                    <div class="right">
                                        <span class="wrapper-rate ${coin_total > 0 ? "rate":"rate-neg"}" data-rate="${Math.floor(coin_total)}">
                                            ${Math.floor(coin_total)}
                                        </span>
                                        <lable  class="pluse"  src="images/icons/plus.png" id="increase-city-coin"></lable>
                                    </div>
                                </td>
                                <td>
                                    <div class="buy_button">
                                        <div class="full-btn">
                                            شراء موارد
                                        </div>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td class="resource" data-count="food_cap" data-resource="food" data-cap="${game.CurrentCity.City["food_cap"]}">
                                    <div class="left">
                                        <lable class="img" style="background-image: url(images/style/food.png);"></lable>
                                        <span class="count-wrapper ${food >= game.CurrentCity.City.food_cap ? "over-rate" : "count"}" title="المحاصيل">
                                            ${Math.floor(food)}
                                        </span>
                                    </div>
                                    <div class="right">
                                        <span class="wrapper-rate ${food_total > 0 ? "rate":"rate-neg"}" data-rate="${food_total}"> 
                                            ${Math.floor(food_total)}
                                        </span>
                                        <lable class="pluse" src="images/icons/plus.png" id="increase-city-food"></lable>
                                    </div>
                                </td>
                                <td class="resource" data-count="stone_cap" data-resource="stone" data-cap="${game.CurrentCity.City["stone_cap"]}">
                                    <div class="left">
                                        <lable class="img" style="background-image: url(images/style/stone.png);"></lable>
                                        <span class="count-wrapper ${stone >= game.CurrentCity.City.stone_cap ? "over-rate" : "count"}" title="احجار"> 
                                            ${Math.floor(stone)} 
                                        </span>
                                    </div>
                                    <div class="right">
                                        <span class="wrapper-rate ${stone_total > 0 ? "rate":"rate-neg"}" data-rate="${stone_total}">
                                            ${Math.floor(stone_total)}
                                        </span>
                                        <lable class="pluse"   id="increase-city-stone"></lable>
                                    </div>
                                </td>
                            </tr>
                            <tr>
                                <td class="resource" data-count="wood_cap" data-resource="wood" data-cap=" ${game.CurrentCity.City["wood_cap"]}">
                                    <div class="left">
                                        <lable class="img" style="background-image: url(images/style/wood.png);"></lable>
                                        <span class="count-wrapper ${wood >= game.CurrentCity.City.wood_cap ? "over-rate" : "count"}" title="اخشاب">
                                            ${Math.floor(wood)}
                                        </span>
                                    </div>
                                    <div class="right">
                                        <span class="wrapper-rate ${wood_total > 0 ? "rate":"rate-neg"}" data-rate="${wood_total}">
                                            ${Math.floor(wood_total)}
                                        </span>
                                        <lable class="pluse" src="images/icons/plus.png" id="increase-city-wood"></lable>
                                    </div>
                                </td>
                                <td class="resource" data-count="metal_cap" data-resource="metal" data-cap="${game.CurrentCity.City["metal_cap"]}">
                                    <div class="left">
                                        <lable class="img" style="background-image: url(images/style/iron.png);"></lable>
                                        <span class="count-wrapper ${metal >= game.CurrentCity.City.metal_cap ? "over-rate" : "count"}" title="معادن">
                                            ${Math.floor(metal)} 
                                        </span>
                                    </div>
                                    <div class="right">
                                        <span class="wrapper-rate ${metal_total > 0 ? "rate":"rate-neg"}"  data-rate="${metal_total}">
                                            ${Math.floor(metal_total)}
                                        </span>
                                        <lable class="pluse" src="images/icons/plus.png" id="increase-city-metal"></lable>
                                    </div>
                                </td>
                            </tr>
                    </table>`;
        $(".page_content").attr("data-view", "resource");
        return output;
    },
    heroList: function() {

        var output = "";
        var idCity = Number(game.CurrentCity.City.id_city);
        for (var idHero in game.DPlayer.Heros) {
            if (Number(game.DPlayer.Heros[idHero].Hero.id_city) !== idCity)
                continue;

            var state = '<img src="images/icons/h_s_incity.png" >';
            if (parseInt(game.DPlayer.Heros[idHero].Hero.id_hero) === game.CurrentCity.City.console) {

                state = '<img src="images/icons/h_s_console.png">';
            } else if (parseInt(game.DPlayer.Heros[idHero].Hero.in_city) === game.Hero.HeroState.HERO_IN_BATTEL) {

                state = '<img src="images/icons/h_s_attack_2.png" >';

            } else if (parseInt(game.DPlayer.Heros[idHero].Hero.in_city) === game.Hero.HeroState.HERO_IN_GARISON) {

                state = '<img src="images/icons/h_s_support.png">';

            }

            output += `<li class="hero_profile" id_hero = "${game.DPlayer.Heros[idHero].Hero.id_hero}" style="background-image: url(${game.BaseData.HeroAvatar[game.DPlayer.Heros[idHero].Hero.avatar]})">

                            <div class="hero_state">
                                ${state}
                            </div>
                            <div class="hero_lvl">
                                <div class="hero_lvl-box" style="float: left ;   font-size: 12px ;  color: white">
                                    ${game.DPlayer.Heros[idHero].Hero.lvl}
                                </div>
                                <img src="images/icons/hero_army.png" style="float: right ;" class="modify-hero-army">
                            </div>
                        </li>`;

        }

        return output;

    },
    hero_veiw: function() {
        var output = '<ul>';
        output += this.heroList();
        output += '</ul>';
        $(".page_content").attr("data-view", "hero");
        return output;
    },
    army_veiw: function() {
        var output = `<div class="army">
                        <div class="left_army">
                            <div class="army_type" data-army="army_a">
                                <div class="army_img">
                                    <div class="wrapper">
                                        <lable class="img" style="background-image: url(images/tech/soldier01.jpg);"></lable>
                                    </div>
                                </div>
                                <div  class="army_count">
                                    <h6 class="stroke ${game.CurrentCity.City.army_a >= 1e5 ? "army-over-100k" : (game.CurrentCity.City.army_a >= 1e4 ? "army-over-10k" : (game.CurrentCity.City.army_a >= 1e3 ? "army-over-1k"  : "" ) ) }">
                                        ${getArabicNumbers(game.CurrentCity.City.army_a)}
                                    </h6>
                                </div>
                            </div>
                            <div class="army_type" data-army="army_b">
                               <div class="army_img">
                                    <div class="wrapper">
                                        <lable class="img" style="background-image: url(images/tech/soldier02.jpg);"></lable>
                                    </div>
                                </div>
                                <div  class="army_count">
                                    <h6 class="stroke ${game.CurrentCity.City.army_b >= 1e5 ? "army-over-100k" : (game.CurrentCity.City.army_b >= 1e4 ? "army-over-10k" : (game.CurrentCity.City.army_b >= 1e3 ? "army-over-1k"  : "" ) ) }">
                                        ${getArabicNumbers(game.CurrentCity.City.army_b)}
                                    </h6>
                                </div>
                            </div>
                            <div class="army_type" data-army="army_c">
                                <div class="army_img">
                                    <div class="wrapper">
                                        <lable class="img" style="background-image: url(images/tech/soldier03.jpg);"></lable>
                                    </div>
                                </div>
                                <div  class="army_count">
                                    <h6 class="stroke ${game.CurrentCity.City.army_c >= 1e5 ? "army-over-100k" : (game.CurrentCity.City.army_c >= 1e4 ? "army-over-10k"  : (game.CurrentCity.City.army_c >= 1e3 ? "army-over-1k"  : "" ) )}">
                                        ${getArabicNumbers(game.CurrentCity.City.army_c)}
                                    </h6>
                                </div>
                            </div>
                            <div class="army_type" data-army="army_d">
                                <div class="army_img">
                                    <div class="wrapper">
                                        <lable class="img" style="background-image: url(images/tech/soldier04.jpg);"></lable>
                                    </div>
                                </div>
                                <div  class="army_count">
                                    <h6 class="stroke ${game.CurrentCity.City.army_d >= 1e5 ? "army-over-100k" : (game.CurrentCity.City.army_d >= 1e4 ? "army-over-10k"  : (game.CurrentCity.City.army_d >= 1e3 ? "army-over-1k"  : "" ) )}">
                                        ${getArabicNumbers(game.CurrentCity.City.army_d)}
                                    </h6>
                                </div>
                            </div>
                            <div class="army_type" data-army="army_e">
                                <div class="army_img">
                                    <div class="wrapper">
                                        <lable class="img" style="background-image: url(images/tech/soldier05.jpg);"></lable>
                                    </div>
                                </div>
                                <div  class="army_count">
                                    <h6 class="stroke ${game.CurrentCity.City.army_e >= 1e5 ? "army-over-100k" : (game.CurrentCity.City.army_e >= 1e4 ? "army-over-10k"  : (game.CurrentCity.City.army_e >= 1e3 ? "army-over-1k"  : "" ) )}">
                                        ${getArabicNumbers(game.CurrentCity.City.army_e)}
                                    </h6>
                               </div>
                            </div>
                            <div class="army_type" data-army="army_f">
                                <div class="army_img">
                                    <div class="wrapper">
                                        <lable class="img" style="background-image: url(images/tech/soldier06.jpg);"></lable>
                                    </div>
                                </div>
                                <div  class="army_count">
                                    <h6 class="stroke ${game.CurrentCity.City.army_f >= 1e5 ? "army-over-100k" : (game.CurrentCity.City.army_f >= 1e4 ? "army-over-10k"  : (game.CurrentCity.City.army_f >= 1e3 ? "army-over-1k"  : "" ) )}">
                                        ${getArabicNumbers(game.CurrentCity.City.army_f)}
                                    </h6>
                                </div>
                            </div>
                            <div class="army_type" data-army="wall_a">
                                <div class="army_img">
                                    <div class="wrapper">
                                        <lable class="img" style="background-image: url(images/tech/defense01.jpg);"></lable>
                                    </div>
                                </div>
                                <div  class="army_count">
                                    <h6 class="stroke ${game.CurrentCity.City.wall_a >= 1e5 ? "army-over-100k" : (game.CurrentCity.City.wall_a >= 1e4 ? "army-over-10k"  : (game.CurrentCity.City.wall_a >= 1e3 ? "army-over-1k"  : "" ) )}">
                                        ${getArabicNumbers(game.CurrentCity.City.wall_a)}
                                    </h6>
                                </div>
                            </div>
           
                            <div class="army_type" data-army="wall_b">
                                <div class="army_img">
                                    <div class="wrapper">
                                        <lable class="img" style="background-image: url(images/tech/defense02.jpg);"></lable>
                                    </div>
                                </div>
                                <div  class="army_count">
                                    <h6 class="stroke ${game.CurrentCity.City.wall_b >= 1e5 ? "army-over-100k" : (game.CurrentCity.City.wall_b >= 1e4 ? "army-over-10k"  : (game.CurrentCity.City.wall_b >= 1e3 ? "army-over-1k"  : "" ) )}">
                                        ${getArabicNumbers(game.CurrentCity.City.wall_b)}
                                    </h6>
                                </div>
                            </div>
                            <div class="army_type" data-army="wall_c">
                                <div class="army_img">
                                    <div class="wrapper">
                                        <lable class="img" style="background-image: url(images/tech/defense03.jpg);"></lable>
                                    </div>
                                </div>
                                <div  class="army_count">
                                    <h6 class="stroke ${game.CurrentCity.City.wall_c >= 1e5 ? "army-over-100k" : (game.CurrentCity.City.wall_c >= 1e4 ? "army-over-10k"  : (game.CurrentCity.City.wall_c >= 1e3 ? "army-over-1k"  : "" ) )}">
                                        ${getArabicNumbers(game.CurrentCity.City.wall_c)}
                                    </h6>
                                </div>
                            </div>
                        </div>
                        <div class="right_army" >
                            <div class="army_type" data-army="spies">
                                <div class="army_img">
                                    <div class="wrapper">
                                        <lable class="img" style="background-image: url(images/items/item027.jpg);"></lable>
                                    </div>
                                </div>
                                <div  class="army_count">
                                    <h6 class="stroke ${game.CurrentCity.City.spies >= 1e5 ? "army-over-100k" : (game.CurrentCity.City.spies >= 1e4 ? "army-over-10k"  : (game.CurrentCity.City.spies >= 1e3 ? "army-over-1k"  : "" ) )}">
                                        ${getArabicNumbers(game.CurrentCity.City.spies)}
                                    </h6>
                                </div>
                            </div>
                        </div>
                    </div>`;
        $(".page_content").attr("data-view", "army");
        return output;
    },
    wild_veiw: function() {

        var all_list = "";
        for (var iii in game.City.getCity().Barray) {

            all_list += `<div class="wild_type">
                            <div class="wild_img" style="background-image: url(images/world/snap-shot/${game.World.UnitTypeData[game.City.getCity().Barray[iii].Type].WSnapShoot})">
                            </div>
                        </div>`;




        }
        var output = `<div class="wild">
                        <div class="city_wild">
                            ${all_list}
                        </div>
                </div>`;
        $(".page_content").attr("data-view", "wild");
        $(".page_content").html(output);
        return output;
    },
    refresh_resource_view: function() {

        var page = $(".page_content");
        if (page.attr("data-view") === "resource") {

            page.html(this.resource_veiw());

        }

    },
    refresh_wild_view: function() {

        var page = $(".page_content");
        if (page.attr("data-view") === "wild") {

            page.html(this.wild_veiw());

        }

    },
    refresh_hero_view: function() {

        var page = $(".page_content");
        if (page.attr("data-view") === "hero") {

            $(".page_content ul").html(this.heroList());

            if ($(".page_content ul").getNiceScroll(0)) {
                $(".page_content ul").getNiceScroll(0).resize();
            }


        }

    },
    refresh_city_resources: function() {


        if (!game.CurrentCity.City)
            return;
        if (!game.CurrentCity.City.id_city)
            return;

        return $.ajax({

            url: "api/city.php",
            data: {

                GET_CITY_RESOURCES: true,
                id_city: game.CurrentCity.City.id_city,
                id_player: ID_PLAYER,
                token: TOKEN

            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (!isJson(data)) {

                    console.log(data);
                    return;

                }

                var json_data = JSON.parse(data);

                if (json_data) {

                    game.CurrentCity.City.coin = json_data.coin;
                    game.CurrentCity.City.wood = json_data.wood;
                    game.CurrentCity.City.food = json_data.food;
                    game.CurrentCity.City.stone = json_data.stone;
                    game.CurrentCity.City.metal = json_data.metal;
                    game.CurrentCity.City.pop = json_data.pop;

                    city_profile.refresh_resource_view();
                    game.CurrentCity.City.LS = Math.ceil(Date.now() / 1000);

                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    },

    startIncreasePop: function() {





    },
    updateCityPop: function(time_out) {

    },
    refresh_city_storage: function() {

        return $.ajax({

            url: "api/city.php",
            data: {

                GET_CITY_STORAGE: true,
                id_city: game.CurrentCity.City.id_city,
                id_player: ID_PLAYER,
                token: TOKEN

            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (isJson(data)) {

                    game.CurrentCity.Storage = JSON.parse(data);

                    game.CurrentCity.City.food_cap = Number(game.CurrentCity.Storage.food_storage_ratio * game.CurrentCity.Storage.total_cap / 100);
                    game.CurrentCity.City.wood_cap = Number(game.CurrentCity.Storage.wood_storage_ratio * game.CurrentCity.Storage.total_cap / 100);
                    game.CurrentCity.City.stone_cap = Number(game.CurrentCity.Storage.stone_storage_ratio * game.CurrentCity.Storage.total_cap / 100);
                    game.CurrentCity.City.metal_cap = Number(game.CurrentCity.Storage.metal_storage_ratio * game.CurrentCity.Storage.total_cap / 100);

                    city_profile.refresh_resource_view();
                } else {
                    alert(data);
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    },
    refresh_army_view: function() {
        if ($("#city-profile .page_content").attr("data-view") !== "army") {
            return;
        }
        $("#city-profile .army .army_type").each(function() {
            $(this).children(".army_count").children("h6").html(getArabicNumbers(game.CurrentCity.City[$(this).data("army")]));
        });
    },
    afterBattelFinish: function() {

        var min_time = 9999 * 9999 * 9999;
        for (var iii in game.Battel.Battels) {
            if (min_time > Number(game.Battel.Battels[iii].time_end)) {
                min_time = Number(game.Battel.Battels[iii].time_end);
            }
        }

        if (min_time - Date.now() / 1000 < 30 && game.Battel.Battels.length >= 1) {
            return;
        }

        $.ajax({

            url: "api/city.php",
            data: {
                AFTER_BATTEL_FINISH_REFRESH: true,
                id_player: ID_PLAYER,
                id_city: game.CurrentCity.City.id_city,
                token: TOKEN
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {
                if (isJson(data)) {

                    var json_data = JSON.parse(data);
                    game.CurrentCity.City.food = json_data.city.food;
                    game.CurrentCity.City.wood = json_data.city.wood;
                    game.CurrentCity.City.stone = json_data.city.stone;
                    game.CurrentCity.City.stone = json_data.city.stone;
                    game.CurrentCity.City.coin = json_data.city.coin;
                    game.CurrentCity.City.food_out = json_data.city.food_out;
                    city_profile.refresh_resource_view();

                } else {
                    alert(data);
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });
    },
    getAllCitiesData: function() {

        $.ajax({
            url: "api/player.php",
            data: {
                get_city: true,
                id_player: ID_PLAYER,
                token: TOKEN
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (isJson(data)) {

                    PLAYER_ALL_CITIES = JSON.parse(data);

                } else {
                    alert(data);
                    console.log(data);
                }

                for (var iii in PLAYER_ALL_CITIES) {
                    if (Number(PLAYER_ALL_CITIES[iii].id_city) === Number(game.CurrentCity.City.id_city)) {
                        game.CurrentCity.City = PLAYER_ALL_CITIES[iii];
                    }
                }

                city_profile.refresh_resource_view();

            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });

    }
};



$(document).on("click", "#city-taxs-in-cp", function() {

    buildingClick(cityHasType(BUILDING_TYPS.PALACE));
    $("#dialg_box .nav_bar .left-nav li[head_title=taxs]").click();
    //Crafty.audio.play("click_sound");

});


// show  the hero  profile

$(document).on("click", ".hero_profile", function() {
    // get hero id 
    var id_hero = Number($(this).attr("id_hero"));
    // get hero object from city  heros array
    var hero_object;

    game.CurrentHero = game.Hero.getHero(id_hero);
    var content = army.dialogBoxContent_forCamp(game.CurrentHero);
    var dialog_box = army.dialogBox(Translate.Title.Box.Hero[UserLag.language], NavBar.Hero, content);

    dialogBoxShow(dialog_box, function() {
        army.getCurrentArmy(game.CurrentHero);
        $(".scrollable").niceScroll(SCROLL_BAR_PROP);
        $("#dialg_box").attr("type", "hero");
        $("#dialg_box .nav_bar .left-nav ul li[head_title=camp]").click();
    });
});


$(document).on("click", "#city-profile .hero_profile .modify-hero-army", function(e) {

    e.stopPropagation();
    // get hero id 
    var id_hero = $(this).parents(".hero_profile").attr("id_hero");

    // get hero object from city  heros array
    game.CurrentHero = game.Hero.getHero(id_hero);

    for (var iii in game.DPlayer.Heros) {
        if (Number(game.CurrentHero.Hero.id_hero) !== Number(game.DPlayer.Heros[iii].id_hero)) {
            game.NextHero = game.DPlayer.Heros[iii];
            break;
        }

    }
    var content = army.dialogBoxContent_forHeroTrade(game.CurrentHero);
    var dialog_box = army.dialogBox(Translate.Title.Box.Hero[UserLag.language], NavBar.Hero, content);

    dialogBoxShow(dialog_box, function() {


        $(".scrollable").niceScroll(SCROLL_BAR_PROP);
        $("#dialg_box").attr("type", "hero");
        $("#dialg_box .nav_bar .left-nav ul li[head_title=trade]").click();

    });


});


// navigate through city profile
$("#city-profile .upper_nave_bar ul li").click(function() {
    var show = $(this).attr("show");

    if ($(".page_content ul").getNiceScroll(0)) {

        $(".page_content ul").getNiceScroll(0).remove();
    }

    switch (show) {
        case "default":
            var page_content = city_profile.resource_veiw();
            $(".page_content").html(page_content);
            break;
        case "hero":
            var page_content = city_profile.hero_veiw();
            $(".page_content").html(page_content);
            $(".page_content ul").niceScroll(SCROLL_BAR_PROP);

            break;
        case "army":
            var page_content = city_profile.army_veiw();
            $(".page_content").html(page_content);
            break;

        case 'wild':

            var page_content = city_profile.wild_veiw();
            $(".page_content").html(page_content);
            break;

    }
    //Crafty.audio.play("click_sound");
});
$(document).on("click", "#mili-inner-nav .nav-title", function() {



    var selected_type = $("#dialg_box .mili_building .middle-content .selected_sol");
    if (selected_type.length < 1) {

        alert_box.confirmMessage("عليك اختيار نوع الجنود اولا ");
        return;

    }




    var army_type = selected_type.attr("army_type");
    var inner_nav_selection = $(this).attr("data-inner-nav");
    var army_obj = game.BaseData.Army[army_type];



    if (inner_nav_selection === "army-train") {
        var content = `<div id="mili-inner-nav" class="inner_nav">
                                <div class="nav-title" data-inner-nav="army-dismiss">${Translate.Button.Hero.Dismiss[UserLag.language]}</div>
                                <div class="nav-title" data-inner-nav="army-data">
                                    بيانات
                               </div>
                                <div class="nav-title selected" data-inner-nav="army-train">
                                    تدريب القوات
                               </div>
                            </div>`;

        $("#dialg_box .mili_building .right-content").html(content + Building.militrayProduction.right());
        $(".sol-food").html(
            army_obj.food === 0 ? "---" : getArabicNumbers(army_obj.food)
        );
        $(".sol-stone").html(
            army_obj.stone === 0 ? "---" : getArabicNumbers(army_obj.stone)
        );
        $(".sol-wood").html(
            army_obj.wood === 0 ? "---" : getArabicNumbers(army_obj.wood)
        );
        $(".sol-metal").html(
            army_obj.metal === 0 ? "---" : getArabicNumbers(army_obj.metal)
        );
        $(".sol-coin").html(
            army_obj.coin === 0 ? "---" : getArabicNumbers(army_obj.coin)
        );
        $(".sol-people").html(
            army_obj.people === 0 ? "---" : getArabicNumbers(army_obj.people)
        );

        $("#max_num_army span").html(getArabicNumbers(findMaxNumForArmyBuild(army_type)));
        $(".sol-2-build-amount").attr("max", findMaxNumForArmyBuild(army_type));
        $(".sol-2-build-amount").attr("step", findMaxNumForArmyBuild(army_type));

    } else if (inner_nav_selection === "army-dismiss") {

        var content = ` <div id="mili-inner-nav" class="inner_nav">
                                <div class="nav-title selected" data-inner-nav="army-dismiss">${Translate.Button.Hero.Dismiss[UserLag.language]}</div>
                                <div class="nav-title" data-inner-nav="army-data">
                                    بيانات
                                </div>
                                <div class="nav-title" data-inner-nav="army-train">
                                    تدريب القوات
                                </div>
                            </div>       
                            <div class="army-dismis">
                                <p>يمكنك طرد  القوات والاستفادة من الموارد </p>
                                <div>
                                    <button id="dismis-army" class="full-btn full-btn-2x">${Translate.Button.Hero.Dismiss[UserLag.language]}</button>
                                </div>
                            </div>`;
        $("#dialg_box .mili_building .right-content").html(content);
    }

});



// to heighlight   the wanted  army type 
$(document).on("click", ".sol-2-build", function() {

    $(".build_army").removeAttr("disabled");
    $(".sol-2-build-amount").removeAttr("disabled");

    var army_type = $(this).attr("army_type");
    var army_obj = game.BaseData.Army[army_type];
    var building_place = $(".box_header").attr("place");
    $(".sol-2-build").each(function() {
        if ($(this).hasClass("selected_sol")) {
            $(this).removeClass("selected_sol");
        }
    });

    var condetion = `<li class="${army_obj.condetion.place_lvl > game.City.getCity().BuildingLvl[building_place]? "not-enough" :"enough"}"> ${BuildingConstData[army_obj.condetion.place].title} مستوى  ${army_obj.condetion.place_lvl} </li>
                    <li class="${army_obj.condetion.lvl > game.DPlayer.PlayerEdu[army_obj.condetion.study]? "not-enough" :"enough"}"> ${game.BaseData.Edu[army_obj.condetion.study].ar_title} مستوى ${army_obj.condetion.lvl}</li>`;

    if (army_obj.condetion.place_lvl > game.City.getCity().BuildingLvl[building_place] ||
        army_obj.condetion.lvl > game.DPlayer.PlayerEdu[army_obj.condetion.study]) {
        $(".build_army").attr("disabled", "disabled");
        $(".sol-2-build-amount").attr("disabled", "disabled");
    }

    $("#army-condtions").html(condetion);

    $(this).addClass("selected_sol");

    $(".sol-food").html(
        army_obj.food === 0 ? "---" : getArabicNumbers(army_obj.food)
    );
    $(".sol-stone").html(
        army_obj.stone === 0 ? "---" : getArabicNumbers(army_obj.stone)
    );
    $(".sol-wood").html(
        army_obj.wood === 0 ? "---" : getArabicNumbers(army_obj.wood)
    );
    $(".sol-metal").html(
        army_obj.metal === 0 ? "---" : getArabicNumbers(army_obj.metal)
    );
    $(".sol-coin").html(
        army_obj.coin === 0 ? "---" : getArabicNumbers(army_obj.coin)
    );
    $(".sol-people").html(
        army_obj.people === 0 ? "---" : getArabicNumbers(army_obj.people)
    );

    $("#max_num_army span").html(getArabicNumbers(findMaxNumForArmyBuild(army_type)));
    $(".sol-2-build-amount").attr("max", findMaxNumForArmyBuild(army_type));
    $(".sol-2-build-amount").attr("step", findMaxNumForArmyBuild(army_type));

});


$(document).on("change, keyup", "#number-to-dismiss", function() {

    var selected_type = $("#dialg_box .mili_building .middle-content .selected_sol").attr("army_type");
    var val_ = $("#number-to-dismiss").val();

    $('#dismiss-army-box .tr').each(function() {

        var res = $(this).attr("data-resouce");
        $(this).children(".td_2").html(val_ * game.BaseData.Army[selected_type].dismess[res]);
    });

});

game.Army.armyDismes = function() {

    var selected_type = $("#dialg_box .mili_building .middle-content .selected_sol").attr("army_type");
    var amount = $("#number-to-dismiss").val();
    if (Number(amount) < 1) {
        alert_box.confirmMessage("لا يمكنك طرد هذة الكمية من المدينة");
        return;
    }

    var idCity = game.CurrentCity.City.id_city;

    alert_box.confirmDialog(`تأكيد طرد ${amount} ${game.BaseData.Army[selected_type].ar_title}  `, function() {



        $.ajax({

            url: `${API_URL}/api/ACity/fireArmy`,
            data: {
                armyType: selected_type,
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                server: game.Config.idServer,
                token: game.Config.OuthToken
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    game.LBase.Error(data)

                var jsonObj = JSON.parse(data);

                $(".close-alert").click();

                if (jsonObj.state === "ok") {

                    game.City.getCity(idCity).City = jsonObj.City;

                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                    $("#dialg_box .mili_building .middle-content .selected_sol .amount").html(game.CurrentCity.City[selected_type]);
                }


            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    });

};



//<button id="dismis-army"  onclick="" class="full-btn full-btn-2x">${Translate.Button.Hero.Dismiss[UserLag.language]}</button>
$(document).on("click", "#dismis-army", function() {
    alert_box.dismisArmy();
});
var PLAYER_ALL_HEROS;
$(document).ready(function() {

    $("#msg-area").niceScroll({
        autohidemode: false,
        cursorwidth: "10px",
        background: "url(images/bars/scroll_rail.png) center",
        railalign: "left",
        cursorborderradius: "0px",
        cursorborder: "none"
    });

});
// get city from data base



const SCROLL_BAR_PROP = {
    autohidemode: false,
    cursorwidth: "10px",
    background: "center 5% / 100% auto repeat-y url(images/bars/scroll_rail.png)     ",
    cursorborderradius: "0px",
    cursorborder: "none",
    horizrailenabled: false,
    railpadding: {
        top: 0,
        right: 0,
        left: 0,
        bottom: 0
    }

};
// get all matrial

var EDUCATION_REQ = {};
var matrial_trade = {};
var SERVER_DATA;
var matrial_player = {};
var player_state;

const PLAYER_FACES = [
    "images/player/faceA1_.jpg",
    "images/player/faceA2_.jpg",
    "images/player/faceA3_.jpg",
    "images/player/faceA4_.jpg",
    "images/player/faceA5_.jpg",
    "images/player/faceA6_.jpg",
    "images/player/faceA7_.jpg",
    "images/player/faceA8_.jpg",
    "images/player/faceA9_.jpg",
    "images/player/faceA10_.jpg",
    "images/player/faceB1_.jpg",
    "images/player/faceB2_.jpg",
    "images/player/faceB3_.jpg",
    "images/player/faceB4_.jpg",
    "images/player/faceB5_.jpg",
    "images/player/faceB6_.jpg",
    "images/player/faceB7_.jpg",
    "images/player/faceB8_.jpg",
    "images/player/faceB9_.jpg"
];

var available_Equip;
var ArabicNumber = {
    "0": "&\#1632;",
    "1": "&\#1633;",
    "2": "&\#1634;",
    "3": "&\#1635;",
    "4": "&\#1636;",
    "5": "&\#1637;",
    "6": "&\#1638;",
    "7": "&\#1639;",
    "8": "&\#1640;",
    "9": "&\#1641;",
    "-": "-"
};

function getArabicNumbers(str) {
    /* var newStr = "";
     
     str = String(str);
     
     for(var i=0; i<str.length; i++)
     {
     newStr += ArabicNumber[(str.charAt(i))];
     }*/

    return str;
}

function getServerData() {

    $.ajax({
        url: "api/player.php",
        data: {
            SERVER_DATA: true
        },
        type: 'GET',
        dataType: 'JSON',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            SERVER_DATA = data;

        },
        error: function(jqXHR, textStatus, errorThrown) {
            console.log(errorThrown);
        }
    });

}




$(document).on("PlayerReady", "html", function() {

    Player_profile.refreshMatrialBox();
    $.ajax({
        url: "js" + JS_VERSION + "/json/education.json",
        data: {
            get_matrial: true
        },
        type: 'POST',
        dataType: 'JSON',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {
            EDUCATION_REQ = data;
        },
        error: function(jqXHR, textStatus, errorThrown) {
            console.log(errorThrown);
        }
    });

    $.ajax({
        url: "js" + JS_VERSION + "/json/matrial_trade.json",
        data: {
            get_matrial: true
        },
        type: 'GET',
        dataType: 'JSON',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {
            matrial_trade = data;
            // console.log((data));
        },
        error: function(jqXHR, textStatus, errorThrown) {
            console.log(errorThrown);
        }
    });


    getServerData();
    game.Equip.getPlayerEquip();
});



const image_for_fa3lia = "images/style/t-map.png";
const paragraph_for_fa3lia = "الفاعلية ممتدة حتى هاية مارس";
// get  matrial 




function calPageNumber(type, isMall) {
    var content_keys = Object.keys(Matrial.listOf(type));


    var mat_counter = 0;

    if (isMall) {

        for (var iii = 0; iii < content_keys.length; iii++) {

            if (game.BaseData.Items[content_keys[iii]].gold > 0) {
                // console.log(content_keys[iii])
                mat_counter++;
            }
        }

        return Math.ceil(mat_counter / 12);
    }





    for (var iii = 0; iii < content_keys.length; iii++) {

        if (Matrial.getPlayerAmount(content_keys[iii]) !== 0) {
            // console.log(content_keys[iii])
            mat_counter++;
        }
    }
    // console.log(mat_counter)
    return Math.ceil(mat_counter / 12);

}

// creat conent  unite 
/*
 * 
 * @param {string} image
 * @param {string} name
 * @param {json} req
 * @returns {String}
 */
function content_unit(image, name, req, player_amount, matrial_type, for_) {

    var total = "";
    if (for_ === "mall") {


        total = ` <li class="pull-L">
                           <div class="pic">
                               <img src="images/icons/resource/gold.png">
                           </div>
                           <div class="num txt-shadow">${getArabicNumbers(game.BaseData.Items[matrial_type].gold)}</div>
                       </li>
                       <li class="pull-R">
                             <div class="buy_mat_btn">
                                <button class="full-btn full-btn-1x ellipsis">${Translate.Button.MenuList.Buy[UserLag.language]}</button>
                            </div>
                       </li>
`;

    }

    var list = `<li matrial_type="${matrial_type}" class="tooltip_mat matrial_unit">
                   <img src=" images/style/Border-up.png" class="border_up"/>
                   <div class="img-inside-box">
                       <div class="player_amount">
                            <img src="images/icons/shopQuantityBG.png"/>
                             <p>${getArabicNumbers(Matrial.getPlayerAmount(matrial_type))}</p>
                        </div>
                        <div class="wrapper big-img" >
                            <div class="image" style="background-image: url(${game.BaseData.Items[matrial_type].image})"></div>
                        </div>
                        <div class="matrial">
                            <ul>
                            ${for_ === "mall" ? "" : `<button class="full-btn-3x sell-matrial" data-matrial="${matrial_type}"> عرض المادة للبيع</button>`}
                            `;


    list += total + "</ul>" +
        "</div>" +
        "</div>";
    var tail = ' <div class="txt-inside-box">' +
        '<h2>' + name + '</h2>' +
        '</div>' +
        '<div  class="tooltip_desc"></div>' +
        '</li>';

    return list + tail + "";
}
// creat conent  unite 
/*
 * 
 * @param {string} image
 * @param {string} name
 * @param {json} req
 * @returns {String}
 */
function content_unit_equip(image, name, equi_type, equi_part, index) {

    var total = "";

    var list = `<li class="matrial_unit" data-equip-index="${index}">
                   <img src=" images/style/Border-up.png" class="border_up"/>
                   <div class="img-inside-box">
                        <img src="${image}" class="big-img equip-unit" data-equi-part="${equi_part}" data-equi-type="${equi_type}">
                    </div>
                    <div class="txt-inside-box">
                        <h2>${name}</h2>
                    </div>
                </li>`;





    return list;
}

// change content for matrial box
function change_content(content, condtion, for_) {


    var all_content_unite = "";
    // console.log(condtion);
    var content_keys = Object.keys(content);
    var counter = 0;
    if (content_keys.length > 13) {
        for (var iii = 0; counter < 12 && iii < content_keys.length; iii++) {
            if (parseInt(content[content_keys[iii]]) !== condtion) {

                var image = game.BaseData.Items[content_keys[iii]].image;
                var name = game.BaseData.Items[content_keys[iii]].name;
                var req = game.BaseData.Items[content_keys[iii]].req;
                all_content_unite += Matrial.itemUnitWidget(content_keys[iii], for_ === "mall");
                counter++;
            }
        }
    } else {
        for (var iii = 0; iii < content_keys.length; iii++) {

            if (parseInt(content[content_keys[iii]]) !== condtion) {
                var image = game.BaseData.Items[content_keys[iii]].image;
                var name = game.BaseData.Items[content_keys[iii]].name;
                var req = game.BaseData.Items[content_keys[iii]].req;
                all_content_unite += Matrial.itemUnitWidget(content_keys[iii], for_ === "mall");
                counter++;
            }
        }
    }

    if (counter > 12) {
        $("#dialg_box .right-content .total").attr("data-num", "1-12");
    } else {
        $("#dialg_box .right-content .total").attr("data-num", "all");
    }

    var page_num = Math.ceil(content_keys.length / 12);
    $("#dialg_box .nav_icon h1").html(1 + "/" + page_num);

    return all_content_unite;
}

// change content for matrial box
function change_content_player_box(content, offset_mat) {


    var all_content_unite = "";
    // console.log(condtion);
    var content_keys = [];
    for (var key in content) {
        if (Number(content[key].playerAmount) > 0) {
            content_keys.push(key);
        }
    }
    var counter = 0;
    if (!offset_mat) {
        var offset = 0;
    } else {
        var offset = content_keys.indexOf(offset_mat);
    }
    if (content_keys.length > 13) {
        for (var iii = 0 + offset; counter < 12 && iii < content_keys.length; iii++) {
            if (Matrial.getPlayerAmount(content_keys[iii]) !== 0) {
                all_content_unite += Matrial.itemUnitWidget(content_keys[iii], false);
                counter++;
            }
        }
    } else {
        for (var iii = 0 + offset; iii < content_keys.length; iii++) {

            if (Matrial.getPlayerAmount(content_keys[iii]) !== 0) {
                all_content_unite += Matrial.itemUnitWidget(content_keys[iii], false);
                counter++;
            }
        }
    }


    var page_num = Math.ceil(content_keys.length / 12);
    $("#dialg_box .nav_icon h1").html((Math.floor(offset / 12) + 1) + "/" + page_num);

    return all_content_unite;
}


function resourcesRefresh() {

    var food_rate = (game.CurrentCity.City.food_in - game.CurrentCity.City.food_out) / (60 * 60);
    var wood_rate = (game.CurrentCity.City.wood_in - game.CurrentCity.City.wood_out) / (60 * 60);
    var stone_rate = (game.CurrentCity.City.stone_in - game.CurrentCity.City.stone_out) / (60 * 60);
    var metal_rate = (game.CurrentCity.City.metal_in - game.CurrentCity.City.metal_out) / (60 * 60);
    var coin_rate = (game.CurrentCity.City.coin_in - game.CurrentCity.City.coin_out) / (60 * 60);

    game.CurrentCity.City.food = food_rate < 0 ? Math.max(0, Number(game.CurrentCity.City.food) + food_rate) : ((game.CurrentCity.City.food >= game.CurrentCity.City.food_cap) ? Number(game.CurrentCity.City.food) : Number(game.CurrentCity.City.food) + food_rate);
    game.CurrentCity.City.wood = wood_rate < 0 ? Math.max(0, Number(game.CurrentCity.City.wood) + wood_rate) : ((game.CurrentCity.City.wood >= game.CurrentCity.City.wood_cap) ? Number(game.CurrentCity.City.wood) : Number(game.CurrentCity.City.wood) + wood_rate);
    game.CurrentCity.City.coin = coin_rate < 0 ? Math.max(0, Number(game.CurrentCity.City.coin) + coin_rate) : ((game.CurrentCity.City.coin >= game.CurrentCity.City.coin_cap) ? Number(game.CurrentCity.City.coin) : Number(game.CurrentCity.City.coin) + coin_rate);
    game.CurrentCity.City.stone = stone_rate < 0 ? Math.max(0, Number(game.CurrentCity.City.stone) + stone_rate) : ((game.CurrentCity.City.stone >= game.CurrentCity.City.stone_cap) ? Number(game.CurrentCity.City.stone) : Number(game.CurrentCity.City.stone) + stone_rate);
    game.CurrentCity.City.metal = metal_rate < 0 ? Math.max(0, Number(game.CurrentCity.City.metal) + metal_rate) : ((game.CurrentCity.City.metal >= game.CurrentCity.City.metal_cap) ? Number(game.CurrentCity.City.metal) : Number(game.CurrentCity.City.metal) + metal_rate);



    $("#city-profile .resource").each(function() {
        $(this).children(".left").children(".count-wrapper ").html(Math.ceil(game.CurrentCity.City[$(this).attr("data-resource")]));
    });


}

function dialogBoxClose() {

    var box = $("#dialg_box");

    if (box.attr("data-box-for") === "battelField") {
        var x_coord = Number(box.attr("data-x-coord"));
        var y_coord = Number(box.attr("data-y-coord"));

        BattelField.removeFromWatchList(x_coord, y_coord);
    }
}

function dialogBoxShow(dialog_box, callBack) {

    if ($("#dialg_box").length > 0) {
        $("#dialg_box").animate({
            top: "-800px"
        }, 200, "linear", function() {
            $(this).remove();
            dialogBoxClose();
            $("body").append(dialog_box);

            if (typeof callBack === "function") {
                callBack();
            }
            //Crafty.audio.play("click_sound");
            $("#dialg_box").animate({
                top: "125"
            }, 200);
        });
    } else {
        $("body").append(dialog_box);
        if (typeof callBack === "function") {
            callBack();
        }
        //Crafty.audio.play("click_sound");
        $("#dialg_box").animate({
            top: "125"
        }, 200);
    }

}
var menu_bar = {
    dialogBox: function(title, nav_bar, content, page_num) {

        var nav_list = "";
        nav_bar.forEach(function(one, index) {
            nav_list += ` <li head_title = "${one["title"]}" class="${index === 0 ? "selected" : ""}" >
                                   ${one[("title_" + UserLag.language)]}
                               </li>`;
        });



        return `
                    <div id='dialg_box'>
                        <div class="head_bar">
                           <img src="images/style/head_bar.png">
                           <div class="title">${title} </div>
                        </div>
                        <div class="nav_bar">
                            <div class="left-nav">
                                <ul>${nav_list}</ul>
                            </div>
                            <div class="right-nav">
                                <div class="nav_icon">
                                    <img  class ="close_dialog" src="images/btns/close_b.png">
                                 ${
            parseInt(page_num) === 0 ? "" : `
                                    <img id="nav-item-box-right" data-current-offset="1" src="images/btns/right.png" class="right">
                                    <h1 id="page-nav-holder"> 1/${page_num}</h1>
                                    <img id="nav-item-box-left" data-current-offset="1" src="images/btns/left.png" class="left">
                                                                        `
            }
                                
                                </div>
                            </div>
                        </div>
                        ${content}
                    </div>`;

    },
    dialogBoxContent_mall: function(Box) {

        return `<div class="box_content" id="mall-matrial" data-page-for="mall" data-item-box="${Box}"> 
                    <div class="right-content full show-item-list">
                        <ul class='total total_mat' mat_table='${Box}'>${game.Item.ItemMallBox(Box)} </ul>
                    </div>
                    <div class="right-content-footer">
                        <div class="buttons pull-R">
                            <ul>
                                <li>
                                    <div class="full-btn full-btn-2x">${Translate.Button.MenuList.BuyGold[UserLag.language]}</div>
                                </li>
                            </ul>
                        </div>
                        <div class="budget pull-L">
                            <div class="txt">
                                 ${Translate.Title.TH.YouHave[UserLag.language]}:${getArabicNumbers(game.DPlayer.Player.gold)}
                            </div>
                            <div>
                                <img src="images/icons/gold_money.jpg">
                            </div>
                        </div>
                    </div>
                </div>`;
    },

    dialogBoxContent_ItemBox: function(Box) {


        return ` <div class="box_content" id="matrial-player" data-page-for="box-item" data-item-box="${Box}">
                     <div class="right-content full show-item-list">
                         <ul class='total total_mat' mat_table='${Box}'>${game.Item.ItemBox(Box)}</ul>
                     </div>
                     <div class="right-content-footer">
                         <div class="buttons pull-R">
                             <ul>
                                 <li>
                                     <div class="full-btn full-btn-3x" id="goToMall">
                                         ${Translate.Button.MenuList.GetSomeGold[UserLag.language]}
                                     </div>
                                 </li>
                                 <li>
                                     <div class="full-btn full-btn-3x">
                                         ${Translate.Button.MenuList.BuyItems[UserLag.language]}
                                     </div>
                                 </li>
                             </ul>
                         </div>
                         <div class="budget pull-L">
                             <div class="txt">
                                 ${getArabicNumbers(game.DPlayer.Player.gold)}: لديك
                             </div>
                             <div>
                                 <img src="images/icons/gold_money.jpg">
                             </div>
                         </div>
                     </div>
                 </div>`;
    },
    dialogBoxContent_trade: function(content) {

        return Trading.dailogBox_allMat();
    },

    dialogBoxcontent_Ranks: function(union = "") {
        return game.Rank.EmptyBox();

        var output = `  <div class="box_content for_Ranks ">  
                                   <div class="left-content full">  
                                         
                                        
                                   </div>  
                                   <div class="right-content-footer" rank_for="${ union === true ? "unuions" : "players"}">  
                                      <div class="buttons">  
                                          <ul class="flex">  
                                              <li id="show-my-rank">  
                                                    <button class="full-btn full-btn-2x full">${Translate.Button.General.ViewRank[UserLag.language]}</button>  
                                              </li> 
                                              <li>
                                                    <div class="nav_icon flex">
                                                        <div data-move="most-left" src="images/style/left.jpg" class="left move_p_rank pull-L most-left-btn"></div>
                                                        <div data-move="left" src="images/style/left.jpg" class="left move_p_rank  pull-L left-btn"></div>
                                                        <h1>  <span  id="current_page_num">1</span>/${union ? getArabicNumbers(Math.ceil(SERVER_DATA.guild_num / 10)) : getArabicNumbers(Math.ceil(SERVER_DATA.player_num / 10))}</h1>
                                                        <div data-move="right" src="images/style/right.jpg" class="right move_p_rank pull-R right-btn"></div>
                                                        <div data-move="most-right" src="images/style/right.jpg" class="right move_p_rank pull-R most-right-btn"></div>  
                                                  </div>
                                              </li>
                                              
                                              <li id="nav_input" class="flex">  
                                                    <input type="text"  class="only_num input"/>
                                                    <button class="full-btn full-btn-1x ellipsis">  
                                                        ${Translate.Button.General.GoTo[UserLag.language]}    
                                                    </button>
                                              </li>
        
                                              <li id="search_select" style=" float: left; width: 85px;">  
                                                    <select>
                                                        <option value="name" selected>الاسم</option>
                                                    </select>
                                              </li>
                                              <li id="nav_search" class="flex">  
                                                    <input type="text" class="input"/>
                                                    <button class="full-btn full-btn-1x ellipsis">  
                                                     ${Translate.Button.General.Search[UserLag.language]}
                                                   </button>
                                              </li>
                                              
                                          </ul>  
                                      </div>  
                                       
                                  </div>  
                               </div>`;
        return output;
    },
    getContentForRanks: function(rank_for, offset) {
        $("#DialBoxFooter").attr("data-rank-for", rank_for)
        switch (rank_for) {

            case game.Rank.RankFor.Player:
                return game.Rank.PlayerGeneralRank(offset);

            case game.Rank.RankFor.Guild:
                return game.Rank.GuildGeneralRank(offset);

            case game.Rank.RankFor.Hero:
                return game.Rank.HeroGeneralRank(offset);
            case game.Rank.RankFor.City:
                return game.Rank.CityGeneralRank(offset);

        }




    }
};



/*____________________________________________________________________________*/
/*_________________________REPORTS OBJECT ____________________________________*/
/*____________________________________________________________________________*/

// show dialog box  from  th menue bar
$(document).on("click", ".menu-list", function(e) {

    var data_show = $(this).attr("data-show");
    switch (data_show) {

        case "trade":
            var dialog_box = menu_bar.dialogBox(Translate.Title.MenuList.Exchange[UserLag.language], NavBar.Exchange, Trading.dailogBox_allMat());

            dialogBoxShow(dialog_box, function() {
                var page_num = Trading.calPageNum();
                $("#dialg_box .nav_icon h1").html(1 + "/" + page_num);
                $("#dialg_box").attr("type", "exchange");
                $("#dialg_box").attr("data-cat", "trade-all");
                $("#dialg_box .right-content .total").attr("mat_table")
                Trading.dailogBox_allMat();
            });


            break;
        case "matrial":
            var dialog_box = menu_bar.dialogBox(Translate.Title.MenuList.ItemMall[UserLag.language], NavBar.ItemMall, menu_bar.dialogBoxContent_mall("matrial_main"), calPageNumber("matrial_main", true));
            Player_profile.refreshMatrialBox();

            dialogBoxShow(dialog_box, function() {
                $("#dialg_box .left-content").remove();
                $("#dialg_box").attr("type", "mall");
                $("#dialg_box .right-content").addClass("full");
                $("#dialg_box .right-content .total").attr("data-num", "1-12");
                $("#dialg_box .right-content .total").attr("mat_table", "matrial_main");
            });



            break;

        case "reports":

            playerBattels();

            BattelField.battelField({
                navBar: NavBar.Report,
                totalBox: true
            }, game.Battel.Battels);


            break;


        case "quests":

            var content = Quest.dialogBoxcontent_qusets();
            var dialog_box = menu_bar.dialogBox(Translate.Title.MenuList.Quest[UserLag.language], NavBar.Quest, content, 0);
            dialogBoxShow(dialog_box, function() {

                $("#quest-page").niceScroll(SCROLL_BAR_PROP);
                $("#sub_quest").niceScroll(SCROLL_BAR_PROP);
                $("#quest_pack").niceScroll(SCROLL_BAR_PROP);
                $("#dialg_box").attr("type", "quests");

                Quest.refrehQuestNotif();

            });

            break;
        case "messages":

            var dialog_box = menu_bar.dialogBox(Translate.Title.MenuList.Mail[UserLag.language], NavBar.Mail, "<div class='box_content'></div>", 0);
            dialogBoxShow(dialog_box, function() {

                message.dialogBoxcontent_msgIncome();

            });
            break;

        case "ranks":

            var content = menu_bar.dialogBoxcontent_Ranks();
            var dialog_box = menu_bar.dialogBox(Translate.Title.MenuList.Ranking[UserLag.language], NavBar.Ranking, content, 0);
            dialogBoxShow(dialog_box, function() {

                $("#dialg_box").attr("type", "messages");
                menu_bar.getContentForRanks(game.Rank.RankFor.Player, 0);

            });


            break;

        case "union":
            Guild.guild_click();
            break;

        case "dominant":
            var dialog_box = Dominant.dialogBox();
            dialogBoxShow(dialog_box, function() {
                Dominant.armyCapital();

            });
            break;


    }

});



$(document).on("click", ".close_dialog", function(e) {

    var box = $("#dialg_box");
    dialogBoxClose();
    box.animate({
        top: "-250px"
    }, 200, "linear", function() {
        $(this).remove();
    });
});



// navigate in  sources
// to  navgatein content 
$(document).on("click", ".left-nav ul  li", function() {

    $(".left-nav ul  li").each(function(el) {
        $(this).removeClass("selected")
    });
    $(this).addClass("selected");
    $("#dialg_box .nicescroll-rails").remove();

    var head_title = $(this).attr("head_title");
    if ($(this).parents("#dialg_box").attr("type") === "box") {
        var condtion = 0;
    } else if ($(this).parents("#dialg_box").attr("type") === "mall") {
        var condtion = -1;
    }
    switch (head_title) {
        // فيها صفحة الرئيسى ف الموارد
        case "main":
            $("#dialg_box .right-content .total").html(game.Item.ItemBox("matrial_main"));
            $("#dialg_box .right-content .total").attr("mat_table", "matrial_main");

            // console.log(new_content)
            break;
            // فيها التسريع ف الموارد
        case "finishing":
            $("#dialg_box .right-content .total").html(game.Item.ItemBox("matrial_acce"));
            $("#dialg_box .right-content .total").attr("mat_table", "matrial_acce");
            break;
            // فيها المنتجات
        case "prouducts":
            $("#dialg_box .right-content .total").html(game.Item.ItemBox("matrial_product"));
            $("#dialg_box .right-content .total").attr("mat_table", "matrial_product");
            break;
            //  فيها صندوق الموارد
        case "box":
            $("#dialg_box .right-content .total").html(game.Item.ItemBox("matrial_box"));
            $("#dialg_box .right-content .total").attr("mat_table", "matrial_box");
            break;
            // فيها الرفاهية
        case "walfare":
            $("#dialg_box .right-content .total").html(game.Item.ItemBox("matrial_luxury"));
            $("#dialg_box .right-content .total").attr("mat_table", "matrial_luxury");
            break;
            // فيها المعدات
        case "equipments":
            if (condtion === 0) {
                $("#dialg_box .right-content .total").html(game.Item.EquipBox());
                $("#dialg_box .right-content .total").attr("mat_table", "equip");
                $("#dialg_box .box_content").attr("data-page-for", "equip");
                $("#dialg_box .right-content .total").attr("mat_table", "equip");
                game.Equip.getPlayerEquip();
            }

            break;
            //فسها الشعارات
        case "sologn":
            $("#dialg_box .right-content .total").html(game.Item.ItemBox("matrial_flags"));
            $("#dialg_box .right-content .total").attr("mat_table", "matrial_flags");
            break;



            // فيها صفحة الرئيسى ف الموارد
        case "mall-main":
            $("#dialg_box .right-content .total").html(game.Item.ItemMallBox("matrial_main"));
            $("#dialg_box .right-content .total").attr("mat_table", "matrial_main");

            // console.log(new_content)
            break;
            // فيها التسريع ف الموارد
        case "mall-finishing":
            $("#dialg_box .right-content .total").html(game.Item.ItemMallBox("matrial_acce"));
            $("#dialg_box .right-content .total").attr("mat_table", "matrial_acce");
            break;
            // فيها المنتجات
        case "mall-prouducts":
            $("#dialg_box .right-content .total").html(game.Item.ItemMallBox("matrial_product"));
            $("#dialg_box .right-content .total").attr("mat_table", "matrial_product");
            break;
            //  فيها صندوق الموارد
        case "mall-box":
            $("#dialg_box .right-content .total").html(game.Item.ItemMallBox("matrial_box"));
            $("#dialg_box .right-content .total").attr("mat_table", "matrial_box");
            break;
            // فيها الرفاهية
        case "mall-walfare":
            $("#dialg_box .right-content .total").html(game.Item.ItemMallBox("matrial_luxury"));
            $("#dialg_box .right-content .total").attr("mat_table", "matrial_luxury");
            break;
            // فيها المعدات
        case "mall-equipments":


            $("#dialg_box .right-content .total").html("");
            $("#dialg_box .right-content .total").attr("mat_table", "equip");
            $("#dialg_box .nav_icon h1").html("0/0");


            break;
            //فسها الشعارات
        case "mall-sologn":
            $("#dialg_box .right-content .total").html(game.Item.ItemMallBox("matrial_flags"));
            $("#dialg_box .right-content .total").attr("mat_table", "matrial_flags");
            break;



            /*____________________________________________________________________*/

            /*ناف بار بتاعة تبادل المواد*/
        case "trade-all":

            var content = Trading.dailogBox_allMat("trade-all");
            $("#dialg_box .box_content").replaceWith(content);
            $("#dialg_box .right-content .total").attr("mat_table", "trade-all");
            break;
        case "trade-daily":
            var content = Trading.dailogBox_allMat("trade-daily");
            $("#dialg_box .box_content").replaceWith(content);
            $("#dialg_box .right-content .total").attr("mat_table", "trade-daily");
            break;
        case "trade-plassing":
            var content = Trading.dailogBox_allMat("trade-plassing");
            $("#dialg_box .box_content").replaceWith(content);
            $("#dialg_box .right-content .total").attr("mat_table", "trade-plassing");
            break;
        case "trade-millirty":
            var content = Trading.dailogBox_allMat("trade-milli");
            $("#dialg_box .box_content").replaceWith(content);
            $("#dialg_box .right-content .total").attr("mat_table", "trade-milli");
            break;
        case "trade-gifts":
            var content = Trading.dailogBox_allMat("trade-event");
            $("#dialg_box .box_content").replaceWith(content);
            $("#dialg_box .right-content .total").attr("mat_table", "trade-event");
            break;



            /*_____________________________________________________________________*/
            /*                              ناف  بار  بتاع التقارير*/

        case "battle":


            BattelField.battelField({
                navBar: NavBar.Report,
                totalBox: false
            }, game.Battel.Battels);

            break;
        case "attacking":
            Reports.chang_content_leaving();
            break;
        case "army_moving":
            Reports.change_content_heroBack();

            break;
        case "allais":
            Reports.change_content_GarrisonUnits();
            break;
        case "spy":
            Reports.change_content_SpyTask();
            break;


            /**************_________________________________________****************/
            /*___________________________FOR RANKS_________________________________*/


        case "rank_player":
            menu_bar.getContentForRanks(game.Rank.RankFor.Player, 0);
            break;


        case "rank_union":
            menu_bar.getContentForRanks(game.Rank.RankFor.Guild, 0);
            break;
        case "rank_hero":
            var new_rows = menu_bar.getContentForRanks(game.Rank.RankFor.Hero, 0);
            break;

        case "rank_city":
            var new_rows = menu_bar.getContentForRanks(game.Rank.RankFor.City, 0);
            break;


            /*______________________________________________-FOR_msg_____________________________*/

        case "mail_in":
            message.dialogBoxcontent_msgIncome();
            break;
        case "battel_report":
            message.dialogBoxContent_battelReport();
            break;
        case "spy_report":
            message.dialogBoxContent_spyReport();
            break;
        case "coll_report":
            message.dialogBoxcontent_msgDiff();
            break;
        case "mail_out":
            message.dialogBoxcontent_msgOutcome();
            break;
        case "mail_write":
            $(".box_content").replaceWith(message.dialogBoxcontent_msgWrite());
            break;


            /*______________________________________FOR GUILD DIALOG BOX_______________________*/

        case "guild_data":
            var content = Guild.content_forGuild_data();
            $(".box_content").replaceWith(content);
            break;

        case "g_relation":
            var content = Guild.content_forRelation();

            break;

        case "upgrade_guild":
            Guild.content_forUpgrade();
            break;


            /*         ناف بار بتاع المهمات                 */

        case "growth_quest":
            Quest.changeContent("QuestGrowth");
            break;

            // فيها صفحة الرئيسى ف الموارد
        case "daily_quest_trade":

            /*
             *   أول حاجة هعملها  انى هشوف انهى مهمة اللاعب دة معملهاش
             */


            Quest.changeContent("QuestTrade");

            break;
            // فيها صفحة الرئيسى ف الموارد
        case "daily_quest":

            /*
             *   أول حاجة هعملها  انى هشوف انهى مهمة اللاعب دة معملهاش
             */


            Quest.changeContent("QuestDaily");

            break;

    }


});



// open  your matrial box
$("#matrial-box button").click(function() {

    var content = menu_bar.dialogBoxContent_ItemBox("matrial_main"); // will be player matrial
    var dialog_box = menu_bar.dialogBox(Translate.Title.MenuList.MyItems[UserLag.language], NavBar.MatrialBox, content, calPageNumber("matrial_main", false));

    Player_profile.refreshMatrialBox().done(function() {
        $("#dialg_box .nav_bar .left-nav .selected").click();
    });

    dialogBoxShow(dialog_box, function() {
        $("#dialg_box").attr("type", "box");
    });

    game.Item.useItemFunc();
    game.Item.useItemBoxFunc();
    game.Item.useArmyBackFunc();
});

/*    SHOW TOOLTIP   FOR MATRIAL */
/*
 *  هنا انا عامل كلاس لكل الى ليهم تول تيب صغيرة
 *  اى حاجة مش شرط فى  صندوق الموارد
 */
$(document).on("mouseenter", ".tooltip_mat", function() {

    var matrial_type = $(this).attr("matrial_type");

    var toolTip = ` <div class="tooltip-container">
                        <div class="header">
                            <div class="mat_name pull-R">
                                ${game.BaseData.Items[matrial_type].name}
                            </div>
                            <div class="mat_price pull-L">
                                <p class="pull-L"> ${game.BaseData.Items[matrial_type].gold}</p>
                                <div class="pull-R">
                                    <img src="images/icons/resource/gold.png"/>
                                </div>
                            </div>
                        </div>
                        <div class="desc">
                            ${game.BaseData.Items[matrial_type].desc}
                        </div>
                        <div class="desc">
                            ${game.BaseData.Items[matrial_type].long_desc}
                        </div>
                    </div>`;


    $(this).children(".tooltip_desc").html(toolTip);
});


/*   REMOVE TOOLTIP  */
$(document).on("mouseleave", ".tooltip_mat", function() {

    $(this).children(".tooltip_desc").empty();

});

/*                   intract matrial on click                   */

$(document)['on']('click', '#matrial-player .matrial_unit', function() {
    var idItem = $(this)['attr']('matrial_type');
    var Item = game['BaseData']['Items'][idItem];
    var PlayerAmount = Matrial['getPlayerAmount'](idItem);

    $('#alert_container')['remove']();
    var ExtraString = '';
    switch (idItem) {
        case 'certain_move':
            ExtraString = `  <div class="extra_html">
                            ادخل الاحداثيات 
                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp
                                X <input id="new-city-y-coord" type="text" class="only_num input" min="0" max="499">
                                Y <input id="new-city-x-coord" type="text" class="only_num input" min="0" max="499">
                            </div>`;
            break;
        case 'random_move':
            break;
    }
    var Box = ` <div id="matral-box-use" class="bg-general"> 
                            <div id="alert_head">    
                                <div>        
                                    <img src="images/panner/king_name.png">    
                                </div>       
                                <div id="alert-title">${Translate['Title']['Box']['pleaseSelect'][UserLag['language']]}</div>            
                                <img src="images/btns/close_b.png" class="img-sml close-alert_container">       
                            </div>
                            <div id="alert_box" class="matrial-show">        
                                <div class="row-2">
                                    <div class="pull-L left">
                                        <img src="${Item['image']}"/>
                                    </div>
                                    <div class="pull-R right">
                                        <div class="name ellipsis">
                                            ${Item['name']} 
                                        </div>
                                        <div class="amount">
                                            ${Translate['Title']['TH']['YouHave'][UserLag['language']]} ${PlayerAmount}
                                        </div>
                                    </div>
                                </div>  
                                <div class="mat_desc">
                                    ${ Item['desc']}
                                </div>
                                ${ExtraString}
                                <div class="row-3">       
                                    <div class="confim-btn">            
                                        ${ Item['use'] === 'none' ? '' : `<button class="full-btn full-btn-3x  pull-R enter" data-item-name="${idItem}" id="${Item['use'] == 'Box' ? 'openPlayerItemBox' : 'usePlayerItemBox'}">${(Item['use'] == 'Box' ? 'فتح' : 'تأكيد')}</button>  `}  
                                        ${ Item['use'] === 'many' ? `<input type="text" max="${PlayerAmount}" min="0" step="1" class="pull-L only_num input" id="amount_to_use">
                                                                        <div class="number-arrow-wrapper pull-L">
                                                                            <label class="number-arrow up"></label>
                                                                            <label class="number-arrow down"></label>
                                                                        </div>` : ""} 
                                        
                                    </div>    
                                </div>
                            </div>    
                        </div>`;

    $('body')['append'](Box);
});


$(document).on("click", ".buy_mat_btn button", function() {

    var matrial_name = $(this).parents(".matrial_unit").attr("matrial_type");

    var mat_obj = game.BaseData.Items[matrial_name];
    var amount = game.BaseData.Items[matrial_name].playerAmount;

    $("#alert_container").remove();

    var confirm_box = ` <div id="matral-box-use" class="bg-general"> 
                            <div id="alert_head">    
                                <div>        
                                    <img src="images/panner/king_name.png">    
                                </div>       
                                <div id="alert-title">${Translate.Button.MenuList.Buy[UserLag.language]} </div>            
                                <img src="images/btns/close_b.png" class="img-sml close-alert_container">       
                            </div>
                            <div id="alert_box" class="matrial-show">        
                                <div class="row-2">
                                    <div class="pull-L left">
                                        <img src="${mat_obj.image}"/>
                                        <ul> 
                                            <li class="pull-L">
                                                <div class="pic">
                                                    <img src="images/icons/resource/gold.png">
                                                </div>
                                                <div class="num txt-shadow">${mat_obj.gold}</div>
                                            </li>
                                        </ul>
                                    </div>
                                    <div class="pull-R right">
                                        <div class="name ellipsis">
                                            ${mat_obj.name} 
                                        </div>
                                        <div class="amount">
                                            ${Translate.Title.TH.YouHave[UserLag.language]} ${getArabicNumbers(amount)}
                                        </div>
                                    </div>
                                </div>  
                                <div class="mat_desc">
                                    ${mat_obj.long_desc}
                                </div>
                                <div class="row-3">        
                                    <div class="confim-btn">            
                                        <button class="full-btn full-btn-3x pull-R enter" id="buyNewItem" data-item-name="${matrial_name}">${Translate.Button.MenuList.Buy[UserLag.language]}</button>  
                                        <input type="text" min="1" step="1" class="pull-L only_num input" max="${Math.floor(game.DPlayer.Player.gold / mat_obj.gold)}" id="amount_to_buy" value="1">
                                        <div class="number-arrow-wrapper pull-L">
                                            <label class="number-arrow up"></label>
                                            <label class="number-arrow down"></label>
                                        </div>
                                    </div>    
                                </div>
                            </div>    
                        </div>`;
    $("body").append(confirm_box);
});


$(document).on("click", ".close-alert_container", function() {
    $("#alert_container").remove();
    $("#matral-box-use").remove();
    $("#over_lay_alert").remove();
});





function refreshArmy_view() {
    $(".left_army .army_type").each(function() {
        $(this).children(".army_count").children("h6").html(getArabicNumbers(game.CurrentCity.City[$(this).data("army")]));
    });
}


/**
 * 
 * @param {string} matrial
 * @param {json} json_obj
 * @returns {undefined}
 */












/*______________________________________________________________________________*/
/*    navigate in rank page */






/*____________________________________________________________________________*/
/*__________________________GO TO BUTTON______________________________________*/





/*____________________________________________________________________________*/
/*______________________________SEARSH NAV ___________________________________*/

$(document).on("click", "#nav_search button", function() {


    var search_value = $("#nav_search input").val();

    var rank_for = $(this).parents(".right-content-footer").attr("rank_for");

    var searsh_By = $("#search_select  select").val();



    switch (rank_for) {

        case "players":

            $.ajax({
                url: "api/player.php",
                data: {
                    get_rank_player_searsh: true,
                    searsh_By: searsh_By,
                    search_value: search_value,
                    id_player: ID_PLAYER,
                    token: TOKEN
                },
                type: 'GET',
                beforeSend: function(xhr) {

                },
                success: function(data, textStatus, jqXHR) {

                    var json_data = JSON.parse(data);
                    var _return = `<div class="th">
                                            <div class="td_1 ellipsis">${Translate.Title.TH.Ranking[UserLag.language]}</div>
                                            <div class="td_2 ellipsis">${Translate.Title.TH.Lord[UserLag.language]}</div>
                                            <div class="td_3 ellipsis subject">${Translate.Title.TH.LeagueName[UserLag.language]}</div>
                                            <div class="td_5 ellipsis">${Translate.Title.TH.NobleRank[UserLag.language]}</div>
                                            <div class="td_6 ellipsis">${Translate.Title.TH.Honor[UserLag.language]}</div>
                                            <div class="td_7 ellipsis">${Translate.Title.TH.Prestige[UserLag.language]}</div>
                                        </div>`;

                    if (json_data.length > 0) {

                        for (var iii = 0; iii < json_data.length; iii++) {


                            _return += `<div class="tr" rank="${json_data[iii].rank}" >
                                                <div class="td_1">${getArabicNumbers(json_data[iii].rank)}</div>
                                                <div class="td_2">${json_data[iii].name}</div>
                                                <div class="td_3"> ${json_data[iii].guild || ""}</div>
                                                <div class="td_4">${game.BaseData.Promotion[json_data[iii].porm].Title}</div>
                                                <div class="td_5">${getArabicNumbers(json_data[iii].honor)}</div>
                                                <div class="td_7">${getArabicNumbers(json_data[iii].prestige)}</div>
                                            </div>`;

                        }
                        $("#dialg_box .nav_icon h1").html("٠/٠");
                        $(".for_Ranks .left-content").html(_return);

                    } else {
                        $('body').append(alert_box.confirmMessage("لا يوجد لاعب  يحمل هذا الاسم"))
                    }


                },
                error: function(jqXHR, textStatus, errorThrown) {

                }
            });



            break;



        case "unuions":
            $.ajax({
                url: "api/guild.php",
                data: {
                    get_rank_union_searsh: true,
                    searsh_By: searsh_By,
                    search_value: search_value,
                    id_player: ID_PLAYER,
                    token: TOKEN
                },
                type: 'GET',
                beforeSend: function(xhr) {

                },
                success: function(data, textStatus, jqXHR) {

                    var json_data = JSON.parse(data);
                    var _return = `<div class="th">
                                                <div class="td_1" style="width: 14.5%">${Translate.Title.TH.Ranking[UserLag.language]}</div>
                                                <div class="td_2" style="width: 14.5%">${Translate.Title.TH.League[UserLag.language]}</div>
                                                <div class="td_3" style="width: 14.5%">${Translate.Title.TH.Host[UserLag.language]}</div>
                                                <div class="td_4" style="width: 14.5%">${Translate.Title.TH.Members[UserLag.language]}</div>
                                                <div class="td_5" style="width: 14.5%">${Translate.Title.TH.Honor[UserLag.language]}</div>
                                                <div class="td_6" style="width: 14.5%">${Translate.Title.TH.Prestige[UserLag.language]}</div>
                                                <div class="td_7" style="width: 13.0%">${Translate.Button.General.Action[UserLag.language]}</div>
                                            </div>`;
                    if (json_data.length > 0) {
                        for (var iii = 0; iii < json_data.length; iii++) {


                            _return += `<div class="tr" rank="${json_data[iii].rank_g}" data-id_guild = "${json_data[iii].id_guild}">
                                                    <div class="td_1 ellipsis" style="width: 14.5%">${getArabicNumbers(json_data[iii].rank_g)}</div>
                                                    <div class="td_2 ellipsis" style="width: 14.5%">${json_data[iii].name}</div>
                                                    <div class="td_3 ellipsis" style="width: 14.5%"> ${json_data[iii].p_name}</div>
                                                    <div class="td_4 ellipsis" style="width: 14.5%">${json_data[iii].mem_num}</div>
                                                    <div class="td_5 ellipsis" style="width: 14.5%">${json_data[iii].honor}</div>
                                                    <div class="td_6 ellipsis" style="width: 14.5%">${json_data[iii].prestige}</div>
                                                    <div class="td_7 ellipsis" style="width: 13%"  ><button class="full-btn show-guild-prev"> ${Translate.Button.MenuList.View[UserLag.language]}</buton></div>
                                                </div>`;

                        }

                        $(".for_Ranks .left-content").html(_return);

                    } else {

                        $('body').append(alert_box.confirmMessage("لا يوجد حلف  يحمل هذا الاسم"));

                    }

                },
                error: function(jqXHR, textStatus, errorThrown) {

                }
            });



            break;

        case "heros":
            $.ajax({
                url: "api/hero.php",
                data: {
                    get_rank_hero_searsh: true,
                    searsh_By: searsh_By,
                    search_value: search_value,
                    id_player: ID_PLAYER,
                    token: TOKEN
                },
                type: 'GET',
                beforeSend: function(xhr) {

                },
                success: function(data, textStatus, jqXHR) {

                    var json_data = JSON.parse(data);
                    var _return = `    <div class="th">
                                                    <div class="td_1" style="width: 14.25%;">${Translate.Title.TH.Ranking[UserLag.language]}</div>
                                                    <div class="td_2" style="width: 14.25%;">${Translate.Title.TH.Hero[UserLag.language]}</div>
                                                    <div class="td_3" style="width: 14.25%;">${Translate.Title.TH.Lord[UserLag.language]}</div>
                                                    <div class="td_5" style="width: 14.25%;">${Translate.Title.TH.Lvl[UserLag.language]}</div>
                                                    <div class="td_6" style="width: 14.25%;">${Translate.Title.TH.Sway[UserLag.language]}</div>
                                                    <div class="td_7" style="width: 14.25%;">${Translate.Title.TH.Bravery[UserLag.language]}</div>
                                                    <div class="td_8" style="width: 14.25%;">${Translate.Title.TH.Parry[UserLag.language]}</div>
                                                </div>`;

                    if (json_data.length > 0) {
                        for (var iii = 0; iii < json_data.length; iii++) {


                            _return += `<div class="tr" rank="${json_data[iii].rank_h}">
                                                    <div class="td_1 ellipsis" style="width: 14.25%;">${getArabicNumbers(json_data[iii].rank_h)}</div>
                                                    <div class="td_2 ellipsis" style="width: 14.25%;">${json_data[iii].name}</div>
                                                    <div class="td_3 ellipsis" style="width: 14.25%;"> ${json_data[iii].p_name}</div>
                                                    <div class="td_4 ellipsis" style="width: 14.25%;">${getArabicNumbers(json_data[iii].lvl)}</div>
                                                    <div class="td_5 ellipsis" style="width: 14.25%;">${getArabicNumbers(json_data[iii].point_a)}</div>
                                                    <div class="td_7 ellipsis" style="width: 14.25%;">${getArabicNumbers(json_data[iii].point_b)}</div>
                                                    <div class="td_8 ellipsis" style="width: 14.25%;">${getArabicNumbers(json_data[iii].point_c)}</div>
                                                </div>`;

                        }

                        $(".for_Ranks .left-content").html(_return);

                    } else {

                        $('body').append(alert_box.confirmMessage("لا يوجد بطل  يحمل هذا الاسم"));

                    }

                },
                error: function(jqXHR, textStatus, errorThrown) {

                }
            });



            break;

        case "cities":
            $.ajax({
                url: "api/city.php",
                data: {
                    get_rank_city_searsh: true,
                    searsh_By: searsh_By,
                    search_value: search_value,
                    id_player: ID_PLAYER,
                    token: TOKEN
                },
                type: 'GET',
                beforeSend: function(xhr) {

                },
                success: function(data, textStatus, jqXHR) {

                    var json_data = JSON.parse(data);
                    var _return = `<div class="th">
                                                <div class="td_1 ellipsis">${Translate.Title.TH.Ranking[UserLag.language]}</div>
                                                <div class="td_2 ellipsis">${Translate.Title.TH.Name[UserLag.language]}</div>
                                                <div class="td_3 ellipsis">${Translate.Title.TH.Lvl[UserLag.language]}</div>
                                                <div class="td_5 ellipsis">${Translate.Title.TH.Lord[UserLag.language]}</div>
                                                <div class="td_6 ellipsis">${Translate.Title.TH.League[UserLag.language]}</div>
                                                <div class="td_7 ellipsis">${Translate.Title.TH.Population[UserLag.language]}</div>
                                            </div>`;

                    if (json_data.length > 0) {

                        for (var iii = 0; iii < json_data.length; iii++) {


                            _return += `<div class="tr" rank="${json_data[iii].rank_g}">
                                                    <div class="td_1">${getArabicNumbers(json_data[iii].rank_g)}</div>
                                                    <div class="td_2">${json_data[iii].name}</div>
                                                    <div class="td_3"> ${json_data[iii].lvl}</div>
                                                    <div class="td_4">${json_data[iii].p_name}</div>
                                                    <div class="td_5">${json_data[iii].g_name || ""}</div>
                                                    <div class="td_7">${json_data[iii].pop}</div>
                                                </div>`;

                        }

                        $(".for_Ranks .left-content").html(_return);

                    } else {

                        $('body').append(alert_box.confirmMessage("لا توجد مدينة  تحمل هذا الاسم"));

                    }

                },
                error: function(jqXHR, textStatus, errorThrown) {

                }
            });



            break;

    }

});


/*show my rank*/
$(document).on("click", "#show-my-rank button", function() {



    var rank_for = $(this).parents(".right-content-footer").attr("rank_for");



    switch (rank_for) {

        case "players":
            $("#search_select  select").val("name");
            $("#nav_search input").val(game.DPlayer.Player.name);
            $("#nav_search button").click();

            break;
        case "unuions":

            $("#search_select  select").val("name");
            $("#nav_search input").val(game.DPlayer.Player.guild);
            $("#nav_search button").click();

        case "heros":
            $("#search_select  select option:selected").attr("value", "id_player");
            $("#nav_search input").val(game.DPlayer.Player.id_player);
            $("#nav_search button").click();


            break;

        case "cities":

            $("#search_select  select option:selected").attr("value", "id_player");
            $("#nav_search input").val(game.DPlayer.Player.id_player);
            $("#nav_search button").click();

            break;

    }

    $("#search_select  select option:selected").attr("value", "name");


});



//<button class="full-btn full-btn-3x  pull-R enter" class="usePlayerItemBox"  onClick="useMatrialBox('${matrial_name}')" >تاكيد</button>
$(document).on("click", "#usePlayerItemBox", function() {
    var item = $(this).attr("data-item-name");
    $("#useItemButton").attr("disabled", true);
    useMatrialBox(item);
});
//<button class="full-btn full-btn-3x pull-R enter" id="buyNewItem" data-item-name="${matrial_name}"  onClick="buyMatrial('${matrial_name}')" >${Translate.Button.MenuList.Buy[UserLag.language]}</button>  


window.addEventListener("orientationchange", function() {
    // Announce the new orientation number
    MAX_SCREEN_WIDTH = $(document).width();
    MAX_SCREEN_HEIGHT = $(document).height();

}, false);

$(document)['on']('click', '#openPlayerItemBox', function() {
    var idItem = $(this)['attr']('data-item-name');
    $['ajax']({
        'url': API_URL + '/api/AItem/openItemBox',
        'data': {
            'server': game['Config']['idServer'],
            'token': game['Config']['OuthToken'],
            'idItem': idItem
        },
        'type': 'POST',
        'success': function(data, _0x106300, _0x509fc4) {
            if (!game['LBase']['isJson'](data))
                game['LBase']['Error'](data);
            var JsonObject = JSON['parse'](data);
            if (JsonObject['state'] === 'ok') {
                showMatrialGiftList(JsonObject['Item']);
                for (var ii in JsonObject['Item']) {
                    if (JsonObject['Item']['prizeType'] == 'E') {
                        game['Equip']['getPlayerEquip']();
                    } else {
                        Matrial['givePlayer'](JsonObject['Item'][ii]['Item'], JsonObject['Item'][ii]['amount']);
                    }

                }
                game['Item']['ItemBox']('matrial_box', $('#nav-item-box-left')['attr']('data-current-offset'));
                Player_profile['refreshMatrialBox']()['done'](function() {
                    game['Item']['ItemBox']('matrial_box', $('#nav-item-box-left')['attr']('data-current-offset'));
                });
            } else if (JsonObject['state'] === 'error_1') {
                alert_box['failMessage']('ليس لديك مواد كافية');
            }
        }
    });
});

game.WsLib.TimedTask = {};






game.TimedTask.refreshListView = function() {
    $("#build-tsk").html("");
    $("#study-tsk").html("");
    $("#jop-tsk").html("");

    var idCity = Number(game.CurrentCity.idCity);

    for (var iii in this.TaskList.Building) {
        var Task = this.TaskList.Building[iii];
        if (idCity !== Number(Task.id_city))
            continue;
        $("#build-tsk").append(` <div class="task-unite upgrade-task" type ="${Task.type}"  place="${Task.place}" lvl_to="${Task.lvl_to}">
                                <div class="wrapper">
                                    <div  class="prog-bar"></div>
                                    <div class="over-prog-bar">
                                        <div class="icon pull-L">
                                            <img src="images/icons/task_building_icon.png"/>
                                        </div>
                                        <div class="task-time  pull-L">
                                            <h1 class="title stroke">${BuildingConstData[Task.type].title} >lv.${Task.lvl_to}</h1>
                                            <h1 class="time_counter tc-with-prog building_counter rtl stroke" time-end-org="${Task.time_end_org}" time-start = "${Task.time_start}" time-end="${Task.time_end}"></h1>
                                        </div>
                                        <div class="reduce-time reduce-time-for-building pull-L"  >
                                            <img src="images/btns/m_right.png" class="img-sml" data-id-task="${Task.id}"/>
                                        </div>
                                    </div>
                                </div>
                            </div>`);
    }
    for (var iii in this.TaskList.Study) {
        var Task = this.TaskList.Study[iii];
        if (idCity !== Number(Task.id_city))
            continue;
        $("#study-tsk").append(` <div class="task-unite upgrade-task" type ="${Task.study}"  place="${Task.study_in}" lvl_to="${Task.lvl_to}">
                                <div class="wrapper">
                                    <div  class="prog-bar"></div>
                                    <div class="over-prog-bar">
                                        <div class="icon pull-L">
                                            <img src="images/icons/task_tech_icon.png"/>
                                        </div>
                                        <div class="task-time  pull-L">
                                            <h1 class="title stroke">${game.BaseData.Edu[Task.study].ar_title} >lv.${Task.lvl_to}</h1>
                                            <h1 class="time_counter tc-with-prog study_counter rtl stroke" time-end-org="${Task.time_end_org}" time-start = "${Task.time_start}" time-end="${Task.time_end}"></h1>
                                        </div>
                                        <div class="reduce-time reduce-time-for-study pull-L"  >
                                            <img src="images/btns/m_right.png" class="img-sml"/>
                                        </div>
                                    </div>
                                </div>
                            </div>`);
    }
    for (var iii in this.TaskList.Jop) {
        var Task = this.TaskList.Jop[iii];
        if (idCity !== Number(Task.id_city))
            continue;
        $("#jop-tsk").append(` <div class="task-unite upgrade-task" type ="${Task.jop_place}"  place="${Task.jop_place}" lvl_to="${Task.lvl_to}">
                                <div class="wrapper">
                                    <div  class="prog-bar"></div>
                                    <div class="over-prog-bar">
                                        <div class="icon pull-L">
                                            <img src="images/icons/task_jop_icon.png"/>
                                        </div>
                                        <div class="task-time  pull-L">
                                            <h1 class="title stroke">${CITY_JOP_REQ[Task.jop_place.toUpperCase()].ar_title}</h1>
                                            <h1 class="time_counter tc-with-prog study_counter rtl stroke" time-end-org="${Task.time_end_org}" time-start = "${Task.time_start}" time-end="${Task.time_end}"></h1>
                                        </div>
                                        <div class="reduce-time reduce-time-for-jop pull-L"  >
                                            <img src="images/btns/m_right.png" class="img-sml" data-id-task="${Task.id}"/>
                                        </div>
                                    </div>
                                </div>
                            </div>`);
    }


    refreshTime();
};


game.TimedTask.getCityBuildingTasks = function(idCity) {

    if (!idCity)
        idCity = game.CurrentCity.City.id_city;

    $.ajax({

        url: `${API_URL}/api/ATimedTask/getCityBuildingTasks`,
        type: 'GET',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            var JsonData = JSON.parse(data);
            for (var iii in JsonData)
                game.TimedTask.TaskList.Building[JsonData[iii].id] = JsonData[iii];
            game.TimedTask.refreshListView();
        }

    });

};

game.TimedTask.getCityStudyTasks = function(idCity) {

    if (!idCity)
        idCity = game.CurrentCity.City.id_city;

    $.ajax({

        url: `${API_URL}/api/ATimedTask/getCityStudyTasks`,
        type: 'GET',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            var JsonData = JSON.parse(data);
            for (var iii in JsonData)
                game.TimedTask.TaskList.Study[JsonData[iii].id] = JsonData[iii];
            game.TimedTask.refreshListView();
        }

    });

};

game.TimedTask.getCityArmyTasks = function(idCity) {

    if (!idCity)
        idCity = game.CurrentCity.City.id_city;

    $.ajax({

        url: `${API_URL}/api/ATimedTask/getCityArmyTasks`,
        type: 'GET',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            var JsonData = JSON.parse(data);
            for (var iii in JsonData)
                game.TimedTask.TaskList.Army[JsonData[iii].id] = JsonData[iii];
            game.TimedTask.refreshListView();
        }

    });

};

game.TimedTask.getCityJopTasks = function(idCity) {

    if (!idCity)
        idCity = game.CurrentCity.idCity;

    $.ajax({

        url: `${API_URL}/api/ATimedTask/getCityJopTasks`,
        type: 'GET',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idCity: idCity
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            var JsonData = JSON.parse(data);
            for (var iii in JsonData)
                game.TimedTask.TaskList.Jop[JsonData[iii].id] = JsonData[iii];
            game.TimedTask.refreshListView();
        }

    });

};

const JOP_AVAIL_PLACE = [
    10, 30, 60, 100, 150, 200,
    300, 500, 750, 1000, 1200, 1250,
    1300, 1350, 1400, 1450, 1500, 1550,
    1600, 1650, 1700, 1750, 1800, 1850,
    1900, 1950, 2000, 2050, 2100, 2150
];

const CITY_JOP_REQ = {

    FARM: {
        food: 10,
        wood: 20,
        stone: 30,
        metal: 15,
        time: 31,
        pop: 1,
        produce: "food",
        ar_title: "وظائف الحقل"
    },
    WOOD: {
        food: 15,
        wood: 10,
        stone: 20,
        metal: 30,
        time: 31,
        pop: 1,
        produce: "wood",
        ar_title: "وظائف الاخشاب"
    },
    STONE: {
        food: 30,
        wood: 15,
        stone: 10,
        metal: 20,
        time: 31,
        pop: 1,
        produce: "stone",
        ar_title: "وظائف المحجر"
    },
    MINE: {
        food: 20,
        wood: 30,
        stone: 15,
        metal: 10,
        time: 31,
        pop: 1,
        produce: "metal",
        ar_title: "وظائف المنجم"
    }

};




$(document).on("keyup change", "#jop-num-input input", function() {


    var current_val = $(this).val() || 0;
    var jop = $("#job-typs .selected").attr("place");


    $("#jop_req_table .food").html(Math.max(CITY_JOP_REQ[jop.toUpperCase()].food * current_val, CITY_JOP_REQ[jop.toUpperCase()].food));
    $("#jop_req_table .wood").html(Math.max(CITY_JOP_REQ[jop.toUpperCase()].wood * current_val, CITY_JOP_REQ[jop.toUpperCase()].wood));
    $("#jop_req_table .metal").html(Math.max(CITY_JOP_REQ[jop.toUpperCase()].metal * current_val, CITY_JOP_REQ[jop.toUpperCase()].metal));
    $("#jop_req_table .stone").html(Math.max(CITY_JOP_REQ[jop.toUpperCase()].stone * current_val, CITY_JOP_REQ[jop.toUpperCase()].stone));
    $("#jop_req_table .time").html(changeTimeFormat(Math.max(CITY_JOP_REQ[jop.toUpperCase()].time * current_val, CITY_JOP_REQ[jop.toUpperCase()].time)));

});


/*____________________________________________________________________________*/
/*_____________________START TIMing___________________________________________*/
function refreshTime() {
    $(".time_counter").each(function() {

        var timeEnd = parseInt($(this).attr("time-end"));
        var now = Date.now() / 1000;
        var time_diff = Math.floor((timeEnd - now));



        if (time_diff > 0) {
            $(this).html(changeTimeFormat(time_diff));

            if ($(this).hasClass("tc-with-prog")) {
                var timeStart = $(this).attr("time-start");
                var timeEndOrg = $(this).attr("time-end-org");
                var progWidth = (((timeEndOrg - timeEnd) + (now - timeStart)) / (timeEndOrg - timeStart)) * 100;
                $(this).parents(".task-unite").children(".wrapper").children(".prog-bar").width(progWidth + "%");
            }

        } else {

            $(this).html(changeTimeFormat(0));
            if ($(this).hasClass("building_counter")) {
                $(this).parents(".task-unite").remove();
            } else if ($(this).hasClass("study_counter")) {
                $(this).parents(".task-unite").remove();
            } else if ($(this).hasClass("refresh_hero_counter")) {
                buildingClick(cityHasType(BUILDING_TYPS.THEATER), true);
            } else if ($(this).hasClass("counter_worker_in_palace")) {
                buildingClick(cityHasType(BUILDING_TYPS.PALACE), true);
            } else if ($(this).hasClass("inner_market_nav")) {
                $("#transport-res-inner-nav .selected").click();
            }

        }



    });
}







game.WsLib.TimedTask.Army = function(data) {

    game.City.getCity(data.City.id_city).City = data.City;
    game.DPlayer.Player.prestige = Number(game.DPlayer.Player.prestige) + data.prestige;






    $(".middle-content .soldier").each(function() {

        $(this).children(".amount").html((game.CurrentCity.City[$(this).attr("army_type")]));

    });

    var id_console = game.CurrentCity.City.console;
    if (id_console) {
        var hero = getHeroById(id_console);
        hero.exp = Number(hero.exp) + Number(data.prestige) * 2;
        $("#dialg_box[type='hero'] .hero-profile").replaceWith(army.middle_content(hero));
    }


    Player_profile.refresh_view();
    city_profile.refresh_army_view();
    city_profile.refresh_resource_view();
    delete(game.TimedTask.TaskList.Army[data.Task.id]);
    game.TimedTask.refreshListView();
    Building.militrayProduction.RefreshLeft();


};

game.WsLib.TimedTask.Building = function(data) {

    // Crafty.audio.play("upgrade_done");

    game.City.getCity(data.Task.id_city).BuildingLvl[data.Task.place] = data.Task.lvl_to;

    fillCityWithBuilding();


    $("#palace_content .right-content .worker").each(function() {
        if ($(this).attr("place") === data.Task.place && Number(game.CurrentCity.City.id_city) === Number(data.Task.id_city)) {
            $(this).remove();
        }

    });


    /* increment the cild atteched lvl panel*/

    if (Number(game.CurrentCity.City.id_city) === Number(data.Task.id_city)) {

        if (Number(data.Task.type) === BUILDING_TYPS.COTTAGE) {

            game.City.getCityBase();

        } else if (Number(data.Task.type) === BUILDING_TYPS.STORE) {

            game.City.getCityBase();
            game.City.getCityStorage();

        } else if (Number(data.Task.type) === BUILDING_TYPS.PALACE) {
            game.City.getCityBase();
        } else if (Number(data.Task.type) === BUILDING_TYPS.WORSHIP) {
            game.City.getCityBase();
        } else if (Number(data.Task.type) === BUILDING_TYPS.WALL) {
            game.City.getCityBase();

        }

    }








    city_profile.refresh_city_resources();
    delete(game.TimedTask.TaskList.Building[data.Task.id]);
    game.TimedTask.refreshListView();
    fillCityWithBuilding();

    if ($("#dialg_box .box_header").attr("place") === data.Task.place && Number(game.CurrentCity.City.id_city) === Number(data.Task.id_city)) {
        buildingClick(data.Task.place, true);
    }

    var id_console = game.CurrentCity.City.console;

    var hero = getHeroById(id_console);
    if (hero) {
        hero.exp = Number(hero.exp) + Number(data.prestige) * 2;
        $("#dialg_box[type='hero'] .middle-content").replaceWith(army.middle_content(hero));
    }

};


game.WsLib.TimedTask.Jop = function(data) {



    game.DPlayer.Player.prestige = Number(game.DPlayer.Player.prestige) + data.prestige;





    $("#job-typs .selected").click();
    city_profile.refresh_city_resources();
    delete(game.TimedTask.TaskList.Jop[data.Task.id]);
    game.TimedTask.refreshListView();
    Player_profile.refresh_view();
    game.City.getCityBase();
    game.City.getCityJop();

    var id_console = game.CurrentCity.City.console;

    var hero = getHeroById(id_console);
    if (hero) {
        hero.exp = Number(hero.exp) + Number(data.prestige) * 2;
        $("#dialg_box[type='hero'] .middle-content").replaceWith(army.middle_content(hero));
    }


};


game.WsLib.TimedTask.Study = function(data) {



    //Crafty.audio.play("upgrade_done");
    game.DPlayer.Player.prestige = Number(game.DPlayer.Player.prestige) + data.prestige;
    Player_profile.getPlayerEdu().done(function() {
        $(".uni_tech .left-content .total").replaceWith(edu.getUniTech());
        $(".acad_tech .left-content .total").replaceWith(edu.getAcadTech());
    });





    city_profile.refresh_city_resources();
    delete(game.TimedTask.TaskList.Study[data.Task.id]);
    game.TimedTask.refreshListView();
    Player_profile.refresh_view();

    var id_console = game.CurrentCity.City.console;
    var hero = getHeroById(id_console);
    if (hero) {
        hero.exp = Number(hero.exp) + Number(data.prestige) * 2;
        $("#dialg_box[type='hero'] .middle-content").replaceWith(army.middle_content(hero));
    }
};








function changeTimeFormat(time_diff) {
    if (isNaN(time_diff))
        return "---";
    time_diff = parseInt(time_diff);
    var days = Math.floor(time_diff / (60 * 60 * 24));
    var hours = Math.floor((time_diff % (60 * 60 * 24)) / (60 * 60));
    var minutes = Math.floor((time_diff % (60 * 60)) / (60));
    var seconds = Math.floor((time_diff % (60)) / 1);
    return (getArabicNumbers(seconds) + "&nbsp;ث&nbsp;" + (minutes > 0 ? getArabicNumbers(minutes) +
        "&nbsp;د&nbsp;" : "") + (hours > 0 ? getArabicNumbers(hours) +
        "&nbsp;س&nbsp;" : "") + (days > 0 ? getArabicNumbers(days) +
        "&nbsp;ى&nbsp;" : " "));
}

function lastSeen(last_seen) {
    var time_diff = Math.floor($.now() / 1000 - last_seen);

    if (time_diff < 60) {
        return `منذ ${Math.floor(time_diff)} ثانية`;
    } else if (time_diff < 60 * 11) {
        return `منذ ${Math.floor(time_diff / 60)} دقائق`;
    } else if (time_diff < 60 * 60) {
        return `منذ ${Math.floor(time_diff / 60)} دقيقة`;
    } else if (time_diff < 60 * 60 * 11) {
        return `منذ ${Math.floor(time_diff / (60 * 60))} ساعات`;
    } else if (time_diff < 60 * 60 * 24) {
        return `منذ ${Math.floor(time_diff / (60 * 60))} ساعة`;
    } else if (time_diff < 60 * 60 * 24 * 7) {
        return "يوم" + Math.floor(time_diff / (60 * 60 * 24)) + "منذ ";
    } else {
        return "منذ فترة طويلة";
    }
}

function checkTimeFinish(time, place, type, lvl, time_end, el) {
    if ((time - Date.now()) < 1) {

    }
}

function test_time() {
    $.ajax({
        url: "api/player.php",
        data: {
            test_time: true
        },
        type: 'POST',
        success: function(data, textStatus, jqXHR) {
            console.log(data);
            console.log(Date.now());
        }
    });
}



Max_of = {

    city_jop: function(jop, building_place) {

        return Math.min(
            Math.floor(game.CurrentCity.City.pop),
            Math.floor(game.CurrentCity.City.food / jop.food),
            Math.floor(game.CurrentCity.City.wood / jop.wood),
            Math.floor(game.CurrentCity.City.stone / jop.stone),
            Math.floor(game.CurrentCity.City.metal / jop.metal),
            JOP_AVAIL_PLACE[game.City.getCity().BuildingLvl[building_place] - 1]

        );


    },
    buildingTypeLvl: function(buiding_type) {
        var max = -1;
        for (var index in game.City.getCity().BuildingType) {

            if (index !== "id_player" && index !== "id_player" && Number(game.City.getCity().BuildingType[index]) === Number(buiding_type)) {
                if (game.City.getCity().BuildingLvl[index] > max) {
                    max = Number(game.City.getCity().BuildingLvl[index]);
                }
            }

        }
        return max;

    }

};



function dateTimeFormat(time) {

    var monthNames = [
        "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
    ];


    return `${time.getUTCDate()} ${monthNames[time.getUTCMonth()]} ${time.getUTCFullYear()}  &nbsp; &nbsp; &nbsp; &nbsp; ${time.getUTCHours()}:${time.getUTCMinutes()}:${time.getUTCSeconds()}`;

}

function dateTimeFormatShort(time) {

    var monthNames = [
        "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"
    ];


    return `${time.getUTCDate()} ${monthNames[time.getUTCMonth()]} ${time.getUTCFullYear()} ${time.getUTCHours()}:${time.getUTCMinutes()}`;

}

var SERVER_CLOCK = $("#server-name .time");

setInterval(function() {
    SERVER_CLOCK.html(dateTimeFormat(new Date(Date.now())));
}, 1000); /* global game.CurrentCity.City, alert_box */

$.ajax({
    url: "js" + JS_VERSION + "/json/building.json",
    data: {
        get_matrial: true,
        id_player: ID_PLAYER,
        token: TOKEN
    },
    type: 'POST',
    beforeSend: function(xhr) {

    },
    success: function(data, textStatus, jqXHR) {

        BUILDING_JSON_DATA = data;

    },
    error: function(jqXHR, textStatus, errorThrown) {
        console.log(errorThrown);
    }
});



const wall_nav_bar = [{
    "txt": "قائمة التحصينات",
    "title": "uni_sub"
}, {
    "txt": "معلومات التحديث",
    "title": "upgrade_req"
}];


var BUILDING_JSON_DATA;


function getUpgradeData(place) {

    var type = parseInt(game.City.getCity().BuildingType[place]);
    var lvl = parseInt(game.City.getCity().BuildingLvl[place]);
    var table = getReqTable(type, lvl);

    switch (type) {
        case 0: // مكان خالى 
            //  dialog box for empty place

            break;

        case 1: // كوخ
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى : كوخ مستوى' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green"> كوخ مستوى ' + getArabicNumbers(lvl + 1) + ' يتسع لحوالى ' + getArabicNumbers((lvl) * 250) + ' فرد</h1>' +
                '</div>';
            break;

        case 2: // مخزن
            // dialog box for store 
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى : مخزن مستوى' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green"> مخزن مستوى' + getArabicNumbers(lvl + 1) + ' يتسع لحوالى ' + getArabicNumbers(game.BaseData.Building.UpgradeBinfit[BUILDING_TYPS.STORE][Math.min(lvl, 29)]) + ' من الموارد</h1>' +
                '</div>';
            break;

        case 3: // ثكنات
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى : ثكنات مستوى' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">  ثكنات مستوى' +
                getArabicNumbers(lvl + 1) +
                ' تسريع التدريب القوات بمقدار ' + getArabicNumbers(lvl < 7 ? (lvl + 1) * 5 : 30) +
                '%   و سوف  يسمح بتدريب ' + getArabicNumbers(lvl > 9 ? 10 : lvl + 1) +
                '</h1>' +
                '</div>';
            break;

        case 4: // اسطبل
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى : اسطبل مستوى' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">  اسطبل مستوى' +
                getArabicNumbers(lvl + 1) +
                ' تسريع التدريب القوات بمقدار ' + getArabicNumbers(lvl < 7 ? (lvl + 1) * 5 : 30) +
                '%   و سوف  يسمح بتدريب ' + getArabicNumbers(lvl > 9 ? 10 : lvl + 1) +
                '</h1>' +
                '</div>';
            break;

        case 5: // ورشة عمل
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى : ورشة عمل مستوى' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">   ورشة عمل مستوى' +
                getArabicNumbers(lvl + 1) +
                '  تسريع التدريب القوات بمقدار ' + getArabicNumbers(lvl < 7 ? (lvl + 1) * 5 : 30) +
                '%   و سوف  يسمح بتدريب ' + getArabicNumbers(lvl > 9 ? 10 : lvl + 1) +
                '</h1>' +
                '</div>';
            break;

        case 6: // مسرح
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى : المسرح مستوى' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">المسرح مستوى ' +
                getArabicNumbers(lvl + 1) +
                ' يسمح بخروج ' +
                getArabicNumbers(lvl > 14 ? 15 : lvl + 1) +
                ' بطل مستوى ١ الى ' + getArabicNumbers((lvl + 1) * 5) + ' كل ' + getArabicNumbers(lvl > 8 ? 12 : 84 - (lvl * 12)) + ' دقيقة</h1>' +
                '</div>';
            break;


        case 7: // مركز
            var info = `<div class="upgrade-info">
                            <div class="header-1">
                                <h1>تحديث الى :  المركز مستوى${getArabicNumbers(lvl + 1)}</h1>
                            </div>
                            <h1 class="header-2 green">يمكنك عرض ${getArabicNumbers(lvl + 1)}  من المواد الخاصة بك فى صندوق المواد واختيارها للبيع</h1>
                        </div>`;
            break;

        case 8: // جامعة
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى :  الجامعة مستوى' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">الجامعة مستوى ' +
                getArabicNumbers(lvl + 1) +
                ' تقلل المدة الدراسية  بمقدار' +
                getArabicNumbers(lvl > 20 ? 60 : (lvl + 1) * 3) + '% وهذا  المستوى للجامعة يتيح لك دراسة التكنولوجيا المتاحة حتى مستوى ' +
                getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>';
            break;

        case 9: // اكاديمية
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى :  الاكاديمية مستوى' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">الاكاديمية مستوى ' +
                getArabicNumbers(lvl + 1) +
                ' تقلل المدة الدراسية  بمقدار' +
                getArabicNumbers(lvl > 20 ? 60 : (lvl + 1) * 3) + '% وهذا  المستوى للاكاديمية يتيح لك دراسة التكنولوجيا المتاحة حتى مستوى ' +
                getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>';
            break;


        case 10: //دار مساعدة 
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى :  دار المساعدة مستوى' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">دار المساعدة  مستوى ' + getArabicNumbers(lvl + 1) +
                '  يزيد نسبة السكان بنسبة ' + getArabicNumbers((lvl + 1) * 2) +
                '% او يسرع من تدريب القوات بنسبة ' + getArabicNumbers((lvl + 1) * 2) +
                '% او يزيد من سرعة البناء  بنسبة ' + getArabicNumbers((lvl + 1) * 2) + '% حسب اختيار المساعد</h1>' +
                '</div>';
            break;



        case 11: // البلازا
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى :  البلازا  مستوى' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">البلازا مستوى ' + getArabicNumbers(lvl + 1) + ' يمكنها ارسال حتى ' + getArabicNumbers(lvl > 10 ? 10 : lvl + 1) + ' ابطال خارج المدينة</h1>' +
                '</div>';
            break;


        case 12: // القصر
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى :  القصر  مستوى' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">القصر مستوى  يزيد مخزون السسترسس وعدد البرارى المملوكة</h1>' +
                '</div>';
            break;


        case 13: // السور
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى : السور مستوى ' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">السور مستوى ' + getArabicNumbers(lvl + 1) +
                ' يمتلك مساحة ' + getArabicNumbers((lvl + 1) * 100000) + ' لبناء الدفاعات  ويتحمل ايضاً ' + getArabicNumbers((lvl) * (lvl + 1) * 100000) + '</h1>' +
                '</div>';

            break;


        case 14: // السوق
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى : السور مستوى ' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">السور مستوى ' + getArabicNumbers(lvl + 1) +
                ' يمتلك مساحة ' + getArabicNumbers((lvl + 1) * 100000) + ' لبناء الدفاعات  ويتحمل ايضاً ' + getArabicNumbers((lvl) * (lvl + 1) * 100000) + '</h1>' +
                '</div>';

            break;


        case 15: // الغابات
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى : السور مستوى ' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">السور مستوى ' + getArabicNumbers(lvl + 1) +
                ' يمتلك مساحة ' + getArabicNumbers((lvl + 1) * 100000) + ' لبناء الدفاعات  ويتحمل ايضاً ' + getArabicNumbers((lvl) * (lvl + 1) * 100000) + '</h1>' +
                '</div>';

            break;


        case 16: // الحقل
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى : السور مستوى ' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">السور مستوى ' + getArabicNumbers(lvl + 1) +
                ' يمتلك مساحة ' + getArabicNumbers((lvl + 1) * 100000) + ' لبناء الدفاعات  ويتحمل ايضاً ' + getArabicNumbers((lvl) * (lvl + 1) * 100000) + '</h1>' +
                '</div>';

            break;


        case 17: // المنجمم
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى : السور مستوى ' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">السور مستوى ' + getArabicNumbers(lvl + 1) +
                ' يمتلك مساحة ' + getArabicNumbers((lvl + 1) * 100000) + ' لبناء الدفاعات  ويتحمل ايضاً ' + getArabicNumbers((lvl) * (lvl + 1) * 100000) + '</h1>' +
                '</div>';

            break;


        case 18: // المحجر
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>تحديث الى : السور مستوى ' + getArabicNumbers(lvl + 1) + '</h1>' +
                '</div>' +
                '<h1 class="header-2 green">السور مستوى ' + getArabicNumbers(lvl + 1) +
                ' يمتلك مساحة ' + getArabicNumbers((lvl + 1) * 100000) + ' لبناء الدفاعات  ويتحمل ايضاً ' + getArabicNumbers((lvl) * (lvl + 1) * 100000) + '</h1>' +
                '</div>';


            break;
        case 19: // الميناء
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>لا يمكنك تطوير المبنى فى الاصدار الحالى </h1>' +
                '</div>' +
                '<h1 class="header-2 green"> سيتم تحديث الاصدار الحالى لاضافة الحروب والقوات البحرية  قريبا</h1>' +
                '</div>';

            break;
        case 20: // المنارة
            var info = '<div class="upgrade-info">' +
                '<div class="header-1">' +
                '<h1>لا يمكنك تطوير المبنى فى الاصدار الحالى </h1>' +
                '</div>' +
                '<h1 class="header-2 green"> سيتم تحديث الاصدار الحالى لاضافة الحروب والقوات البحرية  قريبا</h1>' +
                '</div>';

            break;
    }

    info = lvl < 30 ? info : `<div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى : ------</h1>
                                    </div>
                                    <h1 class="header-2 green"> لقد وصل المبنى الى اعلى مستوى ممكن لا يمكنك تطويرة الى مستوى اعلى</h1>
                                </div>`;
    return '<div class="upgrade_req_tooltip">' + info + table + '</div>';
}

function getReqTable(type, lvl) {

    var LvlReq = game.Building.BuildingData[type].lvlRequirment[Math.min(lvl, 29)];
    var wood = lvl < 30 ? LvlReq.wood : "---";
    var food = lvl < 30 ? LvlReq.food : "---";
    var stone = lvl < 30 ? LvlReq.stone : "---";
    var metal = lvl < 30 ? LvlReq.metal : "---";
    var coin = lvl < 30 ? LvlReq.coin : "---";
    var condetions = game.Building.verfiyCondetion(type, lvl);
    var time = lvl < 30 ? LvlReq.time : "---";

    var all_con = "";
    var enough = "";

    for (var ii in condetions) {
        enough = "";
        if (condetions[ii].verfied)
            enough = "enough";
        else
            enough = "not-enough";

        all_con += `<li class="${enough}">` + condetions[ii].Txt + "</li>";
    }

    all_con = lvl < 30 ? all_con : `<li class="not-enough">-------</li>`;

    var table = `<div class="req_table_container">
                     <table class="req_table" border="0">   
                        <thead>      
                            <tr>     
                                <td colspan="2" style="direction: rtl">             
                                    <ol>               
                                        ${all_con}
                                    </ol>  
                                </td>    
                            </tr>   
                        </thead>   
                        <tbody>      
                            <tr>     
                                <td>   
                                    <img src="images/style/food.png">     
                                    <div class="amount ${game.CurrentCity.City.food < Number(food) ? "not_enough" : ""}">         
                                           ${food}
                                    </div>      
                                </td>        
                                <td>          
                                    <img src="images/style/iron.png">  
                                    <div class="amount ${game.CurrentCity.City.metal < Number(metal) ? "not_enough" : ""}">           
                                           ${metal}
                                    </div>       
                                </td>       
                            </tr>  
                            <tr>       
                                <td>      
                                    <img src="images/style/wood.png">   
                                    <div class="amount ${game.CurrentCity.City.wood < Number(wood) ? "not_enough" : ""}">               
                                          ${ wood}
                                    </div>       
                                </td>
                                <td>            
                                    <img src="images/style/stone.png">      
                                    <div class="amount ${game.CurrentCity.City.stone < Number(stone) ? "not_enough" : ""}">           
                                           ${stone}
                                    </div>          
                                </td> 
                            </tr>     
                            <tr>      
                                <td>   
                                    <img src="images/style/coin.png"> 
                                    <div class="amount ${game.CurrentCity.City.coin < Number(coin) ? "not_enough" : ""}">             
                                           ${coin}
                                    </div>      
                                </td>     
                                <td>    
                                    <img src="images/style/wait.png">       
                                    <div class="amount">        
                                           ${changeTimeFormat(time)}
                                    </div>   
                                </td>      
                            </tr> 
                        </tbody>
                    </table>
                </div>`;
    return table;
}



function cityHasType(building_type) {
    for (var building in game.City.getCity().BuildingType) {
        if (Number(game.City.getCity().BuildingType[building]) === building_type && building !== "id_city" && building !== "id_player") {
            return building;
        }

    }
    return false;
}



// get content acording to  building type

function getContentForBuilding(place) {

    var type = parseInt(game.City.getCity().BuildingType[place]);
    var lvl = parseInt(game.City.getCity().BuildingLvl[place]);

    switch (type) {
        case 0: // مكان خالى 
            //  dialog box for empty place
            var content = `<div class="box_content empty_place for_building_box" data-building-type="${type}" data-building-place="${place}" data-building-lvl="${lvl}">
                                ${Building.contentfor_emptyPlace()}
                            </div>`;
            $(".box_content").replaceWith(content);
            break;

        case BUILDING_TYPS.COTTAGE: // كوخ
            // dialog box for coach
            var left_content = `<div class="left-content ">${upgradeBenefits(type, game.City.getCity().BuildingLvl[place])}</div>`;


            var right_content = Building.upgradeReqTable(`يتطلب التحديث الى المستوى ${getArabicNumbers(lvl)}`, 1, lvl, changeTimeFormat(BUILDING_JSON_DATA[type].time_req[lvl]), `الكوخ مستوى ${getArabicNumbers(lvl)}`);

            var content = `<div class="box_content building_cottage for_building_box"
                                data-building-type="${type}" data-building-place="${place}"
                                data-building-lvl="${lvl}">` + left_content + right_content + '</div>';
            $(".box_content").replaceWith(content);

            break;

        case BUILDING_TYPS.STORE: // مخزن
            // dialog box for store 
            var left_content = `<div class="left-content ">${upgradeBenefits(type, game.City.getCity().BuildingLvl[place])}</div>`;

            var right_content = Building.dialogBoxContent_forstore(place);

            var content = `<div class="box_content building_store for_building_box"
                                data-building-type="${type}" data-building-place="${place}"
                                data-building-lvl="${lvl}">` + left_content + right_content + '</div>';

            $(".box_content").replaceWith(content);
            break;

        case BUILDING_TYPS.BARRACKS: // ثكنات
            var thknat_army = [{
                type: "army_a",
                amount: game.CurrentCity.City.army_a,
                image: "images/tech/soldier01.jpg",
                title: "مشاة",
                ar_title: "مشاة",
                en_title: "Hastatus(i)"
            }, {
                type: "army_d",
                amount: game.CurrentCity.City.army_d,
                image: "images/tech/soldier04.jpg",
                title: "رماة",
                ar_title: "رماة",
                en_title: "Segittarius(i)"
            }, {
                type: "army_c",
                amount: game.CurrentCity.City.army_c,
                image: "images/tech/soldier03.jpg",
                title: "مدرعين",
                ar_title: "مدرعين",
                en_title: "Principes"
            }];
            var content = Building.dialogBoxContent_forMili(thknat_army, place);
            $(".box_content").replaceWith(content);
            Building.militrayProduction.left(place);
            var max_count = 0;
            var index = 0;

            for (var obj in game.City.getCity().BuildingType) {
                if (obj !== "id_player" && obj !== "id_city" && Number(game.City.getCity().BuildingType[obj]) === BUILDING_TYPS.BARRACKS) {
                    if (obj === place) {
                        index = max_count;
                    }
                    max_count++;

                }
            }

            var right_nav = `<div class="right-nav" data-current-index="${index}" data-building-type="${type}">
                                <div class="wrapper flex">
                                    <div class="nav-building">
                                        <button class="GO_L_1" id="go-building-left"></button>
                                    </div>
                                    <div class="nav-building">
                                        ${max_count}/${index + 1}
                                    </div>
                                    <div class="nav-building">
                                        <button class="GO_R_1"  id="go-building-right"></button>
                                    </div>
                                </div>
                            </div>`;

            $(".right-nav").replaceWith(right_nav);


            break;

        case BUILDING_TYPS.STABL: // اسطبل
            var stabl_army = [{
                type: "spies",
                amount: game.CurrentCity.City.spies,
                image: "images/items/item027.jpg",
                title: "الجواسيس",
                ar_title: "الجواسيس",
                en_title: "Speculatores(i)"
            }, {
                type: "army_b",
                amount: game.CurrentCity.City.army_b,
                image: "images/tech/soldier02.jpg",
                title: "فرسان",
                ar_title: "فرسان",
                en_title: "Equites"
            }];
            var content = Building.dialogBoxContent_forMili(stabl_army, place);
            $(".box_content").replaceWith(content);
            Building.militrayProduction.left(place);
            var max_count = 0;
            var index = 0;

            for (var obj in game.City.getCity().BuildingType) {
                if (obj !== "id_player" && obj !== "id_city" && Number(game.City.getCity().BuildingType[obj]) === BUILDING_TYPS.STABL) {
                    if (obj === place) {
                        index = max_count;
                    }
                    max_count++;

                }
            }

            var right_nav = `<div class="right-nav" data-current-index="${index}" data-building-type="${type}">
                                <div class="wrapper flex">
                                    <div class="nav-building">
                                        <button class="GO_L_1" id="go-building-left"></button>
                                    </div>
                                    <div class="nav-building">
                                        ${max_count}/${index + 1}
                                    </div>
                                    <div class="nav-building">
                                        <button class="GO_R_1"  id="go-building-right"></button>
                                    </div>
                                </div>
                            </div>`;

            $(".right-nav").replaceWith(right_nav);
            break;

        case BUILDING_TYPS.WORKSHOP: // ورشة عمل
            var workshop_army = [{
                type: "army_e",
                amount: game.CurrentCity.City.army_e,
                image: "images/tech/soldier05.jpg",
                title: "مقاليع",
                ar_title: "مقاليع",
                en_title: "Ballistae"
            }, {
                type: "army_f",
                amount: game.CurrentCity.City.army_f,
                image: "images/tech/soldier06.jpg",
                title: "منجنيق",
                ar_title: "منجنيق",
                en_title: "Onagers"
            }];
            var content = Building.dialogBoxContent_forMili(workshop_army, place);
            $(".box_content").replaceWith(content);
            Building.militrayProduction.left(place);

            var max_count = 0;
            var index = 0;

            for (var obj in game.City.getCity().BuildingType) {
                if (obj !== "id_player" && obj !== "id_city" && Number(game.City.getCity().BuildingType[obj]) === BUILDING_TYPS.WORKSHOP) {
                    if (obj === place) {
                        index = max_count;
                    }
                    max_count++;

                }
            }

            var right_nav = `<div class="right-nav" data-current-index="${index}" data-building-type="${type}">
                                <div class="wrapper flex">   
                                    <div class="nav-building">
                                        <button class="GO_L_1" id="go-building-left"></button>
                                    </div>
                                    <div class="nav-building">
                                        ${max_count}/${index + 1}
                                    </div>
                                    <div class="nav-building">
                                        <button class="GO_R_1" id="go-building-right"></button>
                                    </div>
                                </div>
                            </div>`;

            $(".right-nav").replaceWith(right_nav);

            break;

        case BUILDING_TYPS.THEATER: // مسرح

            var all_heros = "";
            var left_content = "";
            game.Building.Theater.RefreshTheaterListView(place);

            game.City.getCityHeroTheater().done(function() {
                game.Building.Theater.RefreshTheaterListView(place);
            });
            break;


        case BUILDING_TYPS.STATION: // مركز
            $(".box_content").replaceWith(TradeCenter.TradeListContent(TradeCenter.currentList));
            waitCursor();
            TradeCenter.getTradeList(0).done(function() {
                $(".box_content").replaceWith(TradeCenter.TradeListContent(TradeCenter.currentList));
                unwaitCursor();
            });
            break;

        case BUILDING_TYPS.UNIVERSITY: // جامعة

            city_profile.refresh_city_resources();
            var content = Building.dialogBoxContent_forUni(type, lvl, place);
            $(".box_content").replaceWith(content);

            break;

        case BUILDING_TYPS.ACADEMY: // اكاديمية

            city_profile.refresh_city_resources();
            var content = Building.dialogBoxContent_for_acad(type, lvl, place);
            $(".box_content").replaceWith(content);
            break;


        case BUILDING_TYPS.WORSHIP: //دار مساعدة 
            // var left_content = `<div class="left-content ">${upgradeBenefits(type ,game.City.getCity().BuildingLvl[place] )}</div>`;


            // var right_content = building.upgradeReqTable(`يتطلب التحديث الى المستوى ${getArabicNumbers(lvl+1)}`  ,10 , game.City.getCity().BuildingLvl[place],"20د",`دار المساعدة مستوى ${getArabicNumbers(lvl)}`);

            // return '<div class="box_content building_cottage">' + left_content + right_content + '</div>';
            var content = Building.dialogBoxContnet_forworship(place);
            $(".box_content").replaceWith(content);
            break;



        case 11: // البلازا


            Building.dialogBoxContnet_forblaza(place);

            break;
        case BUILDING_TYPS.PALACE: // palace 

            var content = Building.dialogBoxContent_forpalace();
            $(".box_content").replaceWith(content);

            break;

        case 13: // wall

            var wall_army = [{
                type: "wall_a",
                amount: game.CurrentCity.City.wall_a,
                image: "images/tech/defense01.jpg",
                ar_title: "كمائن"
            }, {
                type: "wall_b",
                amount: game.CurrentCity.City.wall_b,
                image: "images/tech/defense02.jpg",
                ar_title: "ابراج"
            }, {
                type: "wall_c",
                amount: game.CurrentCity.City.wall_c,
                image: "images/tech/defense03.jpg",
                ar_title: "احجار"
            }];
            var content = Building.dialogBoxContent_forMili(wall_army, place);
            $(".box_content").replaceWith(content);
            Building.militrayProduction.left(place);

            break;

        case BUILDING_TYPS.MARKET: // market 

            var content = Market.dialogBoxContent();
            $(".box_content").replaceWith(content);
            Market.innerNav_myOffers();
            Market.innerNav_TradingStatus();
            Market.dealsList("food");

            break;
        case 15: // wood 

            var content = Building.dialogBoxContent_forjop(type, place);
            $(".box_content").replaceWith(content);
            break;

        case 16: // farm 

            var content = Building.dialogBoxContent_forjop(type, place);
            $(".box_content").replaceWith(content);
            break;
        case 17: // mine 

            var content = Building.dialogBoxContent_forjop(type, place);
            $(".box_content").replaceWith(content);
            break;
        case 18: // stone 

            var content = Building.dialogBoxContent_forjop(type, place);
            $(".box_content").replaceWith(content);
            break;
        case 19: // sea port 

            var content = `<div class="box_content coming-soon-building">
                                <div class="logo">
                                    <img src="images/Logo-wow.png" id="logo-img" style="width: 120px;">
                                </div>
                                <div class="text">
                                    coming soon <br/>
                                    قريباَ
                                </div>
                                <hr/>
                                <div class="time_counter" time-end="1549460509"><div>
                            </div>`;
            $(".box_content").replaceWith(content);
            break;
        case 20: // lighthouse 

            var content = `<div class="box_content coming-soon-building">
                                <div class="logo">
                                    <img src="images/Logo-wow.png" id="logo-img" style="width: 120px;">
                                </div>
                                <div class="text">
                                    coming soon <br/>
                                    قريباَ
                                </div>
                                <hr/>
                                <div class="time_counter" time-end="1549460509"><div>
                            </div>`;
            $(".box_content").replaceWith(content);
            break;
    }
}

var Building = {

    dialogBox: function(title, header, nav_bar, content, nav_right) {
        var head_bar = `<div class="head_bar">
                                    <img src="images/style/head_bar.png">
                                    <div class="title">
                                    ${title}
                                    </div>
                                </div>`;
        var nav_bar_list = `<div class="nav_bar">
                            
                                     <div class="left-nav">
                                         <ul>`;
        var nav_list = "";
        nav_bar.forEach(function(one) {
            nav_list += `<li head_title = '${one["title"]}'>
                                      ${one["title_"+UserLag.language] }
                                 </li>`;
        });

        var right_nav = "";



        nav_bar_list += nav_list + `</ul>
                                   </div>
                                 <div class="right-nav">
                                </div>
                                </div>`;

        if (nav_bar.length === 0) {
            nav_bar_list = "";
        }
        return "<div id='dialg_box' class='for_building'>" + head_bar + header + nav_bar_list + content + "</div>";
    },

    returnDiallogBox: function(place) {
        /*
         *    GET object that holds the detail of each building 
         */
        var building_obj = BuildingConstData[game.City.getCity().BuildingType[place]];

        /*
         *  image holds jpg image in header 
         * 
         */
        var icon = building_obj.icon;
        if (place === "wall") {
            icon = building_obj.getIcon();
        }

        /*
         * title in  the header  of building
         */
        var paragraph = building_obj.functionDesc;


        /*if  the  building is empty place i will not  show upgrade data*/

        if (parseInt(game.City.getCity().BuildingType[place]) !== 0) {

            /*  see if its upgradale  or not*/
            var Upgradable = this.isUpgradable(game.City.getCity().BuildingType[place], game.City.getCity().BuildingLvl[place]);

            // prevent upgrading lighthouse(20)  and seaport(19)
            if (parseInt(game.City.getCity().BuildingType[place]) === BUILDING_TYPS.LIGHTHOUSE || parseInt(game.City.getCity().BuildingType[place]) === BUILDING_TYPS.SEAPORT) {

                Upgradable = false;
            }

            /*  get the  complete header  after the icon added and also th paragraph*/
            var header = Building.dialogBoxHeader(icon, game.City.getCity().BuildingType[place], game.City.getCity().BuildingLvl[place], paragraph, Upgradable, place);

            /* upgrade table will be addad*/
            header += getUpgradeData(place);

        } else {
            var header = `<div class="box_header">
                            <div class="close_dialog">
                               <img src="images/btns/close_b.png">
                           </div>
                           
                       </div>`;
        }



        var title = building_obj.title;

        return Building.dialogBox(title, header, building_obj.nav_bar, "<div class='box_content for_building_box'></div>");
    },
    showDialogBox: function(place, fast) {
        var dialog_box = Building.returnDiallogBox(place);
        if (fast) {
            $("#dialg_box").replaceWith(dialog_box);
            getContentForBuilding(place);
            $(".for_building .left-nav ul li:first").addClass("selected");
        } else {

            dialogBoxShow(dialog_box, function() {
                getContentForBuilding(place);
                $(".for_building .left-nav ul li:first").addClass("selected");
            });

        }


    },

    dialogBoxContent_forpalace: function() {

        var all_workers = "";

        for (var iii in game.TimedTask.TaskList.Building) {
            var Task = game.TimedTask.TaskList.Building[iii];
            if (Number(Task.id_city) !== Number(game.CurrentCity.City.id_city))
                continue;
            all_workers += `<div class="worker_1 worker" type="${Task.type}" place="${Task.place}">
                                    <div class="being_upgrade">
                                        <img  src="${BuildingConstData[Task.type].icon}"/>
                                    </div>
                                    <div class="building-data">
                                        <h2>
                                            مستوى ${getArabicNumbers(Task.lvl_to)}
                                        </h2>
                                        <h3> 
                                            جارى التطوير
                                        </h3>
                                    </div>
                                    <div class="right-all">
                                         <div class="time-rest">
                                            <h4> اوقت المتبقى :</h4>
                                            <span class="time_counter counter_worker_in_palace" time-end="${Task.time_end}">
                                                ${changeTimeFormat(Task.time_end - parseInt(Date.now() / 1000))}
                                            </span>
                                        </div>
                                        <div class="acce-btn">
                                            <div class="btn-wrapper">
                                                <button class="cancel-study cancel-btn"></button>
                                                <button class="acce-building-from-palace speed-up-btn edu_acce" data-id-task="${Task.id}">
                                                  <h6> تسريع </h6>
                                                </button>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>`;
        }


        var motiv = "";

        if (parseInt(game.DPlayer.PlayerState.motiv) > Date.now() / 1000) {

            motiv = `<p>
                        فى الوقت الحالى كل مدينة تستطيع توظيف اثنان من الموظفسن
                        لذا سيكون لديك ثلاثة من البنائين يستطيعوا التعامل معهم
                    </p>
                    <div class="btn_2">
                        <button class="full-btn full-btn-2x full" id="add-motiv-palace">
                            تجديد المدة
                        </button>
                    </div>
                    <div>
                        <span class="time_counter counter_worker_in_palace" time-end="${game.DPlayer.PlayerState.motiv}" style="display: block;text-align: center;margin-top: 15px;font-size: 16px;">
                            ${changeTimeFormat(game.DPlayer.PlayerState.motiv - $.now() / 1000)}
                        </span>
                    </div>`;

        } else {

            motiv = `<p>
                        يمكنك زيادة عدد عمال البناءالى ثلاثة عمال فى كل المدن
                        من خلال استخدم الخطب التحفيزية فى صندوق الموارد
                    </p>
                    <div class="btn_2">
                        <button class="full-btn full-btn-2x full" id="add-motiv-palace" >${Translate.Button.Building.ContractBuilders[UserLag.language]}</button>
                    </div>`;

        }

        var output = `<div class="box_content" id="palace_content">
                            <div class="left-content ">
                                <h1>وظيفة المزيد من البنائين</h1>
                                ${motiv}
                            </div>
                            <div class="right-content">
                                ${all_workers}

                            </div>
                        </div>`;
        return output;
    },

    dialogBoxHeader: function(icon, type, lvl, paragraph, upgradable, place) {

        var UpgradeTask = isUpgradingNow(place);

        if (upgradable === false && UpgradeTask === false) {
            var disabled = "disabled";
        } else {
            var disabled = "";
        }


        var header = `<div class="box_header" type="${type}" lvl="${lvl}" place ="${place}">
        
                            <div class="close_dialog">
                               <img src="images/btns/close_b.png">
                           </div>
                           <div class="${UpgradeTask !== false ? "acce-upgrade-btn" : "upgrade-btn"} big-btn ${disabled}" ${UpgradeTask !== false ? `data-id-task="${UpgradeTask.id}"` : ""} >
                               <button class="full-btn ${disabled}" ${disabled}>
                                   ${UpgradeTask !== false ? "تسريع" : Translate.Button.General.Upgrade[UserLag.language]}
                               </button>
                           </div>
                           <div class="desc flex">
                               <p class="functionDesc ellipsis">
                                  ${paragraph}
                               </p>
                                <div id="upgrade-action">
                                    ${UpgradeTask !== false ? `<div  id="cansel-building-upgrade" data-id-task="${UpgradeTask.id}"></div>` : `<div  id="building-lvl-down"></div>`}
                                </div>
                           </div>
                           <div class="building-img">
                                <div id="building-lvl-inheader">${getArabicNumbers(lvl)}</div>
                               <img src="${icon}"/>  
                           </div>
                       </div>`;
        return header;
    },

    dialogBoxContent_forUni: function(type, lvl, place) { //<div class="box_content building_theater for_building_box" >
        var uni_content = `<div class="box_content uni_tech for_building_box" category="study_uni" data-building-type="${type}" data-building-place="${place}" data-building-lvl="${lvl}">
                                <div class="left-content  full">
                               ${edu.getUniTech()}
                                </div>
                            </div>`;
        return uni_content;
    },
    dialogBoxContent_for_acad: function(type, lvl, place) {
        var acad_content = `<div class="box_content acad_tech for_building_box" category="study_acad" data-building-type="${type}" data-building-place="${place}" data-building-lvl="${lvl}">
                                <div class="left-content  full">
                                ${edu.getAcadTech()}
                                 </div>
                            </div>`;
        return acad_content;
    },
    militrayProduction: {
        left: function(place) {



            var left_content = `<div class="left-content">
                                    <div class="header-2">
                                        <h2>الزمن الكلى</h2>
                                        <h3 id="total-time-pro" class="time_counter" time-end="0">0</h3>
                                    </div>
                                        <h2 class="roof-decor">  </h2>
                                    <div class="total-work"></div>
                                </div>`;

            $("#A_A_mill_LEFT").replaceWith(left_content);
            $(".mili_building  .total-work").niceScroll(SCROLL_BAR_PROP);

            this.RefreshLeft(place);
        },
        RefreshLeft: function(place) {






            if (!place)
                place = $(".box_content").attr("data-building-place");



            var content = "";
            var total_time = 0;
            var end = 0;
            var c = 0;

            for (var OneTask in game.TimedTask.TaskList.Army) {
                var Task = game.TimedTask.TaskList.Army[OneTask];
                if (Task.place != place)
                    continue;
                if (Number(Task.id_city) != Number(game.CurrentCity.City.id_city))
                    continue;


                if (c === 0) {
                    var counter = "time_counter";
                } else {
                    var counter = "";
                }

                content += `<div class="current-working" id_work = "${Task.id}">
                                           <div class="soldier type_1">
                                               <img src="${game.BaseData.Army[Task.army_type].image}"/>
                                               <div class="amount">${getArabicNumbers(Task.amount)}</div>
                                               <div class="title">${game.BaseData.Army[Task.army_type].ar_title}</div>
                                           </div>
                                           <div class="current-unite nl-b">
                                               <div class="time-rest header-2">
                                                   <span class="counter ${counter}" time-end="${Task.time_end}">
                                                    ${counter === "" ? changeTimeFormat(Task.time_end - Task.time_start) : changeTimeFormat(Task.time_end - Date.now() / 1000) }
                                                    </span>
                                                </div>
                                                <div class="acce-btn">
                                                    <button class="speed-up-btn ${Number(Task.acce) === 1 ? "acced" : "acce-army-build"}" ${parseInt(Task.acce) === 1 ? "disabled" : ""} data-id-task="${Task.id}"> تسريع</button>
                                                    <img src="images/btns/close_b.png" class="cancel-army-build">
                                                </div>
                                           </div>
                                        </div>`;


                end = Math.max(Task.time_end, end);

                c++;
            };

            total_time = Math.floor(end - Date.now() / 1000);

            $(".total-work").html(content);
            $("#total-time-pro").html(changeTimeFormat(total_time));
            $("#total-time-pro").addClass("time_counter");
            $("#total-time-pro").attr("time-end", end);

        },

        middle: function(army_type) {
            var middle_content = '    <div class="middle-content">';
            for (var iii = 0; iii < army_type.length; iii++) {
                middle_content += '        <div class="soldier sol-2-build"  army_type="' + army_type[iii].type + '">' +
                    '            <img src="' + army_type[iii].image + '"/>' +
                    '            <div class="amount">' + getArabicNumbers(army_type[iii].amount) + '</div>' +
                    '            <div class="title">' + army_type[iii][(UserLag.language + "_title")] + '</div>' +
                    '        </div>';
            }
            middle_content += '    </div>';
            return middle_content;
        },

        right: function() {
            var right_content = `          <div class="rightOfRight">
                                                <div class="header-2 th" id="max_num_army">
                                                    <h1 class="nl-b "> العدد الكلى للقوات</h1>
                                                    <span></span>
                                                </div>
                                                <div class="header-2">
                                                    <input type="text" min="0" step="0" max="0" class="sol-2-build-amount only_num input numeric pull-L"/>
                                                    <div class="number-arrow-wrapper pull-L">
                                                        <label class="number-arrow up"></label>
                                                        <label class="number-arrow down"></label>
                                                    </div>
                                                </div>
                                                <div id="select-production">
                                                    <select>
                                                        <option value="none">بدون تقسيم</option>
                                                        <option value="time">حسب الوقت</option>
                                                        <option value="amount">حسب الكمية</option>
                                                    </select>
                                                </div>
                                                <div class="btn_2">
                                                    <button class="full-btn full-btn-2x build_army">${Translate.Button.Building.Produce[UserLag.language]}</button>
                                                </div>
                                            </div>
                                            <div class="leftOfRight">
                                                <h1 class="header-2 th">الشروط الاساسية للتدريب</h1>
                                                <div class="army_req_table">
                                                    <table border="0" class="req_table x-2"> 
                                                        <thead> 
                                                            <tr> 
                                                               <td colspan="2" style="direction: rtl"> 
                                                                    <ol id="army-condtions"> 
                                                                        <li> 
                                                                            ----------
                                                                        </li> 
                                                                    </ol> 
                                                                </td> 
                                                            </tr> 
                                                        </thead> 
                                                        <tbody> 
                                                            <tr> 
                                                                <td > 
                                                                    <img src="images/style/food.png"/> 
                                                                    <div class="amount sol-food"> 
                                                                       --- 
                                                                    </div> 
                                                                </td> 
                                                                <td> 
                                                                    <img src="images/style/stone.png"/> 
                                                                    <div class="amount sol-stone"> 
                                                                        ---- 
                                                                    </div> 
                                                                </td> 
                                                            </tr> 
                                                            <tr> 
                                                                <td> 
                                                                    <img src="images/style/wood.png"/> 
                                                                    <div class="amount sol-wood"> 
                                                                        --- 
                                                                    </div> 
                                                                </td> 
                                                                <td> 
                                                                    <img src="images/style/iron.png"/> 
                                                                    <div class="amount sol-metal"> 
                                                                        --- 
                                                                    </div> 
                                                                </td> 
                                                            </tr> 
                                                            <tr> 
                                                                <td> 
                                                                    <img src="images/style/coin.png"/> 
                                                                    <div class="amount sol-coin"> 
                                                                        ---- 
                                                                    </div> 
                                                                </td> 
                                                                <td> 
                                                                    <img src="images/style/population.png"/> 
                                                                    <div class="amount sol-people"> 
                                                                        ----
                                                                    </div> 
                                                                </td> 
                                                            </tr> 
                                                            <tr> 
                                                                <td colspan="2"> 
                                                                    <img src="images/style/wait.png"/> 
                                                                    <div class="amount sol-time"> 
                                                                        ---- 
                                                                    </div> 
                                                                </td>
                                                            </tr> 
                                                        </tbody> 
                                                    </table> 
                                                </div>
                                            </div>
                                        </div>`;
            return right_content;
        }
    },
    dialogBoxContent_forMili: function(army_type, place) {

        /*   refresh resource in case you need to build army*/
        city_profile.refresh_city_resources();

        var mili_contetnt = `<div class="box_content mili_building for_building_box"
                                data-building-type="${game.City.getCity().BuildingType[place]}" data-building-place="${place}"
                                data-building-lvl="${game.City.getCity().BuildingLvl[place]}">
                                <div id="A_A_mill_LEFT" class="left-content"></div>
                                ${this.militrayProduction.middle(army_type)}
                                <div class="right-content">
                                    <div id="mili-inner-nav" class="inner_nav">
                                        <div class="nav-title" data-inner-nav="army-dismiss">${Translate.Button.Hero.Dismiss[UserLag.language]}</div>
                                        <div class="nav-title" data-inner-nav="army-data">
                                            بيانات
                                       </div>
                                        <div class="nav-title selected" data-inner-nav="army-train">
                                            تدريب القوات
                                       </div>
                                    </div>
                                ${this.militrayProduction.right()}
                                </div>
                            </div>`;

        this.militrayProduction.left(place);
        return mili_contetnt;
    },
    dialogBoxContnet_forworship: function(place) {
        var desc = "";
        var helper = "";
        if (parseInt(game.CurrentCity.City.helper) === 0) {

            helper = `<ul id="helper-choose">
                                <li index="0"  helper-type="1" class="selected">
                                    <div class="image">
                                        <img src="images/city/Jupiter.jpg"/>
                                    </div>
                                    <div>
                                        <h1 class="header">
                                            المساعد الاول
                                        </h1>
                                    </div>
                                </li>
                                <li index="1" helper-type="2">
                                    <div class="image">
                                        <img src="images/city/Junon.jpg"/>
                                    </div>
                                    <div>
                                        <h1 class="header">
                                            المساعد الثانى
                                        </h1>
                                    </div>
                                </li>
                                <li index="2" helper-type="3">
                                    <div class="image">
                                        <img src="images/city/Minerva.jpg"/>
                                    </div>

                                    <h1 class="header-1">
                                        المساعد الثالث
                                    </h1>

                                </li>
                            </ul>`;


            desc = `<div id="helper-desc">
                                المساعد الاول :>   يقصر المدة الزمية اللازمة للباء وتطوير المبانى   فى المدينة
                            </div>
                            <div id="confirmChoose">
                                <button class="full-btn full-btn-3x" helper-type="1">${Translate.Button.Building.ChooseDeity[UserLag.language]}</button>
                            </div> `;
        } else {

            helper = `<div id="choosen-helper">
                        <div class="header">
                            ${BuildingConstData[BUILDING_TYPS.WORSHIP].helpers[game.CurrentCity.City.helper - 1].title}
                        </div>
                        <div class="image">
                            <img src="${BuildingConstData[BUILDING_TYPS.WORSHIP].helpers[game.CurrentCity.City.helper - 1].image}">
                        </div>
                        <div id="changeChoose">
                            <button class="full-btn full-btn-3x">
                               تغير المساعد
                            </button>
                        </div> 
                    </div>`;
            desc = ` <div id="helper-desc">
                         ${BuildingConstData[BUILDING_TYPS.WORSHIP].helpers[game.CurrentCity.City.helper - 1].title} :>   ${BuildingConstData[BUILDING_TYPS.WORSHIP].helpers[game.CurrentCity.City.helper - 1].desc}
                    </div>`;
        }


        var content = `<div class="box_content building_worship for_building_box" data-building-type="${game.City.getCity().BuildingType[place]}" data-building-place="${place}"
                                data-building-lvl="${game.City.getCity().BuildingLvl[place]}">
                        <div class="left-content ">
                            ${helper}
                        </div>
                        <div class="right-content ">
                              ${desc}
                        </div>

                    </div>`;

        return content;
    },

    dialogBoxContnet_forblaza: function(place) {

        var wounded_army;

        game.City.getCityWounded().done(function(data) {
            var content = `     <div class="box_content building_blaza for_building_box " data-building-type="${game.City.getCity().BuildingType[place]}" data-building-place="${place}"
                                            data-building-lvl="${game.City.getCity().BuildingLvl[place]}">
                                        <div class="left-content ">
                                                    <h1> معالجة القوات </h1>
                                                    <p>  10 % من القوات التى تفقدها فى المعركة<br>
                                                        يتم تحويلها تلقائيا الى مشفى الموجود فى المدينة
                                                        <br>
                                                        يمكنك زيادة نسبة الاجنود المصابة من خلال تفعيل نصب الطب 
                                                        او تمثال الطب لزيادة النسبة الى 60%
                                                        <br>
                                                        تتم المعالجة باستخدام العملات فقط   
                                                    </p>

                                        </div>
                                        <div class="right-content ">
                                            <ol id="wounded_list">

                                                <li>

                                                    <div class="image">
                                                        <img src="images/tech/soldier_1.jpg"/>
                                                    </div>
                                                    <div class="amount">${game.CurrentCity.Wounded.army_a}</div>
                                                    <div class="cure" army_type="army_a"  amount="${game.CurrentCity.Wounded.army_a}">
                                                        <button class="full-btn full-btn-1x ellipsis therapy pull-L">مداوة</button>
                                                        <button class="full-btn full-btn-1x ellipsis fire-wounded pull-R">${Translate.Button.Hero.Dismiss[UserLag.language]}</button>
                                                    </div>
                                                </li>
                                                <li>
                                                    <div class="image">
                                                        <img src="images/tech/soldier_2.jpg"/>
                                                    </div>
                                                    <div class="amount">${getArabicNumbers(game.CurrentCity.Wounded.army_b)}</div>
                                                    <div class="cure" army_type="army_b" amount="${game.CurrentCity.Wounded.army_b}">
                                                        <button class="full-btn full-btn-1x ellipsis therapy pull-L">مداوة</button>
                                                        <button class="full-btn full-btn-1x ellipsis fire-wounded pull-R">${Translate.Button.Hero.Dismiss[UserLag.language]}</button>
                                                    </div>
                                                </li>
                                                <li>
                                                    <div class="image">
                                                        <img src="images/tech/soldier_3.jpg"/>
                                                    </div>
                                                    <div class="amount">${getArabicNumbers(game.CurrentCity.Wounded.army_c)}</div>
                                                    <div class="cure" army_type="army_c" amount="${game.CurrentCity.Wounded.army_c}">
                                                        <button class="full-btn full-btn-1x ellipsis therapy pull-L">مداوة</button>
                                                        <button class="full-btn full-btn-1x ellipsis fire-wounded pull-R">${Translate.Button.Hero.Dismiss[UserLag.language]}</button>
                                                    </div>
                                                </li>
                                                <li>
                                                    <div class="image">
                                                        <img src="images/tech/soldier_4.jpg"/>
                                                    </div>
                                                    <div class="amount">${getArabicNumbers(game.CurrentCity.Wounded.army_d)}</div>
                                                    <div class="cure" army_type="army_d" amount="${game.CurrentCity.Wounded.army_d}">
                                                        <button class="full-btn full-btn-1x ellipsis therapy pull-L">مداوة</button>
                                                        <button class="full-btn full-btn-1x ellipsis fire-wounded pull-R">${Translate.Button.Hero.Dismiss[UserLag.language]}</button>
                                                    </div>
                                                </li>
                                                <li>
                                                    <div class="image">
                                                        <img src="images/tech/soldier_5.jpg"/>
                                                    </div>
                                                    <div class="amount">${getArabicNumbers(game.CurrentCity.Wounded.army_e)}</div>
                                                    <div class="cure"  army_type="army_e" amount="${game.CurrentCity.Wounded.army_e}">
                                                        <button class="full-btn full-btn-1x ellipsis therapy pull-L">مداوة</button>
                                                        <button class="full-btn full-btn-1x ellipsis fire-wounded pull-R">${Translate.Button.Hero.Dismiss[UserLag.language]}</button>
                                                    </div>
                                                </li>
                                                 <li>
                                                    <div class="image">
                                                        <img src="images/tech/soldier_6.jpg"/>
                                                    </div>
                                                    <div class="amount">${getArabicNumbers(game.CurrentCity.Wounded.army_f)}</div>
                                                    <div class="cure" army_type="army_f" amount="${game.CurrentCity.Wounded.army_f}">
                                                        <button class="full-btn full-btn-1x ellipsis therapy pull-L">مداوة</button>
                                                        <button class="full-btn full-btn-1x ellipsis fire-wounded pull-R">${Translate.Button.Hero.Dismiss[UserLag.language]}</button>
                                                    </div>
                                                </li>
                                            </ol>  
                                        </div>
                                    </div>`;

            $(".box_content").replaceWith(content);
        });




    },
    // content  dialogbox of empty places 
    contentfor_emptyPlace: function() {
        var content = `
                                <div class="left-content  full">
                                    <ul class="total">
                                        <li>
                                            <div class="img-inside-box">
                                                <img src="images/building/building01.jpg" class="big-img">
                                            </div> 
                                            <div class="txt-inside-box">
                                                <h2>كوخ</h2>
                                            </div>
                                            <div class="full-btn full-btn-2x construct_building" data-building="1">${Translate.Button.Building.Erect[UserLag.language]}</div>
                                        </li>
                                        <li>
                                            <div class="img-inside-box">
                                                <img src="images/building/building02.jpg" class="big-img">
                                            </div> 
                                            <div class="txt-inside-box">
                                                <h2>مخازن</h2>
                                            </div>
                                            <div class="full-btn construct_building full-btn-2x" data-building="2">${Translate.Button.Building.Erect[UserLag.language]}</div>
                                        </li>
                                        <li>
                                            <div class="img-inside-box">
                                                <img src="images/building/building03.jpg" class="big-img">
                                            </div> 
                                            <div class="txt-inside-box">
                                                <h2>ثكنات</h2>
                                            </div>
                                            <div class="full-btn construct_building full-btn-2x" data-building="3">${Translate.Button.Building.Erect[UserLag.language]}</div>
                                        </li>
                                        <li>
                                            <div class="img-inside-box">
                                                <img src="images/building/building04.jpg" class="big-img">
                                            </div> 
                                            <div class="txt-inside-box">
                                                <h2>اسطبل</h2>
                                            </div>
                                            <div class="full-btn construct_building full-btn-2x" data-building="4">${Translate.Button.Building.Erect[UserLag.language]}</div>
                                        </li>
                                        <li>
                                            <div class="img-inside-box">
                                                <img src="images/building/building05.jpg" class="big-img">
                                            </div> 
                                            <div class="txt-inside-box">
                                                <h2>ورشة عمل</h2>
                                            </div>
                                            <div class="full-btn construct_building full-btn-2x" data-building="5">${Translate.Button.Building.Erect[UserLag.language]}</div>
                                        </li>`;
        // check for مسرح
        if (!cityHasType(6)) {
            content += `               <li>
                                            <div class="img-inside-box">
                                                <img src="images/building/building06.jpg" class="big-img">
                                            </div> 
                                            <div class="txt-inside-box">
                                                <h2>مسرح</h2>
                                            </div>
                                            <div class="full-btn construct_building full-btn-2x" data-building="6" >${Translate.Button.Building.Erect[UserLag.language]}</div>
                                        </li>`;
        }

        // check for مركز
        if (!cityHasType(7)) {
            content += `               <li>
                                            <div class="img-inside-box">
                                                <img src="images/building/building08.jpg" class="big-img">
                                            </div> 
                                            <div class="txt-inside-box">
                                                <h2>مركز</h2>
                                            </div>
                                            <div class="full-btn construct_building full-btn-2x"  data-building="7">${Translate.Button.Building.Erect[UserLag.language]}</div>
                                        </li>`;
        }

        if (!cityHasType(8)) {
            content += `              <li>
                                            <div class="img-inside-box">
                                                <img src="images/building/building09.jpg" class="big-img">
                                            </div> 
                                            <div class="txt-inside-box">
                                                <h2>الجامعة</h2>
                                            </div>
                                            <div class="full-btn construct_building full-btn-2x"  data-building="8">${Translate.Button.Building.Erect[UserLag.language]}</div>
                                        </li>`;
        }
        if (!cityHasType(9)) {
            content += `             <li>
                                            <div class="img-inside-box">
                                                <img src="images/building/building10.jpg" class="big-img">
                                            </div> 
                                            <div class="txt-inside-box">
                                                <h2>اكاديمية</h2>
                                            </div>
                                            <div class="full-btn construct_building full-btn-2x"  data-building="9">${Translate.Button.Building.Erect[UserLag.language]}</div>
                                        </li>`;
        }

        if (!cityHasType(10)) {
            content += `            <li>
                                            <div class="img-inside-box">
                                                <img src="images/building/building11.jpg" class="big-img">
                                            </div> 
                                            <div class="txt-inside-box">
                                                <h2>دار المساعدة</h2>
                                            </div>
                                            <div class="full-btn construct_building full-btn-2x" data-building="10">${Translate.Button.Building.Erect[UserLag.language]}</div>
                                        </li>`;
        }

        if (!cityHasType(11)) {
            content += `             <li>
                                            <div class="img-inside-box">
                                                <img src="images/building/building12.jpg" class="big-img">
                                            </div> 
                                            <div class="txt-inside-box">
                                                <h2>البلازا</h2>
                                            </div>
                                            <div class="full-btn construct_building full-btn-2x" data-building="11">${Translate.Button.Building.Erect[UserLag.language]}</div>
                                        </li>`;
        }
        content += '        </ul>' +
            '    </div>';
        return content;
    },
    /**/

    dialogBoxContent_forjop: function(building_type, place) {

        city_profile.refresh_city_resources();
        building_type = parseInt(building_type);
        if (building_type === undefined) {
            building_type = 15;
        }

        var content = `<div class="box_content for_city_jop for_building_box " data-building-type="${game.City.getCity().BuildingType[place]}" data-building-place="${place}"
                                            data-building-lvl="${game.City.getCity().BuildingLvl[place]}">
                            <div class="left-content">
                                <table id="job-typs">
                                    <tbody>
                                        <tr>
                                            <td class="${building_type === 16 ? "selected" : ""}" building_type="16" place="farm">
                                                <div class="select-layer">
                                                    <div class="fram">
                                                        <div class="over-text" style="background-image: url(images/building/building18.jpg)">
                                                            <h1 class="stroke"> وظائف الحقل</h1>
                                                            <h2>${getArabicNumbers(game.City.getCity().Jop.food)}</h2>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="${building_type === 15 ? "selected" : ""}" building_type="15" place="wood">
                                                <div class="select-layer">
                                                    <div class="fram">
                                                        <div class="over-text" style="background-image: url(images/building/building19.jpg)">
                                                            <h1 class="stroke"> وظائف الغابات</h1>
                                                            <h2>${getArabicNumbers(game.City.getCity().Jop.wood)}</h2>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="${building_type === 18 ? "selected" : ""}" building_type="18" place="stone">
                                                <div class="select-layer">
                                                    <div class="fram">
                                                        <div class="over-text" style="background-image: url(images/building/building20.jpg)">
                                                            <h1 class="stroke"> وظائف المحجر</h1>
                                                            <h2>${getArabicNumbers(game.City.getCity().Jop.stone)}</h2>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                            <td class="${building_type === 17 ? "selected" : ""}" building_type="17" place="mine">
                                                <div class="select-layer">
                                                    <div class="fram">
                                                        <div class="over-text" style="background-image: url(images/building/building21.jpg)">
                                                            <h1 class="stroke"> وظائف المناجم</h1>
                                                            <h2>${getArabicNumbers(game.City.getCity().Jop.metal)}</h2>
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div class="right-content">
                                <div id="pay-for-jop">
                                    <h1 id="jop-title">
                                        انشاء وظائف ${BuildingConstData[building_type].title} فى المدينة
                                    </h1>
                                    <div id="jop_req_table">
                                        <table class="req_table" border="0">            
                                            <tbody>       
                                                <tr>        
                                                    <td>     
                                                        <img src="images/style/food.png">    
                                                        <div class="amount food">
                                                            ${getArabicNumbers(BuildingConstData[building_type].res_for_jop.food)}
                                                        </div>     
                                                    </td>                
                                                    <td>                 
                                                        <img src="images/style/iron.png">   
                                                        <div class="amount metal">
                                                            ${getArabicNumbers(BuildingConstData[building_type].res_for_jop.metal)}
                                                        </div>    
                                                    </td>            
                                                </tr>       
                                                <tr>          
                                                    <td>          
                                                        <img src="images/style/wood.png">         
                                                        <div class="amount wood">
                                                            ${getArabicNumbers(BuildingConstData[building_type].res_for_jop.wood)}
                                                        </div>     
                                                    </td>  
                                                    <td>         
                                                        <img src="images/style/stone.png">           
                                                        <div class="amount stone">
                                                            ${getArabicNumbers(BuildingConstData[building_type].res_for_jop.stone)}
                                                        </div>    
                                                    </td>      
                                                </tr>           
                                                <tr>            
                                                    <td>           
                                                        <img src="images/style/coin.png">         
                                                        <div class="amount">
                                                            ----
                                                        </div>    
                                                    </td>      
                                                    <td>        
                                                        <img src="images/style/wait.png">    
                                                        <div class="amount time">
                                                            ${changeTimeFormat(BuildingConstData[building_type].res_for_jop.time)}
                                                        </div>  
                                                    </td>     
                                                </tr>     
                                            </tbody>
                                        </table>
                                    </div>
                                    <h1 class="header-2"> اقصى عدد للوظايف فى المدينة: <span>${getArabicNumbers(Max_of.city_jop(CITY_JOP_REQ[place.toUpperCase()], place))}</span></h1>
                                    <div id="jop-num-input">
                                        <span>
                                            المبلغ المطلوب
                                        </span>
                                        <input  type="text" step="${Max_of.city_jop(CITY_JOP_REQ[place.toUpperCase()], place)}" max="${Max_of.city_jop(CITY_JOP_REQ[place.toUpperCase()], place)}" min="0" class="only_num input numeric pull-L" value="0"/>
                                        <div class="number-arrow-wrapper pull-L">
                                            <label class="number-arrow up"></label>
                                            <label class="number-arrow down"></label>
                                        </div>
                                    </div>
                                </div>
                                <div id="jop_desc">
                                    <p>
                                        الجدول المقابل يوضح  الموارد  المطلوبة لتوظيف 
                                        عدد معين من الموظفين ليعمل فى الحقول او انتاج الصخور او انتاج الحديدوالخشب من الغابات
                                        وكذالك ايضا يوضح المدة المستغرقة لانشاء هذه الوظائف
                                        اذا كان عدد السكان كافى وعدد الوظائف كبيرة فان ذالك يذيد من انتاجية الموارد فى المدينة 
                                        اما اذا كان عدد السكان اقل من عدد الوظائف المتوفرةفذالك يقلل انتاج الموارد فى المدينة
                                        يمكنك تعديل نسب  الوظائف من خلال نشاطات الانتاج فى القصر
                                    </p>
                                    <div id="hire-btn">
                                        <button class="full-btn full-btn-2x ">${Translate.Button.Building.CreatJops[UserLag.language]}</button>
                                    </div>
                                    <div id="FIRE-EMPLOYEE">
                                        <button class="full-btn full-btn-3x"> ${Translate.Button.Hero.Dismiss[UserLag.language]}</button>
                                    </div>
                                </div>

                            </div>
                        </div>`;

        return content;
    },
    /**
     * 
     * @param {string} header
     * @param {int} food
     * @param {int} wood
     * @param {int} stone
     * @param {int} metal
     * @param {int} coin
     * @param {text} time
     * @param {text} condtion
     * @returns {String}
     */
    upgradeReqTable: function(header, type, lvl, time, condtion) {
        var right_content = '<div class="right-content ">' +
            '<h1 class="header-1">' +
            header +
            '</h1>' +
            getReqTable(type, lvl) +
            '</div>';
        return right_content;
    },

    isUpgradable: function(type, lvl) {

        var condetions = game.Building.verfiyCondetion(type, lvl);
        for (var ii in condetions) {

            if (!condetions[ii].verfied)
                return false;

        }
        if (Number(lvl) > 29) {

            return false;
        } else if (game.CurrentCity.City.food < this.calResource.food(type, lvl)) {
            return false;
        } else if (game.CurrentCity.City.wood < this.calResource.wood(type, lvl)) {
            return false;
        } else if (game.CurrentCity.City.stone < this.calResource.stone(type, lvl)) {
            return false;
        } else if (game.CurrentCity.City.metal < this.calResource.metal(type, lvl)) {
            return false;
        } else {
            return true;
        }
    },
    calResource: {

        food: function(type, lvl) {

            return lvl < 30 ? BUILDING_JSON_DATA[type]["lvl_req"][lvl]["food"] : "--";
        },
        wood: function(type, lvl) {

            return lvl < 30 ? BUILDING_JSON_DATA[type]["lvl_req"][lvl]["wood"] : "--";
        },
        stone: function(type, lvl) {

            return lvl < 30 ? BUILDING_JSON_DATA[type]["lvl_req"][lvl]["stone"] : "--";
        },
        metal: function(type, lvl) {

            return lvl < 30 ? BUILDING_JSON_DATA[type]["lvl_req"][lvl]["metal"] : "--";
        }
    }

};


/*
 * 
 * @param {number} building_Type
 * @returns {number}
 */
Building.countOf = function(building_Type) {

    building_Type = Number(building_Type);
    var total = 0;

    for (var index in game.City.getCity().BuildingType) {

        if (Number(game.City.getCity().BuildingType[index]) === building_Type &&
            index !== "id_player" &&
            index !== "id_city") {

            total++;

        }

    }
    return total;

};


Building.dialogBoxContent_forstore = function(place) {

    var box_content = `<div class="right-content">
                    <div class="stat-table">
                        <div class="th">
                            <div class="td_1 ellipsis" style="width: 25%;">${Translate.Title.TH.Resource[UserLag.language]}</div>
                            <div class="td_2 ellipsis" style="width: 25%;">${Translate.Title.TH.YouHave[UserLag.language]}</div>
                            <div class="td_3 ellipsis" style="width: 25%;">${Translate.Title.TH.StorageCapacity[UserLag.language]}</div>
                            <div class="td_4 ellipsis" style="width: 25%;">${Translate.Title.TH.StorageRatio[UserLag.language]}</div>
                        </div>
                        <ul>
                            <li class="font-2">
                                <div class="resource-icon">
                                    <img src="images/style/food.png"/>
                                </div>
                                <div class="resource-qun">
                                    ${Math.floor(game.CurrentCity.City.food)}
                                </div>
                                <div class="stor-cap">
                                    ${game.CurrentCity.City.food_cap}
                                </div>
                                <div class="stor-percent">
                                    <input type="text" class="only_num input numeric pull-L" max="100" step="1"  min="0" value="${game.CurrentCity.Storage.food_storage_ratio}" id="cap-food-input"/>
                                    <div class="number-arrow-wrapper pull-L" >
                                        <label class="number-arrow up"></label>
                                        <label class="number-arrow down"></label>
                                    </div>
                                </div>
                            </li>
                            <li class="font-2">
                                <div class="resource-icon">
                                    <img src="images/style/wood.png"/>
                                </div>
                                <div class="resource-qun">
                                    ${Math.floor(game.CurrentCity.City.wood)}
                                </div>
                                <div class="stor-cap">
                                    ${game.CurrentCity.City.wood_cap}
                                </div>
                                <div class="stor-percent">
                                    <input type="text" class="only_num input numeric pull-L" max="100" step="1"  min="0" value="${game.CurrentCity.Storage.wood_storage_ratio}" id="cap-wood-input"/>
                                    <div class="number-arrow-wrapper pull-L" >
                                        <label class="number-arrow up"></label>
                                        <label class="number-arrow down"></label>
                                    </div>
                                </div>
                            </li>
                            <li class="font-2">
                                <div class="resource-icon">
                                    <img src="images/style/stone.png"/>
                                </div>
                                <div class="resource-qun">
                                    ${Math.floor(game.CurrentCity.City.stone)}
                                </div>
                                <div class="stor-cap">
                                    ${game.CurrentCity.City.stone_cap}
                                </div>
                                <div class="stor-percent">
                                    <input type="text" class="only_num input numeric pull-L" max="100" step="1" min="0" value="${game.CurrentCity.Storage.stone_storage_ratio}" id="cap-stone-input"/>
                                    <div class="number-arrow-wrapper pull-L" >
                                        <label class="number-arrow up"></label>
                                        <label class="number-arrow down"></label>
                                    </div>
                                </div>
                            </li>
                            <li class="font-2">
                                <div class="resource-icon">
                                    <img src="images/style/iron.png"/>
                                </div>
                                <div class="resource-qun">
                                    ${Math.floor(game.CurrentCity.City.metal)}
                                </div>
                                <div class="stor-cap">
                                    ${game.CurrentCity.City.metal_cap}
                                </div>
                                <div class="stor-percent">
                                    <input type="text" class="only_num input numeric pull-L" max="100" step="1" min="0" value="${game.CurrentCity.Storage.metal_storage_ratio}"  id="cap-metal-input"/>
                                    <div class="number-arrow-wrapper pull-L" >
                                        <label class="number-arrow up"></label>
                                        <label class="number-arrow down"></label>
                                    </div>
                                </div>
                            </li>
                           <li class="font-2 total-storage">
                                اجمالى  سعة التخزين: ${game.CurrentCity.Storage.total_cap}  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; اجمالى المساحة الفارغة: ${
            Math.floor(Math.max(0, (game.CurrentCity.Storage.total_cap -
                    Math.min(game.CurrentCity.City.food, game.CurrentCity.City.food_cap) -
                    Math.min(game.CurrentCity.City.wood, game.CurrentCity.City.wood_cap) -
                    Math.min(game.CurrentCity.City.stone, game.CurrentCity.City.stone_cap) -
                    Math.min(game.CurrentCity.City.metal, game.CurrentCity.City.metal_cap))))}
                            </li>
                        </ul>
                        
                        <div id="accept-store-new-val">
                            <button class="full-btn full-btn-2x">${Translate.Button.Building.Confirm[UserLag.language]}</button>
                        </div>
                    </div>
                </div>
                `;
    return box_content;
};


Building.BuildingWithMaxLvl = function(type) {

    var max_lvl = 0;

    for (var building in game.City.getCity().BuildingLvl) {

        if (Number(game.City.getCity().BuildingType[building]) === Number(type) &&
            game.City.getCity().BuildingLvl[building] > max_lvl &&
            building !== "id_player" &&
            building !== "id_city") {
            max_lvl = Number(game.City.getCity().BuildingLvl[building]);
        }

    }

    return max_lvl;


};


game.Building.lvlFunc = function(type, lvl, thirdPar, forthPar, fifthPar, sixthPar) {

    lvl = Number(lvl);
    var Building = BuildingConstData[type];
    var func = BuildingConstData[type].func;

    func = func.replace(/\{1\}/g, Building.title);
    func = func.replace(/\{0\}/g, lvl);
    func = func.replace(/\{2\}/g, thirdPar);
    if (forthPar) {
        console.log(forthPar)
        func = func.replace(/\{3\}/g, forthPar);
    }
    if (fifthPar) {
        func = func.replace(/\{4\}/g, fifthPar);
    }
    if (sixthPar) {
        func = func.replace(/\{5\}/g, sixthPar);
    }


    return `<p>${func}<br></p>`;
};

function upgradeBenefits(type, lvl) {
    var building_type = parseInt(type);
    lvl = Number(lvl);
    switch (type) {
        case 0: // empty place 
            break;
        case BUILDING_TYPS.COTTAGE: // cottage

            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, (lvl) * 250)}`;
            var benefit_next = ` <h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl + 1, (lvl + 1) * 250)}`;
            break;
        case BUILDING_TYPS.STORE: // stores

            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, game.BaseData.Building.UpgradeBinfit[BUILDING_TYPS.STORE][Math.min(lvl - 1 , 29)])}`;
            var benefit_next = ` <h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl + 1, game.BaseData.Building.UpgradeBinfit[BUILDING_TYPS.STORE][Math.min(lvl , 29)])}`;
            break;
        case BUILDING_TYPS.BARRACKS: // thaknat

            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, lvl * 3 , Math.min(lvl, 10))}`;
            var benefit_next = ` <h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl + 1, (lvl + 1) * 3 , Math.min(lvl + 1, 10))}`;
            break;
        case BUILDING_TYPS.STABL: // stabl

            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, lvl * 3 , Math.min(lvl, 10))}`;
            var benefit_next = ` <h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl + 1, (lvl + 1) * 3 , Math.min(lvl + 1, 10))}`;
            break;
        case BUILDING_TYPS.WORKSHOP: // workshop 

            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, lvl * 3 , Math.min(lvl, 10))}`;
            var benefit_next = ` <h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl + 1, (lvl + 1) * 3 , Math.min(lvl + 1, 10))}`;
            break;
        case BUILDING_TYPS.THEATER: // theater

            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, Math.min(lvl, 10) , (lvl) * 5)}`;
            var benefit_next = ` <h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl + 1, Math.min(lvl + 1, 10) , (lvl + 1) * 5)}`;
            break;
        case BUILDING_TYPS.STATION: // station

            var benefit = ` <h1>المستوى الحالى </h1>`;
            var benefit_next = `<h1>المستوى التالى </h1>`;
            break;
        case BUILDING_TYPS.UNIVERSITY: // univeisty

            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, lvl * 3, lvl )}`;
            var benefit_next = ` <h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl, (lvl + 1) * 3, lvl + 1 )}`;
            break;
        case BUILDING_TYPS.ACADEMY: // acadmy   

            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, lvl * 3, lvl )}`;
            var benefit_next = ` <h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl, (lvl + 1) * 3, lvl + 1 )}`;
            break;
        case BUILDING_TYPS.WORSHIP: //  warship place

            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl)}`;
            var benefit_next = `<h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl)}`;
            break;
        case BUILDING_TYPS.HOSPITAL: // hospital

            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, Math.min(lvl, 20))}`;
            var benefit_next = `<h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl + 1, Math.min(lvl, 20))}`;
            break;
        case BUILDING_TYPS.PALACE: // palace 

            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, (lvl * 2 + 3),(lvl > 10 ? 10 : lvl),(lvl * 20000000), (lvl * 2))}`;
            var benefit_next = ` <h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl + 1, ((lvl + 1)* 2 + 3),(lvl + 1 > 10 ? 10 : lvl + 1),((lvl + 1) * 20000000), ((lvl + 1) * 2))}`;

            break;
        case 13: // wall

            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, (lvl * 10000), (lvl * 1000000))}`;
            var benefit_next = ` <h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl + 1, ((lvl + 1) * 10000), ((lvl + 1) * 1000000))}`;

            break;
        case 14: // market
            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, (lvl * 10000), Math.min(lvl , 10))}`;
            var benefit_next = `<h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl + 1, ((lvl + 1)* 10000), Math.min(lvl + 1 , 10))}`;
            break;

        case 15: // wood  الغابات
            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, (lvl * 100) , lvl)}`;
            var benefit_next = ` <h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl + 1, ((lvl + 1) * 100), lvl + 1)}`;
            break;

        case 16: // farm  المزارع
            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, (lvl * 100) , lvl)}`;
            var benefit_next = ` <h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl + 1, ((lvl + 1) * 100), lvl + 1)}`;
            break;

        case 17: // mine  المناجم
            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, (lvl * 100) , lvl)}`;
            var benefit_next = ` <h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl + 1, ((lvl + 1) * 100), lvl + 1)}`;
            break;

        case 18: // stone  المحجر
            var benefit = ` <h1>المستوى الحالى </h1>${game.Building.lvlFunc(type, lvl, (lvl * 100) , lvl)}`;
            var benefit_next = ` <h1>المستوى التالى </h1>${game.Building.lvlFunc(type, lvl + 1, ((lvl + 1) * 100), lvl + 1)}`;
            break;

    }

    benefit_next = lvl < 30 ? benefit_next : `<h1>المستوى التالى </h1>
                            <p>لا يوجد مستوى تالى المستوى الحالى اعلى مستوى للمبنى</p>`;
    return benefit + benefit_next;
}





function buildingClick(place, fast) {
    if (!fast) {
        fast = false;
    }
    //if (game.GE.CityScene.Scrolling.isBeingDragged) {
    if (place)
        Building.showDialogBox(place, fast);

    //}
}



// get upgrade data acording to  building type








$(document).on("click", ".reduce-time-for-jop img", function() {



    var idTask = $(this).attr("data-id-task");
    var matrial_to_use = [
        "polit_a",
        "polit_b",
        "polit_c",
        "polit_d"
    ];

    BoxOfMatrialToUse(matrial_to_use, "jop_acce", 1, idTask);




});




/*____________________________________________________________________________*/
/*------------------------NAVIGATE INTO WORSHIP HELPER--------------------*/

$(document).on("click", "#helper-choose li", function() {

    $("#helper-choose li").removeClass("selected");
    $(this).addClass("selected");

    var index = $(this).attr("index");
    var helper = $(this).attr("helper-type");

    var desc = ` ${BuildingConstData[BUILDING_TYPS.WORSHIP].helpers[index][(UserLag.language+"_title")]} :> ${BuildingConstData[BUILDING_TYPS.WORSHIP].helpers[index].desc}  `;

    $("#helper-desc").html(desc);
    $("#confirmChoose button").attr("helper-type", helper);

});



/*confirm  usinng helper*/
$(document).on("click", "#confirmChoose button", function() {

    var helper = $(this).attr("helper-type");
    $.ajax({

        url: `${API_URL}/api/ACity/changeCityHelper`,
        data: {
            idCity: game.CurrentCity.City.id_city,
            newHelper: helper,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (isJson(data)) {
                var json_data = JSON.parse(data);
            } else {
                alert(data);
                return;
            }

            if (json_data.state === "ok") {
                game.CurrentCity.City = json_data.City;
                $(".box_content").replaceWith(Building.dialogBoxContnet_forworship());
                alert_box.succesMessage("تم تعديل المساعد بنجاح");

            } else {

                alert_box.confirmMessage(" لم يتم تغير المساعد");

            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });


});


/*___________________________________________________________________________*/
/*                                          changeChoose                     */

$(document).on("click", "#changeChoose button", function() {

    var matrial_to_use = [
        "help_house_chng"
    ];

    BoxOfMatrialToUse(matrial_to_use, "reset_helper");

});



/*___________________________________________________________________________*/
/*-----------------------------WOUNDED THERYPY-------------------------------*/

$(document).on("click", ".cure .therapy ", function() {

    var army_type = $(this).parent().attr("army_type");
    var amount = $(this).parent().attr("amount");
    var self_ = $(this);

    if (Number(amount) === 0) {

        alert_box.confirmMessage("لا  يوجد قوات لمداواتها");
        return;

    }

    var idCity = game.CurrentCity.City.id_city;

    alert_box.confirmDialog(`تأكيد مداواة ${amount} ${game.BaseData.Army[army_type].ar_title} مقابل ${amount*game.BaseData.Army[army_type].coin} عملة سسترسس`, function() {

        $.ajax({
            url: `${API_URL}/api/ACity/cureCityWounded`,
            data: {
                idCity: idCity,
                armyType: army_type,
                server: game.Config.idServer,
                token: game.Config.OuthToken
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {
                if (isJson(data)) {
                    var json_data = JSON.parse(data);
                } else {
                    game.LBase.Error(data);
                }


                if (json_data.state === "ok") {

                    self_.parent().prev(".amount").html(getArabicNumbers(0));
                    self_.parent().attr("amount", 0);

                    game.City.getCity(idCity).Wounded = json_data.cityWounded;
                    game.City.getCity(idCity).City = json_data.cityRes;


                } else if (json_data.state === "error_1") {
                    alert_box.confirmMessage(`ليس لديك عملات كافية لمداوة الجرحى </br> 
                                                    كمية العملات المطلوية ${json_data.coinAmount}`);
                } else if (json_data.state === "error_0") {

                    alert_box.confirmMessage("لا يمكن   مداوة هذة القوات");

                } else {

                    alert_box.confirmMessage("لا يمكن   مداوة هذة القوات");

                }

                city_profile.refresh_army_view();
                city_profile.refresh_resource_view();

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    });


});





/*----------------------------------------------------------------------------*/
/*                              FIRE WOUNDED SOLIDIER                         */
$(document).on("click", ".cure .fire-wounded", function() {

    var army_type = $(this).parent().attr("army_type");
    var amount = $(this).parent().attr("amount");
    var self_ = $(this);

    if (Number(amount) === 0) {

        alert_box.confirmMessage("لا  يوجد قوات لطردها");
        return;

    }
    var idCity = game.CurrentCity.City.id_city
    alert_box.confirmDialog(`تأكيد طرد ${amount} ${game.BaseData.Army[army_type].ar_title}`, function() {
        $.ajax({
            url: `${API_URL}/api/ACity/fireCityWounded`,
            data: {
                idCity: idCity,
                armyType: army_type,
                server: game.Config.idServer,
                token: game.Config.OuthToken
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);

                var json_data = JSON.parse(data);

                if (json_data.state === "ok") {

                    self_.parent().prev(".amount").html(getArabicNumbers(0));
                    self_.parent().attr("amount", 0);

                    game.City.getCity(idCity).Wounded = json_data.cityWounded;
                    game.City.getCity(idCity).City = json_data.cityRes;


                } else {

                    alert_box.confirmMessage("لا يمكن طرد او مداوة هذة القوات");

                }
                city_profile.refresh_army_view();
                city_profile.refresh_resource_view();
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });
    })

});






$(document).on("click", "#add-motiv-palace", function() {

    var matrial_to_use = [
        "motiv_60",
        "motiv_7"
    ];

    BoxOfMatrialToUse(matrial_to_use, "add_city_builder");

});











$(document).on("click", "#job-typs td", function() {

    var building_type = $(this).attr("building_type");
    var place = $(this).attr("place");

    $(".box_content").replaceWith(Building.dialogBoxContent_forjop(building_type, place));

    var building_obj = BuildingConstData[game.City.getCity().BuildingType[place]];
    var icon = building_obj.icon;
    var paragraph = building_obj.functionDesc;
    var Upgradable = Building.isUpgradable(building_type, game.City.getCity().BuildingLvl[place]);
    var header = Building.dialogBoxHeader(icon, game.City.getCity().BuildingType[place], game.City.getCity().BuildingLvl[place], paragraph, Upgradable, place);


    $(".box_header").replaceWith(header);

    $(".upgrade_req_tooltip").replaceWith(getUpgradeData(place));


});




/*
 *    cunstruct building
 */

$(document).on("click", ".construct_building", function() {

    var building_place = $(".for_building_box").attr("data-building-place");
    var building_type = Number($(".for_building_box").attr("data-building-type"));
    var building_lvl = Number($(".for_building_box").attr("data-building-lvl"));
    var building_to_build = Number($(this).attr("data-building"));

    if (parseInt(building_lvl) !== 0 || parseInt(building_type) !== 0 || !building_place) {

        alert_box.confirmMessage(" لا يمكنك بناء  مبنى جديد هنا !");
        return;
        /*   this buildings sould be one in the city*/
    } else if (cityHasType(building_to_build) !== false && (building_to_build >= 6)) {

        alert_box.confirmMessage(`لا يمكنك بناء اكثر من ${BuildingConstData[building_to_build].title} فى المدينة`);
        return;

    } else {

        $.ajax({

            url: `${API_URL}/api/ACityBuilding/constructNewBuilding`,
            data: {
                buildingPlace: building_place,
                buildingType: building_to_build,
                templePlace: cityHasType(BUILDING_TYPS.WORSHIP),
                idCity: game.CurrentCity.City.id_city,
                server: game.Config.idServer,
                token: game.Config.OuthToken

            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);

                var json_data = JSON.parse(data)

                if (json_data.state === "ok") {

                    for (var iii in game.TimedTask.TaskList.Building)
                        if (Number(game.TimedTask.TaskList.Building[iii].id_city) === Number(game.CurrentCity.City.id_city))
                            delete(game.TimedTask.TaskList.Building[iii]);
                    for (var iii in json_data.list)
                        game.TimedTask.TaskList.Building[json_data.list[iii].id] = json_data.list[iii];

                    game.City.getCity().BuildingLvl[building_place] = 1;
                    game.City.getCity().BuildingType[building_place] = building_to_build;


                    $(".close_dialog").click();

                    buildingClick(building_place, true);
                    fillCityWithBuilding();
                    game.TimedTask.refreshListView();
                    game.City.getCityBase();

                } else if (json_data.state === "error_0") {
                    alert_box.failMessage("لا يوجد بنائين فى المدينة");
                } else if (json_data.state === "error_1") {
                    alert_box.failMessage("عليك توظيف المزيد من البنائين");
                } else if (json_data.state === "error_2") {
                    alert_box.failMessage("شروط البناء غير كافية");
                } else if (json_data.state === "error_3") {
                    alert_box.failMessage("اقصى مستوى للوصول اليه هو 30");
                } else {

                    alert_box.confirmMessage("حدث خطأ");

                }





            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    }



});



/*
 *    change  city storage ration
 */
$(document).on("click", "#accept-store-new-val button", function() {

    var food_val = Number($("#cap-food-input").val());
    var wood_val = Number($("#cap-wood-input").val());
    var stone_val = Number($("#cap-stone-input").val());
    var metal_val = Number($("#cap-metal-input").val());

    if (food_val < 0 || wood_val < 0 || stone_val < 0 || metal_val < 0) {


        alert_box.failMessage("احد القيم غير صحيحية ");
        return;
    }

    if ((food_val + wood_val + stone_val + metal_val) > 100) {

        alert_box.confirmMessage("لا يمكن ان تكون نسبة التخزين اكبر من %100");
        return;
    }

    var idCity = game.CurrentCity.idCity;
    $.ajax({

        url: `${API_URL}/api/ACityStorage/updatePercentage`,
        data: {
            foodPerc: food_val,
            woodPerc: wood_val,
            stonePerc: stone_val,
            metalPerc: metal_val,
            idCity: idCity,
            token: game.Config.OuthToken,
            server: game.Config.idServer

        },
        type: 'POST',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);


            if (JsonObject.state === "ok") {
                game.City.getCity(idCity).City = JsonObject.City;
                game.City.getCity(idCity).Storage = JsonObject.cityStorage;
                buildingClick($(".box_content").attr("data-building-place"), true);
                city_profile.refresh_resource_view();
                alert_box.succesMessage("تم تعديل النسب بنجاح");
            } else if (JsonObject.state === "error_0") {
                alert_box.failMessage("لا يمكن ان يكون  مجموع النسب اعلى من 100%");
            } else if (JsonObject.state === "error_1") {
                alert_box.failMessage("احد القيم غير صحيحية ");
            }

            /*if (isJson(data)) {
                var json_data = JSON.parse(data);
                console.log(json_data)
                if (json_data.state === "ok") {
                    alert_box.succesMessage("تم تعديل نسب التخزين بنجاح");
                    game.CurrentCity.City.food_cap = json_data.food_cap;
                    game.CurrentCity.City.wood_cap = json_data.wood_cap;
                    game.CurrentCity.City.stone_cap = json_data.stone_cap;
                    game.CurrentCity.City.metal_cap = json_data.metal_cap;
                    game.CurrentCity.Storage.total_cap = json_data.total_cap;
                    game.CurrentCity.City.LS = json_data.LS;

                    game.CurrentCity.Storage.food_storage_ratio = food_val;
                    game.CurrentCity.Storage.wood_storage_ratio = wood_val;
                    game.CurrentCity.Storage.stone_storage_ratio = stone_val;
                    game.CurrentCity.Storage.metal_storage_ratio = metal_val;

                    $(".building_store")
                            .children(".right-content")
                            .replaceWith(
                                    Building
                                    .dialogBoxContent_forstore(
                                            $(".box_content")
                                            .attr("data-building-place")
                                            )
                                    );

                } else {

                    console.log(data);
                    alert_box.failMessage("فشل تعديل نسب التخزين");
                }


            } else {
                alert(data);
                console.log(data);
            }*/

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });



});



$(document).on("click", "#go-building-left", function() {

    var current_index = $(this).parents(".right-nav").attr("data-current-index");
    var building_type = $(this).parents(".right-nav").attr("data-building-type");

    var max_count = 0;
    var index = 0;
    var building_places = [];

    for (var obj in game.City.getCity().BuildingType) {
        if (obj !== "id_player" && obj !== "id_city" && Number(game.City.getCity().BuildingType[obj]) === Number(building_type)) {
            max_count++;
            building_places.push(obj);
        }
    }

    var coming_place = building_places[current_index - 1] || building_places[0];
    buildingClick(coming_place, true);


});

$(document).on("click", "#go-building-right", function() {

    var current_index = Number($(this).parents(".right-nav").attr("data-current-index"));
    var building_type = $(this).parents(".right-nav").attr("data-building-type");

    var max_count = 0;
    var index = 0;
    var building_places = [];

    for (var obj in game.City.getCity().BuildingType) {
        if (obj !== "id_player" && obj !== "id_city" && Number(game.City.getCity().BuildingType[obj]) === Number(building_type)) {
            max_count++;
            building_places.push(obj);
        }
    }

    var coming_place = building_places[current_index + 1] || building_places[max_count - 1];
    buildingClick(coming_place, true);


});





$(document).on("PlayerReady", "html", function() {
    $.ajax({
        url: `${API_URL}/js${game.Config.JsVersion}/json/buildingReqData.json`,
        success: function(data, textStatus, jqXHR) {
            game.Building.BuildingData = data;
        }
    });
});
game.Building.verfiyCondetion = function(BuildingType, BuildingLvl) {

    var LvlReq = game.Building.BuildingData[BuildingType].lvlRequirment[Math.min(BuildingLvl, 29)].condetion;

    var condetion = [];

    for (var iii in LvlReq) {
        var verfied = true;
        var text = "";

        if (LvlReq[iii].type === "building") {
            if (Building.BuildingWithMaxLvl(LvlReq[iii].BuildingType) < LvlReq[iii].lvl)
                verfied = false;
            text = `${BuildingConstData[LvlReq[iii].BuildingType].title} مستوى ${LvlReq[iii].lvl}`

        } else if (LvlReq[iii].type === "item") {
            if (Matrial.getPlayerAmount(LvlReq[iii].item) < LvlReq[iii].amount)
                verfied = false;
            text = `${LvlReq[iii].amount} ${Matrial.getMatrialName(LvlReq[iii].item)}`;
        } else if (LvlReq[iii].type === "population") {
            if (game.CurrentCity.City.pop < LvlReq[iii].amount)
                verfied = false;
            text = `${LvlReq[iii].amount} سكان`;
        }
        condetion.push({
            Txt: text,
            verfied: verfied
        });
    }

    return condetion;
};

game.Building.refreshView = function() {
    buildingClick($(".box_content").attr("data-building-place"), true);
};




game.Building.Theater.RefreshTheaterListView = function(BuildingPlace) {

    if (!game.CurrentCity.HeroTheater)
        game.CurrentCity.HeroTheater = {
            lastUpdate: $.now() / 1000,
            refreshTime: 0,
            HeroList: []
        };
    var all_heros = "";
    var left_content = "";
    var right_nav = `   <div class="time-to-refresh">
                            <label>وقت التحديث:</label>
                            <label class="time_counter refresh_hero_counter"  time-end="${Number(game.CurrentCity.HeroTheater.lastUpdate) + Number(game.CurrentCity.HeroTheater.refreshTime)}">
                                ${changeTimeFormat(Number(game.CurrentCity.HeroTheater.lastUpdate) + Number(game.CurrentCity.HeroTheater.refreshTime) - $.now() / 1000)}
                            </label>
                        </div>`;
    var heros = game.CurrentCity.HeroTheater.HeroList;

    $(".right-nav").html(right_nav);

    for (var iii = 0; iii < 10; iii++) {

        if (heros && heros[iii]) {

            all_heros += `  <div class="tr" data-id-hero-theater="${heros[iii].id_hero}">
                                <div class="td_1">${game.BaseData.HeroTheaterName[heros[iii].name]}</div>
                                <div class="td_2">${heros[iii].lvl}</div>
                                <div class="td_3">${heros[iii].ultra_p}</div>
                                <div class="td_4">${(parseInt(heros[iii].lvl) + 20)} </div>
                                <div class="td_5">${(parseInt(heros[iii].lvl) + 15)}</div>
                                <div class="td_6">${(parseInt(heros[iii].lvl) + 16)} </div>
                                <div class="td_7">${(parseInt(heros[iii].lvl) * 10)} </div>
                                <div class="td_8">${(parseInt(heros[iii].lvl) * 1000)} </div>
                                <div class="td_9">
                                    <button class="full-btn full-btn-1x ellipsis show-hero-theater" data-hero='${JSON.stringify(heros[iii])}'>${Translate.Button.MenuList.View[UserLag.language]}</button>
                                </div>

                             </div>`;

        } else {

            all_heros += '<div class="tr"></div>';

        }

    }




    left_content += `       <div class="left-content theater full">
                                <div class="th">
                                   <div class="td_1 ellipsis">${Translate.Title.TH.Hero[UserLag.language]}</div>
                                   <div class="td_2 ellipsis">${Translate.Title.TH.Lvl[UserLag.language]}</div>
                                   <div class="td_3 ellipsis">${Translate.Title.TH.Potential[UserLag.language]}</div>
                                   <div class="td_4 ellipsis">${Translate.Title.TH.Sway[UserLag.language]}</div>
                                   <div class="td_5 ellipsis">${Translate.Title.TH.Bravery[UserLag.language]}</div>
                                   <div class="td_6 ellipsis">${Translate.Title.TH.Parry[UserLag.language]}</div>
                                   <div class="td_7 ellipsis">${Translate.Title.TH.Retainer[UserLag.language]}</div>
                                   <div class="td_8 ellipsis">${Translate.Title.TH.SignUpFee[UserLag.language]}</div>
                                   <div class="td_9 ellipsis">${Translate.Button.General.Action[UserLag.language]}</div>
                                </div>
                                  ${all_heros}
                            </div>`;

    $(".box_content").replaceWith(`<div class="box_content building_theater for_building_box" data-building-type="${game.CurrentCity.BuildingType[BuildingPlace]}" data-building-place="${BuildingPlace}" data-building-lvl="${game.CurrentCity.BuildingLvl[BuildingPlace]}">` + left_content + '</div>');


};

$(document).on("click", ".for_building .nav_bar .left-nav ul li", function() {

    $("#dialg_box .scroll").getNiceScroll().remove();
    var head_title = $(this).attr("head_title");
    var building_place = $(document.getElementById("dialg_box")).children(".box_header").attr("place");
    var building_lvl = Number($(document.getElementById("dialg_box")).children(".box_header").attr("lvl"));
    var building_type = Number($(document.getElementById("dialg_box")).children(".box_header").attr("type"));

    switch (head_title) {
        case "motiv":

            $(".box_content").replaceWith(Building.dialogBoxContent_forpalace());
            break;

            /*________________________________________________________________________*/

        case "city_name":
            var left_content = `<div class="left-content ">
                                <h1 style="margin-bottom: 30px;">تعديل اسم المدينة</h1>
                                <h1 style="margin-bottom: 30px;">ادخل الاسم الجديد</h1>
                                <div class="li">
                                    <input type="text" style="width: 60%; display:block ; margin: 5px auto" value="${game.CurrentCity.City.name}" id="city-name-val" class="input"/>
                                </div>
                                <div class="btn_2">
                                    <button class="full-btn full-btn-2x full" id="change-city-name">${Translate.Button.Building.Confirm[UserLag.language]}</button>
                                </div>
                            </div>`;
            var right_content = `<div class="right-content ">
                                <h1 class="header-1">
                                   تعديل اسم المدينة
                                </h1>
                                <p>
                                   من هنا تستطيع تغير اسم مدينتك
                                </p>
                            </div>`;
            $(".box_content").html(left_content + right_content);
            break;

            /*________________________________________________________________________*/
        case "taxs":
            var left_content = `<div class="left-content ">
                                <h1 style="margin-bottom: 30px;">تعديل  الضريبة</h1>
                                <h1 > عدد السكان: &nbsp;&nbsp;&nbsp;&nbsp;${getArabicNumbers(game.CurrentCity.City.pop)}</h1>
                                <h1 > نسبة الولاء: &nbsp;&nbsp;&nbsp;&nbsp;<span id="loy-in-city">${getArabicNumbers(100 - game.CurrentCity.City.taxs)}</span></h1>
                                <h1 style="margin-bottom: 30px;">مقدار الضرائب</h1>
                                <div class="li">
                                    <input type="text" max="100"  min="0" style="width: 60%; display:block ;" value="${game.CurrentCity.City.taxs}" class="only_num numeric input pull-L"  id="city-name-val"/>
                                    <div class="number-arrow-wrapper pull-L">
                                        <label class="number-arrow up"></label>
                                        <label class="number-arrow down"></label>
                                    </div>
                                </div>
                                <div class="btn_2">
                                    <button class="full-btn full-btn-2x full" id="change-city-taxs">${Translate.Button.Building.Confirm[UserLag.language]}</button>
                                </div>
                            </div>`;
            var right_content = `<div class="right-content ">
                                <h1 class="header-1">
                                   تعديل الضريبة فى  المدينة
                                </h1>
                                <p>
                                   من هنا تستطيع تغير الضريبة فى المدينة مدينتك<br>
                                   الضريبة المتحصلة من السكان <span id="collected-taxs">${getArabicNumbers(Math.floor(game.CurrentCity.City.pop * game.CurrentCity.City.taxs / 100))}</span> عملة  بالساعة <br>
                                   زيادة الضرائب فى المدينة تعنى زيادة عملات سسترسس!<br>
                                   كلما زاد عدد السكان زاد انتاج العملات فى المدينة
                                </p>
                               
                            </div>`;
            $(".box_content").html(left_content + right_content);
            break;



            /*________________________________________________________________________*/
        case "production":

            var left_content = Palace.productionReport();
            $(".box_content").html(left_content);
            $("#scroll-production-report").niceScroll(SCROLL_BAR_PROP);

            break;
            /*________________________________________________________________________*/

        case "expantion":
            var left_content = ` <div class="left-content ">
                                <div class="li">
                                    <h5>${Translate.Button.Building.ExpandCity[UserLag.language]}</h5>
                                    <p>
                                        توسيع المدينة للمستوى الثانى للحصول على    12 اماكن اضافية <br/>
                                    </p>
                                    <h5>المستوى الحالى </h5>
                                    <p>
                                        المستوى احالى يتيح لك ${getArabicNumbers(22 + 12 * game.CurrentCity.City.lvl)} مكان خالى <br/>
                                    </p>
                                    <h5>اعلى مستوى</h5>
                                    <p>
                                         يتيح لك المستوى الرابع 55 مكان خالى<br/>
                                    </p>
                                </div>
                            </div>`;
            var right_content = `<div class="right-content ">
                                <h1 class="header-1">  
                                    توسيع المدينة الى مستوى ${getArabicNumbers(parseInt(game.CurrentCity.City.lvl) + 1)}
                                </h1>   
                                 <div id="req-table-wrapper">
                                    <table class="req_table expantion-req-table" border="0">        
                                        <thead>             
                                            <tr>               
                                                <td colspan="2" style="direction: rtl">     
                                                    <ol> 
                                                        <li class="${Number(game.City.getCity().BuildingLvl.palace) >= (Number(game.CurrentCity.City.lvl) + 1) * 4 ? "enough" : "not_enough"}">
                                                            القصر مستوى ${getArabicNumbers((Number(game.CurrentCity.City.lvl) + 1) * 4)}
                                                        </li>     
                                                        <li class="${Matrial.getPlayerAmount("expan_plan") >= Math.pow(2, game.CurrentCity.City.lvl) ? "enough" : "not_enough"}">
                                                            خطة توسيع ${getArabicNumbers(Math.pow(2, game.CurrentCity.City.lvl))}
                                                        </li>     
                                                    </ol>          
                                                </td>           
                                            </tr>      
                                        </thead>       
                                        <tbody>         
                                            <tr>         
                                                <td>       
                                                    <img src="images/style/food.png">     
                                                    <div class="amount ${Number(game.CurrentCity.City.food) >= (Number(game.CurrentCity.City.lvl) + 1) * 3000 ? "enough" : "not_enough"}">
                                                        ${getArabicNumbers((Number(game.CurrentCity.City.lvl) + 1) * 3000)}
                                                    </div> 
                                                </td>    
                                                <td>         
                                                    <img src="images/style/iron.png">   
                                                    <div class="amount ${Number(game.CurrentCity.City.metal) >= (Number(game.CurrentCity.City.lvl) + 1) * 3000 ? "enough" : "not_enough"}"> 
                                                        ${getArabicNumbers((parseInt(game.CurrentCity.City.lvl) + 1) * 3000)}              
                                                    </div>
                                                </td>              
                                            </tr>        
                                            <tr>          
                                                <td>      
                                                    <img src="images/style/wood.png">   
                                                    <div class="amount ${Number(game.CurrentCity.City.wood) >= (Number(game.CurrentCity.City.lvl) + 1) * 3000 ? "enough" : "not_enough"}">     
                                                        ${getArabicNumbers((parseInt(game.CurrentCity.City.lvl) + 1) * 3000)}               
                                                    </div>                
                                                </td>        
                                                <td>       
                                                    <img src="images/style/stone.png">     
                                                    <div class="amount ${Number(game.CurrentCity.City.stone) >= (Number(game.CurrentCity.City.lvl) + 1) * 3000 ? "enough" : "not_enough"}">      
                                                        ${getArabicNumbers((parseInt(game.CurrentCity.City.lvl) + 1) * 3000)}               
                                                    </div>                 
                                                </td>      
                                            </tr>          
                                            <tr>             
                                                <td>          
                                                    <img src="images/style/coin.png">  
                                                    <div class="amount ${Number(game.CurrentCity.City.coin) >= (Number(game.CurrentCity.City.lvl) + 1) * 3000 ? "enough" : "not_enough"}">   
                                                        ${getArabicNumbers((parseInt(game.CurrentCity.City.lvl) + 1) * 3000)}                
                                                    </div>   
                                                </td>        
                                                <td>         
                                                    <img src="images/style/wait.png">  
                                                    <div class="amount">انهاء فى الحال</div> 
                                                </td>          
                                            </tr>  
                                        </tbody>
                                    </table>
                                </div>
                                <div id="expan-city">
                                    <button  class="full-btn full-btn-1x ellipsis full ${Palace.isExpanable() ? "" : "disabled"}" ${Palace.isExpanable() ? "" : "disabled='disabled'"}>${Translate.Button.Building.ExpandCity[UserLag.language]}</button>
                                </div>
                            </div>`;


            if (game.CurrentCity.City.lvl > 2) {
                right_content = `<div class="right-content ">
                                                    <h1 class="header-1">لا يمكنك توسيع المدينة المستوى الحالى اعلى مستوى</h1>   
                                                </div>`;
            }

            $(".box_content").html(left_content + right_content);
            break;


        case "city_wilds":



            $.ajax({

                url: "api/world.php",
                data: {
                    GET_CITY_BAR: true,
                    id_city: game.CurrentCity.City.id_city,
                    id_player: ID_PLAYER,
                    token: TOKEN
                },
                type: 'GET',
                beforeSend: function(xhr) {
                    var wilds = game.CurrentCity.City.wild;
                    var all_list = "";

                    for (var index in wilds) {

                        all_list += `<li data-unit-type="${wilds[index].t}"  data-x-coord="${wilds[index].x}" data-y-coord="${wilds[index].y}">
                                        <div>
                                            <h1>${getUnitTitle(wilds[index].t)}</h1>
                                        </div>
                                        <div>
                                            <h1>[ ${getArabicNumbers(wilds[index].x)} , ${getArabicNumbers(wilds[index].y)}]</h1>
                                        </div>
                                        <div>
                                            <h1>${getArabicNumbers(wilds[index].l)}</h1>
                                        </div>
                                        <div>
                                            <button class="full-btn full-btn-1x ellipsis abandon">تخلى</button>
                                        </div>
                                    </li>`;

                    }

                    var content = ` <div id="palace_content" class="box_content">
                                <div class="left-content ">
                                    <h1> قائمة البرارى</h1>
                                <p>
                                    من هنا تسطيع عرض البرارى المملوكة<br>
                                    <br>
                                    <br>
                                    
                                </p>
                                <h1>ملحوظة:</h1>
                                <p>
                                      لا يمكنك امتلاك اكثر من ${game.City.getCity().BuildingLvl.palace > 10 ? getArabicNumbers(10) : getArabicNumbers(game.City.getCity().BuildingLvl.palace) } برارى
                                </p>
                                </div>
                                <div class="right-content">
                                    <div class="th">
                                        <div class="td_1 ellipsis" style="width: 24%; margin-left: 2%">${Translate.Title.TH.Wilderness[UserLag.language]}</div>
                                        <div class="td_2 ellipsis" style="width: 24%;">${Translate.Title.TH.Coordinate[UserLag.language]}</div>
                                        <div class="td_3 ellipsis" style="width: 24%;">${Translate.Title.TH.Lvl[UserLag.language]}</div>
                                        <div class="td_5 ellipsis" style="width: 24%;"> ${Translate.Button.General.Action[UserLag.language]} </div>

                                    </div>
                                    <ol id="bar_list">
                                         ${all_list}
                                    </ol>
                                </div>
                            </div>`;
                    $(".box_content").replaceWith(content);
                    $("#bar_list").niceScroll(SCROLL_BAR_PROP);
                },
                success: function(data, textStatus, jqXHR) {

                    if (isJson(data)) {
                        var json_data = JSON.parse(data);
                    } else {

                        alert(data);
                        console.log(data);
                        return;

                    }
                    game.CurrentCity.City.wild = json_data;

                    var all_list = "";

                    for (var index in json_data) {

                        all_list += `<li data-unit-type="${json_data[index].ut}"  data-x-coord="${json_data[index].x}" data-y-coord="${json_data[index].y}">
                                        <div>
                                            <h1>${getUnitTitle(json_data[index].ut)}</h1>
                                        </div>
                                        <div>
                                            <h1>[ ${getArabicNumbers(json_data[index].x)} , ${getArabicNumbers(json_data[index].y)}]</h1>
                                        </div>
                                        <div>
                                            <h1>${getArabicNumbers(json_data[index].l)}</h1>
                                        </div>
                                        <div>
                                            <button class="full-btn full-btn-1x ellipsis abandon">تخلى</button>
                                        </div>
                                    </li>`;

                    }

                    var content = ` <div id="palace_content" class="box_content">
                                <div class="left-content ">
                                    <h1> قائمة البرارى</h1>
                                <p>
                                    من هنا تسطيع عرض البرارى المملوكة<br>
                                    <br>
                                    <br>
                                    
                                </p>
                                <h1>ملحوظة:</h1>
                                <p>
                                      لا يمكنك امتلاك اكثر من ${game.City.getCity().BuildingLvl.palace > 10 ? getArabicNumbers(10) : getArabicNumbers(game.City.getCity().BuildingLvl.palace) } برارى
                                </p>
                                </div>
                                <div class="right-content">
                                    <div class="th">
                                        <div class="td_1 ellipsis" style="width: 24%; margin-left: 2%">${Translate.Title.TH.Wilderness[UserLag.language]}</div>
                                        <div class="td_2 ellipsis" style="width: 24%;">${Translate.Title.TH.Coordinate[UserLag.language]}</div>
                                        <div class="td_3 ellipsis" style="width: 24%;">${Translate.Title.TH.Lvl[UserLag.language]}</div>
                                        <div class="td_5 ellipsis" style="width: 24%;"> ${Translate.Button.General.Action[UserLag.language]} </div>

                                    </div>
                                    <ol id="bar_list">
                                        ${all_list}
                                    </ol>
                                </div>
                            </div>`;
                    $(".box_content").replaceWith(content);
                    $("#bar_list").niceScroll(SCROLL_BAR_PROP);

                },
                error: function(jqXHR, textStatus, errorThrown) {
                    alert(textStatus);
                }

            });

            break;

        case "city_garrison":
            $('#palace_content').html(Palace.cityGarrison());
            break;
            /*________________________________________________________________________*/
        case "upgrade_req":
            var table_req = getReqTable(building_type, building_lvl);
            var ar_title = BuildingConstData[building_type].title;
            var left_content = '<div class="left-content " style="width: 28%">' +
                '<div class="li">' +
                upgradeBenefits(Number(building_type), Number(building_lvl)) +
                '</div>' +
                '</div>';
            var right_content = `<div class="right-content" style="width: 72%">
                                        <h1 class="header-1">
                                         ${building_lvl < 30 ? `تطوير ${ar_title} الى مستوى ${(Number(building_lvl) + 1)} يتطلب ` : "المبنى فى اعلى مستوياته ولا يمكن تطويره"}
                                        </h1>
                                        ${table_req}
                                    </div>`;
            $(".box_content").html(left_content + right_content);
            break;

            /*______________________________________MILIRETY BUILDINGS__________________*/
        case "go_stabl":

            var found = false;
            for (var building_place in game.City.getCity().BuildingType) {
                if (parseInt(game.City.getCity().BuildingType[building_place]) === BUILDING_TYPS.STABL) {
                    buildingClick(building_place, true);
                    found = true;
                    break;
                }
            }
            if (found === false) {
                alert_box.confirmMessage("لا يوجد  اسطبل  فى المدينة");
            }
            break;

        case "go_workShop":

            var found = false;
            for (var building_place in game.City.getCity().BuildingType) {
                if (parseInt(game.City.getCity().BuildingType[building_place]) === BUILDING_TYPS.WORKSHOP) {
                    buildingClick(building_place, true);
                    found = true;
                }
            }
            if (found === false) {
                alert_box.confirmMessage("لا يوجد ورش عمل  فى المدينة");
            }
            break;

        case "go_thaknat":

            var found = false;
            for (var building_place in game.City.getCity().BuildingType) {
                if (Number(game.City.getCity().BuildingType[building_place]) === BUILDING_TYPS.BARRACKS) {
                    buildingClick(building_place, true);
                    found = true;
                    break;
                }
            }
            if (found === false) {
                alert_box.confirmMessage("لا يوجد  ثكنات  فى المدينة");
            }
            break;

        case "build_army":

            var building_place = $(document.getElementById("dialg_box")).children(".box_header").attr("place");
            getContentForBuilding(building_place);

            //$(".box_content").replaceWith(content);

            break;

        case "go_uni":

            var found = false;
            for (var building_place in game.City.getCity().BuildingType) {
                if (parseInt(game.City.getCity().BuildingType[building_place]) === BUILDING_TYPS.UNIVERSITY) {
                    buildingClick(building_place, true);
                    found = true;
                    break;
                }
            }
            if (found === false) {
                alert_box.confirmMessage("لا يوجد  جامعة  فى المدينة");
            }

            break;

        case "go_acad":

            var found = false;
            for (var building_place in game.City.getCity().BuildingType) {
                if (parseInt(game.City.getCity().BuildingType[building_place]) === BUILDING_TYPS.ACADEMY) {
                    buildingClick(building_place, true);
                    found = true;
                    break;
                }
            }
            if (found === false) {
                alert_box.confirmMessage("لا يوجد  اكاديمية  فى المدينة");
            }

            break;
        case "acad_tech":
            $(".box_content").replaceWith(Building.dialogBoxContent_for_acad());
            break;
        case "uni_tech":
            $(".box_content").replaceWith(Building.dialogBoxContent_forUni());
            break;



            /*               HELPER     IN WOR SHIP             */
        case "choose_helper":

            $(".box_content").replaceWith(Building.dialogBoxContnet_forworship());

            break;



            /*            WOUNDED  SOLIDIER IN BLAZA       */
        case "wounded_forces":

            Building.dialogBoxContnet_forblaza();

            break;

        case "wall_army_list":
            var wall_army = [{
                type: "wall_a",
                amount: game.CurrentCity.City.wall_a,
                image: "images/tech/defense01.jpg",
                title: "كمائن"
            }, {
                type: "wall_b",
                amount: game.CurrentCity.City.wall_b,
                image: "images/tech/defense02.jpg",
                title: "ابراج"
            }, {
                type: "wall_c",
                amount: game.CurrentCity.City.wall_c,
                image: "images/tech/defense03.jpg",
                title: "ابراج"
            }];
            var content = Building.dialogBoxContent_forMili(wall_army, "wall");

            $(".box_content").replaceWith(content);
            break;

        case "jop_list":

            $(".box_content").replaceWith(Building.dialogBoxContent_forjop(BUILDING_TYPS.FARM, "farm"));
            break;

        case "refresh_hero_with_mat":

            BoxOfMatrialToUse(['rec_letter'], "refresh_theater_with_mat", 1);
            break;
        case "produce_heros":

            buildingClick(cityHasType(BUILDING_TYPS.THEATER), true);
            break;


        case "sell_buy_resources":

            $("#dialg_box .box_content").replaceWith(Market.dialogBoxContent("food"))
            break;


        case "transport_resources":

            $("#dialg_box .box_content").replaceWith(Market.transportResources());
            break;

        case "storage_management":
            getContentForBuilding(building_place);
            break;


        case "matrial_trade":

            $("#dialg_box .box_content").replaceWith(TradeCenter.TradeListContent(TradeCenter.currentList, 0));

            TradeCenter.getTradeList(0).done(function() {
                $("#dialg_box .box_content").replaceWith(TradeCenter.TradeListContent(TradeCenter.currentList, 0));
            });
            break;
        case "equip_trade":

            alert_box.confirmMessage("لم يتم تفعيلها بعد");
            break;
        case "resource_trade":

            alert_box.confirmMessage("لم يتم تفعيلها بعد");
            break;
        case "hero_trade":

            alert_box.confirmMessage("لم يتم تفعيلها بعد");

            break;
    }


});






/*______________________________________UPGRADE BUILing________________________*/

/*_________________________show upgrade table of requires________________*/
$(document).on("mouseenter", ".upgrade-btn", function() {
    if (!$(this).hasClass("hover")) {
        $(this).addClass("hover");
        $(this).parent(".box_header").next(".upgrade_req_tooltip").show();
    }
});
$(document).on("mouseleave", ".upgrade-btn", function() {
    if ($(this).hasClass("hover")) {
        $(this).removeClass("hover");
        $(this).parent(".box_header").next(".upgrade_req_tooltip").hide();
    }
});



/*UPGRADE BULDING*/

$(document).on("click", ".upgrade-btn", function() {

    if ($(this).hasClass("disabled"))
        return;

    var building_type = $(".box_header").attr("type");
    var building_lvl = $(".box_header").attr("lvl");
    var building_place = $(".box_header").attr("place");
    var building_ob = building_type;
    var id_city = game.CurrentCity.City.id_city;
    var self_ = $(this);

    var upgrading_num = 0;

    for (var iii in game.TimedTask.TaskList.Building) {

        if (Number(game.TimedTask.TaskList.Building[iii].id_city) === Number(game.CurrentCity.City.id_city)) {

            upgrading_num++;

        }


    }

    /* if more than 3 building are upgrading*/
    if (Number(game.DPlayer.PlayerState.motiv) > Math.floor(Date.now() / 1000)) {

        if (upgrading_num > 2) {

            alert_box.confirmMessage("لا يمكنك تطوير اكثر من 3 مبانى فى نفس الوقت");
            return;
        }

    } else {

        if (upgrading_num > 0) {


            alert_box.confirmDialog("عدد البنائين واحد فقط عليك تشغيل خطبة تحفيزية لزيادة عدد البنائين الى ثلاثة", function() {

                var matrial_to_use = [
                    "motiv_60",
                    "motiv_7"
                ];

                BoxOfMatrialToUse(matrial_to_use, "add_city_builder");

            });
            return;
        }

    }


    if (Building.isUpgradable(building_type, building_lvl) !== true) {
        alert_box.confirmMessage("لا يمكنك تطوير المبنى الحالى ");
        buildingClick(building_place, true);
        return;
    }

    $.ajax({

        url: `${API_URL}/api/ACityBuilding/upgrade`,
        data: {
            idCity: game.CurrentCity.City.id_city,
            buildingPlace: building_place,
            templePlace: cityHasType(BUILDING_TYPS.WORSHIP),
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },

        type: 'POST',
        success: function(data, textStatus, jqXHR) {

            if (!isJson(data)) {
                game.LBase.Error(data);
                alert_box.confirmMessage("حدث خطاء");
                buildingClick(building_place, true);
                return;
            }


            var json_data = JSON.parse(data);

            if (json_data.state === "ok") {

                for (var iii in game.TimedTask.TaskList.Building)
                    if (Number(game.TimedTask.TaskList.Building[iii].id_city) === Number(game.CurrentCity.City.id_city))
                        delete(game.TimedTask.TaskList.Building[iii]);
                for (var iii in json_data.list)
                    game.TimedTask.TaskList.Building[json_data.list[iii].id] = json_data.list[iii];


                buildingClick(building_place, true);
                fillCityWithBuilding();
                game.TimedTask.refreshListView();

                if (Number(building_type) === BUILDING_TYPS.PALACE && Number(building_lvl) >= 25) {
                    Matrial.takeFrom("law_3", 5);
                } else if (Number(building_type) === BUILDING_TYPS.PALACE && Number(building_lvl) >= 25) {
                    Matrial.takeFrom("law_2", 5);
                } else if (Number(building_type) === BUILDING_TYPS.PALACE && Number(building_lvl) >= 10) {
                    var amount_array = [5, 5, 5, 8, 8, 8, 10, 10, 10, 10];
                    Matrial.takeFrom("law_1", amount_array[building_lvl - 10]);
                }

                game.City.getCityBase();

            } else if (json_data.state === "error_0") {
                alert_box.failMessage("لا يوجد بنائين فى المدينة");
            } else if (json_data.state === "error_1") {
                alert_box.failMessage("عليك توظيف المزيد من البنائين");
            } else if (json_data.state === "error_2") {
                alert_box.failMessage("شروط البناء غير كافية");
                console.log(data);
            } else if (json_data.state === "error_3") {
                alert_box.failMessage("اقصى مستوى للوصول اليه هو 30");
            } else {

                alert_box.confirmMessage("حدث خطأ");

            }
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });





});



/*DOWNGRADE BULDING*/

$(document).on("click", "#downgrade-building-lvl", function() {

    if (!$(this).hasClass("disabled")) {

        var building_type = $('#dialg_box .box_header').attr("type");
        var building_lvl = $('#dialg_box .box_header').attr("lvl");
        var building_place = $('#dialg_box .box_header').attr("place");
        var building_ob = building_type;
        var id_city = game.CurrentCity.City.id_city;
        var self_ = $(this);

        var upgrading_num = 0;
        for (var iii in game.TimedTask.TaskList.Building) {

            if (game.TimedTask.TaskList.Building[iii].task === "building" && Number(game.TimedTask.TaskList.Building[iii].id_city) === Number(game.CurrentCity.City.id_city)) {

                upgrading_num++;

            }


        }

        /* if more than 3 building are upgrading*/
        if (Number(game.DPlayer.PlayerState.motiv) > Math.floor(Date.now() / 1000)) {

            if (upgrading_num > 2) {

                alert_box.confirmMessage("لا يمكنك تطوير اكثر من 3 مبانى فى نفس الوقت");
                return;
            }

        } else {

            if (upgrading_num > 0) {


                alert_box.confirmDialog("عدد البنائين واحد فقط عليك تشغيل خطبة تحفيزية لزيادة عدد البنائين الى ثلاثة", function() {

                    var matrial_to_use = [
                        "motiv_60",
                        "motiv_7"
                    ];

                    BoxOfMatrialToUse(matrial_to_use, "add_city_builder");

                });
                return;
            }

        }


        $.ajax({

            url: `${API_URL}/api/ACityBuilding/downgrade`,
            data: {
                idCity: game.CurrentCity.City.id_city,
                buildingPlace: building_place,
                templePlace: cityHasType(BUILDING_TYPS.WORSHIP),
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },

            type: 'POST',
            success: function(data, textStatus, jqXHR) {

                if (!isJson(data)) {
                    game.LBase.Error(data);
                    alert_box.confirmMessage("حدث خطاء");
                    buildingClick(building_place, true);
                    return;
                }


                var json_data = JSON.parse(data);

                if (json_data.state === "ok") {

                    for (var iii in game.TimedTask.TaskList.Building)
                        if (Number(game.TimedTask.TaskList.Building[iii].id_city) === Number(game.CurrentCity.City.id_city))
                            delete(game.TimedTask.TaskList.Building[iii]);
                    for (var iii in json_data.list)
                        game.TimedTask.TaskList.Building[json_data.list[iii].id] = json_data.list[iii];


                    buildingClick(building_place, true);
                    fillCityWithBuilding();
                    game.TimedTask.refreshListView();

                } else if (json_data.state === "error_0") {
                    alert_box.failMessage("لا يوجد بنائين فى المدينة");
                } else if (json_data.state === "error_1") {
                    alert_box.failMessage("عليك توظيف المزيد من البنائين");
                } else if (json_data.state === "error_2") {
                    alert_box.failMessage("شروط البناء غير كافية");
                } else if (json_data.state === "error_3") {
                    alert_box.failMessage("اقصى مستوى للوصول اليه هو 30");
                } else {

                    alert_box.confirmMessage("حدث خطأ");

                }
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });



    }

});



/*  cancel upgrading building  */
$(document).on("click", "#cansel-building-upgrade", function() {

    var building_place = $('#dialg_box .box_header').attr("place");
    var idWorking = $(this).attr("data-id-task");

    $.ajax({

        url: `${API_URL}/api/ACityBuilding/cancelUpgradeing`,
        data: {
            idCity: game.CurrentCity.City.id_city,
            idWorking: idWorking,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },

        type: 'POST',
        success: function(data, textStatus, jqXHR) {

            if (!isJson(data)) {
                game.LBase.Error(data);
                alert_box.confirmMessage("حدث خطاء");
                buildingClick(building_place, true);
                return;
            }


            var json_data = JSON.parse(data);

            if (json_data.state === "ok") {

                for (var iii in game.TimedTask.TaskList.Building)
                    if (Number(game.TimedTask.TaskList.Building[iii].id_city) === Number(game.CurrentCity.City.id_city))
                        delete(game.TimedTask.TaskList.Building[iii]);
                for (var iii in json_data.list)
                    game.TimedTask.TaskList.Building[json_data.list[iii].id] = json_data.list[iii];


                buildingClick(building_place, true);
                fillCityWithBuilding();
                game.TimedTask.refreshListView();

                game.City.getCityBase();

            } else if (json_data.state === "error_0") {
                alert_box.failMessage("لا يوجد بنائين فى المدينة");
            } else if (json_data.state === "error_1") {
                alert_box.failMessage("عليك توظيف المزيد من البنائين");
            } else if (json_data.state === "error_2") {
                alert_box.failMessage("شروط البناء غير كافية");
            } else if (json_data.state === "error_3") {
                alert_box.failMessage("اقصى مستوى للوصول اليه هو 30");
            } else {

                alert_box.confirmMessage("حدث خطأ");

            }
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });
});



/*downgradde building*/
$(document).on("click", "#building-lvl-down", function() {

    var place = $(".box_header").attr("place");
    alert_box.downGradeBuilding(place);

});


$(document).on("click", ".acce-upgrade-btn", function() {
    var idTask = $(this).attr("data-id-task");
    var matrial_to_use = [
        "archit_a",
        "archit_b",
        "archit_c",
        "archit_d"
    ];

    BoxOfMatrialToUse(matrial_to_use, "building_acce", 1, idTask);

});



/*   if accelerated from the task bar */

$(document).on("click", ".reduce-time-for-building img", function() {



    var idTask = $(this).attr("data-id-task");
    var matrial_to_use = [
        "archit_a",
        "archit_b",
        "archit_c",
        "archit_d"
    ];

    BoxOfMatrialToUse(matrial_to_use, "building_acce", 1, idTask);




});
/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


const BATTAL_TASKS = {

    0: {
        ar_title: "غزو"
    },
    1: {
        ar_title: "استيلاء"
    },
    2: {
        ar_title: "انضمام للهجوم "
    },
    3: {
        ar_title: "انضمام للدفاع"
    },
    4: {
        ar_title: "تجسس"
    },
    5: {
        ar_title: "امداد"
    },
    6: {
        ar_title: "نقل"
    }

};



var ARMY_CONVERT = {

    "sol-0": {
        city: null,
        db: 0
    },
    "sol-1": {
        city: "army_a",
        db: 1,
        img: "images/tech/soldier01.jpg"
    },
    "sol-2": {
        city: "army_b",
        db: 2,
        img: "images/tech/soldier02.jpg"
    },
    "sol-3": {
        city: "army_c",
        db: 3,
        img: "images/tech/soldier03.jpg"
    },
    "sol-4": {
        city: "army_d",
        db: 4,
        img: "images/tech/soldier04.jpg"
    },
    "sol-5": {
        city: "army_e",
        db: 5,
        img: "images/tech/soldier05.jpg"
    },
    "sol-6": {
        city: "army_f",
        db: 6,
        img: "images/tech/soldier06.jpg"
    }

};

/*  this glo*/
var hero_medal = {
    "medal_ceasro": "0",
    "medal_den": "0",
    "medal_leo": "0",
    "ceaser_eagle": "0"
};
// this by default will be the current hero 
// will be used in every thig will be the first  to show


var current_hero_army;
// the second hero it relatedonly with  swap army between two heros
// first hero (current Hero) secound hero  (sechero

var current_hero_equi;


/*
 * the default value for battel if the  player tryed to attack
 * 
 */
var battel_data = {
    x_coord: null,
    y_coord: null,
    ar_title: "",
    task: "",
    time: 0,
    task_title: "",
    type: null
};

/*
 * image of army in  all places exept battel Reports
 * 0 for no army
 * 1 for مشاه
 * 2 for فرسان
 * 3 for مدرعين
 * 4 رماه 
 * 5 مقاليع 
 * 6 منجنيق
 */
var army_typs = [
    "no_army.png",
    "soldier01.jpg",
    "soldier02.jpg",
    "soldier03.jpg",
    "soldier04.jpg",
    "soldier05.jpg",
    "soldier06.jpg"
];

function refreshDownTradeArmy() {
    $("#d_1").children(".amount").attr("amount", game.CurrentCity.City.army_a);
    $("#d_1").children(".amount").html(getArabicNumbers(game.CurrentCity.City.army_a));

    $("#d_2").children(".amount").attr("amount", game.CurrentCity.City.army_b);
    $("#d_2").children(".amount").html(getArabicNumbers(game.CurrentCity.City.army_b));

    $("#d_3").children(".amount").attr("amount", game.CurrentCity.City.army_c);
    $("#d_3").children(".amount").html(getArabicNumbers(game.CurrentCity.City.army_c));

    $("#d_4").children(".amount").attr("amount", game.CurrentCity.City.army_d);
    $("#d_4").children(".amount").html(getArabicNumbers(game.CurrentCity.City.army_d));

    $("#d_5").children(".amount").attr("amount", game.CurrentCity.City.army_e);
    $("#d_5").children(".amount").html(getArabicNumbers(game.CurrentCity.City.army_e));

    $("#d_6").children(".amount").attr("amount", game.CurrentCity.City.army_f);
    $("#d_6").children(".amount").html(getArabicNumbers(game.CurrentCity.City.army_f));


}

function heroAvailableForTask(id_hero) {
    id_hero = Number(id_hero);

    for (var index in game.DPlayer.Heros) {



        if (Number(game.DPlayer.Heros[index].Hero.id_hero) === Number(id_hero)) {

            for (var iii in game.DPlayer.City) {
                if (Number(game.CurrentCity.City.console) === Number(id_hero))
                    return false;

            }

            if (Number(game.DPlayer.Heros[index].Hero.in_city) === 1) {
                return true;
            } else {
                return false;
            }

        }

    }
}
/*
 * DATA of equipments 
 * every type is object  has 5 object
 * sword , helmet ,shield , armor and boot 
 */
var EQUIP_DATA;


/*
 *الاراى دة فيه الانواع بتاعة بتاعة الجيش كل نوع بياخد سكان اد ايه 
 *واول نوع دة الى هو مش نوع خالص يعنى لما يكون الوع صفر يبقى مش جيب 
 *فميخدش من السكان
 */
var soldier_cap = [
    0, // مكان خالى
    1, //  مشاة
    3, //  فرسان
    6, //  مدرعين
    1, //  رماة
    4, //   مقاليع
    8
]; //  منجنيق


function getHeroById(id_hero) {
    for (var iii in game.DPlayer.Heros) {

        if (Number(game.DPlayer.Heros[iii].Hero.id_hero) === Number(id_hero)) {
            return game.DPlayer.Heros[iii];
        }

    }
}
/*
 * 
 * @param {moues event} ev
 * @returns {undefined}
 */
function allowDrop(ev) {
    ev.preventDefault();
}

/*
 * 
 * @param {int} lvl
 * @returns {power of hero}
 * بترجع اعلى طاقة ممكن البطل يوصلها
 */
function getMaxPower(lvl) {
    if (lvl >= 100) {
        return 150;
    } else {
        return 50 + parseInt(lvl);
    }
}

/*
 * 
 * @param {Array of Obj} hero_army
 * @returns {Number}
 * هنا دة عشان احسب البطل شايل ناس اد اى 
 * خلى  بالك ان كل نوع من الجيش ليه عدد معين من الناس
 */
function getHeroCap(hero_army) {

    var total_cap = 0;
    total_cap += soldier_cap[hero_army.f_1_type] * hero_army.f_1_num;
    total_cap += soldier_cap[hero_army.f_2_type] * hero_army.f_2_num;
    total_cap += soldier_cap[hero_army.f_3_type] * hero_army.f_3_num;
    total_cap += soldier_cap[hero_army.b_1_type] * hero_army.b_1_num;
    total_cap += soldier_cap[hero_army.b_2_type] * hero_army.b_2_num;
    total_cap += soldier_cap[hero_army.b_3_type] * hero_army.b_3_num;

    return total_cap;
}

function getHeroCapById(id_hero) {


    var hero_army = game.Hero.getHero(id_hero).Army;

    var total_cap = 0;
    total_cap += soldier_cap[hero_army.f_1_type] * hero_army.f_1_num;
    total_cap += soldier_cap[hero_army.f_2_type] * hero_army.f_2_num;
    total_cap += soldier_cap[hero_army.f_3_type] * hero_army.f_3_num;
    total_cap += soldier_cap[hero_army.b_1_type] * hero_army.b_1_num;
    total_cap += soldier_cap[hero_army.b_2_type] * hero_army.b_2_num;
    total_cap += soldier_cap[hero_army.b_3_type] * hero_army.b_3_num;

    return total_cap;
}


/*
 * 
 * @param {int} id_hero
 * @param {object} hero_army
 * @returns {Number}
 * 
 * return  the  number of hero can hold over it has
 * 
 */
function getAvailPlaces(id_hero, hero_army) {
    id_hero = Number(id_hero);
    /* first  get hero */
    var hero = game.Hero.getHero(id_hero);

    /*second   we calculate*/
    return getHeroMaxCap(hero) - getHeroCapById(id_hero);
}


/*
 * 
 * @param {object} hero
 * @returns {undefined}
 */
function getHeroMaxCap(hero) {

    var base_cap = Math.ceil((30000 + (Number(hero.Hero.point_a) + Number(hero.Hero.point_a_plus)) * 500));
    var after_study = Math.ceil(base_cap) * (game.DPlayer.PlayerEdu.leader) * 3 / 100;
    var after_medal_cap = (hero.Medal.medal_ceasro > Date.now() / 1000 ? (Number(hero.Hero.point_a) + Number(hero.Hero.point_a_plus)) * 500 * 25 / 100 : 0);
    var after_eagle = hero.Medal.ceaser_eagle > Date.now() / 1000 ? (Number(hero.Hero.point_a) + Number(hero.Hero.point_a_plus)) * 500 * 25 / 100 : 0;


    return (base_cap + after_medal_cap + after_eagle + after_study);

}


function getReqHeroXp(lvl) {

    var baseXp = Math.pow(lvl, 2);
    var studyEffect = 0;
    if (game.DPlayer.PlayerEdu["scholership"] >= 20)
        studyEffect = 0.3 + 0.2 + (game.DPlayer.PlayerEdu["scholership"] - 20) * 0.015;
    else if (game.DPlayer.PlayerEdu["scholership"] >= 10)
        studyEffect = 0.3 + (game.DPlayer.PlayerEdu["scholership"] - 10) * 0.02;
    else
        studyEffect = game.DPlayer.PlayerEdu["scholership"] * 0.03;


    return Math.floor(baseXp * (1 - studyEffect) * 125);

}



/*
 * 
 * @param {moues event} ev
 * @param {li DOM obj} el_to
 * @returns {undefined}
 * 
 * دى اهم فنكشن
 * دى بقى بتشتغل لما بسيب الماوس على  الصورة بتاعة الجيش
 * هوة بقى بينقل الجيش من المدينة للبطل
 */



function replaceImage(el_to, el_from, amount) {


    /* بجيب الصورة  بتاعة النوع الى انا ساحبة */
    var src = $(el_from).attr("src");
    var army_type = $(el_from).attr("army-type"); /* هنا بجيبب النوع ذات نفسة*/
    var img = ARMY_CONVERT[army_type].img;

    $(el_to).children("button").children(".img-bg").css({
        "background-image": `url(${img})`
    }); /* ببدل صورة العنصر الى انا رايحلة بالصورة  الى معايا*/
    $(el_to).children("button").attr("army-type", army_type); /* بغير نوع الجيش الى انا رايحلة بالجنوع الى معايا */
    $(el_to).attr("army-type", army_type); /* بغير النوع بردوا بس للاب الة هو ليست ايتم*/


    var el_to_amount = $(el_to).children(".amount").attr("amount");
    var el_from_amount = $(el_from).next(".amount").attr("amount");

    $(el_to).children(".amount").attr("amount", Number(amount) + Number(el_to_amount));
    $(el_to).children(".amount").html(Number(amount) + Number(el_to_amount));


    $(el_from).next(".amount").attr("amount", Number(el_from_amount) - Number(amount));
    $(el_from).next(".amount").html(Number(el_from_amount) - Number(amount));

    /* بعد دة بقى لما يكون انا واخد جيش بس مش من المدينة 
     *  كدة ممكن اكون ساحب الجيش كله
     *  عشان كدة انا محتاج اغير وع الجيش والصورة*/
    if ($(el_from).parents(".army_container").attr("army") !== "city") {

        if (Number(el_from_amount) - Number(amount) === 0) {
            /* change image*/
            $(el_from).attr("src", "images/tech/no_army.png");
            $(el_from).children(".img-bg").css({
                "background-image": `url(images/tech/no_army.png)`
            });;

            $(el_from).parents(".sol").attr("army-type", "sol-0"); /* change_parent attr*/
            $(el_from).attr("army-type", "sol-0"); /*  change  image  army type*/

        }

    }
}


// get hero equip
function getHeroEquip(id_hero) {


}

// get equip images and data

function getEquipData(eq_part) {

    if (eq_part) {
        var image = Equipment.getImage(eq_part["type"], eq_part["part"], eq_part["lvl"] || 1);
        var EquData = Equipment.getEquipData(eq_part["type"], eq_part["part"], eq_part["lvl"] || 1);
        var data = {
            image: image,
            id_equip: eq_part.id_equip,
            type: eq_part.type,
            vit: EquData.Power.vitality,
            attack: EquData.Power.attack,
            defence: EquData.Power.defence,
            damage: EquData.Power.damage,
            break: EquData.Power.break,
            anti_break: EquData.Power.anti_break,
            strike: EquData.Power.strike,
            immunity: EquData.Power.immunity,
            lvl: eq_part["lvl"]
        };
        return data;
    }
    return {
        image: "images/tech/no_army.png",
        id_equip: -1,
        type: "none",
        vit: 0,
        attack: 0,
        defence: 0,
        damage: 0,
        break: 0,
        anti_break: 0,
        strike: 0,
        immunity: 0,
        lvl: 0
    };
}


function getMinSpeed() {
    var min = 900; // fastest speed

    if (min > speeds[game.CurrentHero.Army.f_1_type] && Number(game.CurrentHero.Army.f_1_type) !== 0) {

        min = speeds[game.CurrentHero.Army.f_1_type];

    }
    if (min > speeds[game.CurrentHero.Army.f_2_type] && Number(game.CurrentHero.Army.f_2_type) !== 0) {

        min = speeds[game.CurrentHero.Army.f_2_type];

    }
    if (min > speeds[game.CurrentHero.Army.f_3_type] && Number(game.CurrentHero.Army.f_3_type) !== 0) {

        min = speeds[game.CurrentHero.Army.f_3_type];

    }
    if (min > speeds[game.CurrentHero.Army.b_1_type] && Number(game.CurrentHero.Army.b_1_type) !== 0) {

        min = speeds[game.CurrentHero.Army.b_1_type];

    }
    if (min > speeds[game.CurrentHero.Army.b_2_type] && Number(game.CurrentHero.Army.b_2_type) !== 0) {

        min = speeds[game.CurrentHero.Army.b_2_type];

    }
    if (min > speeds[game.CurrentHero.Army.b_3_type] && Number(game.CurrentHero.Army.b_3_type) !== 0) {

        min = speeds[game.CurrentHero.Army.b_3_type];

    }
    return min;
}

/*   calculate time needed to attak */
function calAttakTime() {

    var x_coord = battel_data.x_coord;
    var y_coord = battel_data.y_coord;
    var type = Number(WorldUnit.getWorldUnit(battel_data.x_coord, battel_data.y_coord).ut);

    if (!x_coord || !y_coord || !type) {
        return (0);
    }

    if (WorldUnit.isAsianSquads(type) ||
        WorldUnit.isGangStar(type) ||
        WorldUnit.isCarthagianArmies(type) ||
        WorldUnit.isArenaChallange(type) ||
        WorldUnit.isArenaDeath(type) ||
        WorldUnit.isArmyCapital(type) ||
        WorldUnit.isMonawrat(type)) {
        battel_data.time = 120;
        return 120;
    } else if (WorldUnit.isArenaGuild(type)) {
        return 5 * 60;
    } else if (WorldUnit.isCity(type)) {

        var dist = getDistance(x_coord, y_coord);
        battel_data.time = Math.ceil(dist / getMinSpeed());
        return Math.max(Math.ceil(dist / getMinSpeed()), 15 * 60);

    } else {
        var dist = getDistance(x_coord, y_coord);
        battel_data.time = Math.ceil(dist / getMinSpeed());
        return Math.ceil(dist / getMinSpeed());
    }


}


/*            is hero empty*/
function heroIsEmpty() {

    for (var cell in game.CurrentHero.Army) {
        if (parseInt(game.CurrentHero.Army[cell]) !== 0 && cell !== "id_hero" && cell !== "id_player") {

            return false;
        }

    }

    return true;

}


$(document).on("mousedown", ".sol img", function() {

    if ($(this).attr("army-type") === "sol-0") {
        $(this).attr("ondragstart", "return false;");
    }
});




var army = {

    dialogBox: function(title, nav_bar, content) {
        var nav_list = "";
        nav_bar.forEach(function(one, index) {
            nav_list += ` <li head_title = "${one["title"]}" class="${index === 0 ? "selected" : ""}" >
                                   ${one[("title_" + UserLag.language)] }
                               </li>`;
        });



        return `
                    <div id='dialg_box'>
                        <div class="head_bar">
                           <img src="images/style/head_bar.png">
                           <div class="title">${title} </div>
                        </div>
                        <div class="nav_bar">
                            <div class="left-nav">
                                <ul>${nav_list}</ul>
                            </div>
                            <div class="right-nav">
                                <div class="nav_icon">
                                    <img  class ="close_dialog" src="images/btns/close_b.png">
                                </div>
                            </div>
                        </div>
                        ${content}
                    </div>`;
    },

    /*
     * this will be the global list of hero
     * if   the list is for hero  all heros will be shown
     */
    hero_list: function() {


        var all_heros = "";
        var HeroLen = 0;
        var consoleHero = game.CurrentCity.City.console;
        for (var iii in game.DPlayer.Heros) {
            var Hero = game.DPlayer.Heros[iii];
            var sel = "";
            if (Hero.Hero.id_city != game.CurrentCity.City.id_city)
                continue;

            var state = '<img src="images/icons/h_s_incity.png" >';
            if (Number(Hero.Hero.id_hero) === Number(consoleHero)) {

                state = '<img src="images/icons/h_s_console.png">';

            } else if (Number(Hero.Hero.in_city) === game.Hero.HeroState.HERO_IN_BATTEL) {

                state = '<img src="images/icons/h_s_attack_2.png">';

            } else if (Number(Hero.Hero.in_city) === game.Hero.HeroState.HERO_IN_GARISON) {

                state = '<img src="images/icons/h_s_support.png">';

            }

            if (Number(Hero.Hero.id_hero) === Number(game.CurrentHero.Hero.id_hero)) {
                sel = "selected";
            }

            all_heros += `             <div class="tr ${sel} flex" id_hero="${Hero.Hero.id_hero}">
                                            <div class="pull-L hero_lvl-box">${getArabicNumbers(Hero.Hero.lvl)}</div>
                                            <div class="hero-name ellipsis pull-L ${Hero.Hero.ultra_p > 0 ? "POT-HERO" : ""}">${Hero.Hero.name}</div>
                                            <div class="hero-state pull-L">${state}</div>
                                        </div>`;
            HeroLen++;
        }

        if (HeroLen > 13) {
            return all_heros;

        } else {
            for (var iii = 0; iii < 13 - HeroLen; iii++) {
                all_heros += "<div class='tr'></div>";
            }
            return all_heros;
        }
    },
    left_content: function() {


        var left_content = `<div class="left-content ">
                                <div id="city-hero-list" class="hero-list scrollable">
                              ${this.hero_list()}
                                </div>
                                <div id="order-hero">
                                    <div class="wrapper">
                                        <button class="order-up" data-order="up"></button>
                                        <button class="order-down" data-order="down"></button>
                                    </div>
                                </div>
                            </div>`;
        return left_content;
    },
    middle_content: function(hero) {

        if (parseInt(game.CurrentHero.Hero.console) === 0) {
            var console = Translate.Button.Hero.AppointConsul[UserLag.language];
            var console_class = "add_console";
        } else {
            var console = Translate.Button.Hero.DismissConsul[UserLag.language];
            var console_class = "remove_console";
        }

        game.CurrentHero.Hero.add_p_a = 0;
        game.CurrentHero.Hero.add_p_b = 0;
        game.CurrentHero.Hero.add_p_c = 0;


        var state = '<img src="images/icons/h_s_incity.png" class="img-sml pull-R" >';
        var state_ar_title = "فى المدينة";

        if (Number(game.CurrentHero.Hero.id_hero) == game.CurrentCity.City.console) {

            state = '<img src="images/icons/h_s_console.png"  class="pull-R">';
            state_ar_title = "قنصل المدينة";

        } else if (Number(game.CurrentHero.Hero.in_city) === game.Hero.HeroState.HERO_IN_BATTEL) {

            state = '<img src="images/icons/h_s_attack_2.png"  class="img-sml pull-R">';
            state_ar_title = "يهاجم";

        } else if (Number(game.CurrentHero.Hero.in_city) === game.Hero.HeroState.HERO_IN_GARISON) {

            state = '<img src="images/icons/h_s_support.png" class="img-sml pull-R">';
            state_ar_title = "حراسة";
        }

        var middle_content = `<div class="middle-content hero-profile">
                                    <div class="part-1 flex">
                                        <div class="hero_img pull-L">
                                            <img class="img-mid" src ="${game.BaseData.HeroAvatar[game.CurrentHero.Hero.avatar]}"/>
                                            <div class="hero_lvl-box" hero-lvl="${hero.Hero.lvl}">
                                                ${getArabicNumbers(hero.Hero.lvl)}
                                            </div>
                                        </div>
                                        <div class="hero-data pull-L">
                                            <div class="upper">
                                                <div class="pull-R">
                                                    <img src="images/btns/edit.png" class="img-sml" id="change-hero-name"/>
                                                </div>
                                                <div class="pull-R ${hero.Hero.ultra_p > 0 ? "POT-HERO" : ""}">
                                                   ${hero.Hero.name}
                                                </div>
                                            </div>
                                            <hr/>
                                            <div class="bottom flex">
                                                <div class="state-hero flex">
                                                    <span class="header-2">${state_ar_title}</span> 
                                                    ${state}
                                                </div>
                                                <div class="train btn-sml pull-R">
                                                    <button class="full-btn full-btn-3x">${Translate.Button.Hero.Exercise[UserLag.language]}</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="part-2 prief">
                                        <table border="1">
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        المستوى
                                                    </td>
                                                    <td colspan="1"  hero-lvl="${hero.Hero.lvl}">
                                                      ${ getArabicNumbers(hero.Hero.lvl)}
                                                    </td>
                                                    <td colspan="2">
                                                        <button class="full-btn full-btn-1x btn-sml hero_up_lvl pull-R ellipsis" ${(hero.Hero.exp > getReqHeroXp(hero.Hero.lvl)) ? "" : "disabled='disabled'"}>
                                                            ${Translate.Button.General.Upgrade[UserLag.language]}
                                                        </button>
                                                    </td>
                                                </tr>
                                                 <tr>
                                                    <td>
                                                        الراتب
                                                    </td>
                                                    <td colspan="1">
                                                        ${getArabicNumbers(hero.Hero.lvl * 20)}
                                                    </td>
                                                    <td colspan="2">
                                                        <button class="full-btn btn-sml pull-R full-btn-1x FIRE_HERO">${Translate.Button.Hero.Dismiss[UserLag.language]}</button>
                                                    </td>
                                                </tr>
                                                 <tr>
                                                    <td>
                                                        الامكانيات
                                                    </td>
                                                    <td colspan="3" ${hero.Hero.ultra_p > 0 ? "class='POT-HERO'" : ""}>
                                                        ${getArabicNumbers(hero.Hero.ultra_p)}
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    <div class="part-2 part-3">
                                        <table border="1">
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        الخبرة
                                                    </td>
                                                    <td colspan="2">
                                                        <div class="over-text ">${hero.Hero.lvl < 255 ? getArabicNumbers(hero.Hero.exp) : ""}/${hero.Hero.lvl < 255 ? (getReqHeroXp(hero.Hero.lvl)) : ""}</div>
                                                        <div class="colored-bar exp" style="width: ${Math.min((hero.Hero.exp / getReqHeroXp(hero.Hero.lvl)) * 100, 100)}%"></div>
                                                    </td>
                                                    <td>
                                                        <div class="full-btn btn-sml pull-R">
                                                            <div class="add_xp pluse"></div>
                                                        </div>
                                                    </td>
                                                </tr>
                                                 <tr>
                                                    <td>
                                                        القوة البدنية
                                                    </td>
                                                    <td colspan="2">
                                                        <div class="over-text">${getArabicNumbers(hero.Hero.power)}/${getArabicNumbers(getMaxPower(hero.Hero.lvl))}</div>
                                                        <div class="colored-bar power" style="width: ${Math.min((hero.Hero.power / getMaxPower(hero.Hero.lvl)) * 100, 100)}%"></div>
                                                    </td>
                                                    <td>
                                                        <div class="full-btn btn-sml pull-R">
                                                            <div class="add_power pluse"></div>
                                                        </div>
                                                    </td>
                                                </tr>
                                                 <tr>
                                                    <td>
                                                        الولاء
                                                    </td>
                                                    <td colspan="2">
                                                        <div class="over-text">${getArabicNumbers(hero.Hero.loyal)}/100</div>
                                                        <div class="colored-bar loy" style="width: ${hero.Hero.loyal}%"></div>
                                                    </td>
                                                    <td>
                                                        <div class="full-btn btn-sml pull-R">
                                                            <div class="add_loy pluse"></div>
                                                        </div>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                   <div class="part-2 part-4">
                                        <table border="1">
                                            <tbody>
                                                <tr>
                                                    <td>
                                                        نقاط التقسيم
                                                    </td>
                                                    <td p-num="${hero.Hero.points}">
                                                       ${getArabicNumbers(hero.Hero.points)}
                                                    </td>
                                                </tr>
                                                 <tr>
                                                    <td>
                                                        قوة السيطرة
                                                    </td>
                                                    <td>
                                                         <div class="pull-L  domain-point">
                                                            <div class="point pull-L" p-num="${Number(hero.Hero.point_a)}">
                                                                ${Number(hero.Hero.point_a) + Math.ceil(game.CurrentHero.Medal.medal_ceasro > Date.now() / 1000 ? (hero.Hero.point_a * 25 / 100) : 0)}
                                                            </div>
                                                            <div class="point pull-R">
                                                               + ${getArabicNumbers(hero.Hero.point_a_plus)}
                                                            </div>
                                                        </div>
                                                        <div class="pull-R">
                                                            <button class="add_point" ${game.CurrentHero.Hero.points > 0 ? "" : 'disabled="disabled"'} data-point="point_a" amount="1" for="add_p_a">+</button>
                                                            <button class="add_point" ${game.CurrentHero.Hero.points > 0 ? "" : 'disabled="disabled"'} data-point="point_a" amount="3" for="add_p_a">3</button>
                                                        </div>
                                                    </td>
                                                </tr>
                                                 <tr>
                                                    <td>
                                                        الشجاعة
                                                    </td>
                                                    <td>
                                                        <div class="pull-L attack-point">
                                                            <div class="point pull-L" p-num="${Number(hero.Hero.point_b)}">
                                                              ${Number(hero.Hero.point_b) + Math.ceil(game.CurrentHero.Medal.medal_den > Date.now() / 1000 ? (hero.Hero.point_b * 25 / 100) : 0)}
                                                            </div>
                                                            <div class="point pull-R">
                                                               + ${getArabicNumbers(hero.Hero.point_b_plus)}
                                                            </div>
                                                        </div>
                                                        <div class="pull-R">
                                                            <button class="add_point" ${game.CurrentHero.Hero.points > 0 ? "" : 'disabled="disabled"'} data-point="point_b" amount="1" for="add_p_b">+</button>
                                                            <button class="add_point" ${game.CurrentHero.Hero.points > 0 ? "" : 'disabled="disabled"'} data-point="point_b" amount="3" for="add_p_b">3</button>
                                                        </div>
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>
                                                        الدفاع
                                                    </td>
                                                    <td>
                                                        <div class="pull-L def-point">
                                                            <div class="point pull-L" p-num="${Number(hero.Hero.point_c)}">
                                                               ${parseInt(hero.Hero.point_c) + Math.ceil(game.CurrentHero.Medal.medal_leo > Date.now() / 1000 ? (hero.Hero.point_c * 25 / 100) : 0)}
                                                            </div>
                                                            <div class="point pull-R">
                                                               + ${getArabicNumbers(hero.Hero.point_c_plus)}
                                                            </div>
                                                        </div>
                                                        <div class="pull-R">
                                                            <button class="add_point" ${game.CurrentHero.Hero.points > 0 ? "" : 'disabled="disabled"'} data-point="point_c" amount="1" for="add_p_c">+</button>
                                                            <button class="add_point" ${game.CurrentHero.Hero.points > 0 ? "" : 'disabled="disabled"'} data-point="point_c" amount="3" for="add_p_c">3</button>
                                                        </div>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                    <div class="part-5">
                                        <div class="pull-R"><button class="full-btn full-btn-3x return_points_all">${Translate.Button.Hero.Reverse[UserLag.language]}</button></div>
                                        <div class="pull-L"><button class="full-btn full-btn-3x return_points" disabled="disabled">${Translate.Button.Hero.Reset[UserLag.language]}</button></div>
                                        <div class="pull-L"><button class="full-btn full-btn-3x save_points" disabled="disabled">${Translate.Button.Hero.Save[UserLag.language]}</button></div>
                                    </div>
                                    <div class="part-6">
                                         <div class="full-btn full-btn-2x  ${console_class}">${console}</div>
                                    </div>
                                </div>`;
        return middle_content;
    },
    getCurrentArmy: function(hero) {


        return $.ajax({
            url: `${API_URL}/api/AHeroArmy/refreshHeroArmy`,
            data: {
                idHero: hero.Hero.id_hero,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);
                game.Hero.getHero(hero.Hero.id_hero).Army = JsonObject.HeroArmy;

                $("#after-ajax-hero-army").html(Hero.armyReview());
                $("#after-ajax-hero-cap").html(getArabicNumbers(getHeroCap(game.Hero.getHero(hero.Hero.id_hero).Army)) + "/" + getArabicNumbers(getHeroMaxCap(game.Hero.getHero(hero.Hero.id_hero))));
                $("#after-ajax-hero-cap").next(".filak").css("width", (getHeroCap(game.Hero.getHero(hero.Hero.id_hero).Army) * 100 / getHeroMaxCap(game.Hero.getHero(hero.Hero.id_hero))) + "%");

                army.refreshArmy_leftTrade();
                army.refreshArmy_rightTrade();

            },

            error: function(jqXHR, textStatus, errorThrown) {

                console.log(errorThrown);

            }
        });
    },
    refreshArmy_leftTrade: function(army) {
        if (!army)
            army = game.CurrentHero.Army;
        var army_list = `
                        <li class="sol hero_sol dropArmyImage dargOverArmyImage" id="f_1_1" army_place="f_1"  army-type="sol-${army.f_1_type}" data-id-hero="${army.id_hero}" data-drop-place="hero" data-army-place="f_1">
                            <div class="permit-layer"></div>
                            <button class="unit-wrapper armyImageDragToChange" id="cell-1" army-type="sol-${army.f_1_type}" draggable="true" data-id-hero="${army.id_hero}" data-drag-place="hero" data-army-place="f_1">
                               <div class="img-bg" style="background-image: url(images/tech/${army_typs[army.f_1_type]})"></div>
                            </button>
                             
                            <div class="amount ${Fixed.getArmyAmountColor(army.f_1_num)}" amount="${army.f_1_num}">${getArabicNumbers(army.f_1_num)}</div>
                        </li>
                        <li class="sol hero_sol dropArmyImage dargOverArmyImage" id="f_2_1" army_place="f_2"  army-type="sol-${army.f_2_type}" data-id-hero="${army.id_hero}" data-drop-place="hero" data-army-place="f_2">
                            <div class="permit-layer"></div>
                            <button class="unit-wrapper armyImageDragToChange" id="cell-2" army-type="sol-${army.f_2_type}" draggable="true" data-id-hero="${army.id_hero}" data-drag-place="hero" data-army-place="f_2" >
                               <div class="img-bg" style="background-image: url(images/tech/${army_typs[army.f_2_type]})"></div>
                            </button>
                            <div class="amount ${Fixed.getArmyAmountColor(army.f_2_num)}" amount="${army.f_2_num}">${getArabicNumbers(army.f_2_num)}</div>
                        </li>
                        <li class="sol hero_sol dropArmyImage dargOverArmyImage" id="f_3_1" army_place="f_3"  army-type="sol-${army.f_3_type}" data-id-hero="${army.id_hero}" data-drop-place="hero" data-army-place="f_3">
                            <div class="permit-layer"></div>
                            <button class="unit-wrapper armyImageDragToChange" id="cell-3" army-type="sol-${army.f_3_type}" draggable="true" data-id-hero="${army.id_hero}" data-drag-place="hero" data-army-place="f_3">
                               <div class="img-bg" style="background-image: url(images/tech/${army_typs[army.f_3_type]})"></div>
                            </button>
                            <div class="amount ${Fixed.getArmyAmountColor(army.f_3_num)}" amount="${army.f_3_num}">${getArabicNumbers(army.f_3_num)}</div>
                        </li>
                        <li class="sol hero_sol dropArmyImage dargOverArmyImage" id="b_1_1" army_place="b_1"  army-type="sol-${army.b_1_type}" data-id-hero="${army.id_hero}" data-drop-place="hero" data-army-place="b_1">
                            <div class="permit-layer"></div>
                            <button class="unit-wrapper armyImageDragToChange" id="cell-4" army-type="sol-${army.b_1_type}" draggable="true"  data-id-hero="${army.id_hero}" data-drag-place="hero" data-army-place="b_1">
                               <div class="img-bg" style="background-image: url(images/tech/${army_typs[army.b_1_type]})"></div>
                            </button>
                            <div class="amount ${Fixed.getArmyAmountColor(army.b_1_num)}" amount="${army.b_1_num}">${getArabicNumbers(army.b_1_num)}</div>
                         </li>
                        <li class="sol hero_sol dropArmyImage dargOverArmyImage" id="b_2_1" army_place="b_2"  army-type="sol-${army.b_2_type}" data-id-hero="${army.id_hero}" data-drop-place="hero" data-army-place="b_2">
                            <div class="permit-layer"></div>
                            <button class="unit-wrapper armyImageDragToChange" id="cell-5" army-type="sol-${army.b_2_type}" draggable="true"  data-id-hero="${army.id_hero}" data-drag-place="hero" data-army-place="b_2">
                               <div class="img-bg" style="background-image: url(images/tech/${army_typs[army.b_2_type]})"></div>
                            </button>
                            <div class="amount ${Fixed.getArmyAmountColor(army.b_2_num)}" amount="${army.b_2_num}">${getArabicNumbers(army.b_2_num)}</div>
                         </li>
                        <li class="sol hero_sol dropArmyImage dargOverArmyImage" id="b_3_1" army_place="b_3"  army-type="sol-${army.b_3_type}" data-id-hero="${army.id_hero}" data-drop-place="hero" data-army-place="b_3">
                            <div class="permit-layer"></div>
                            <button class="unit-wrapper armyImageDragToChange" id="cell-6" army-type="sol-${army.b_3_type}" draggable="true" data-id-hero="${army.id_hero}" data-drag-place="hero" data-army-place="b_3">
                               <div class="img-bg" style="background-image: url(images/tech/${army_typs[army.b_3_type]})"></div>
                            </button>
                            <div class="amount ${Fixed.getArmyAmountColor(army.b_3_num)}" amount="${army.b_3_num}">${getArabicNumbers(army.b_3_num)}</div>
                        </li>
                            `;


        $("#hero-left-ol").html(army_list);
        $("#A_A_R_Hero_cap").html(getHeroCapById(army.id_hero) + "/" + getHeroMaxCap(game.Hero.getHero(army.id_hero)));

    },
    refreshArmy_rightTrade: function(army) {

        if (!army)
            army = game.NextHero.Army;
        if (!army)
            return;

        var army_list = `
                        <li class="sol hero_sol dropArmyImage dargOverArmyImage" id="f_1_2" army_place="f_1"  army-type="sol-${army.f_1_type}" data-id-hero="${army.id_hero}" data-drop-place="hero" data-army-place="f_1">
                            <div class="permit-layer"></div>
                            <button class="unit-wrapper armyImageDragToChange" id="cell-1-2" army-type="sol-${army.f_1_type}" draggable="true" data-id-hero="${army.id_hero}" data-drag-place="hero" data-army-place="f_1">
                               <div class="img-bg" style="background-image: url(images/tech/${army_typs[army.f_1_type]})"></div>
                            </button>
                            <div class="amount ${Fixed.getArmyAmountColor(army.f_1_num)}" amount="${army.f_1_num}">${getArabicNumbers(army.f_1_num)}</div>
                        </li>
                        <li class="sol hero_sol dropArmyImage dargOverArmyImage" id="f_2_2" army_place="f_2"  army-type="sol-${army.f_2_type}" data-id-hero="${army.id_hero}" data-drop-place="hero" data-army-place="f_2">
                            <div class="permit-layer"></div>
                            <button class="unit-wrapper armyImageDragToChange" id="cell-2-2" army-type="sol-${army.f_2_type}" draggable="true" data-id-hero="${army.id_hero}" data-drag-place="hero" data-army-place="f_2">
                               <div class="img-bg" style="background-image: url(images/tech/${army_typs[army.f_2_type]})"></div>
                            </button>
                            <div class="amount stroke ${Fixed.getArmyAmountColor(army.f_2_num)}" amount="${army.f_2_num}">${getArabicNumbers(army.f_2_num)}</div>
                         </li>
                        <li class="sol hero_sol dropArmyImage dargOverArmyImage" id="f_3_2" army_place="f_3"  army-type="sol-${army.f_3_type}" data-id-hero="${army.id_hero}" data-drop-place="hero" data-army-place="f_3">
                            <div class="permit-layer"></div>
                            <button class="unit-wrapper armyImageDragToChange" id="cell-3-2" army-type="sol-${army.f_3_type}" draggable="true" data-id-hero="${army.id_hero}" data-drag-place="hero" data-army-place="f_3">
                               <div class="img-bg" style="background-image: url(images/tech/${army_typs[army.f_3_type]})"></div>
                            </button>
                            <div class="amount stroke ${Fixed.getArmyAmountColor(army.f_3_num)}" amount="${army.f_3_num}">${getArabicNumbers(army.f_3_num)}</div>
                        </li>
                        <li class="sol hero_sol dropArmyImage dargOverArmyImage" id="b_1_2" army_place="b_1"  army-type="sol-${army.b_1_type}" data-id-hero="${army.id_hero}" data-drop-place="hero" data-army-place="b_1">
                            <div class="permit-layer"></div>
                            <button class="unit-wrapper armyImageDragToChange" id="cell-4-2" army-type="sol-${army.b_1_type}" draggable="true" data-id-hero="${army.id_hero}" data-drag-place="hero" data-army-place="b_1">
                               <div class="img-bg" style="background-image: url(images/tech/${army_typs[army.b_1_type]})"></div>
                            </button>
                            <div class="amount stroke ${Fixed.getArmyAmountColor(army.b_1_num)}" amount="${army.b_1_num}">${getArabicNumbers(army.b_1_num)}</div>
                        </li>
                        <li class="sol hero_sol dropArmyImage dargOverArmyImage" id="b_2_2" army_place="b_2"  army-type="sol-${army.b_2_type}" data-id-hero="${army.id_hero}" data-drop-place="hero" data-army-place="b_2">
                            <div class="permit-layer"></div>
                            <button class="unit-wrapper armyImageDragToChange" id="cell-5-2" army-type="sol-${army.b_2_type}" draggable="true" data-id-hero="${army.id_hero}" data-drag-place="hero" data-army-place="b_2">
                               <div class="img-bg" style="background-image: url(images/tech/${army_typs[army.b_2_type]})"></div>
                            </button>

                             <div class="amount stroke ${Fixed.getArmyAmountColor(army.b_2_num)}" amount="${army.b_2_num}">${getArabicNumbers(army.b_2_num)}</div>
                         </li>
                        <li class="sol hero_sol dropArmyImage dargOverArmyImage" id="b_3_2" army_place="b_3"  army-type="sol-${army.b_3_type}" data-id-hero="${army.id_hero}" data-drop-place="hero" data-army-place="b_3">
                            <div class="permit-layer"></div>
                            <button class="unit-wrapper armyImageDragToChange" id="cell-6-2" army-type="sol-${army.b_3_type}" draggable="true" data-id-hero="${army.id_hero}" data-drag-place="hero" data-army-place="b_3">
                               <div class="img-bg" style="background-image: url(images/tech/${army_typs[army.b_3_type]})"></div>
                            </button>
                            <div class="amount stroke ${Fixed.getArmyAmountColor(army.b_3_num)}" amount="${army.b_3_num}">${getArabicNumbers(army.b_3_num)}</div>
                        </li>
                        `;


        $("#hero-right-ol").html(army_list);
        $("#sec-hero-filak").html(getHeroCapById(Number(army.id_hero)) + "/" + getHeroMaxCap(game.Hero.getHero(army.id_hero)));

    },
    dialogBoxContent_forHeroRight: function(hero) {

        return `   <div id="hero-wrapper">
                        ${this.middle_content(hero)}
                        <div class="right-content">
                             <div class="row row-1">
                                 <div class="medal mid-1">
                                     <img src="images/icons/hero/25_domain.png" class="pull-L" m_type="medal_ceasro"/>
                                     <div class="header-2 pull-R">
                                        ${game.CurrentHero.Medal.medal_ceasro > Date.now() / 1000 ? ` زيادة السيطرة بنسبة ٢٥%  : <span class="time_counter" time-end="${(game.CurrentHero.Medal.medal_ceasro)}"></span>` : ""}
                                     </div>
                                 </div>
                                 <div class="medal mid-2">
                                     <img src="images/icons/hero/25_attack.png" class="pull-L" m_type="medal_den"/> 
                                     <div class="header-2 pull-R">
                                     ${game.CurrentHero.Medal.medal_den > Date.now() / 1000 ? ` زيادة الشجاعة بنسبة ٢٥%  : <span class="time_counter" time-end="${(game.CurrentHero.Medal.medal_den)}"></span>` : ""}
                                     </div>
                                 </div>
                                 <div class="medal mid-3">
                                     <img src="images/icons/hero/25_def.png" class="pull-L" m_type="medal_leo"/>
                                     <div class="header-2 pull-R">
                                         ${game.CurrentHero.Medal.medal_leo > Date.now() / 1000 ? ` زيادة الدفاع بنسبة ٢٥%  : <span class="time_counter" time-end="${(game.CurrentHero.Medal.medal_leo)}"></span>` : ""}
                                     </div>
                                 </div>
                                 <div class="medal mid-4">
                                     <img src="images/icons/hero/ceaser_eagle.png" class="pull-L" m_type="ceaser_eagle"/>
                                     <div class="header-2 pull-R"> 
                                         ${game.CurrentHero.Medal.ceaser_eagle > Date.now() / 1000 ? `زيادة السعة بنسبة ٢٥%  : <span class="time_counter" time-end="${(game.CurrentHero.Medal.ceaser_eagle)}"></span>` : ""}
                                     </div>
                                 </div>
                             </div>
                             <div class="row row-2 equi_preveiw">
                                ${Hero.equipBreview()}
                             </div>
                             <div class="row row-3">
                                 <div class="pull-L col-1">الجنود- الفيلق</div>                       
                                 <div class="pull-L col-2">
                                     <div class="over-text " id="after-ajax-hero-cap">${getHeroCapById(game.CurrentHero.Hero.id_hero) + "/" + getHeroMaxCap(game.CurrentHero)}</div>
                                     <div class="colored-bar filak" style="width: ${Math.min((getHeroCapById(game.CurrentHero.Hero.id_hero) * 100 / getHeroMaxCap(game.CurrentHero)), 100) + "%"}"></div>
                                 </div>
                                 <div class="pull-L col-3">
                                     <div class="pluse add-eagle-to-hero"></div>
                                 </div>
                             </div>
                             <div class="row row-4">
                                 <div class="col-1" id="after-ajax-hero-army">
                                     ${Hero.armyReview()}
                                 </div>
                                 <div class="col-2">
                                         <button class="full-btn full-btn-3x" ${Hero.inBattel(game.CurrentHero) ? "" : "disabled = 'disabled'"}>استعادة</button>
                                 </div>
                             </div>
                         </div>
                    
                    </div>`;


    },
    dialogBoxContent_forHero: function(hero) {

        var hero_content = ` <div  id="hero-dial-over-view" class="box_content hero_dial">
                               ${this.left_content()}
                               ${this.dialogBoxContent_forHeroRight(hero)}
                            </div>`;
        return hero_content;
    },
    dialogBoxContent_forCampRight: function(hero, battel) {

        if (typeof battel !== "undefined") {
            battel_data.x_coord = battel.x_coord;
            battel_data.y_coord = battel.y_coord;
            battel_data.ar_title = battel.ar_title;
            battel_data.task = battel.task;
            battel_data.time = battel.time;
            battel_data.task_title = BATTAL_TASKS[battel.task].ar_title;
            battel_data.type = battel.type;
        }


        return `<div id="hero-wrapper">
                ${this.middle_content(game.CurrentHero)}
                <div class="right-content">
                    <div class="row row-1">
                        <div>
                             <label class="header-2">المهام</label>
                            <select name="target">

                                <option value="${battel_data.task}" selected> ${battel_data.task_title}</option>

                            </select>
                            <label class="header-2">هدف</label>
                            <select name="tasks">
                                <option> ${battel_data.ar_title}</option>
                            </select>
                        </div>
                        <div style="direction: rtl">
                            <label class="header-2"> وقت الارسال:</label> <span id="AFTER_AJAX_ATTACK_TIME">${changeTimeFormat(calAttakTime())}</span>
                        </div>
                        <div style="direction: rtl">
                            <label class="header-2">اعلان:</label> 
                            <input type="checkbox" name="friend" value="ON" />
                            <label class="header-2">الاصدقاء</label> 
                            <input type="checkbox" name="friend" value="ON" />
                            <label class="header-2">${Translate.Button.Chat.League[UserLag.language]}</label> 
                        </div>
                        <h1 class="header-2">شروط الانسحاب</h1>
                        <div style="direction: rtl">
                            <div>
                                <input type="checkbox" name="friend" value="ON" />
                                <label class="header-2">انتهاء كل قواتك</label> 
                            </div>
                            <div>
                                <input type="checkbox" name="friend" value="ON" />
                                <label class="header-2">انتهاء نسبة من قواتك</label> 
                            </div>
                        </div>
                    </div>
                    <div class="row row-2 equi_preveiw">
                        ${Hero.equipBreview()}
                    </div>
                    <div class="row row-3">
                        <div class="pull-L col-1">الجنود- الفيلق</div>                       
                        <div class="pull-L col-2">
                            <div class="over-text "> ${(getHeroCapById(game.CurrentHero.Hero.id_hero))}/${(getHeroMaxCap(game.CurrentHero))}</div>
                            <div class="colored-bar filak" style="width:${getHeroCapById(game.CurrentHero.Hero.id_hero) * 100 / getHeroMaxCap(game.CurrentHero)}%"></div>
                        </div>
                        <div class="pull-L col-3">
                            <div class="pluse add-eagle-to-hero"></div>
                        </div>
                    </div>
                    <div class="row row-4">
                        <div class="col-1" id="after-ajax-hero-army">
                          ${Hero.armyReview()}
                        </div>
                        <div class="col-2">
                              <button class="full-btn full-btn-3x enter" id="start_battel"  ${ Hero.readyForBattel() ? "" : "disabled='disabled'"}>${Translate.Button.Hero.Launch[UserLag.language]}</button>
                              <button id="confirm_battel"  ${ Hero.readyForBattel() ? "" : "disabled='disabled'"}></button>
                        </div>
                    </div>
                </div>
                 </div>`;
    },
    dialogBoxContent_forCamp: function(hero, battel) {




        var camp_content = `<div class="box_content hero_dial" id="hero-dial-camp">
                                ${this.left_content()}
                                ${this.dialogBoxContent_forCampRight(hero, battel)}
                            </div>`;
        return camp_content;
    },
    rightTrade: function(sec_hero) {

        if (!sec_hero) {
            return;
        }
        game.NextHero = sec_hero;
        var state = '<img src="images/icons/h_s_incity.png" class="img-sml pull-R " >';
        var state_ar_title = "فى المدينة";
        if (parseInt(sec_hero.Hero.id_hero) === game.CurrentCity.City.console) {

            state = '<img src="images/icons/h_s_console.png"  class="pull-R">';
            state_ar_title = "قنصل المدينة";

        } else if (parseInt(sec_hero.Hero.in_city) === game.Hero.HeroState.HERO_IN_BATTEL) {

            state = '<img src="images/icons/h_s_attack_2.png"  class="img-sml pull-R">';
            state_ar_title = "يهاجم";

        } else if (Number(sec_hero.Hero.in_city) === game.Hero.HeroState.HERO_IN_GARISON) {

            state = '<img src="images/icons/h_s_support.png" class="img-sml pull-R">';
            state_ar_title = "حراسة";
        }



        var right = `
                    <div class="part-1 flex">
                        <div class="hero_img pull-L">
                            <img class="img-mid" src ="${game.BaseData.HeroAvatar[game.NextHero.Hero.avatar]}"/>
                            <div class="hero_lvl-box">
                                   ${(game.NextHero.Hero.lvl)}
                            </div>
                        </div>
                        <div class="hero-data pull-L">
                            <div class="upper">
                                 <div class="pull-R" style="background-color: red; ">

                                </div>
                                <div class="pull-R">
                                    <div id="selected_hero">
                                        <span  ${game.NextHero.Hero.ultra_p > 0 ? "class='POT-HERO'" : ""}>${game.NextHero.Hero.name}</span>
                                        <span class="pull-R" style="margin-right: 3px; margin-top: 1px; display:block"><img src="images/btns/down.png" style=" height: 17px;"/></span>
                                    </div>
                                    <div id="select_hero" class="select_option" id_hero="${game.NextHero.Hero.id_hero}">
                                        <ol>

                                        </ol>
                                    </div>                    
                                </div> 
                            </div>
                            <hr/>
                            <div class="bottom flex">
                                <div class="state-hero flex">
                                    <span class="header-2">${state_ar_title}</span>
                                    ${state}
                                </div>
                                <div class="train btn-sml pull-R">
                                    <button class="full-btn full-btn-3x"> ${Translate.Button.Hero.Exercise[UserLag.language]}</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="part-2 hero-2">
                        <ol style="direction: rtl; clear: both">
                            <li><div class="header-2">القوة البدنية</div> <div class="header-2">${game.NextHero.Hero.power}/${getMaxPower(game.NextHero.Hero.lvl)}</div></li>
                            <li><div class="header-2">الجنود - الفيلق</div><div class="header-2"  id="sec-hero-filak">${getHeroCap(game.NextHero.Army)}/${getHeroMaxCap(game.NextHero)}</div></li>
                            <li><div class="header-2">قوة السيطرة</div><div class="header-2 ltr">
                                   ${(parseInt(game.NextHero.Hero.point_a) + Math.ceil(game.NextHero.Medal.medal_ceasro > Date.now() / 1000 ? (game.NextHero.Hero.point_a * 25 / 100) : 0))} + ${sec_hero.Hero.point_a_plus}</div></li>
                            <li><div class="header-2">الشجاعة</div><div class="header-2 ltr">
                                   ${(parseInt(sec_hero.Hero.point_b) + Math.ceil(sec_hero.Medal.medal_den > Date.now() / 1000 ? (sec_hero.Hero.point_b * 25 / 100) : 0))} + ${sec_hero.Hero.point_b_plus}</div></li>
                            <li><div class="header-2"> الدفاع</div><div class="header-2 ltr">
                                   ${(parseInt(sec_hero.Hero.point_c) + Math.ceil(sec_hero.Medal.medal_leo > Date.now() / 1000 ? (sec_hero.Hero.point_c * 25 / 100) : 0))} + ${sec_hero.Hero.point_c_plus}</div></li>    
                        </ol>
                    </div>
                    <div class="row row-4 army_container" id_hero="${game.NextHero.Army.id_hero}"  army="hero">
                        <div class="col-1 full">
                            <ol id="hero-right-ol">

                            </ol>
                        </div>
                    </div>
                `;

        $("#after-call-rightTrade").html(right);
        this.getCurrentArmy(game.NextHero);




    },
    dialogBoxContent_forHeroTradeRight: function(hero_sec) {

        var state = '<img src="images/icons/h_s_incity.png" class="img-sml pull-R" >';
        var state_ar_title = "فى المدينة";
        if (parseInt(game.CurrentHero.Hero.id_hero) === game.CurrentCity.City.console) {

            state = '<img src="images/icons/h_s_console.png"  class="pull-R">';
            state_ar_title = "قنصل المدينة";

        } else if (parseInt(game.CurrentHero.Hero.in_city) === game.Hero.HeroState.HERO_IN_BATTEL) {

            state = '<img src="images/icons/h_s_attack_2.png"  class="img-sml pull-R">';
            state_ar_title = "يهاجم";

        } else if (Number(game.CurrentHero.Hero.in_city) === game.Hero.HeroState.HERO_IN_GARISON) {

            state = '<img src="images/icons/h_s_support.png" class="img-sml pull-R">';
            state_ar_title = "حراسة";
        }
        return `
                        <div id="hero-wrapper">
                            <div class="middle-content">
                                <div class="part-1 flex">
                                    <div class="hero_img pull-L">
                                        <img class="img-mid" src ="${game.BaseData.HeroAvatar[game.CurrentHero.Hero.avatar]}"/>
                                        <div class="hero_lvl-box">
                                           ${getArabicNumbers(game.CurrentHero.Hero.lvl)}
                                        </div>
                                    </div>
                                    <div class="hero-data pull-L">
                                        <div class="upper">
                                            <div class="pull-L"></div>
                                            <div class="pull-R">
                                                   ${game.CurrentHero.Hero.name}
                                            </div>
                                        </div>
                                        <hr/>
                                        <div class="bottom flex">
                                            <div class="state-hero flex">
                                                <span class="header-2">${state_ar_title}</span>
                                                ${state}
                                            </div>
                                            <div class="train btn-sml pull-R">
                                                <button class="full-btn"> ${Translate.Button.Hero.Exercise[UserLag.language]}</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="part-2 hero-1">
                                    <ol style="direction: rtl; clear: both">
                                        <li><div class="header-2">القوة البدنية</div> <div class="header-2">${game.CurrentHero.Hero.power}/${getMaxPower(game.CurrentHero.Hero.lvl)}</div></li>
                                        <li><div class="header-2">الجنود - الفيلق</div><div class="header-2" id="A_A_R_Hero_cap">${getHeroCap(game.CurrentHero.Army)}/${getHeroMaxCap(game.CurrentHero)}</div></li>
                                        <li><div class="header-2">قوة السيطرة</div><div class="header-2 ltr">
                                            ${parseInt(game.CurrentHero.Hero.point_a) + Math.ceil(game.CurrentHero.Medal.medal_ceasro > Date.now() / 1000 ? (game.CurrentHero.Hero.point_a * 25 / 100) : 0)} + ${game.CurrentHero.Hero.point_a_plus}</div></li>
                                        <li><div class="header-2">الشجاعة</div><div class="header-2 ltr">
                                            ${parseInt(game.CurrentHero.Hero.point_b) + Math.ceil(game.CurrentHero.Medal.medal_den > Date.now() / 1000 ? (game.CurrentHero.Hero.point_b * 25 / 100) : 0)} + ${game.CurrentHero.Hero.point_b_plus}</div></li>
                                        <li><div class="header-2"> الدفاع</div><div class="header-2 ltr">
                                            ${parseInt(game.CurrentHero.Hero.point_c) + Math.ceil(game.CurrentHero.Medal.medal_leo > Date.now() / 1000 ? (game.CurrentHero.Hero.point_c * 25 / 100) : 0)} + ${game.CurrentHero.Hero.point_c_plus}</div></li>    
                                    </ol>
                                </div>
                                <div class="row row-4 army_container" id_hero="${game.CurrentHero.Hero.id_hero}"  army="hero">
                                    <div class="col-1 full">
                                        <ol id="hero-left-ol">
                                         
                                        </ol>
                                    </div>
                                </div>
                            </div>
                            <div class="mid-of-mid pull-L">
                                <div class="trade-btns">
                                    <div class="trade">
                                        <button  id="swap_army"></button>
                                    </div>
                                    <div class="down">
                                        <button  id="left-down" id_hero = "${game.CurrentHero.Hero.id_hero}"></button>
                                        <button  id="right-down" id_hero = "${game.NextHero !== null ? game.NextHero.Hero.id_hero : -1}"></button>
                                    </div>
                                </div>
                            </div>
                            <div class="right-content" id="after-call-rightTrade"> 
                                
                            </div>
                               
                            <div id="down-trade-army" class="down-trade army_container" army="city">
                                ${this.downTradeArmy()}
                            </div>
                        </div>`;
    },
    dialogBoxContent_forHeroTrade: function(hero_sec) {



        var heroTrade = `<div class="box_content hero_dial for_trade">
                            ${this.left_content()}
                            ${this.dialogBoxContent_forHeroTradeRight(hero_sec)}
                        </div>`;
        return heroTrade;
    },
    downTradeArmy() {
        return `<ul>
                    <li class="sol dropArmyImage dargOverArmyImage"  id="d_1" army-type="sol-1" data-drop-place="city" data-army-place="army_a">
                        <div class="permit-layer"></div>
                        <button class="sol-down img armyImageDragToChange" id="sol-1" army-type="sol-1" draggable="true" data-drag-place="city" data-army-place="army_a">
                            <div class="img-bg" style="background-image: url(images/tech/soldier01.jpg)"></div>
                        </button>
                        <div class="amount stroke ${Fixed.getArmyAmountColor(game.CurrentCity.City.army_a)}" amount="${game.CurrentCity.City.army_a}">${game.CurrentCity.City.army_a}</div>
                    </li>
                    <li class="sol dropArmyImage dargOverArmyImage"  id="d_2"  army-type="sol-2" data-drop-place="city" data-army-place="army_b">
                        <div class="permit-layer"></div>
                        <button class="sol-down img armyImageDragToChange" id="sol-2" army-type="sol-2" draggable="true" data-drag-place="city" data-army-place="army_b">
                             <div class="img-bg" style="background-image: url(images/tech/soldier02.jpg)"></div>
                        </button>
                        <div class="amount stroke ${Fixed.getArmyAmountColor(game.CurrentCity.City.army_b)}" amount="${game.CurrentCity.City.army_b}">${game.CurrentCity.City.army_b}</div>
                    </li>
                    <li class="sol dropArmyImage dargOverArmyImage"  id="d_3"  army-type="sol-3"  data-drop-place="city" data-army-place="army_c">
                        <div class="permit-layer"></div>
                        <button class="sol-down img armyImageDragToChange" id="sol-3" army-type="sol-3" draggable="true" data-drag-place="city" data-army-place="army_c">
                             <div class="img-bg" style="background-image: url(images/tech/soldier03.jpg)"></div>
                        </button>
                        <div class="amount stroke ${Fixed.getArmyAmountColor(game.CurrentCity.City.army_c)}" amount="${game.CurrentCity.City.army_c}">${game.CurrentCity.City.army_c}</div>
                    </li>
                    <li class="sol dropArmyImage dargOverArmyImage"  id="d_4"  army-type="sol-4"  data-drop-place="city" data-army-place="army_d">
                        <div class="permit-layer"></div>
                        <button class="sol-down img armyImageDragToChange" id="sol-4" army-type="sol-4" draggable="true" data-drag-place="city" data-army-place="army_d">
                             <div class="img-bg" style="background-image: url(images/tech/soldier04.jpg)"></div>
                        </button>
                        <div class="amount stroke ${Fixed.getArmyAmountColor(game.CurrentCity.City.army_d)}" amount="${game.CurrentCity.City.army_d}">${game.CurrentCity.City.army_d}</div>
                    </li>
                    <li class="sol dropArmyImage dargOverArmyImage"  id="d_5"  army-type="sol-5"  data-drop-place="city" data-army-place="army_e">
                        <div class="permit-layer"></div>
                        <button  class="sol-down img armyImageDragToChange" id="sol-5" army-type="sol-5" draggable="true" data-drag-place="city" data-army-place="army_e">
                             <div class="img-bg" style="background-image: url(images/tech/soldier05.jpg)"></div>
                        </button>
                        <div class="amount stroke ${Fixed.getArmyAmountColor(game.CurrentCity.City.army_e)}" amount="${game.CurrentCity.City.army_e}">${game.CurrentCity.City.army_e}</div>
                    </li>
                    <li class="sol dropArmyImage dargOverArmyImage"  id="d_6"  army-type="sol-6" data-drop-place="city" data-army-place="army_f">
                        <div class="permit-layer"></div>
                        <button class="sol-down img armyImageDragToChange"  id="sol-6" army-type="sol-6" draggable="true" data-drag-place="city" data-army-place="army_f">
                            <div class="img-bg" style="background-image: url(images/tech/soldier06.jpg)"></div>
                        </button>
                        <div class="amount stroke ${Fixed.getArmyAmountColor(game.CurrentCity.City.army_f)}" amount="${game.CurrentCity.City.army_f}">${game.CurrentCity.City.army_f}</div>
                    </li>
                </ul>`;
    },
    'getEquipList': function(_0x54ba51, _0x3318e8) {
        isNaN(_0x54ba51) && (_0x54ba51 = 0x0);
        typeof _0x3318e8 != 'string' && (_0x3318e8 = 'all');
        var _0x31720f = 0x0,
            _0x2b41e5 = '';
        for (var _0x487090 in game['DPlayer']['Equip'])
            if ((_0x3318e8 === game['DPlayer']['Equip'][_0x487090]['part'] || _0x3318e8 === 'all') && !game['DPlayer']['Equip'][_0x487090]['id_hero'])
                _0x31720f++;
        for (var _0x4b0a19 = 0x0, _0x26b7cb = 0x0; _0x26b7cb < 0x18; _0x4b0a19++) {
            var _0x22417d = _0x4b0a19 + _0x54ba51;
            if (game['DPlayer']['Equip'][_0x22417d]) {
                var _0x57ee24 = game['DPlayer']['Equip'][_0x22417d]['type'],
                    _0x50aa77 = game['DPlayer']['Equip'][_0x22417d]['part'],
                    _0x3ff925 = game['DPlayer']['Equip'][_0x22417d]['lvl'];
                if (game['DPlayer']['Equip'][_0x22417d]['id_hero'] > 0x0)
                    continue;
                if (_0x50aa77 != _0x3318e8 && _0x3318e8 != 'all')
                    continue;
                _0x2b41e5 += '<div class=\"unite-eq\">\x0a                                    <button style=\"background-image: url(' + Equipment['getImage'](_0x57ee24, _0x50aa77, _0x3ff925) + ')\" \x0a                                 id_equip =\"' + game['DPlayer']['Equip'][_0x22417d]['id_equip'] + '\" equip_part=\"' + _0x50aa77 + '\"\x0a                                         equip_type=\"' + _0x57ee24 + '\" data-list-part=\"' + _0x3318e8 + '\"\x0a                                         data-offset=\"' + (_0x26b7cb + Number(_0x54ba51)) + '\"\x0a                                         class=\"avail_equip putable-equi equip-unit\" data-equi-part=\"' + _0x50aa77 + '\" data-equi-lvl=\"' + _0x3ff925 + '\" data-equi-type=\"' + _0x57ee24 + '\"\x0a                                        ></button>\x0a                             </div> ';
            } else
                _0x2b41e5 += ' <div class=\"unite-eq\">\x0a                                    <button disabled=\"disabled\" class=\"avail_equip\" style=\"background-image: url(images/icons/hero/eq-bg.png)\"></button>\x0a                                </div>  ';
            _0x26b7cb++;
        }
        var _0x3aabc3 = Math['max'](Math['ceil'](_0x54ba51 / 0x18), 0x1),
            _0x40d73d = Math['floor'](_0x31720f / 0x18);
        $('#navigate-btn .lable')['html'](_0x3aabc3 + '/' + _0x40d73d);
        $('#navigate-btn')['attr']('data-offset', _0x54ba51)
        return _0x2b41e5;
    },
    'HeroEquipUnit': function(Part) {
        return `<div class="EquiUnitWrapper wrapper">
                    <button style="background-image: url(${getEquipData(game['CurrentHero']['Equip'][Part])['image']})" 
                        id="${Part} " equip_part="helmet" id_equip="${getEquipData(game['CurrentHero']['Equip'][Part])['id_equip']}"
                        class="on_equip equip-unit" data-equi-type="${getEquipData(game['CurrentHero']['Equip'][Part])['type']}" 
                        data-equi-lvl="${getEquipData(game['CurrentHero']['Equip'][Part])['lvl']}" data-equi-part="${Part }"></button>
                </div>`;
    },
    'HeroEquip': function() {

        var EquipTab = `<div id="HeroEquipBox" class="equip">
                            <table>
                                <tbody>
                                    <tr>
                                        <td class="eq-helmet">
                                            ${ this.HeroEquipUnit('helmet') }
                                        </td>
                                        <td colspan="2"></td>
                                        <td class="eq-beads">
                                            ${this.HeroEquipUnit('pendant') }
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="eq-neck">
                                            ${this.HeroEquipUnit('necklace') }
                                        </td>
                                        <td colspan="2"></td>
                                        <td class="eq-belt">
                                            ${this.HeroEquipUnit('belt') }
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            ${this.HeroEquipUnit('armor') }
                                        </td>
                                        <td colspan="2"></td>
                                        <td class="eq-ring">
                                            ${this.HeroEquipUnit('ring') }
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="eq-boot">
                                            ${this.HeroEquipUnit('boot') }
                                        </td>
                                        <td class="eq-sword">
                                            ${this.HeroEquipUnit('sword') }
                                        </td>
                                        <td class="eq-shield">
                                            ${this.HeroEquipUnit('shield') }
                                        </td>
                                        <td class="eq-horse">
                                            ${this.HeroEquipUnit('steed') }
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>`;

        $('#HeroEquipBox').replaceWith(EquipTab);

        return EquipTab;
    },
    'dialogBoxContent_forEquiRight': function() {
        var EquipList = this['getEquipList']();
        return `<div id="hero-wrapper">
                    <div class="middle-content">
                        <div class="part-1 hero-name">
                            <h1 class="header-2 banner-red">${ game['CurrentHero']['Hero']['name'] }</h1>
                        </div>
                        ${ this.HeroEquip() }
                        <div class="row row-4">
                            <div class="col-1 full" id="after-ajax-hero-army">
                               ${ Hero['armyReview']() }
                            </div>
                        </div>
                    </div>
                    <div class="right-content blue-ribbon"> 
                        <div  id="eq-part-select"  class="eq-select-bar">
                            <ul>
                                <li class="selected">
                                    <button data-equi-part="all" class="eq-unit-select" style="background-image: url(images/icons/hero/eq-list-all.png)"></button>
                                </li>
                                <li>
                                    <button data-equi-part="sword" class="eq-unit-select" style="background-image: url(images/icons/hero/eq-list-sword.png)"></button>
                                </li>
                                <li>
                                    <button data-equi-part="shield" class="eq-unit-select" style="background-image: url(images/icons/hero/eq-list-shield.png)"></button>
                                </li>
                                <li>
                                    <button data-equi-part="helmet" class="eq-unit-select" style="background-image: url(images/icons/hero/eq-list-helmet.png)"></button>
                                </li>
                                <li>
                                    <button data-equi-part="armor" class="eq-unit-select" style="background-image: url(images/icons/hero/eq-list-armor.png)"></button>
                                </li>
                                <li>
                                    <button data-equi-part="belt" class="eq-unit-select" style="background-image: url(images/icons/hero/eq-list-belt.png)"></button>
                                </li>
                                <li>
                                    <button data-equi-part="ring" class="eq-unit-select" style="background-image: url(images/icons/hero/eq-list-ring.png)"></button>
                                </li>
                                <li>
                                    <button data-equi-part="necklace" class="eq-unit-select" style="background-image: url(images/icons/hero/eq-list-necklase.png)"></button>
                                </li>
                                <li>
                                    <button data-equi-part="boot" class="eq-unit-select" style="background-image: url(images/icons/hero/eq-list-boot.png)"></button>
                                </li>
                                <li>
                                    <button data-equi-part="pendant" class="eq-unit-select" style="background-image: url(images/icons/hero/eq-list-meskah.png)"></button>
                                </li>
                                <li>
                                    <button data-equi-part="steed" class="eq-unit-select" style="background-image: url(images/icons/hero/eq-list-horse.png)"></button>
                                </li>
                            </ul>
                        </div>
                        <div id="equip-list-heroDia" class="all-eq-table">
                            ${ EquipList }
                        </div>
                        <div id="navigate-btn">
                            <div class="wrapper">
                                <div class="left">
                                    <button  class="GO_L_1 go-one-page-eq-left"></button>
                                </div>
                                <div class="lable">
                                    1/${ Math['floor'](game['DPlayer']['Equip']['filter'](function (Hero) {
                                                return !Hero['id_hero'];
                                            })['length'] / 24) }
                                </div>
                                <div class="right">
                                    <button class="GO_R_1 go-one-page-eq-right"></button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>`;
    },
    'dialogBoxContent_forEqui': function() {
        var Box = `<div  id="hero-dial-equip" class="box_content hero_dial hero-equip">
                            ${ this['left_content']() }  
                            ${ this['dialogBoxContent_forEquiRight']() }
                        </div>`;
        return Box;
    },
    dialogBoxContent_forHeroLearnRight: function(hero) {

        return `
                <div id="hero-wrapper">
                    ${this.middle_content(hero)}
                    <div class="right-content learn_hero">
                        <div class="row row-1">
                            <p>
                                 بعد اختيار احدى صفات البطل  ( الشجاعة , قوة السيطرة , الدفاع)
                                 التى تريد تطويرها عليك اختيار نوع الميدالية ثم اضغط تعليم
                                 لانهاء العملية لكل نوع من الميداليات  نسب مختلفة من النجح والفشل
                            </p>
                            <ul>
                                <li>    
                                    <input id="trigger_1" type="radio" name="point_plus_for" checked="true"  value="point_a_plus">
                                    <label for="trigger_1" class="checker"></label>
                                    <span> قوة السيطرة</span>
                                </li>
                                <li>    
                                    <input id="trigger_2" type="radio" name="point_plus_for"  value="point_b_plus">
                                    <label for="trigger_2" class="checker"></label>
                                    <span> الشجاعة</span>
                                </li>
                                <li>    
                                    <input id="trigger_3" type="radio" name="point_plus_for"  value="point_c_plus">
                                    <label for="trigger_3" class="checker"></label>
                                    <span> الدفاع</span>
                                </li>
                            </ul>
                        </div>
                        <div class="row row-2">
                            <div class="max-point">
                                <h1>
                                    اقصى عدد نقاط للسيطرة: ١٠ نقاط
                                </h1>
                                <h1>
                                    اقصى عدد نقاط للشجاعة: ١٠ نقاط
                                </h1>
                                <h1>
                                    اقصى عدد نقاط للدفاع: ١٠ نقاط
                                </h1>

                            </div>
                            <div class="promotion">
                                <div class="th ellipsis">${Translate.Title.TH.RquiredNobleRank[UserLag.language]}</div>
                                <div class="trow bg-btn-blu" id="req_for_medal">قسطور</div>
                                <div class="th ellipsis">${Translate.Title.TH.CurrentNobleRank[UserLag.language]}</div>
                                <div class="trow bg-btn-blu" >${game.BaseData.Promotion[game.DPlayer.Player.porm].Title}</div>
                            </div>
                        </div>
                        <div class="row row-3">
                        </div>
                        <div class="row row-4">
                            <div matrial_type="motiv_7" class="matrial_unit">
                                <img src=" images/style/Border-up.png" class="border_up">
                                <div class="img-inside-box">
                                    <div class="player_amount">
                                        <img src="images/icons/shopQuantityBG.png">
                                        <p id="medal_amount_player">${getArabicNumbers(Matrial.getPlayerAmount("medal_bronz"))}</p>
                                    </div>
                                    <img id="medal_image" src="${game.BaseData.Items['medal_bronz'].image}" class="big-img">

                                </div>
                            </div>
                            <div class="col-2">
                                <ul>
                                    <li>    
                                        <input id="use_coper_med" type="radio" name="used_meddal" class="check-for-medal" checked="true" value="medal_bronz">
                                        <label for="use_coper_med" class="checker"></label>
                                        <span>استعمال ١٠ ميداليات نحاسية</span>
                                    </li>
                                    <li>    
                                        <input id="use_silver_med" type="radio" name="used_meddal" class="check-for-medal"  value="medal_silver">
                                        <label for="use_silver_med" class="checker"></label>
                                        <span>استعمال ١٠ ميداليات فضية</span>
                                    </li>
                                    <li>    
                                        <input id="use_golden_med" type="radio" name="used_meddal" class="check-for-medal"   value="medal_gold">
                                        <label for="use_golden_med" class="checker"></label>
                                        <span>استعمال ١٠ ميداليات ذهبية</span>
                                    </li>
                                </ul>
                            </div>
                        </div>
                        <div class="row row-5">
                            <button  class="full-btn full-btn-3x" id="learn-hero-point">${Translate.Button.Hero.Educate[UserLag.language]}</button>
                        </div>
                    </div>
                </div>`;
    },
    dialogBoxContent_forHeroLearn: function(hero) {

        var camp_content = `<div class="box_content hero_dial">
                                ${this.left_content()}
                                ${this.dialogBoxContent_forHeroLearnRight(hero)}
                            </div>`;
        return camp_content;
    }
};

$(document).on("drop", ".dropArmyImage", function(e) {
    e.preventDefault();
    e.stopPropagation();
    game.HeroArmy.dropArmy(e, this);
});

$(document).on("dragover", ".dargOverArmyImage", function(e) {
    allowDrop(e);
});
$(document).on("dragstart", ".armyImageDragToChange", function(e) {

    game.HeroArmy.dragArmy(e, this);
});
$(document).on("dragend", ".armyImageDragToChange", function(e) {
    game.HeroArmy.dragArmyEnd(e, this);
});
/*___________________________clickable nav bar________________________________*/

$(document).on("click", ".left-nav ul  li", function() {

    var head_tite = $(this).attr("head_title");

    switch (head_tite) {
        case "hero":
            var content = army.dialogBoxContent_forHeroRight(game.CurrentHero);
            $("#hero-wrapper").replaceWith(content);
            $(".box_content").attr("class", "box_content hero_dial");
            $(".box_content").attr("id", "hero-dial-over-view");
            break;
        case "trade":
            game.NextHero = null;
            for (var iii in game.DPlayer.Heros) {
                var Hero = game.DPlayer.Heros[iii];
                if (Number(game.CurrentCity.City.id_city) !== Number(Hero.Hero.id_city))
                    continue;
                if (Number(game.CurrentHero.Hero.id_hero) === Number(Hero.Hero.id_hero))
                    continue;
                if (Number(Hero.Hero.in_city) !== 1)
                    continue;
                game.NextHero = Hero;
                break;
            }

            var content = army.dialogBoxContent_forHeroTradeRight();
            $("#hero-wrapper").replaceWith(content);
            $(".box_content").attr("class", "box_content hero_dial for_trade");
            $(".box_content").removeAttr("id");
            army.rightTrade(game.NextHero);
            army.refreshArmy_leftTrade();
            break;

        case "equi":
            var content = army.dialogBoxContent_forEquiRight();
            $("#hero-wrapper").replaceWith(content);
            $(".box_content").attr("class", "box_content hero_dial hero-equip");
            $(".box_content").attr("id", "hero-dial-equip");
            break;

        case "camp":

            var content = army.dialogBoxContent_forCampRight(game.CurrentHero);
            $("#hero-wrapper").replaceWith(content);
            $(".box_content").attr("class", "box_content hero_dial");
            $(".box_content").attr("id", "hero-dial-camp");
            break;
        case "hero_learning":

            var content = army.dialogBoxContent_forHeroLearnRight(game.CurrentHero);
            $("#hero-wrapper").replaceWith(content);
            $(".box_content").attr("class", "box_content hero_dial");
            $(".box_content").removeAttr("id");
            break;
    }

});




// to  swap  army brtween heros





function findMaxNumForArmyBuild(army_type) {
    var army_obj = game.BaseData.Army[army_type];

    var min_num = parseInt(game.CurrentCity.City.food / army_obj.food);

    if (army_obj.coin !== 0 && (game.CurrentCity.City.coin / army_obj.coin) < min_num) {

        min_num = parseInt(game.CurrentCity.City.coin / army_obj.coin);

    }
    if (army_obj.wood !== 0 && (game.CurrentCity.City.wood / army_obj.wood) < min_num) {

        min_num = parseInt(game.CurrentCity.City.wood / army_obj.wood);

    }
    if (army_obj.stone !== 0 && (game.CurrentCity.City.stone / army_obj.stone) < min_num) {

        min_num = parseInt(game.CurrentCity.City.stone / army_obj.stone);

    }
    if (army_obj.metal !== 0 && (game.CurrentCity.City.metal / army_obj.metal) < min_num) {

        min_num = parseInt(game.CurrentCity.City.metal / army_obj.metal);

    }
    if (army_obj.people !== 0 && (game.CurrentCity.City.pop / army_obj.people) < min_num) {

        min_num = parseInt(game.CurrentCity.City.pop / army_obj.people);

    }


    if (army_type === "wall_a" || army_type === "wall_b" || army_type === "wall_c") {
        var total_space = Number(game.CurrentCity.City.wall_a) * 1 +
            Number(game.CurrentCity.City.wall_b) * 3 +
            Number(game.CurrentCity.City.wall_c) * 5;


        min_num = Math.min(Math.max(game.CurrentCity.City.wall_cap - total_space, 0) / army_obj.wall_space, min_num);
    }


    return min_num;
}

// build army




$(document).on("dragover dragenter drop paste", "input, .only_num", function(e) {
    if ($(this).attr("data-pastable") !== "true") {
        e.preventDefault();
        alert_box.failMessage("لا يمكنك النسخ بهذة الطريقة");
    }


});


$(document).on("click", ".build_army", function() {


    var self_ = $(this);
    var army_type = null;
    var building_place = $("#dialg_box .mili_building").attr("data-building-place");
    var image = $(".selected_sol").children("img").attr("src");
    var ar_title = $(".selected_sol").children(".title").html();
    var lvl = $("#dialg_box .mili_building").attr("data-building-lvl");
    var amount = Number($(".sol-2-build-amount").val());
    var dividBy = $("#select-production select").val();

    if (isNaN(amount) || amount < 1) {
        alert_box.confirmMessage("لا يمكنك تجنيد هذة الكمية ");
        return;
    }


    var working_count = 0;
    /*  first get the working count */
    for (var uuu in game.TimedTask.TaskList.Army) {

        if (Number(game.CurrentCity.City.id_city) !== Number(game.TimedTask.TaskList.Army[uuu].id_city))
            continue;
        if (game.TimedTask.TaskList.Army[uuu].place !== building_place)
            continue;
        working_count++;
    }


    if (working_count >= 10 || Number(game.City.getCity().BuildingLvl[building_place]) <= working_count) {
        alert_box.confirmMessage("وصل عدد المتدربين الى اقصى مستوى لا يمكنك تدريب قوات اخرى");
        return;
    }


    $(".sol-2-build").each(function() {
        if ($(this).hasClass("selected_sol")) {
            army_type = $(this).attr("army_type");
        }
    });

    if (army_type === "wall_a" || army_type === "wall_b" || army_type === "wall_c") {
        if (amount > findMaxNumForArmyBuild(army_type)) {
            alert_box.confirmMessage("مساحة الدفاعات داخل السور لا  تكفى للعدد الحالى ");
            return;
        }
    }




    if (game.BaseData.Army[army_type].condetion.place_lvl > game.City.getCity().BuildingLvl[building_place] ||
        game.BaseData.Army[army_type].condetion.lvl > game.DPlayer.PlayerEdu[game.BaseData.Army[army_type].condetion.study]) {
        alert_box.confirmMessage("لا يستوفى هذا المبنى الشروط اللازمة لبناء الجيش");
        return;
    }


    if (army_type === null) {

        alert_box.confirmMessage("عليك اختيار نوع جيش حتى يتم انتاجة");

    } else if (amount > findMaxNumForArmyBuild(army_type)) {

        alert_box.confirmMessage("لا يمكنك انتاج هذا العدد من الجنود");

    } else if (!amount) {

        alert_box.confirmMessage("عليك اختيار عدد  لانتاجة");

    } else {
        var idCity = game.CurrentCity.City.id_city;
        $.ajax({
            url: `${API_URL}/api/AArmyBuild/buildArmy`,
            data: {
                amount: amount,
                armyType: army_type,
                idCity: game.CurrentCity.City.id_city,
                buildingPlace: building_place,
                templePlace: (cityHasType(BUILDING_TYPS.WORSHIP) && Number(game.CurrentCity.City.helper) === 3) ? cityHasType(BUILDING_TYPS.WORSHIP) : false,
                divideBy: dividBy,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {
                self_.attr("disabled", "disabled");
                waitCursor();
            },
            success: function(data, textStatus, jqXHR) {

                self_.removeAttr("disabled");
                unwaitCursor();

                if (isJson(data)) {
                    var json_data = JSON.parse(data);
                } else {
                    alert(data);
                    return;
                }


                if (json_data.state === "ok") {

                    /* calculate the decrease in city resources*/
                    game.City.getCity(idCity).City = json_data.City;
                    city_profile.refresh_resource_view();


                    for (var ii in json_data.armyBatches) {
                        game.TimedTask.TaskList.Army[json_data.armyBatches[ii].id] = json_data.armyBatches[ii];
                    }
                    game.TimedTask.refreshListView();
                    Building.militrayProduction.left(building_place);
                    $(".sol-2-build-amount").val(0);

                } else if (json_data.state === "error_3") {
                    alert_box.failMessage("نوع التقسيم غير معروف");
                } else if (json_data.state === "error_4") {
                    alert_box.failMessage("الكمية غير صحيحة");
                } else if (json_data.state === "error_5") {
                    alert_box.failMessage("الموارد غير كافية");
                } else if (json_data.state === "error_7_1") {
                    alert_box.failMessage("مستوى المبنى غير كافى");
                } else if (json_data.state === "error_7") {
                    alert_box.failMessage("وصل عدد الدفعات الى الحد الاقصى فى المبنى");
                } else if (json_data.state === "error_6_2") {
                    alert_box.failMessage("مستوى الدراسة غير كافى");
                } else {

                    alert_box.confirmMessage("حدث خطأ");

                }



            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });

    }


});


$(document).on("keyup change", ".sol-2-build-amount", function() {
    var army_type = $("#dialg_box .middle-content .selected_sol").attr("army_type");

    if (!army_type) {
        return false;
    }
    $("#dialg_box .leftOfRight .army_req_table .sol-food").html(Math.max(game.BaseData.Army[army_type].food * $(this).val(), game.BaseData.Army[army_type].food));
    $("#dialg_box .leftOfRight .army_req_table .sol-wood").html(Math.max(game.BaseData.Army[army_type].wood * $(this).val(), game.BaseData.Army[army_type].wood));
    $("#dialg_box .leftOfRight .army_req_table .sol-metal").html(Math.max(game.BaseData.Army[army_type].metal * $(this).val(), game.BaseData.Army[army_type].metal));
    $("#dialg_box .leftOfRight .army_req_table .sol-coin").html(Math.max(game.BaseData.Army[army_type].coin * $(this).val(), game.BaseData.Army[army_type].coin));
    $("#dialg_box .leftOfRight .army_req_table .sol-stone").html(Math.max(game.BaseData.Army[army_type].stone * $(this).val(), game.BaseData.Army[army_type].stone));
    $("#dialg_box .leftOfRight .army_req_table .sol-people").html(Math.max(game.BaseData.Army[army_type].people * $(this).val(), game.BaseData.Army[army_type].people));
    $("#dialg_box .leftOfRight .army_req_table .sol-time").html(changeTimeFormat(Math.max(game.BaseData.Army[army_type].time * $(this).val(), game.BaseData.Army[army_type].time)));
});

$(document).on("click", ".acce-army-build", function() {
    var matrial_to_use = [
        "train_acce_30",
        "train_acce_50"
    ];
    if ($(".mili_building").attr("data-building-place") === "wall") {
        matrial_to_use = [
            "wall_acce"
        ];
    }

    var idTask = $(this).attr("data-id-task");
    BoxOfMatrialToUse(matrial_to_use, "army_build_acce", 1, idTask);

});

$(document).on("click", '.cancel-army-build', function() {

    var building_blace = $("#dialg_box .box_header").attr("place");
    var id_work = $(this).parents(".current-working").attr('id_work');
    var self_ = $(this);
    alert_box.confirmDialog("تأكيد الغاء دفعة الانتاج الحالية", function() {
        var idCity = Number(game.CurrentCity.City.id_city);
        $.ajax({
            url: `${API_URL}/api/AArmyBatch/cancelBatch`,
            data: {
                idBatch: id_work,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (isJson(data)) {
                    var jsonData = JSON.parse(data);
                } else {

                    alert(data);

                }


                if (jsonData.state === "ok") {

                    for (var iii in game.TimedTask.TaskList.Army) {
                        var Task = game.TimedTask.TaskList.Army[iii];
                        if (Number(Task.id_city) !== idCity)
                            continue;
                        if (Task.place !== building_blace)
                            continue;
                        delete(game.TimedTask.TaskList.Army[iii])

                    }
                    for (var iii in jsonData.armyBatches) {
                        game.TimedTask.TaskList.Army[jsonData.armyBatches[iii].id] = jsonData.armyBatches[iii];
                    }

                    Building.militrayProduction.left(building_blace);
                    game.City.getCity(idCity).City = jsonData.cityRes;
                    city_profile.refresh_resource_view();

                } else {

                    alert_box.failMessage("حدث خطاء");

                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    });

});



// intraction in hero list
$(document).on("click", ".hero-list .tr", function() {
    /*
     * هنا بقى بخلى البطل هو الى البوكس يتغير عشانة
     */

    if ($(this).attr("id_hero")) {
        $("#city-hero-list .selected").removeClass("selected");
        $(this).addClass("selected");

        var id_hero = parseInt($(this).attr("id_hero"));
        game.CurrentHero = game.Hero.getHero(id_hero);

    } else {
        return;
    }

    /*
     * looping  through nav bar to get the current box content
     */
    var title_head = "hero";
    $(".nav_bar .left-nav li").each(function() {
        if ($(this).hasClass("selected")) {
            title_head = $(this).attr("head_title");
        }
    });
    var scroll = $("#city-hero-list").getNiceScroll(0);
    switch (title_head) {
        case "hero":

            var content = army.dialogBoxContent_forHeroRight(game.CurrentHero);
            $("#hero-wrapper").replaceWith(content);
            army.getCurrentArmy(game.CurrentHero);

            break;

        case "trade":


            var content = army.dialogBoxContent_forHeroTradeRight();
            $("#hero-wrapper").replaceWith(content);
            var idCity = Number(game.CurrentCity.City.id_city);
            for (var iii in game.DPlayer.Heros) {
                var CHero = game.DPlayer.Heros[iii];
                if (Number(CHero.Hero.id_city) !== idCity)
                    continue;
                if (game.CurrentHero.Hero.id_hero !== CHero.Hero.id_hero) {
                    game.NextHero = game.DPlayer.Heros[iii];
                    break;
                }

            }
            army.getCurrentArmy(game.CurrentHero);
            army.rightTrade(game.NextHero);

            break;

        case "equi":

            var content = army.dialogBoxContent_forEquiRight();
            $("#hero-wrapper").replaceWith(content);
            army.getCurrentArmy(game.CurrentHero);
            $('.box_content')['attr']('class', 'box_content hero_dial hero-equip'),
                $('.box_content')['attr']('id', 'hero-dial-equip');
            break;

        case "camp":

            var content = army.dialogBoxContent_forCampRight(game.CurrentHero);
            $("#hero-wrapper").replaceWith(content);
            army.getCurrentArmy(game.CurrentHero);
            getHeroEquip(game.CurrentHero.Hero.id_hero);
            break;

        case "hero_learning":


            $("#hero-wrapper").replaceWith(army.dialogBoxContent_forHeroLearnRight(game.CurrentHero));
            break;
    }


    var sc = scroll.getScrollTop();
    // scroll.remove();
    //$("#city-hero-list").niceScroll(SCROLL_BAR_PROP).setScrollTop(sc);

});




/*_________________________________________hero_up_lvl_____________________*/
/*______________________________عشان اعلى اليفل بتاع البطل_________________*/

$(document).on("click", ".hero_up_lvl", function() {
    var id_hero = game.CurrentHero.Hero.id_hero;
    var lvl = parseInt(game.CurrentHero.Hero.lvl);
    var idCity = game.CurrentCity.City.id_city;

    if (!heroAvailableForTask(id_hero)) {

        return;
    }


    if (getReqHeroXp(game.CurrentHero.Hero.lvl) > game.CurrentHero.Hero.exp) {
        alert_box.confirmMessage("لا توجد خبرة كافية مع البطل");
        return;
    }

    /**
     * هنا انا  بعمل تطوير للبطل ببعت اليفل والاى دى
     * وهو بيجيب من الداتا بيز البطل المطابق للمواصفات دى لو  حد فكر يلعب فى الليفل او البطل 
     * كدة مش هيحصل تطابق فى البطل الى فى الداتا بيز
     */
    $.ajax({
        url: `${API_URL}/api/AHero/upgradeHeroLvl`,
        data: {
            idHero: id_hero,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (isJson(data)) {
                var json_data = JSON.parse(data);
            } else {
                alert(data);
                return;
            }

            if (json_data.state === "ok") {
                game.Hero.getHero(id_hero).Hero = json_data.Hero;
                game.City.getCity(idCity).City = json_data.City;

                $('.hero-profile').replaceWith(army.middle_content(game.CurrentHero));
                $("#city-hero-list").html(army.hero_list());
                $("#city-hero-list").niceScroll(SCROLL_BAR_PROP);
                alert_box.succesMessage("نم تطوير البطل بنجاح");

                city_profile.refresh_hero_view();
                city_profile.refresh_resource_view();

            } else {
                alert(data);
            }


        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });
});



/*
 *هزو الخبرة  بتاعة البطل  
 */
$(document).on("click", ".add_xp", function() {



    var matrial = ["exp_hero_8", "exp_hero_30", "exp_hero_100"];
    BoxOfMatrialToUse(matrial, "add_xp");

});




/*
 *هزو طاقة البطل  
 */
$(document).on("click", ".add_power", function() {

    var matrial = ["bread", "fruit", "milk", "meat"];
    BoxOfMatrialToUse(matrial, "add_power");

});




/*
 *هزو ولاء البطل  
 */
$(document).on("click", ".add_loy", function() {

    var matrial = ["luxury_1", "luxury_2", "luxury_3", "luxury_4",
        "luxury_5", "luxury_6", "luxury_7", "luxury_8", "luxury_9"
    ];
    BoxOfMatrialToUse(matrial, "add_loy");

});

/*
 * عشان اقفل البوكس والغى الشاشة السودة
 */
$(document).on("click", ".close_use_menu", function() {
    $("#over_lay").remove();
});
/*
 * عشان اقفل البوكس والغى الشاشة السودة
 */
$(document).on("click", ".close_select_menu", function() {
    $(".select_over_lay").remove();
});

/*
 * هنا بقى لما اضغط على  باتون الاستعمال  بتاع المتريل للبطل بس 
 * اول حاجة هجيب نوع الاستعامل  يعنى للطاقة ولا الولاء ولا الخبرة
 * وهجيب نوع المتريل 
 */

$(document).on("click", ".use_matrial_hero", function() {

    var matrial_name = $(this).attr("matrial_name");
    var use_for = $(this).attr("use_for");
    var amount = $(this).attr("amount");
    var other = $(this).attr("data-other");
    var title = `تأكيد استعمال ${getArabicNumbers(amount)} ${game.BaseData.Items[matrial_name].name} من  صندوق المواد الخاص`;
    var content = alert_box.confirmUse_single(use_for, matrial_name, title, other);
    var alert = alert_box.alert(Translate.Button.Building.Confirm[UserLag.language], content);

    $("body").append(alert);

});





/*
 *  USER wants to add  points to hero
 */
$(document).on("keydown", ".add_point", function(event) {
    if (event.keyCode === 13 || event.keyCode === 32) {
        // Cancel the default action, if needed
        event.preventDefault();
        // Trigger the button element with a click
        $(this).click();
    }

});
$(document).on("click", ".add_point", function() {
    var amount = Number($(this).attr("amount"));
    var point_for = $(this).attr("for");
    var heroPoint = $(this).attr("data-point");
    var old_amount = game.CurrentHero.Hero.points;
    game.CurrentHero.Hero[point_for] += amount;

    if (heroPoint === "point_a" && !Hero.traitPointAOk(game.CurrentHero)) {
        alert_box.confirmMessage("لا يمكن ان تكون نقاط السيطرة طاغية على باقى السمات");
        game.CurrentHero.Hero[point_for] -= amount;
        return;
    } else if (heroPoint === "point_b" && !Hero.traitPointBOk(game.CurrentHero)) {
        alert_box.confirmMessage("لا يمكن ان تكون نقاط الشجاعة طاغية على باقى السمات");
        game.CurrentHero.Hero[point_for] -= amount;
        return;
    } else if (heroPoint === "point_c" && !Hero.traitPointCOk(game.CurrentHero)) {
        alert_box.confirmMessage("لا يمكن ان تكون نقاط الدفاع  طاغية على باقى السمات");
        game.CurrentHero.Hero[point_for] -= amount;
        return;
    }

    if ((old_amount > 2 && amount === 3) || (old_amount > 0 && amount === 1)) {

        game.CurrentHero.Hero.points -= amount;

        $(".part-4 tr:first-child td:nth-child(2)").html(getArabicNumbers(game.CurrentHero.Hero.points));
        $(".part-4 tr:first-child td:nth-child(2)").attr("p-num", game.CurrentHero.Hero.points);

        /* secound decrement the crorespond value*/
        var old_point = parseInt($(this).parent(".pull-R").prev(".pull-L").children(".pull-L").attr("p-num"));
        $(this).parent(".pull-R").prev(".pull-L").children(".pull-L").html(getArabicNumbers(old_point + amount));
        $(this).parent(".pull-R").prev(".pull-L").children(".pull-L").attr("p-num", (old_point + amount));

        /*
         * third change point in object 
         * add_p_a
         * add_p_b 
         * add_p_c 
         */

        /*third move disable attribuite  from the  button of save and retrive point*/
        $(".return_points").removeAttr("disabled");
        $(".save_points").removeAttr("disabled");
    }




    /* ها عشان   لو دول اخر نقط هو بيضيفها*/

    if (parseInt($(".part-4 tr:first-child td:nth-child(2)").attr("p-num")) <= 0) {
        $(".add_point").attr("disabled", "disabled");
    } else if (parseInt($(".part-4 tr:first-child td:nth-child(2)").attr("p-num")) <= 2) {
        $(".add_point[amount=3]").attr("disabled", "disabled");
    }

});

/*
 *  هرجع النقط  تانى لو اللاعب ماتكاش على حفظ النقط
 */

$(document).on("click", ".return_points", function() {
    var total_points = game.CurrentHero.Hero.add_p_a + game.CurrentHero.Hero.add_p_b + game.CurrentHero.Hero.add_p_c;


    $(".domain-point .point:first").attr("p-num", game.CurrentHero.Hero.point_a);
    $(".attack-point .point:first").attr("p-num", game.CurrentHero.Hero.point_b);
    $(".def-point    .point:first").attr("p-num", game.CurrentHero.Hero.point_c);

    /* second we chang point in html*/
    $(".part-4 tr:first-child td:nth-child(2)").html(game.CurrentHero.Hero.points);

    game.CurrentHero.Hero.add_p_a = 0;
    game.CurrentHero.Hero.add_p_b = 0;
    game.CurrentHero.Hero.add_p_c = 0;

    $(".part-4 tr:nth-child(2) .point:first-child").html(game.CurrentHero.Hero.point_a);
    $(".part-4 tr:nth-child(3) .point:first-child").html(game.CurrentHero.Hero.point_b);
    $(".part-4 tr:nth-child(4) .point:first-child").html(game.CurrentHero.Hero.point_c);

    /*disable buttons*/
    $(".save_points").attr("disabled", "disabled");
    $(".return_points").attr("disabled", "disabled");
});

/*  when the save point button clicked*/
$(document).on("click", ".save_points", function() {


    /* disable button to prevent problems*/
    $(this).attr("disabled", "disabled");
    $(".return_points").attr("disabled", "disabled");

    var total_points = game.CurrentHero.Hero.add_p_a + game.CurrentHero.Hero.add_p_b + game.CurrentHero.Hero.add_p_c;
    var idCity = game.CurrentCity.City.id_city;
    var idHero = game.CurrentHero.Hero.id_hero;

    if (total_points > 0) {
        $.ajax({
            url: `${API_URL}/api/AHero/setHeroPoints`,
            data: {
                pointA: game.CurrentHero.Hero.add_p_a,
                pointB: game.CurrentHero.Hero.add_p_b,
                pointC: game.CurrentHero.Hero.add_p_c,
                idHero: game.CurrentHero.Hero.id_hero,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (isJson(data)) {
                    var json_data = JSON.parse(data);
                } else {
                    alert(data);
                    return;
                }

                if (json_data.state === "ok") {
                    /* change hero point in global obj*/
                    game.City.getCity(idCity).City = json_data.CityRes;
                    game.Hero.getHero(idHero).Hero = json_data.Hero;

                    $("#city-hero-list .selected").click();
                    city_profile.refresh_resource_view();


                    /*    هصفر المتغيرات عشان لو اللاعب حب  يحفظ الحاجة تانى*/
                    game.CurrentHero.Hero.add_p_a = 0;
                    game.CurrentHero.Hero.add_p_b = 0;
                    game.CurrentHero.Hero.add_p_c = 0;
                } else {
                    alert("wrong");
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });
    }

});


/* return all heros points  by trago3
 * هرع النقط  بالتراجع*/

$(document).on("click", ".return_points_all", function() {
    var box = `<div id="over_lay" >
                    <div id="select_from">
                        <div class="head_bar">
                            <img src="images/style/head_bar.png" class="banner">
                            <div class="title">${Translate.Button.General.Use[UserLag.language]}</div>
                            <img class="close close_use_menu" src="images/btns/close_b.png">
                        </div>
                        <p style="clear: both"></p>
                        <ul class="select_item">
                            <li>
                                <div  class=" pull-L left">
                                    <div class="ar_title">نظام تراجع</div>
                                    <div class="quant">
                                        ${getArabicNumbers(Matrial.getPlayerAmount("retreat_point"))}
                                    </div>
                                    <div class="image">
                                        <img src="images/items/item014.jpg"/>
                                    </div>
                                </div>
                                <div class="pull-R right">
                                    <div class="header">
                                        <button class="full-btn use_matrial_hero" use_for="retreat_points"  matrial_name="retreat_point" amount="${Math.floor(game.CurrentHero.Hero.lvl / 10 + 1)}"> ${Translate.Button.General.Use[UserLag.language]}</button>
                                    </div> 
                                    <div class="desc">
                                        يستخدم فى استراجع النقط الخاصة بالبطل لترتيبها وفق ما تحتاج
                                    </div>
                                </div>
                            </li>

                        </ul>
                    </div>
                </div>`;
    $("body").append(box);
});


/*                           تعين القنصل            _                     */

$(document).on("click", ".add_console", function() {


    if (Number(game.CurrentHero.Hero.in_city) !== 1) {

        alert_box.confirmMessage("لا يمكنك تعين البطل قنصل ( البطل ليس بالمدينة)");
        return;
    }

    var self = $(this);
    var idHero = game.CurrentHero.Hero.id_hero;
    var idCity = game.CurrentCity.City.id_city;

    $.ajax({
        url: `${API_URL}/api/AHero/addConsole`,
        data: {
            idHero: idHero,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {
            self.attr("disabled", "disabled");
            waitCursor();
        },
        success: function(data, textStatus, jqXHR) {
            self.removeAttr("disabled");
            unwaitCursor();
            if (!game.LBase.isJson(data))
                game.LBase.Error(data);



            var json_data = JSON.parse(data);

            if (json_data.state === "ok") {
                game.City.getCity(idCity).City = json_data.City;
                for (var iii in json_data.HeroList) {
                    if (game.Hero.getHero(json_data.HeroList[iii].id_hero))
                        if (game.Hero.getHero(json_data.HeroList[iii].id_hero).Hero)
                            game.Hero.getHero(json_data.HeroList[iii].id_hero).Hero = json_data.HeroList[iii];

                }
                city_profile.refresh_resource_view();
                city_profile.refresh_hero_view();

                $("#city-hero-list .tr").each(function(el) {

                    if (Number($(el).attr("id_hero")) === Number(json_data.City.console)) {

                    }

                });

                game.City.refreshBtnList();
                $("#city-hero-list").html(army.hero_list());
                $("#city-hero-list .selected").click();

            } else if (json_data.state === "error_1") {
                alert_box.failMessage("البطل ليس فى المدينة");
            }



        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

});

/*                           تعين القنصل            _                     */

$(document).on("click", ".remove_console", function() {

    var self = $(this);

    var idHero = game.CurrentHero.Hero.id_hero;
    var idCity = game.CurrentCity.City.id_city;

    $.ajax({
        url: `${API_URL}/api/AHero/removeConsole`,
        data: {
            idCity: idCity,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {
            self.attr("disabled", "disabled");
            waitCursor();
        },
        success: function(data, textStatus, jqXHR) {
            self.removeAttr("disabled");
            unwaitCursor();
            if (!game.LBase.isJson(data))
                game.LBase.Error(data);



            var json_data = JSON.parse(data);

            if (json_data.state === "ok") {
                game.City.getCity(idCity).City = json_data.City;
                for (var iii in json_data.HeroList) {
                    if (game.Hero.getHero(json_data.HeroList[iii].id_hero))
                        if (game.Hero.getHero(json_data.HeroList[iii].id_hero).Hero)
                            game.Hero.getHero(json_data.HeroList[iii].id_hero).Hero = json_data.HeroList[iii];

                }
                city_profile.refresh_resource_view();
                city_profile.refresh_hero_view();


                game.City.refreshBtnList();
                $("#city-hero-list").html(army.hero_list());
                $("#city-hero-list .selected").click();


            } else if (json_data.state === "error_1") {
                alert_box.failMessage("البطل ليس فى المدينة");
            }



        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

});


/*                                  تفعيل الماديليات                                   */

$(document).on("click", ".medal img", function() {

    var medal_type = $(this).attr("m_type");

    var matrial = [medal_type];
    BoxOfMatrialToUse(matrial, "add_medal");


});








/*      SHOW DORP DOWN LIST OF HEROS      ON trade section*/
$(document).on("click", "#selected_hero", function() {

    if ($(this).hasClass("active")) {

        $("#select_hero ol").empty();
        $("#select_hero").hide();
        $(this).removeClass("active");

    } else {

        $(this).addClass("active");
        var id_hero = $(this).attr("id_hero");

        var all_list = "";

        game.DPlayer.Heros.forEach(function(el) {

            if (Number(game.CurrentCity.City.id_city) !== Number(el.Hero.id_city))
                return;
            if (Number(el.Hero.id_hero) === Number(game.NextHero.Hero.id_hero))
                return;
            if (Number(el.Hero.id_hero) === Number(game.CurrentHero.Hero.id_hero))
                return;


            var state = '<img src="images/icons/h_s_incity.png" class="img-sml" >';

            if (parseInt(el.id_hero) === game.CurrentCity.City.console) {

                state = '<img src="images/icons/h_s_console.png">';


            } else if (parseInt(el.in_city) === game.Hero.HeroState.HERO_IN_BATTEL) {

                state = '<img src="images/icons/h_s_attack_2.png"  class="img-sml">';


            } else if (Number(el.in_city) === game.Hero.HeroState.HERO_IN_GARISON) {

                state = '<img src="images/icons/h_s_support.png" class="img-sml">';
            }

            all_list += `  <li id_hero="${el.Hero.id_hero}">
                                <div class="part-1">  
                                    <div class="hero_img pull-L">   
                                        <img class="img-mid" src="${game.BaseData.HeroAvatar[el.Hero.avatar]}">    
                                        <div class="hero_lvl-box">${el.Hero.lvl}          
                                        </div>       
                                    </div>        
                                    <div class="hero-data pull-L">   
                                        <div class="upper">        
                                            <div class="pull-R" >    
                                                ${state}  
                                            </div>                    
                                            <div class="pull-R">${el.Hero.name}</div>      
                                        </div>          
                                    </div>     
                                </div>
                            </li>`;




        });

        $("#select_hero ol").append(all_list);
        $('#select_hero').show();
        $("#select_hero").niceScroll(SCROLL_BAR_PROP);
    }



});


/*                           change sec hero                    */

$(document).on("click", "#select_hero ol li", function() {

    var id_hero = $(this).attr("id_hero");

    $("#right-down").attr("id_hero", id_hero);
    army.rightTrade(game.Hero.getHero(parseInt(id_hero)));

});

$(document).on("change", ".check-for-medal", function() {

    var value = $(this).val();

    var image;
    var rank_needed;
    var amount;
    var req = false;

    switch (value) {

        case "medal_bronz":

            rank_needed = `<span class="${Number(game.DPlayer.Player.porm) >= 3 ? "green" : "red"}">قسطور</span>`;
            req = Number(game.DPlayer.Player.porm) >= 3 ? true : false;
            break;

        case "medal_silver":

            rank_needed = `<span class="${Number(game.DPlayer.Player.porm) >= 5 ? "green" : "red"}">نائب</span>`;
            req = Number(game.DPlayer.Player.porm) >= 5 ? true : false;
            break;

        case "medal_gold":

            rank_needed = `<span class="${Number(game.DPlayer.Player.porm) >= 8 ? "green" : "red"}">دكتاتور</span>`;
            req = Number(game.DPlayer.Player.porm) >= 8 ? true : false;
            break;

    }

    $("#req_for_medal").html(rank_needed);
    $("#medal_image").attr("src", game.BaseData.Items[value].image);
    $("#medal_amount_player").html(getArabicNumbers(Matrial.getPlayerAmount(value)));



});

$(document).on("click", "#learn-hero-point", function() {

    var point_for = $(".learn_hero .row-1 ul li input[name='point_plus_for']:checked").val();
    var meddal = $(".learn_hero .row-4 ul li input[name='used_meddal']:checked").val();

    if (Matrial.getPlayerAmount(meddal) < 10) {

        alert_box.confirmMessage("ليس لديك عدد كافى من الميداليات");
        return;

    } else if (!point_for) {

        alert_box.confirmMessage("عليك اختيار النقط المراد اضافتها");
        return;

    } else if (parseInt(game.CurrentHero.Hero.in_city) !== 1) {

        alert_box.confirmMessage("لا يمكنك تعليم بطل وهو فى مهمة خارج المدينة");
        return;

    }

    var points_ar_title = point_for === "point_a_plus" ? "نقاط سيطرة" : (point_for === "point_b_plus" ? "نقاط الشجاعة" : "نقاط دفاع");

    var idHero = game.CurrentHero.Hero.id_hero;
    var idCity = game.CurrentCity.City.id_city;

    $.ajax({

        url: `${API_URL}/api/AHero/educate`,
        data: {
            idHero: idHero,
            medalToUse: meddal,
            pointFor: point_for,
            token: game.Config.OuthToken,
            server: game.Config.idServer

        },
        type: 'POST',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            var jsonObject = JSON.parse(data);
            if (jsonObject.state === "ok") {

                if (jsonObject.PointAdded === 0) {

                    var msg = `فشل عملية تعليم البطل, حصلت على  ${getArabicNumbers(jsonObject.PointAdded)} 
                                    من ${points_ar_title} , ولم تخسر نقاط,و قد استهلكت ١٠ ${game.BaseData.Items[meddal].name}  خلال هذة العملية`;
                    alert_box.succesMessage(msg);
                    Matrial.takeFrom(meddal, 10);

                } else if (jsonObject.PointAdded > 0) {

                    var msg = `نجحت عملية تعليم البطل, حصلت على  ${getArabicNumbers(jsonObject.PointAdded)} 
                                    من ${points_ar_title} ,و قد استهلكت ١٠  ${game.BaseData.Items[meddal].name} خلال هذة العملية`;
                    alert_box.succesMessage(msg);
                    Matrial.takeFrom(meddal, 10);

                } else if (jsonObject.PointAdded < 0) {

                    var msg = `فشل عملية تعليم البطل, خسرت  ${getArabicNumbers(jsonObject.PointAdded * -1)} 
                                    من ${points_ar_title} ,و قد استهلكت ١٠  ${game.BaseData.Items[meddal].name} خلال هذة العملية`;
                    alert_box.failMessage(msg);
                    Matrial.takeFrom(meddal, 10);

                }
            }


            game.Hero.getHero(idHero).Hero = jsonObject.Hero;
            game.City.getCity(idCity).City = jsonObject.City;
            $(".hero_dial .hero-profile").replaceWith(army.middle_content(game.CurrentHero));
            $("#medal_amount_player").html(getArabicNumbers(Matrial.getPlayerAmount(meddal)));
            city_profile.refresh_resource_view();
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

});



function finishArmyBuild(index) {




}


$(document).on("click", "#confirm_battel", function() {
    battelStart();
});
game.Hero.HeroState = {
    HERO_IN_CITY: 1,
    HERO_IN_BATTEL: 0,
    HERO_IN_GARISON: 2
};

game.Hero.getHero = function(idHero) {
    for (var iii in game.DPlayer.Heros) {
        if (game.DPlayer.Heros[iii].idHero)
            if (Number(game.DPlayer.Heros[iii].idHero) === Number(idHero))
                return game.DPlayer.Heros[iii];
        if (game.DPlayer.Heros[iii].Hero)
            if (Number(game.DPlayer.Heros[iii].Hero.id_hero) === Number(idHero))
                return game.DPlayer.Heros[iii];
            else if (game.DPlayer.Heros[iii].Army)
            if (Number(game.DPlayer.Heros[iii].Army.id_hero) === Number(idHero))
                return game.DPlayer.Heros[iii];
            else if (game.DPlayer.Heros[iii].Medal)
            if (Number(game.DPlayer.Heros[iii].Medal.id_hero) === Number(idHero))
                return game.DPlayer.Heros[iii];
    }

    return false;
};



game.Hero.orderHeors = function() {

    game.DPlayer.Heros.sort((a, b) => (a.Hero.ord > b.Hero.ord) ? 1 : ((b.Hero.ord > a.Hero.ord) ? -1 : 0));
    //.map(el=>el[0]);
};

game.Hero.isConsole = function(idHero) {
    for (var idCity in game['DPlayer']['City'])
        if (game['DPlayer']['City'][idCity]['City']['console'] == idHero) return true;
    return false;
};


$(document).on("click", ".show-hero-theater", function() {

    var hero_data = JSON.parse($(this).attr("data-hero"));

    var hero = {};
    hero.image = hero_data.hero_image;
    hero.lvl = hero_data.hero_lvl;
    hero.name = game.BaseData.HeroTheaterName[hero_data.hero_name];
    hero.point_a = Number(hero_data.hero_lvl) + 20;
    hero.point_b = Number(hero_data.hero_lvl) + 15;
    hero.point_c = Number(hero_data.hero_lvl) + 20;
    hero.ultra_p = hero_data.ultra_p;
    hero.id_in_theater = hero_data.id_hero;

    showHero(hero, hero.id_in_theater);

});



function showHero(hero, recruit) {

    var recruit_btn = "";
    if (!isNaN(recruit)) {

        recruit_btn = ` <div class="li buttons" style="margin-top: 5px; width: 95%">
                                <div class="li-d bg-btn-red" style="margin: auto; height: 100%;">
                                    <div class="image pull-L">
                                        <img src="images/btns/tagned.png">
                                    </div>
                                    <div class="title pull-R" id="recurit-new-hero"  data-id-hero-theater="${hero.id_in_theater}">
                                        تجنيد
                                    </div>
                                </div>

                            </div>`;

    }

    var over_lay = `<div id="over_lay">
                        <div id="select_from">
                            <div class="head_bar">
                                <img src="images/style/head_bar.png" class="banner">
                                <div class="title">ملف الملك</div>
                                <img class="close close_use_menu" src="images/btns/close_b.png">
                            </div>
                            <p style="clear: both"></p>
                            <div id="rank-review" class="player-review">
                                <div class="upper">
                                    <div class="left pull-L">
                                        <div class="player-avatar">
                                            <div class="hero_lvl-box" style="position: absolute;margin-left: 43px;margin-top: 4px;">${hero.lvl}</div>
                                            <img src="${game.BaseData.HeroAvatar[hero.image]}" id="A-A-P-image">
                                            
                                        </div>
                                        <div class="hero_ultra_p">
                                            <h1>نقاط الامكانية  (${ hero.ultra_p })</h1>
                                        </div>
                                    </div>
                                    <div class="right pull-R">
                                        <div class="th ellipsis">${Translate.Title.TH.SwayPoints[UserLag.language]}</div>
                                        <div class="trow bg-btn-blu" id="A-A-P-guild">${getArabicNumbers(Number(hero.point_a))}</div>
                                        <div class="th ellipsis">${Translate.Title.TH.BraveryPoints[UserLag.language]}</div>
                                        <div class="trow bg-btn-blu" id="A-A-P-promotion">${getArabicNumbers(Number(hero.point_b))}</div>
                                        <div class="th ellipsis">${Translate.Title.TH.ParryPoints[UserLag.language]}</div>
                                        <div class="trow bg-btn-blu" id="A-A-P-rank">${getArabicNumbers(Number(hero.point_c))}</div>
                                    </div>
                                    <p style="clear: both"></p>
                                    <h1 class="player-name" id="A-A-P-name">${hero.name}</h1>
                                </div>
                                <div class="down">
                                    <div class="th ellipsis">${Translate.Title.TH.Info[UserLag.language]}</div>
                                    <div class="table">

                                        <div class="th ellipsis">
                                            <div class="td_1 ellipsis">${Translate.Title.TH.SignUpRequire[UserLag.language]}</div>
                                            <div class="td_2 ellipsis">
                                                ${Translate.Title.TH.NeadedAmount[UserLag.language]}
                                            </div>
                                            <div class="td_3">${Translate.Title.TH.YouHave[UserLag.language]}</div>
                                        </div>
                                        <div class="tr">
                                            <div class="td_1 ellipsis">
                                                ${Translate.Title.TH.SestersYouHave[UserLag.language]}
                                            </div>
                                            <div class="td_2 ellipsis">
                                                ${Math.ceil(getArabicNumbers(hero.lvl*100))}
                                            </div>
                                            <div class="td_3 ellipsis">
                                                ${Math.floor(game.CurrentCity.City.coin)}
                                            </div>
                                        </div>
                                        <div class="tr">
                                            <div class="td_1">
                                               ${Translate.Title.TH.LuxuryItem[UserLag.language]}
                                            </div>
                                            <div class="td_2">
                                                0     
                                            </div>
                                            <div class="td_3">
                                                0
                                            </div>
                                        </div>

                                    </div>
                                   
                                    ${recruit_btn}
                                    <span style="clear: both"></span>
                                </div>
                            </div>
                        </div>
                    </div>`;
    $("body").append(over_lay);

    $("#recurit-new-hero").click(function() {
        Hero.addHeroFromTheatr(Number(hero.id_in_theater, hero.lvl));
    });
}


var Hero = {


    addHeroFromTheatr: function(id_hero_in_theater, lvl) {

        if (isNaN(id_hero_in_theater)) {
            alert_box.confirmMessage("هذا البطل لا يحمل رقم مميز");
            return;
        } else {

            if (Number(game.CurrentCity.City.coin) < lvl * 100) {
                alert_box.confirmMessage("لا يوجد سسترسس كافى تجنيد البطل");
                return;
            }

            var idCity = game.CurrentCity.City.id_city;
            $.ajax({

                url: `${API_URL}/api/ACityHero/addFromTheater`,
                data: {
                    idHero: id_hero_in_theater,
                    token: game.Config.OuthToken,
                    server: game.Config.idServer
                },
                type: 'POST',
                beforeSend: function(xhr) {

                },
                success: function(data, textStatus, jqXHR) {

                    if (!game.LBase.isJson(data))
                        return game.LBase.Error(data);

                    var jsonObject = JSON.parse(data);

                    if (jsonObject.state === "ok") {

                        game.City.getCity(idCity).City = jsonObject.City;
                        game.City.getCity(idCity).TheaterHeros = jsonObject.TheaterHeros;
                        game.City.getCityHero(idCity);
                        game.City.getCityHeroArmy(idCity);
                        game.City.getCityHeroMedal(idCity);

                        buildingClick(cityHasType(BUILDING_TYPS.THEATER), true);
                        $(".close_use_menu").click();
                        alert_box.succesMessage("تم اضافة البطل بنجاح");

                        city_profile.refresh_resource_view();
                        city_profile.refresh_army_view();

                    } else if (jsonObject.state === "error_0") {
                        alert_box.failMessage("البطل غير موجود بالمسرح");
                    } else if (jsonObject.state === "error_1") {
                        alert_box.confirmMessage(`لا يمكنك امتلاك اكثر من ${jsonObject.MaxCount} بطل فى المدينة`)
                    } else {
                        alert_box.confirmMessage(data);
                    }


                },
                error: function(jqXHR, textStatus, errorThrown) {

                }

            });

        }



    },
    getPowerRequired(x, y) {

        var Unit = WorldUnit.getWorldUnit(x, y);
        if (Unit)
            return game.World.UnitTypeData[Unit.ut].reqFitness;
        return 10;
    },
    heroAttackProc: function() {
        game.CurrentHero.Hero.in_city = 0;
        game.CurrentHero.Hero.attack = 1;
    },
    // get hero equip
    getHeroEquip: function(id_hero) {


        $.ajax({
            url: "api/city.php",
            data: {
                get_hero_equip: true,
                id_hero: id_hero,
                id_player: ID_PLAYER,
                token: TOKEN
            },
            type: 'GET',
            success: function(data, textStatus, jqXHR) {

                if (isJson(data)) {
                    game.Hero.getHero(id_hero).Equip = JSON.parse(data);
                } else {
                    alert(data);
                    console.log(data);
                    return;
                }

                var equip_review = Hero.equipBreview();
                $("#after-ajax-equip-view").html(equip_review);
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });
    },
    /*            is hero empty*/
    isEmptyArmy: function() {

        for (var cell in game.CurrentHero.Army) {
            if (parseInt(game.CurrentHero.Army[cell]) !== 0 && cell !== "id_hero" && cell !== "id_player") {

                return false;
            }

        }

        return true;

    },
    getEquipEffectsForHero: function(hero) {
        var lPower = {};
        lPower.sword = getEquipData(hero.Equip.sword);
        lPower.helmet = getEquipData(hero.Equip.helmet);
        lPower.shield = getEquipData(hero.Equip.shield);
        lPower.armor = getEquipData(hero.Equip.armor);
        lPower.boot = getEquipData(hero.Equip.boot);
        lPower.belt = getEquipData(hero.Equip.belt);
        lPower.necklace = getEquipData(hero.Equip.necklace);
        lPower.pendant = getEquipData(hero.Equip.pendant);
        lPower.ring = getEquipData(hero.Equip.ring);
        lPower.steed = getEquipData(hero.Equip.steed);
        return {
            "vit": Object.values(lPower).reduce((a, b) => a + b.vit || 0, 0),
            "attack": Object.values(lPower).reduce((a, b) => a + b.attack || 0, 0) + Number(hero.Hero.point_b),
            "defence": Object.values(lPower).reduce((a, b) => a + b.defence || 0, 0) + Number(hero.Hero.point_c),
            "damage": Object.values(lPower).reduce((a, b) => a + b.damage || 0, 0),
            "break": Object.values(lPower).reduce((a, b) => a + b.break || 0, 0),
            "anti_break": Object.values(lPower).reduce((a, b) => a + b.anti_break || 0, 0),
            "strike": Object.values(lPower).reduce((a, b) => a + b.strike || 0, 0),
            "immunity": Object.values(lPower).reduce((a, b) => a + b.immunity || 0, 0)
        };
    },
    foodConsumption: function(hero) {
        var total = Number(game.BaseData.Army[ARMY_CONVERT["sol-" + hero.Army.f_1_type].city || 0].eating * hero.Army.f_1_num) +
            Number(game.BaseData.Army[ARMY_CONVERT["sol-" + hero.Army.f_2_type].city || 0].eating * hero.Army.f_2_num) +
            Number(game.BaseData.Army[ARMY_CONVERT["sol-" + hero.Army.f_3_type].city || 0].eating * hero.Army.f_3_num) +
            Number(game.BaseData.Army[ARMY_CONVERT["sol-" + hero.Army.b_1_type].city || 0].eating * hero.Army.b_1_num) +
            Number(game.BaseData.Army[ARMY_CONVERT["sol-" + hero.Army.b_2_type].city || 0].eating * hero.Army.b_2_num) +
            Number(game.BaseData.Army[ARMY_CONVERT["sol-" + hero.Army.b_3_type].city || 0].eating * hero.Army.b_3_num);

        return total;
    },
    refreshSecondHeroArmy() {
        return $.ajax({
            url: "api/city.php",
            data: {
                idHero: game.NextHero.Hero.id_hero,
                server: game.Config.idServer,
                token: game.Config.OuthToken
            },
            type: 'GET',
            success: function(data, textStatus, jqXHR) {
                game.NextHero.Army = JSON.parse(data);
            }
        });
    },
    refreshCurrentHeroArmy() {
        return $.ajax({
            url: "api/city.php",
            data: {
                idHero: game.CurrentHero.Hero.id_hero,
                server: game.Config.idServer,
                token: game.Config.OuthToken
            },
            type: 'GET',
            success: function(data, textStatus, jqXHR) {
                game.CurrentHero.Army = JSON.parse(data);
            }
        });
    },
    armyReview: function() {
        return ` <ul class="army-review">
                    <li>
                        <div class="wrapper">
                            <div class="army-unit" style="background-image:url(${game.BaseData.Army[game.BaseData.HeroToCity[game.CurrentHero.Army.f_1_type]].image}) ">
                                <div class="amount ${Fixed.getArmyAmountColor(game.CurrentHero.Army.f_1_num)}">${getArabicNumbers(game.CurrentHero.Army.f_1_num)}</div>
                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="wrapper">
                            <div class="army-unit" style="background-image:url(${game.BaseData.Army[game.BaseData.HeroToCity[game.CurrentHero.Army.f_2_type]].image}) ">
                                <div class="amount ${Fixed.getArmyAmountColor(game.CurrentHero.Army.f_2_num)}">${getArabicNumbers(game.CurrentHero.Army.f_2_num)}</div>
                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="wrapper">
                            <div class="army-unit" style="background-image:url(${game.BaseData.Army[game.BaseData.HeroToCity[game.CurrentHero.Army.f_3_type]].image}) ">
                                <div class="amount ${Fixed.getArmyAmountColor(game.CurrentHero.Army.f_3_num)}">${getArabicNumbers(game.CurrentHero.Army.f_3_num)}</div>
                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="wrapper">
                            <div class="army-unit" style="background-image:url(${game.BaseData.Army[game.BaseData.HeroToCity[game.CurrentHero.Army.b_1_type]].image}) ">
                                <div class="amount ${Fixed.getArmyAmountColor(game.CurrentHero.Army.b_1_num)}">${getArabicNumbers(game.CurrentHero.Army.b_1_num)}</div>
                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="wrapper">
                            <div class="army-unit" style="background-image:url(${game.BaseData.Army[game.BaseData.HeroToCity[game.CurrentHero.Army.b_2_type]].image}) ">
                                <div class="amount ${Fixed.getArmyAmountColor(game.CurrentHero.Army.b_2_num)}">${getArabicNumbers(game.CurrentHero.Army.b_2_num)}</div>
                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="wrapper">
                            <div class="army-unit" style="background-image:url(${game.BaseData.Army[game.BaseData.HeroToCity[game.CurrentHero.Army.b_3_type]].image}) ">
                                <div class="amount ${Fixed.getArmyAmountColor(game.CurrentHero.Army.b_3_num)}">${getArabicNumbers(game.CurrentHero.Army.b_3_num)}</div>
                            </div>
                        </div>
                    </li>   
                </ul>`;
    },
    equipBreview: function() {

        var sword = getEquipData(game.CurrentHero.Equip.sword);
        var helmet = getEquipData(game.CurrentHero.Equip.helmet);
        var boot = getEquipData(game.CurrentHero.Equip.boot);
        var armor = getEquipData(game.CurrentHero.Equip.armor);
        var shield = getEquipData(game.CurrentHero.Equip.shield);

        var belt = getEquipData(game.CurrentHero.Equip.belt);
        var necklace = getEquipData(game.CurrentHero.Equip.necklace);
        var pendant = getEquipData(game.CurrentHero.Equip.pendant);
        var ring = getEquipData(game.CurrentHero.Equip.ring);
        var steed = getEquipData(game.CurrentHero.Equip.steed);

        return `<ul>
                    <li>
                        <div class="wrapper">
                            <div class="img" style="background-image: url(${helmet.image})">

                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="wrapper">
                            <div class="img" style="background-image: url(${necklace.image})">

                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="wrapper">
                            <div class="img" style="background-image: url(${armor.image})">

                            </div>
                        </div>
                    </li>
                    
                    <li>
                        <div class="wrapper">
                            <div class="img" style="background-image: url(${boot.image})">

                            </div>
                        </div>
                    </li>
                    
                    <li>
                        <div class="wrapper">
                            <div class="img" style="background-image: url(${sword.image})">

                            </div>
                        </div>
                    </li>
                    
                    <li>
                        <div class="wrapper">
                            <div class="img" style="background-image: url(${shield.image})">

                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="wrapper">
                            <div class="img" style="background-image: url(${pendant.image})">

                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="wrapper">
                            <div class="img" style="background-image: url(${belt.image})">

                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="wrapper">
                            <div class="img" style="background-image: url(${ring.image})">

                            </div>
                        </div>
                    </li>
                    <li>
                        <div class="wrapper">
                            <div class="img" style="background-image: url(${steed.image})">

                            </div>
                        </div>
                    </li>
                </ul>`;
    }

};






Hero.readyForBattel = function(hero) {

    if (!hero) {
        hero = game.CurrentHero;
    }

    if (Number(hero.Hero.in_city) !== 1)
        return false;

    if (Number(hero.Hero.console) !== 0)
        return false;

    if (Hero.empty(hero.Hero.Army))
        return false;


    return true;

};

Hero.empty = function(hero_army) {
    if (!hero_army) {
        hero_army = game.CurrentHero.Army;
    }

    for (var cell in hero_army) {

        if (parseInt(hero_army[cell]) !== 0 && cell !== "id_hero" && cell !== "id_player") {

            return false;
        }

    }

    return true;

};

Hero.inBattel = function(hero) {
    if (!hero) {
        hero = game.CurrentHero;
    }

    for (var battel in game.Battel.Battels) {

        if (Number(hero.Hero.id_hero) === Number(game.Battel.Battels[battel].id_hero)) {
            return true;
        }

    }

    return false;
};


Hero.traitPointAOk = function(hero) {
    return (parseInt(hero.Hero.point_a) + parseInt(hero.Hero.add_p_a) < Number(hero.Hero.point_b) + parseInt(hero.Hero.add_p_b) + Number(hero.Hero.point_c) + parseInt(hero.Hero.add_p_c));
};
Hero.traitPointBOk = function(hero) {
    return (parseInt(hero.Hero.point_b) + parseInt(hero.Hero.add_p_b) < Number(hero.Hero.point_a) + parseInt(hero.Hero.add_p_a) + Number(hero.Hero.point_c) + parseInt(hero.Hero.add_p_c));
};
Hero.traitPointCOk = function(hero) {
    return (parseInt(hero.Hero.point_c) + parseInt(hero.Hero.add_p_c) < Number(hero.Hero.point_a) + parseInt(hero.Hero.add_p_a) + Number(hero.Hero.point_b) + parseInt(hero.Hero.add_p_b));
};

Hero.traitPointOk = function(hero) {

    var totalAdded = parseInt(hero.Hero.point_a) + parseInt(hero.Hero.add_p_a) + Number(hero.Hero.point_b) + parseInt(hero.Hero.add_p_b) + Number(hero.Hero.point_c) + parseInt(hero.Hero.add_p_c);

    if (totalAdded < 100)
        return true;
    if (parseInt(hero.Hero.point_a) + parseInt(hero.Hero.add_p_a) >= Number(hero.Hero.point_b) + Number(hero.Hero.point_c))
        return false;
    if (parseInt(hero.Hero.point_b) + parseInt(hero.Hero.add_p_b) >= Number(hero.Hero.point_a) + Number(hero.Hero.point_c))
        return false;
    if (parseInt(hero.Hero.point_c) + parseInt(hero.Hero.add_p_c) >= Number(hero.Hero.point_a) + Number(hero.Hero.point_b))
        return false;

    return true;

};


Hero.calWorldUnitArmy = function(heroList) {
    var a = {

        "0": 0,
        "1": 0,
        "2": 0,
        "3": 0,
        "4": 0,
        "5": 0,
        "6": 0
    };


    if (!$.isArray(heroList))
        return a;

    for (var ii in heroList) {
        a[heroList[ii].f_1_type] += Number(heroList[ii].f_1_num);
        a[heroList[ii].f_2_type] += Number(heroList[ii].f_2_num);
        a[heroList[ii].f_3_type] += Number(heroList[ii].f_3_num);
        a[heroList[ii].b_1_type] += Number(heroList[ii].b_1_num);
        a[heroList[ii].b_2_type] += Number(heroList[ii].b_2_num);
        a[heroList[ii].b_3_type] += Number(heroList[ii].b_3_num);

    }



    return a;
};

$(document).on("click", "#change-hero-name", function() {

    $(this).parent().next().html("<input type='text' id='hero-input-name' style='width: 77%;'/>");
    $(this).attr("src", "images/btns/done-btn.png");
    $(this).attr("id", "confirm-change-hero-name");

});

$(document).on("click", "#confirm-change-hero-name", function() {

    var hero_name = $("#hero-input-name").val();

    if (hero_name.length < 3) {

        alert_box.failMessage("لا يمكن ان  يحتوى اسم البطل على 3 حروف");
        return;
    }

    alert_box.confirmDialog("تاكيد تغير اسم البطل ", function() {

        $.ajax({

            url: "api/hero.php",
            data: {

                UPDATE_HERO_NEW_NAME: true,
                new_name: hero_name,
                id_hero: game.CurrentHero.Hero.id_hero,
                id_player: ID_PLAYER,
                token: TOKEN

            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                game.CurrentHero.Hero.name = hero_name;
                alert_box.succesMessage("تم تغير اسم البطل بنجاح");
                $(".middle-content").replaceWith(army.middle_content(game.CurrentHero));
                $("#city-hero-list").html(army.hero_list());

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    });

});




$(document).on("click", ".add-eagle-to-hero", function() {

    var matrial = ["ceaser_eagle"];
    BoxOfMatrialToUse(matrial, "add_medal");

});

$(document).on("mouseenter", "#city-profile .page_content ul .hero_profile", function() {

    var id_hero = $(this).attr('id_hero');
    var hero = getHeroById(id_hero);
    var image_state = "images/icons/h_s_incity.png";
    var state_title = 'فى المدينة';
    var hero_effect = Hero.getEquipEffectsForHero(hero);


    if (Number(hero.Hero.id_hero) === game.CurrentCity.City.console) {
        image_state = "images/icons/h_s_console.png";
        state_title = 'قنصل المدينة';
    }

    if (Number(hero.Hero.in_city) == game.Hero.HeroState.HERO_IN_BATTEL) {
        image_state = "images/icons/h_s_attack_2.png";
        state_title = 'خارج المدينة';
    }

    if (Number(hero.Hero.in_city) == game.Hero.HeroState.HERO_IN_GARISON) {
        image_state = "images/icons/h_s_support.png";
        state_title = 'خارج المدينة';
    }


    var tooltip = `<div class="tooltip tooltip-hero">
                        <div class="top">
                            <div class="name-lvl-point">
                                <label class="name">${hero.Hero.name}</label>
                                <label class="points"><span class="domain-point">${hero.Hero.point_a}</span>/<span class="attack-point">${hero.Hero.point_b}</span>/<span class="def-point">${hero.Hero.point_c}</span></label>

                                <label class="lvl hero_lvl-box">${hero.Hero.lvl}</label>
                            </div>
                            <div class="state rtl">
                                <img src="${image_state}"/> <label> ${state_title}</label>
                            </div>
                            <div class="hero-cap rtl">
                                <label>الجنود /سعة البطل:</label>&nbsp;&nbsp;&nbsp;<label>${getHeroCap(hero.Army)}/${getHeroMaxCap(hero)}</label>
                            </div>
                            <div class="crop-intake rtl">
                                <label>استهلاك  الغذاء:</label>&nbsp;&nbsp;&nbsp;<label>${Hero.foodConsumption(hero)}</label>
                            </div>
                            <ul>
                                <li>
                                    <div class="wrapper">
                                        <label><img src="images/icons/army/vitilty.png"/></label>
                                        <label>${hero_effect.vit}</label>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <label><img src="images/icons/army/attack.png"/></label>
                                        <label>${hero_effect.attack}</label>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <label><img src="images/icons/army/defence.png"/></label>
                                        <label>${hero_effect.defence}</label>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <label><img src="images/icons/army/damage.png"/></label>
                                        <label>${hero_effect.damage}</label>
                                    </div>
                                </li>
                            </ul>
                            <ul>
                                <li>
                                    <div class="wrapper">
                                        <label><img src="images/icons/army/break.png"/></label>
                                        <label>${hero_effect.break}</label>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <label><img src="images/icons/army/anti-break.png"/></label>
                                        <label>${hero_effect.anti_break}</label>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <label><img src="images/icons/army/strike.png"/></label>
                                        <label>${hero_effect.strike}</label>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <label><img src="images/icons/army/immunity.png"/></label>
                                        <label>${hero_effect.immunity}</label>
                                    </div>
                                </li>
                            </ul>
                        </div>
                        <div class="bottom">
                            <ol class="army-row">
                                <li>
                                    <div class="wrapper">
                                        <img src="${game.BaseData.Army[game.BaseData.HeroToCity[hero.Army.f_1_type]].image}"/><div class="amount stroke ${Fixed.getArmyAmountColor(hero.Army.f_1_num)}">${hero.Army.f_1_num}</div>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <img src="${game.BaseData.Army[game.BaseData.HeroToCity[hero.Army.f_2_type]].image}"/><div class="amount stroke ${Fixed.getArmyAmountColor(hero.Army.f_2_num)}">${hero.Army.f_2_num}</div>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <img src="${game.BaseData.Army[game.BaseData.HeroToCity[hero.Army.f_3_type]].image}"/><div class="amount stroke ${Fixed.getArmyAmountColor(hero.Army.f_3_num)}">${hero.Army.f_3_num}</div>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <img src="${game.BaseData.Army[game.BaseData.HeroToCity[hero.Army.b_1_type]].image}"/><div class="amount stroke ${Fixed.getArmyAmountColor(hero.Army.b_1_num)}">${hero.Army.b_1_num}</div>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <img src="${game.BaseData.Army[game.BaseData.HeroToCity[hero.Army.b_2_type]].image}"/><div class="amount stroke ${Fixed.getArmyAmountColor(hero.Army.b_2_num)}">${hero.Army.b_2_num}</div>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <img src="${game.BaseData.Army[game.BaseData.HeroToCity[hero.Army.b_3_type]].image}"/><div class="amount stroke ${Fixed.getArmyAmountColor(hero.Army.b_3_num)}">${hero.Army.b_3_num}</div>
                                    </div>
                                </li>

                            </ol>
                            <ol class="equip-row">
                                <li>
                                    <div class="wrapper">
                                        <img src="${getEquipData(hero.Equip.helmet).image}">
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <img src="images/tech/no_army.png">
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <img src="${getEquipData(hero.Equip.armor).image}">
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <img src="${getEquipData(hero.Equip.boot).image}">
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <img src="${getEquipData(hero.Equip.sword).image}">
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <img src="${getEquipData(hero.Equip.shield).image}">
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <img src="images/tech/no_army.png">
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <img src="images/tech/no_army.png">
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <img src="images/tech/no_army.png">
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <img src="images/tech/no_army.png">
                                    </div>
                                </li>
                            </ol>
                        </div>
                    </div>
                        `;

    $("#city-profile-tooltipe").html(tooltip);

});

$(document).on("mouseleave", "#city-profile .page_content ul .hero_profile", function() {
    $("#city-profile-tooltipe").html("");
});

$(document).on("mouseenter", ".equip-unit", function() {
    var equi_part = $(this).attr("data-equi-part");
    var equi_type = $(this).attr("data-equi-type");
    var equi_lvl = $(this).attr("data-equi-lvl");

    var unitEquipData = Equipment.getEquipData(equi_type, equi_part, equi_lvl);
    var toolip = `<div class="tooltip tooltip-equip">
                    <div class="top">
                        <div class="title">
                            ${unitEquipData.name}
                        </div>
                        <div class="points">
                            <ul>
                                <li>
                                    <div class="wrapper">
                                        <label>( <img src="images/icons/army/vitilty.png"> ) حيوية</label>&nbsp;&nbsp;&nbsp;&nbsp; <label>+${unitEquipData.Power.vitality}</label>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <label>( <img src="images/icons/army/attack.png"> ) هجوم</label>&nbsp;&nbsp;&nbsp;&nbsp; <label>+${unitEquipData.Power.attack}</label>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <label>( <img src="images/icons/army/defence.png"> ) دفاع</label>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <label>+${unitEquipData.Power.defence}</label>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <label>( <img src="images/icons/army/damage.png"> ) انجراح</label>&nbsp;&nbsp; <label>+${unitEquipData.Power.damage}</label>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <label>( <img src="images/icons/army/break.png" style="width: 20px"> ) اجتياح</label>&nbsp;&nbsp; <label>+${unitEquipData.Power.break}</label>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <label>( <img src="images/icons/army/anti-break.png" style="width: 20px"> ) تصدى</label>&nbsp;&nbsp; <label>+${unitEquipData.Power.anti_break}</label>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <label>( <img src="images/icons/army/strike.png" style="width: 20px"> ) تدمير</label>&nbsp;&nbsp;&nbsp; <label>+${unitEquipData.Power.strike}</label>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper">
                                        <label>( <img src="images/icons/army/immunity.png" style="width: 20px"> ) حصانة</label>&nbsp;&nbsp; <label>+${unitEquipData.Power.immunity}</label>
                                    </div>
                                </li>
                                <li>
                                    <div class="wrapper" style="font-size: 16px; font-weight: bold">
                                        <label>(خواص) </label>&nbsp;&nbsp; <label>${game.Equip.EquipFeature[unitEquipData.Power.sp_attr].Title}</label>
                                    </div>
                                </li>
                            </ul>
                        </div>


                    </div>
                    <div class="bottom">
                        <div class="desc">
                            ${unitEquipData.desc}
                        </div>
                        <div class="long-desc">
                            ${unitEquipData.long_desc}
                        </div>
                        <div class="requir">
                            البطل مستوى ${1}
                        </div>
                    </div>
                </div>`;
    $(this).after(toolip);
});

$(document).on("mouseleave", ".equip-unit", function() {
    $(this).next(".tooltip-equip").remove();
});


$(document).on("click", "#order-hero button", function() {

    var id_hero = Number(game.CurrentHero.Hero.id_hero);
    var index = 0;
    var cityHeroCount = 0;
    game.Hero.orderHeors();

    for (var iii in game.DPlayer.Heros) {
        if (Number(game.DPlayer.Heros[iii].Hero.id_city) !== Number(game.CurrentCity.City.id_city))
            continue;
        if (Number(game.DPlayer.Heros[iii].Hero.id_hero) === id_hero) {
            index = cityHeroCount;
        }
        cityHeroCount++;
    }
    var self_ = $(this);
    var direction = $(this).attr("data-order");
    if (direction === "up" && Number(index) === 0) return;
    if (direction === "down" && Number(index) === cityHeroCount - 1) return;

    var idCity = game.CurrentCity.City.id_city;
    $.ajax({
        url: `${API_URL}/api/AHero/reOrderHero`,
        data: {
            idHero: id_hero,
            MoveDir: direction,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {
            self_.attr("disabled", "disabled");
            waitCursor();
        },
        success: function(data, textStatus, jqXHR) {
            self_.removeAttr("disabled");
            unwaitCursor();

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var jsonData = JSON.parse(data);


            if (jsonData.state === "ok") {

                for (var ii in jsonData.HeroList) {
                    if (!game.Hero.getHero(jsonData.HeroList[ii].id_hero))
                        continue;
                    if (!game.Hero.getHero(jsonData.HeroList[ii].id_hero).Hero)
                        continue;
                    game.Hero.getHero(jsonData.HeroList[ii].id_hero).Hero.ord = jsonData.HeroList[ii].ord;
                }

            }
            game.Hero.orderHeors();
            city_profile.refresh_hero_view();
            $("#city-hero-list").html(army.hero_list());
            $("#city-hero-list").niceScroll(SCROLL_BAR_PROP);

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });



});





/*   Equipment in hero  dialoge box*/
$(document).on("click", "#eq-part-select button", function() {

    $("#eq-part-select .selected").removeClass("selected");
    $(this).parent("li").addClass("selected");
    var equi_part = $(this).attr("data-equi-part");

    $("#equip-list-heroDia").html(army.getEquipList(0, equi_part));

});



$(document).on("click", "#navigate-btn .go-one-page-eq-left", function() {
    var offset = $(".equip-unit:first").attr("data-offset");
    var equi_part = $("#eq-part-select .selected button").attr("data-equi-part");

    if (offset - 24 < 0)
        offset = 24;
    $("#equip-list-heroDia").html(army.getEquipList(offset - 24, equi_part));
});


$(document).on("click", "#navigate-btn .go-one-page-eq-right", function() {
    var offset = Number($(".equip-unit:last").attr("data-offset"));
    var equi_part = $("#eq-part-select .selected button").attr("data-equi-part");

    if (offset + 1 >= game.DPlayer.Equip.length) return;
    $("#equip-list-heroDia").html(army.getEquipList(offset + 1, equi_part));
});





/// put equipment on hero
$(document).on("dblclick", ".putable-equi", function() {

    var id_equip = $(this).attr("id_equip");
    var id_hero = game.CurrentHero.Hero.id_hero;

    if ($(this).attr("disabled") === "disabled") return;

    $(".putable-equi").attr("disabled", "disabled");



    if (!heroAvailableForTask(id_hero)) {
        alert_box.confirmMessage("لا يمكن نقل المعدات </br> البطل فى مهمة");
        return false;

    }





    $.ajax({
        url: `https://${WS_HOST}:${WS_PORT}/api/AHeroEquip/putEquipOnHero`,
        data: {
            idEquip: id_equip,
            idHero: id_hero,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {
            waitCursor();
        },
        success: function(data, textStatus, jqXHR) {

            unwaitCursor();
            $(".putable-equi").removeAttr("disabled", "disabled");

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var json_data = JSON.parse(data);



            if (json_data.state === "error_0") {

                alert_box.confirmMessage("لا تمتلك هذه المعدة");
                game.Equip.getPlayerEquip();

            } else if (json_data.state === "error_1") {

                alert_box.confirmMessage("لا تمتلك هذا البطل");
                game.City.getCityHero();

            } else if (json_data.state === "error_2") {

                alert_box.confirmMessage("لا يمكن لقطعة المعدة الواحدة ان تكون لاكثر من بطل");
                game.Equip.getPlayerEquip();

            } else if (json_data.state === "error_3") {
                alert_box.confirmMessage("البطل ليس فى المدينة");
            } else if (json_data.state == "ok") {


                for (var iii in json_data.PlayerEquip) {
                    game.Equip.getEquipUnit(json_data.PlayerEquip[iii].id_equip).id_hero = json_data.PlayerEquip[iii].id_hero;
                    game.Equip.getEquipUnit(json_data.PlayerEquip[iii].id_equip).on_hero = json_data.PlayerEquip[iii].on_hero;
                }

                game.Equip.distributeEquip();
                army.HeroEquip();

                var offset = Number($(".equip-unit:first").attr("data-offset"));
                var equi_part = $("#eq-part-select .selected button").attr("data-equi-part");
                $("#equip-list-heroDia").html(army.getEquipList(offset, equi_part));

            } else {
                game.LBase.Error(data);
            }



        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

});


game.Hero.getEquipOffHero = function(idEquip) {
    return $.ajax({
        url: `https://${WS_HOST}:${WS_PORT}/api/AHeroEquip/putEquipOffHero`,
        'data': {
            'idEquip': idEquip,
            token: game['Config']['OuthToken'],
            server: game['Config']['idServer']
        },
        'type': 'POST',
        beforeSend: function(_0x357aa2) {
            waitCursor();
        },
        success: function(_0x1b8d26, _0x56a04b, _0x499453) {
            unwaitCursor();
            if (!game['LBase']['isJson'](_0x1b8d26)) return game.LBase.Error(data);;
            var _0x29c7b2 = JSON['parse'](_0x1b8d26);
            if (_0x29c7b2['state'] === 'error_0') alert_box['confirmMessage']('لا تمتلك هذه المعدة'), game['Equip']['getPlayerEquip']();
            else {
                if (_0x29c7b2['state'] === 'error_1') alert_box['confirmMessage']('لا تمتلك هذا البطل'), game['City']['getCityHero']();
                else {
                    if (_0x29c7b2['state'] === 'error_2') alert_box['confirmMessage']('لا يمكن لقطعة المعدة الواحدة ان تكون لاكثر من بطل'), game['Equip']['getPlayerEquip']();
                    else {
                        if (_0x29c7b2['state'] === 'error_3') alert_box['confirmMessage']('البطل ليس فى المدينة');
                        else if (_0x29c7b2['state'] === 'ok') {
                            for (var _0xeee9ee in _0x29c7b2['PlayerEquip']) {
                                game['Equip']['getEquipUnit'](_0x29c7b2['PlayerEquip'][_0xeee9ee]['id_equip'])['id_hero'] = _0x29c7b2['PlayerEquip'][_0xeee9ee]['id_hero'], game['Equip']['getEquipUnit'](_0x29c7b2['PlayerEquip'][_0xeee9ee]['id_equip'])['on_hero'] = _0x29c7b2['PlayerEquip'][_0xeee9ee]['on_hero'];
                            }
                            game['Equip']['distributeEquip']();
                        }
                    }
                }
            }
        },
        'error': function(_0x146c8b, _0x252f13, _0x4b01cf) {}
    });
}

$(document).on("dblclick", ".on_equip", function() {



    var id_equip = $(this).attr("id_equip");
    var id_hero = game.CurrentHero.Hero.id_hero;

    if (!heroAvailableForTask(id_hero)) {
        $("body").append(alert_box.confirmMessage("لا يمكن نقل القوات </br> البطل فى مهمة"));
        return false;

    }
    if ($(this).attr("disabled") === "disabled") return;
    $(".on_equip").attr("disabled", "disabled");
    var self = $(this);
    game.Hero.getEquipOffHero(id_equip).done(function(data) {

        unwaitCursor();
        $('.on_equip')['removeAttr']('disabled', 'disabled');
        var JsonData = JSON.parse(data);
        if (JsonData.state == "ok") {
            self['removeClass']('on_equip');
            for (var iii in JsonData['PlayerEquip']) {
                game['Equip']['getEquipUnit'](JsonData['PlayerEquip'][iii]['id_equip'])['id_hero'] = JsonData['PlayerEquip'][iii]['id_hero'];
                game['Equip']['getEquipUnit'](JsonData['PlayerEquip'][iii]['id_equip'])['on_hero'] = JsonData['PlayerEquip'][iii]['on_hero'];
            }
            game.Equip.distributeEquip();
            army.HeroEquip();

            var offset = Number($('.equip-unit:first')['attr']('data-offset'));
            var part = $('#eq-part-select .selected button')['attr']('data-equi-part');
            $('#equip-list-heroDia')['html'](army['getEquipList'](offset, part));
        }
    });
});



/*                                      طرد البطل                                     */
$(document).on("click", ".FIRE_HERO", function() {

    var self = $(this);
    var CHero = game.CurrentHero;
    for (var ii in game.DPlayer.Equip)
        if (Number(game.DPlayer.Equip.id_hero) === Number(CHero.Hero.id_hero))
            return alert_box.confirmMessage(" لا يمكنك طرد بطل يحمل معدات </br> قم  بازالة المعدات و حاول مرة اخرى");




    if (getHeroCap(CHero.Army) > 0)
        return alert_box.confirmMessage(" لا يمكنك طرد بطل يحمل قوات ");

    if (Number(CHero.Hero.in_city) !== 1)
        return alert_box.confirmMessage("لا يمكنك طرد البطل وهو فى مهمة");

    if (Number(game.CurrentCity.City.console) === Number(CHero.Hero.id_hero))
        return alert_box.confirmMessage("لا يمكنك طرد  قنصل المدينة");


    alert_box.confirmDialog(`تأكيد طرد البطل  ${CHero.Hero.name}</br>  اذا كان البطل يحمل قوات سيتم حذفها مع البطل ولا يمكنك استرجاع البطل مرة اخرى`, function() {

        $.ajax({
            url: `${API_URL}/api/AHero/fireHero`,
            data: {
                idHero: CHero.Hero.id_hero,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {
                waitCursor();
                self.attr("disabled", "disabled");
            },
            success: function(data, textStatus, jqXHR) {
                unwaitCursor();
                self.removeAttr("disabled");
                $(".close_dialog").click();
                game.City.getCityHero(CHero.Hero.id_city);
                alert_box.succesMessage("تم طرد البطل بنجاح");
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    });




});


$(document).on("click", ".show-hero-detailed-review", function(e) {
    e.stopPropagation();

    var id_hero = Number($(this).data('id-hero'));
    var hero = null;
    var self = $(this);

    for (var iii in game.DPlayer.Heros)
        if (Number(game.DPlayer.Heros[iii].Hero.id_hero) === Number(id_hero))
            return alert_box.heroReviewDetail(hero);



    $.ajax({
        url: "api/hero.php",
        data: {
            HERO_REVIEW_DETAIL: true,
            id_hero: id_hero
        },
        type: 'GET',
        beforeSend: function(xhr) {
            waitCursor();
            self.attr("disabled", "disabled");
        },
        success: function(data, textStatus, jqXHR) {
            unwaitCursor();
            self.removeAttr("disabled");
            if (isJson(data)) {
                var jsonData = JSON.parse(data);
            } else {
                alert(data);
                return;
            }

            alert_box.heroReviewDetail(jsonData);


        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    })

});

game['Hero']['showHeroDetail'] = function(_0x1dde0d) {
    if (!_0x1dde0d) _0x1dde0d = game['CurrentHero'];
    var _0x244de8 = getEquipData(_0x1dde0d['Equip']['sword']),
        _0x5b7119 = getEquipData(_0x1dde0d['Equip']['helmet']),
        _0x40e185 = getEquipData(_0x1dde0d['Equip']['boot']),
        _0x6d6d6d = getEquipData(_0x1dde0d['Equip']['armor']),
        _0x41d2d3 = getEquipData(_0x1dde0d['Equip']['shield']),
        _0x53be79 = getEquipData(_0x1dde0d['Equip']['belt']),
        _0x4ec34c = getEquipData(_0x1dde0d['Equip']['necklace']),
        _0x2c58ba = getEquipData(_0x1dde0d['Equip']['pendant']),
        _0x44f6e0 = getEquipData(_0x1dde0d['Equip']['ring']),
        _0x146cdd = getEquipData(_0x1dde0d['Equip']['steed']),
        _0x162501 = '<div id=\"hero-over-view\">\x0a                        <div class=\"right\">\x0a                            <div class=\"equip-review\">\x0a                                <ul>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(' + _0x5b7119['image'] + ')\"></div>\x0a                                        </div>\x0a                                    </li>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(' + _0x4ec34c['image'] + ')\"></div>\x0a                                        </div>\x0a                                    </li>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(' + _0x6d6d6d['image'] + ')\"></div>\x0a                                        </div>\x0a                                    </li>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(' + _0x40e185['image'] + ')\"></div>\x0a                                        </div>\x0a                                    </li>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(' + _0x244de8['image'] + ')\"></div>\x0a                                        </div>\x0a                                    </li>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(' + _0x41d2d3['image'] + ')\"></div>\x0a                                        </div>\x0a                                    </li>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(' + _0x2c58ba['image'] + ')\"></div>\x0a                                        </div>\x0a                                    </li>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(' + _0x53be79['image'] + ')\"></div>\x0a                                        </div>\x0a                                    </li>\x0a                                    <li style=\"margin-left: 25%;\">\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(' + _0x44f6e0['image'] + ')\"></div>\x0a                                        </div>\x0a                                    </li>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(' + _0x146cdd['image'] + ')\"></div>\x0a                                        </div>\x0a                                    </li>\x0a                                </ul>\x0a                                    \x0a                            </div>\x0a                            <div class=\"row row-3\">\x0a                                <div class=\"pull-L col-1\">الجنود- الفيلق</div>                       \x0a                                <div class=\"pull-L col-2\">\x0a                                    <div class=\"over-text\">' + (getHeroCap(_0x1dde0d['Army']) + '/' + getHeroMaxCap(_0x1dde0d)) + '</div>\x0a                                    <div class=\"colored-bar filak\" style=\"width: ' + getHeroCap(_0x1dde0d['Army']) * 0x64 / getHeroMaxCap(_0x1dde0d) + '%\"></div>\x0a                                </div>\x0a                                <div class=\"pull-L col-3\">\x0a                                </div>\x0a                            </div>\x0a                            <div class=\"dicor\"></div>\x0a                            \x0a                            <div class=\"army-review\">\x0a                                \x0a                                <ul>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(images/tech/' + army_typs[_0x1dde0d['Army']['f_1_type']] + ')\">\x0a                                                <div class=\"amount ' + Fixed['getArmyAmountColor'](_0x1dde0d['Army']['f_1_num']) + '\"> ' + _0x1dde0d['Army']['f_1_num'] + '</div>\x0a                                            </div>\x0a                                        </div>\x0a                                    </li>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(images/tech/' + army_typs[_0x1dde0d['Army']['f_2_type']] + ')\">\x0a                                                <div class=\"amount ' + Fixed['getArmyAmountColor'](_0x1dde0d['Army']['f_2_num']) + '\"> ' + _0x1dde0d['Army']['f_2_num'] + '</div>\x0a                                            </div>\x0a                                        </div>\x0a                                    </li>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(images/tech/' + army_typs[_0x1dde0d['Army']['f_3_type']] + ')\">\x0a                                                <div class=\"amount ' + Fixed['getArmyAmountColor'](_0x1dde0d['Army']['f_3_num']) + '\"> ' + _0x1dde0d['Army']['f_3_num'] + '</div>\x0a                                            </div>\x0a                                        </div>\x0a                                    </li>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(images/tech/' + army_typs[_0x1dde0d['Army']['b_1_type']] + ')\">\x0a                                                <div class=\"amount ' + Fixed['getArmyAmountColor'](_0x1dde0d['Army']['b_1_num']) + '\"> ' + _0x1dde0d['Army']['b_1_num'] + '</div>\x0a                                            </div>\x0a                                        </div>\x0a                                    </li>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(images/tech/' + army_typs[_0x1dde0d['Army']['b_2_type']] + ')\">\x0a                                                <div class=\"amount ' + Fixed['getArmyAmountColor'](_0x1dde0d['Army']['b_2_num']) + '\"> ' + _0x1dde0d['Army']['b_2_num'] + '</div>\x0a                                            </div>\x0a                                        </div>\x0a                                    </li>\x0a                                    <li>\x0a                                        <div class=\"wrapper\">\x0a                                            <div class=\"img\" style=\"background-image: url(images/tech/' + army_typs[_0x1dde0d['Army']['b_3_type']] + ')\">\x0a                                                <div class=\"amount ' + Fixed['getArmyAmountColor'](_0x1dde0d['Army']['b_3_num']) + '\"> ' + _0x1dde0d['Army']['b_3_num'] + '</div>\x0a                                            </div>\x0a                                        </div>\x0a                                    </li>\x0a                                </ul>\x0a                            </div>\x0a                        </div>\x0a                        <div class=\"middel\">\x0a                            \x0a                        </div>\x0a                        <div class=\"left\">\x0a                            <div class=\"hero-data\">\x0a                                <div class=\"name\">\x0a                                    <div class=\"wrapper\">\x0a                                        ' + _0x1dde0d['Hero']['name'] + '\x0a                                    </div>\x0a                                </div>\x0a                                <div class=\"image\">\x0a                                    <div class=\"wrapper\">\x0a                                        <div class=\"avatar-hero\" style=\"background-image: url(' + game['BaseData']['HeroAvatar'][_0x1dde0d['Hero']['avatar']] + ')\">\x0a                                            <div class=\"lvl\">' + _0x1dde0d['Hero']['lvl'] + '</div>\x0a                                        </div>\x0a                                    </div>\x0a                                </div>\x0a                            </div>\x0a                            <div class=\"hero-points\">\x0a                                <table border=\"1\">\x0a                                    <tr>\x0a                                        <td>قوة السيطرة</td>\x0a                                        <td> <span style=\" color: #008c10;\"> ' + _0x1dde0d['Hero']['point_a'] + ' + ' + _0x1dde0d['Hero']['point_a_plus'] + '</span></td>\x0a                                    </tr>\x0a                                    <tr>\x0a                                        <td>الشجاعة</td>\x0a                                        <td> <span style=\"color: #b43d02;\"> ' + _0x1dde0d['Hero']['point_b'] + ' + ' + _0x1dde0d['Hero']['point_b_plus'] + '</span></td>\x0a                                    </tr>\x0a                                    <tr>\x0a                                        <td>الدفاع</td>\x0a                                        <td> <span style=\"color: #0065ac;\"> ' + _0x1dde0d['Hero']['point_c'] + ' + ' + _0x1dde0d['Hero']['point_c_plus'] + '</span></td>\x0a                                    </tr>\x0a                                </table>\x0a                            </div>\x0a                        </div>\x0a                    </div>';
    alert_box['alert3X2'](Translate['Title']['Alert']['ShowHero'][UserLag['language']], _0x162501);
};
game.HeroArmy = {};



game.HeroArmy.dragArmy = function(e, el) {

    var ev = e.originalEvent;
    var dragPlace = $(el);
    var Amount = 0;
    var armyPlace = dragPlace.attr("data-army-place");
    ev.dataTransfer.setData("text", ev.target.id);
    if (dragPlace.attr("data-drag-place") == "hero") {
        var idHero = dragPlace.attr("data-id-hero");
        if (!game.Hero.getHero(idHero))
            return ev.preventDefault();
        Amount = game.Hero.getHero(idHero).Army[`${armyPlace}_num`];
    } else if (dragPlace.attr("data-drag-place") == "city") {
        Amount = game.CurrentCity.City[armyPlace];
    } else {
        alert("Unnkown drag place");
    }

    if (Amount <= 0)
        return ev.preventDefault();


    var hold_type = dragPlace.attr("army-type");

    $(".sol").each(function() {
        if ($(this).attr("army-type") === hold_type || $(this).attr("army-type") === "sol-0") {
            $(this).children(".permit-layer").hide();
            $(this).attr("canDropOver", "false");

        } else {
            $(this).children(".permit-layer").show();
            $(this).attr("canDropOver", "true");
        }
    });


};

game.HeroArmy.dragArmyEnd = function(e, el) {

    $(".sol").each(function() {
        $(this).children(".permit-layer").hide();
        $(this).attr("canDropOver", "true");
    });


};




game.HeroArmy.dropArmy = function(e, el_to) {

    var ev = e.originalEvent;
    ev.preventDefault();

    var DropPlace = $(el_to);
    var DragPlaceId = ev.dataTransfer.getData("text", ev.target.id);
    var DragPlace = $(`#${DragPlaceId}`);
    // attribute
    var DragFrom = DragPlace.attr("data-drag-place");
    var DropTo = $(el_to).attr("data-drop-place");
    var DragArmyFrom = DragPlace.attr("data-army-place");
    var DropArmyTo = $(el_to).attr("data-army-place");
    var solCap = 0;



    var solCap = soldier_cap[DragPlace.attr("army-type").split("-")[1]];
    var available_place = 0;

    if (solCap <= 0) {
        alert_box.failMessage("خطاء نوع الجيش");
        $("#dialg_box .left-nav .selected").click();
        return;
    }

    if (DropTo == "hero") {
        game.HeroArmy.dropArmyToHero(DragPlace, DropPlace);

    } else if (DropTo == "city") {

        game.HeroArmy.dropArmyToCity(DragPlace, DropPlace);

    } else {
        alert("cannot Drop From This Place");
    }

};


game.HeroArmy.dropArmyToHero = function(DragPlace, DropPlace) {

    var max = 0;
    var maxAmount = 0;
    var idHero = DropPlace.attr("data-id-hero");
    var DropHero = game.Hero.getHero(idHero);
    var availablePlace = getAvailPlaces(idHero);
    var solCap = soldier_cap[DragPlace.attr("army-type").split("-")[1]];

    if (!heroAvailableForTask(idHero)) {
        alert_box.confirmMessage("لا يمكن نقل القوات </br> البطل فى مهمة");
        return false;
    }

    if (DragPlace.attr("data-drag-place") == "hero") {
        maxAmount = game.Hero.getHero(DragPlace.attr("data-id-hero")).Army[`${DragPlace.attr("data-army-place")}_num`];
    } else if (DragPlace.attr("data-drag-place") == "city") {
        maxAmount = game.CurrentCity.City[`${DragPlace.attr("data-army-place")}`];
    } else {
        alert("Unknown Drag Place");
    }

    max = Math.min(maxAmount, Math.floor(availablePlace / solCap));


    if (Math.floor(availablePlace / solCap) < 1) {
        alert_box.failMessage("لا توجد امكان خالية للقوات");
        return false;
    } else if (maxAmount < 1) {
        alert_box.failMessage("لا توجد قوات لنقلها");
        return false;
    }

    game.HeroArmy.StartDialogBox(DragPlace, DropPlace, max);
};


game.HeroArmy.dropArmyToCity = function(DragPlace, DropPlace) {

    var maxAmount = 0;

    if (DragPlace.attr("data-drag-place") == "hero") {
        maxAmount = game.Hero.getHero(DragPlace.attr("data-id-hero")).Army[`${DragPlace.attr("data-army-place")}_num`];
    } else if (DragPlace.attr("data-drag-place") == "city") {
        maxAmount = game.CurrentCity.City[`${DragPlace.attr("data-army-place")}`];
    } else {
        alert("Unknown Drag Place");
    }
    game.HeroArmy.StartDialogBox(DragPlace, DropPlace, maxAmount);

};

game.HeroArmy.StartDialogBox = function(DragPlace, DropPlace, MaxNum) {



    var army_content = ` <div id="alert_box" class="alert_for_hero_trade">
                                <div class="row-1"> 
                                    <label class="remin">
                                        0
                                    </label>
                                    <input type="range" min="1" max="${MaxNum}" id="range_input" value="1"/>
                                    <label class="avail">
                                        ${MaxNum}
                                    </label>
                                </div>
                                <div class="row-2">
                                    <input type="text" max="${MaxNum}" min="1" step="${(MaxNum - 1)}" id="input-army-move"  class="amount-input only_num input numeric pull-L" value="${(MaxNum > 0 ? 1 : 0)}"/> 
                                    <div class="number-arrow-wrapper pull-L" style="margin-left: -31px; margin-top: 4.5px;">
                                        <label class="number-arrow up"></label>
                                        <label class="number-arrow down"></label>
                                    </div>
                                    <label style="line-height: 38px;"> / ${MaxNum}</label>
                                    
                                </div>
                                <div  class="row-3">
                                    <div class="confim-btn">
                                        <button id="confirmTransArmy" 
                                                data-drag-place="${DragPlace.attr("data-drag-place")}" data-drag-army-place="${DragPlace.attr("data-army-place")}" data-drag-id-hero="${DragPlace.attr("data-id-hero")}"
                                                data-drop-place="${DropPlace.attr("data-drop-place")}" data-drop-army-place="${DropPlace.attr("data-army-place")}" data-drop-id-hero="${DropPlace.attr("data-id-hero")}"
                                                data-max-num="${MaxNum}" class="full-btn full-btn-3x trans-con enter ellipsis">${Translate.Button.General.Confirm[UserLag.language]}</button>
                                    </div>
                                </div>
                            </div>`;

    $("body").append(alert_box.alert("نقل القوات", army_content));
};

game.HeroArmy.TransArmyFromHeroToHero = function() {

    var idHeroFrom = $("#confirmTransArmy").attr("data-drag-id-hero");
    var idHeroTo = $("#confirmTransArmy").attr("data-drop-id-hero");
    var ArmyPlaceFrom = $("#confirmTransArmy").attr("data-drag-army-place");
    var ArmyPlaceTo = $("#confirmTransArmy").attr("data-drop-army-place");

    var amount = Math.floor($("#input-army-move").val());
    $("#confirmTransArmy").attr("disabled", "disabled");
    $.ajax({
        url: `https://${WS_HOST}:${WS_PORT}/api/AHeroArmy/transArmyFromHeroToHero`,
        data: {
            amount: amount,
            idCity: game.CurrentCity.City.id_city,
            idHeroFrom: idHeroFrom,
            idHeroTo: idHeroTo,
            ArmyPlaceFrom: ArmyPlaceFrom,
            ArmyPlaceTo: ArmyPlaceTo,
            token: game.Config.OuthToken,
            idPlayer: game.DPlayer.Player.id_player
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            $("#over_lay_alert").remove();
            if (isJson(data)) {
                var json_data = JSON.parse(data);
            } else {
                alert(data);
                return;
            }

            if (json_data.state == "SysBusy")
                return alert_box.confirmMessage("النظام مشغول الان حاول فى وقت لاحق");
            if (json_data.state === "ok") {

                game.Hero.getHero(idHeroFrom).Army = json_data.HeroArmyFrom;
                game.Hero.getHero(idHeroTo).Army = json_data.HeroArmyTo;

                army.refreshArmy_leftTrade();
                army.refreshArmy_rightTrade();


            } else if (json_data.state === "error_0") {
                alert_box.failMessage("لا تمتلك هذا البطل");
            } else if (json_data.state === "error_3") {
                alert_box.failMessage("لا توجد قوات كافية");
            } else if (json_data.state === "error_4") {
                alert_box.failMessage("سعة البطل غير كافية");
            } else if (json_data.state === "error_5") {
                alert_box.failMessage("الابطال ليست بالمدينة");
            } else if (json_data.state === "error_6") {
                alert_box.failMessage("الابطال ليست بمدينة واحدة");
            } else {
                alert(data);
            }


        },
        error: function(jqXHR, textStatus, errorThrown) {
            console.log(errorThrown);
        }

    });

};


game.HeroArmy.TransArmyFromHeroToCity = function() {

    var amount = Math.floor($("#input-army-move").val());
    var ArmyPlace = $("#confirmTransArmy").attr("data-drag-army-place");
    var idHero = $("#confirmTransArmy").attr("data-drag-id-hero");
    $(document).off("click", ".trans-con");
    $("#confirmTransArmy").attr("disabled", "disabled");
    var idCity = game.CurrentCity.City.id_city;

    $.ajax({
        url: `https://${WS_HOST}:${WS_PORT}/api/AHeroArmy/transArmyFromHeroToCity`,
        data: {
            amount: amount,
            idHero: idHero,
            idCity: game.CurrentCity.City.id_city,
            ArmyPlace: ArmyPlace,
            token: game.Config.OuthToken,
            server: game.Config.idServer,
            idPlayer: game.DPlayer.Player.id_player

        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {
            $("#over_lay_alert").remove();
            $("#confirmTransArmy").removeAttr("disabled");

            if (isJson(data)) {
                var json_data = JSON.parse(data);
            } else {
                alert(data);
                return;
            }

            if (json_data.state == "SysBusy")
                return alert_box.confirmMessage("النظام مشغول الان حاول فى وقت لاحق");


            if (json_data.state === "ok") {

                game.City.getCity(idCity).City = json_data.City;
                game.Hero.getHero(idHero).Army = json_data.HeroArmy;
                army.refreshArmy_leftTrade();
                army.refreshArmy_rightTrade();
                $("#down-trade-army").html(army.downTradeArmy());

            } else if (json_data.state === "error_0") {
                alert_box.failMessage("لا تمتلك هذا البطل");
            } else if (json_data.state === "error_1") {
                alert_box.failMessage("البطل لا يمتلك هذه الخانة");
            } else if (json_data.state === "error_2") {
                alert_box.failMessage("نوع القوات غير صحيح");
            } else if (json_data.state === "error_3") {
                alert_box.failMessage("القيمة اقل من صفر");
            } else if (json_data.state === "error_4") {
                alert_box.failMessage("لا توجد قوات كافية بالبطل");
            } else if (json_data.state === "error_5") {
                alert_box.failMessage("البطل ليس بالمدينة");
            } else {

                alert(data);

            }

            city_profile.refresh_army_view();
        },
        error: function(jqXHR, textStatus, errorThrown) {
            console.log(errorThrown);
        }
    });
};


game.HeroArmy.TransArmyFromCityToHero = function() {

    var amount = Math.floor($("#input-army-move").val());
    var idHero = $("#confirmTransArmy").attr("data-drop-id-hero");
    var ArmyHeroPlace = $("#confirmTransArmy").attr("data-drop-army-place");
    var ArmyCityPlace = $("#confirmTransArmy").attr("data-drag-army-place");
    $("#confirmTransArmy").attr("disabled", "disabled");

    $.ajax({
        url: `https://${WS_HOST}:${WS_PORT}/api/AHeroArmy/transArmyFromCityToHero`,
        data: {
            idHero: idHero,
            amount: amount,
            idCity: game.CurrentCity.City.id_city,
            ArmyPlace: ArmyHeroPlace,
            ArmyType: ArmyCityPlace,
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idPlayer: game.DPlayer.Player.id_player

        },
        type: 'GET',
        beforeSend: function(xhr) {},
        success: function(data, textStatus, jqXHR) {

            $("#confirmTransArmy").removeAttr("disabled");
            $("#over_lay_alert").remove();
            if (isJson(data)) {
                var json_data = JSON.parse(data);
            } else {
                alert(data);
                return;
            }

            if (json_data.state == "SysBusy")
                return alert_box.confirmMessage("النظام مشغول الان حاول فى وقت لاحق");
            if (json_data.state === "ok") {

                game.CurrentCity.City = json_data.City;
                game.Hero.getHero(idHero).Army = json_data.HeroArmy;


                army.refreshArmy_rightTrade();
                army.refreshArmy_leftTrade();

                city_profile.refresh_army_view();

                $("#down-trade-army").html(army.downTradeArmy());

            } else if (json_data.state === "error_3") {
                alert_box.failMessage("لا يمكن نقل هذه الكمية");
            } else if (json_data.state === "error_4") {
                alert_box.failMessage("سعة البطل لا تكفى");
                console.log(json_data);
                console.log(getHeroCapById(Number(id_hero)) - getHeroMaxCap(game.Hero.getHero(id_hero)));
            } else if (json_data.state === "error_5") {
                alert_box.failMessage("البطل ليس فى المدينة");
            } else if (json_data.state === "error_6") {
                alert_box.failMessage("لا يوجد جيش يكفى فى المدينة");

                game.City.getCityBase().done(function(data) {
                    $("#down-trade-army").html(army.downTradeArmy());
                });

            } else {

                alert(data);

            }

        },
        error: function(jqXHR, textStatus, errorThrown) {
            console.log(errorThrown);
        }
    });
};

$(document).on("click", "#confirmTransArmy", function() {

    var amount = Math.floor($("#input-army-move").val()) || 0; // amount in  input
    var maxAmount = $(this).attr("data-max-num");
    var DragPlace = $(this).attr("data-drag-place");
    var DropPlace = $(this).attr("data-drop-place");
    $("#confirmTransArmy").attr("disabled", "disabled");
    $("#confirmTransArmy").prop("disabled", true);
    if (amount < 1) {
        $("#over_lay_alert").remove();
        alert_box.failMessage("عدد القوات غير كافى");
        return;
    }


    if (DragPlace == "hero") {

        if (DropPlace == "hero") {
            game.HeroArmy.TransArmyFromHeroToHero();
        } else if (DropPlace == "city") {
            game.HeroArmy.TransArmyFromHeroToCity();
        } else {

            alert("unknown Drop Name")

        }



    } else if (DragPlace == "city") {

        if (DropPlace == "hero") {
            game.HeroArmy.TransArmyFromCityToHero();
        } else {
            alert("unknown Drop Name 2")
        }


    } else {
        alert("Droplace Error");
    }

});



$(document).on("click", "#swap_army", function() {



    var right_hero_id = $(".right-content").children(".army_container").attr("id_hero");
    var left_hero_id = $(".middle-content").children(".army_container").attr("id_hero");
    var id_city = game.CurrentCity.City.id_city;
    var temp_ol = $("#hero-right-ol").html();
    var temp_o_l = $("#hero-left-ol").html();


    var first_cap = getHeroCap(game.CurrentHero.Army);
    var sec_cap = getHeroCap(game.NextHero.Army);
    var first_max = getHeroMaxCap(game.CurrentHero);
    var sec_max = getHeroMaxCap(game.NextHero);

    if (first_cap === 0 && sec_cap === 0) {
        return;
    }

    if (!heroAvailableForTask(right_hero_id) || !heroAvailableForTask(left_hero_id)) {
        $("body").append(alert_box.confirmMessage("لا يمكن نقل القوات </br> البطل فى مهمة"));
        return false;
    }

    if (first_cap > sec_max || sec_cap > first_max) {

        $("body").append(alert_box.confirmMessage("لا يمكن نقل القوات"));
        return;
    }

    $.ajax({
        url: `https://${WS_HOST}:${WS_PORT}/api/AHeroArmy/swapHeroArmy`,
        data: {
            idHeroRight: right_hero_id,
            idHeroLeft: left_hero_id,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'GET',
        beforeSend: function(xhr) {
            $("#swap_army").attr("disabled", "disabled");
            waitCursor();
        },
        success: function(data, textStatus, jqXHR) {
            unwaitCursor();

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state === 'ok') {

                game.NextHero.Army = JsonObject.HeroArmyRight;
                game.CurrentHero.Army = JsonObject.HeroArmyLeft;
                $("#swap_army").removeAttr("disabled");
                $("#hero-left-ol").html(temp_ol);
                $("#hero-right-ol").html(temp_o_l);
                $(".hero-1  ol li:nth-child(2) .header-2:nth-child(2)").html(sec_cap + "/" + first_max);
                $(".hero-2  ol li:nth-child(2) .header-2:nth-child(2)").html(first_cap + "/" + sec_max);
            } else if (JsonObject.state === "error_1")
                alert_box.failMessage("البطل لايستوعب العدد الحالى");
            else if (JsonObject.state === "error_2")
                alert_box.failMessage("البطل ليس فى المدينة");
            else if (JsonObject.state == "SysBusy")
                alert_box.confirmMessage("النظام مشغول الان حاول فى وقت لاحق");


        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });
});



$(document).on("click", "#left-down , #right-down", function() {

    // get id_hero
    var id_hero = $(this).attr("id_hero");

    if (!heroAvailableForTask(id_hero)) {
        $("body").append(alert_box.confirmMessage("لا يمكن نقل القوات </br> البطل فى مهمة"));
        return false;

    }

    if ($(this).attr("id") === "left-down") {
        if (getHeroCapById(game.CurrentHero.Hero.id_hero) <= 0) {
            return;
        }
    } else {
        if (getHeroCapById(game.NextHero.Hero.id_hero) <= 0) {
            return;
        }
    }

    var id_city = game.CurrentCity.City.id_city;
    var this_ = $(this);

    $.ajax({
        url: `https://${WS_HOST}:${WS_PORT}/api/AHeroArmy/clearHeroArmy`,
        data: {
            idHero: id_hero,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'GET',
        beforeSend: function(xhr) {
            waitCursor();
            $("#left-down , #right-down").attr("disabled", "disabled");
        },
        success: function(data, textStatus, jqXHR) {
            unwaitCursor();
            $("#left-down , #right-down").removeAttr("disabled");
            if (isJson(data)) {
                var json_data = JSON.parse(data);
            } else {
                alert(data);
                return;
            }

            if (json_data.state === "ok") {
                game.City.getCity(id_city).City = json_data.City;

                game.Hero.getHero(id_hero).Army = json_data.HeroArmy;

            } else if (json_data.state === "error_1") {
                alert_box.failMessage("البطل ليس فى المدينة");
            } else if (JsonObject.state == "SysBusy")
                alert_box.confirmMessage("النظام مشغول الان حاول فى وقت لاحق");


            city_profile.refresh_army_view();
            army.refreshArmy_leftTrade();
            army.refreshArmy_rightTrade();
            $("#down-trade-army").html(army.downTradeArmy());
        },
        error: function(jqXHR, textStatus, errorThrown) {
            console.log(jqXHR);
        }
    });

});
/*
 * 
 * @param {string} user_for   اسم الحالة الى هتستعمل فيها الحاجة دى 
 * @param {string} matrial هنا اسم المتريل الى  هيستملوها 
 * 
 * @returns {undefined}
 */

/*special material*/
/* global matrial_player, game.CurrentCity.City, city_profile */

const SPECIAL_MATRIAL = ["certain_move", "random_move", "tagned_3p", "tagned_4p", "tagned_5p", "tagned_6p", "tagned_7p", "tagned_8p"];
/**
 * 
 * @param {type} user_for
 * @param {sting} matrial
 * @param {object} other  optional
 * @returns {undefined}
 */
function useMatrial(user_for, matrial, other) {

    var idCity = Number(game.CurrentCity.City.id_city);
    $("#useItemButton").attr("disabled", true);
    if (Matrial.getPlayerAmount(matrial) <= 0) {

        $("#over_lay_alert").remove();
        alert_box.confirmMessage("لا يوجد لديك " + Matrial.getMatrial(matrial).name + "  فى صندوق الموارد خاصتك");
        return;
    }

    /*
     *  user wants to add xp to hero
     */
    if (user_for === "add_xp") {

        if (!heroAvailableForTask(game.CurrentHero.Hero.id_hero)) {
            $("#over_lay_alert").remove();
            $("#over_lay").remove();
            alert_box.confirmMessage("لا يمكن اضافة خبرة للبطل حيث ان البطل بالخارج");
            return;
        }

        var idHero = game.CurrentHero.Hero.id_hero;
        $.ajax({
            url: `${API_URL}/api/AHero/addExp`,
            data: {
                itemToUse: matrial,
                idHero: idHero,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {
                $("#useItemButton").removeAttr("disabled");
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.Hero.getHero(idHero).Hero = JsonObject.Hero;
                    $("#over_lay_alert").remove();
                    $("#over_lay").remove();
                    Matrial.takeFrom(matrial, 1);
                    $(".middle-content").replaceWith(army.middle_content(game.CurrentHero));
                    alert_box.succesMessage(` +${JsonObject.Exp} EXP`);
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });
        /*
         *  user wants to add power to hero
         */
    } else if (user_for === "add_power") {

        if (!heroAvailableForTask(game.CurrentHero.Hero.id_hero)) {
            $("#over_lay_alert").remove();
            $("#over_lay").remove();
            alert_box.confirmMessage("لا يمكن اضافة قوة بدنية للبطل حيث ان البطل بالخارج");
            return;
        }
        var idHero = game.CurrentHero.Hero.id_hero;
        $.ajax({
            url: `${API_URL}/api/AHero/addPower`,
            data: {
                itemToUse: matrial,
                idHero: idHero,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {
                $("#useItemButton").removeAttr("disabled");
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {

                    game.Hero.getHero(idHero).Hero = JsonObject.Hero;
                    $("#over_lay_alert").remove();
                    $("#over_lay").remove();
                    Matrial.takeFrom(matrial, 1);
                    $(".middle-content").replaceWith(army.middle_content(game.CurrentHero));
                    alert_box.succesMessage(` +${JsonObject.power} قوة بدنية`);
                } else if (JsonObject.state === "error_0") {
                    alert_box.failMessage("البطل ليس ملك لك");
                } else if (JsonObject.state === "error_1") {
                    alert_box.failMessage("البطل فى اعلى قدرة بدنية ممكنة");
                } else if (JsonObject.state === "error_2") {
                    alert_box.failMessage("لا تمتلك مواد كافية");
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });
        /*
         *  user wants to add loyality to hero
         */
    } else if (user_for === "add_loy") {

        if (!heroAvailableForTask(game.CurrentHero.Hero.id_hero)) {
            $("#over_lay_alert").remove();
            $("#over_lay").remove();
            alert_box.confirmMessage("لا يمكن اضافة  ولاء للبطل حيث ان البطل بالخارج");
            return;
        }
        var idHero = game.CurrentHero.Hero.id_hero;
        $.ajax({
            url: `${API_URL}/api/AHero/addLoy`,
            data: {
                itemToUse: matrial,
                idHero: idHero,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {
                $("#useItemButton").removeAttr("disabled");
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.Hero.getHero(idHero).Hero = JsonObject.Hero;
                    $("#over_lay_alert").remove();
                    $("#over_lay").remove();
                    Matrial.takeFrom(matrial, 1);
                    $(".middle-content").replaceWith(army.middle_content(game.CurrentHero));
                    alert_box.succesMessage(` +${JsonObject.loy}  ولاء`);
                } else if (JsonObject.state === "error_0") {
                    alert_box.failMessage("البطل ليس ملك لك");
                } else if (JsonObject.state === "error_1") {
                    alert_box.failMessage("البطل فى اعلى قدرة ولاء ممكنة");
                } else if (JsonObject.state === "error_2") {
                    alert_box.failMessage("لا تمتلك مواد كافية");
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });
    } /* end add loyality*/
    else if (user_for === "retreat_points") {


        if (Matrial.getPlayerAmount(matrial) < Math.floor(game.CurrentHero.Hero.lvl / 10) + 1) {
            $("#over_lay_alert").remove();
            $("#over_lay").remove();
            alert_box.failMessage("لا توجد لديك موارد كافية");
            return;
        }
        if (!heroAvailableForTask(game.CurrentHero.Hero.id_hero)) {
            $("#over_lay_alert").remove();
            $("#over_lay").remove();
            alert_box.confirmMessage("البطل خارج المدينة");
            return;
        }

        var idHero = game.CurrentHero.Hero.id_hero;
        $.ajax({
            url: `${API_URL}/api/AHero/resetHeroPoints`,
            data: {
                idHero: idHero,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {
                $("#useItemButton").removeAttr("disabled");
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.Hero.getHero(idHero).Hero = JsonObject.Hero;
                    game.City.getCity(idCity).City = JsonObject.CityRes;
                    $("#over_lay_alert").remove();
                    $("#over_lay").remove();
                    $(".middle-content").replaceWith(army.middle_content(game.CurrentHero));
                    Matrial.takeFrom(matrial, Math.floor(game.CurrentHero.Hero.lvl / 10) - 1);
                } else if (JsonObject.state === "error_0") {
                    alert_box.failMessage("البطل ليس ملك لك");
                } else if (JsonObject.state === "error_1") {
                    alert_box.failMessage("لا تمتلك مواد كافية");
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });
    } /*  end else if  */
    else if (user_for === "add_medal") {
        var url = "";
        if (matrial === "medal_ceasro")
            url = `${API_URL}/api/AHeroMedal/activateCiceroMedal`;
        if (matrial === "medal_den")
            url = `${API_URL}/api/AHeroMedal/activateDentatusMedal`;
        if (matrial === "medal_leo")
            url = `${API_URL}/api/AHeroMedal/activateLeonidasMedal`;
        if (matrial === "ceaser_eagle")
            url = `${API_URL}/api/AHeroMedal/activateCaeserMedal`;
        if (Number(game.CurrentHero.Hero.in_city) !== game.Hero.HeroState.HERO_IN_CITY) {
            $("#over_lay_alert").remove();
            $("#over_lay").remove();
            alert_box.confirmMessage("البطل خارج المدينة");
            return;
        }


        $.ajax({
            url: url,
            type: 'POST',
            data: {
                idHero: game.CurrentHero.Hero.id_hero,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {
                $("#useItemButton").removeAttr("disabled");
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                $("#over_lay_alert").remove();
                $("#over_lay").remove();
                if (JsonObject.state === "ok") {

                    game.CurrentHero.Medal = JsonObject.HeroMedal;
                    game.City.getCity(idCity).City = JsonObject.CityRes;
                    $(".middle-content").replaceWith(army.middle_content(game.CurrentHero));
                    city_profile.refresh_resource_view();
                } else if (JsonObject.state === "error_0") {
                    alert_box.failMessage("البطل ليس ملك لك");
                } else if (JsonObject.state === "error_1") {
                    alert_box.failMessage("لا تمتلك مواد كافية");
                } else if (JsonObject.state === "error_2") {
                    alert_box.failMessage("البطل ليس فى المدينة");
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });
    }
    /**************************************************************************/
    /*_________________________   UPGRADE GUILD  _____________________________*/
    else if (user_for === "upgrade_guild") {

        $.ajax({

            url: `${API_URL}/api/AGuild/upgradeUsingItem`,
            data: {
                itemToUse: matrial,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {
                $("#useItemButton").removeAttr("disabled");
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var jsonObject = JSON.parse(data);
                if (jsonObject.state === "ok") {
                    game.Guild.GuildData = jsonObject.GuildData;
                    $("#over_lay_alert").remove();
                    $("#over_lay").remove();
                    Matrial.takeFrom(matrial, 1);
                    Guild.content_forUpgrade();
                } else if (jsonObject.state === "error_0") {
                    alert_box.failMessage("لست عضو باى حلف");
                } else if (jsonObject.state === "error_1") {
                    alert_box.failMessage("رتبتك اقل من المطلوب");
                } else if (jsonObject.state === "error_3") {
                    alert_box.failMessage("نوع المادة غير معروف");
                } else if (jsonObject.state === "error_4") {
                    alert_box.failMessage("لا يوجد مواد كافية");
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });
    }



    /*___________________________________________________________________*/
    /*                                    buildind acce                 */
    else if (user_for === "building_acce") {

        var idTask = other;
        $.ajax({

            url: `${API_URL}/api/ACityBuilding/speedUp`,
            data: {
                idCity: idCity,
                itemToUse: matrial,
                idWorking: idTask,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {
                $("#useItemButton").removeAttr("disabled");
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {

                    $("#over_lay_alert").remove();
                    $("#over_lay").remove();
                    $(".close_select_menu").click();
                    Matrial.takeFrom(matrial, 1);
                    for (var iii in game.TimedTask.TaskList.Building)
                        if (Number(game.TimedTask.TaskList.Building[iii].id_city) === Number(idCity))
                            delete(game.TimedTask.TaskList.Building[iii]);
                    for (var iii in JsonObject.list)
                        game.TimedTask.TaskList.Building[JsonObject.list[iii].id] = JsonObject.list[iii];
                    game.TimedTask.refreshListView();
                    $("#dialg_box .nav_bar .left-nav ul li[head_title=motiv]").hasClass("selected") ?
                        $("#dialg_box .nav_bar .left-nav ul li[head_title=motiv]").trigger("click") :
                        "";
                } else if (JsonObject.state === "error_0") {
                    alert_box.failMessage("لا توجد مواد كافية");
                } else if (JsonObject.state === "error_1") {
                    alert_box.failMessage("نوع المادة غير معروف");
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });
    } else if (user_for === "jop_acce") {

        var idTask = other;
        $.ajax({

            url: `${API_URL}/api/ACityJop/speedUpHiring`,
            data: {
                idTask: idTask,
                itemToUse: matrial,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {
                $("#useItemButton").removeAttr("disabled");
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {

                    $("#over_lay_alert").remove();
                    $("#over_lay").remove();
                    $(".close_select_menu").click();
                    Matrial.takeFrom(matrial, 1);
                    for (var iii in game.TimedTask.TaskList.Jop)
                        if (Number(game.TimedTask.TaskList.Jop[iii].id_city) === Number(idCity))
                            delete(game.TimedTask.TaskList.Jop[iii]);
                    for (var iii in JsonObject.JopTaskList)
                        game.TimedTask.TaskList.Jop[JsonObject.JopTaskList[iii].id] = JsonObject.JopTaskList[iii];
                    game.TimedTask.refreshListView();
                    $("#dialg_box .nav_bar .left-nav ul li[head_title=motiv]").hasClass("selected") ?
                        $("#dialg_box .nav_bar .left-nav ul li[head_title=motiv]").trigger("click") :
                        "";
                } else if (JsonObject.state === "error_0") {
                    alert_box.failMessage("دفعة التوظيف غير موجودة");
                } else if (JsonObject.state === "error_1") {
                    alert_box.failMessage("لا توجد مواد كافية");
                } else if (JsonObject.state === "error_2") {
                    alert_box.failMessage("نوع المادة غير معروف");
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });
    }



    /*   _________________________________________________________________    */
    /*                           study acce                                  */
    else if (user_for === "study_acce") {

        var idTask = other;
        $.ajax({

            url: `${API_URL}/api/APlayerEdu/speedUpStudyTask`,
            data: {
                itemToUse: matrial,
                idTask: idTask,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {

                $("#useItemButton").removeAttr("disabled");
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {
                    $("#over_lay_alert").remove();
                    $("#over_lay").remove();
                    Matrial.takeFrom(matrial, 1);
                    for (var iii in game.TimedTask.TaskList.Study)
                        if (Number(game.TimedTask.TaskList.Study[iii].id_city) === Number(idCity))
                            delete(game.TimedTask.TaskList.Study[iii]);

                    for (var iii in JsonObject.list)
                        game.TimedTask.TaskList.Study[JsonObject.list[iii].id] = JsonObject.list[iii];
                    game.TimedTask.refreshListView();
                    buildingClick($("#dialg_box .box_header").attr("place"), true);
                } else if (JsonObject.state === "error_0") {
                    alert_box.failMessage("دفعة الدراسة غير موجودة");
                } else if (JsonObject.state === "error_1") {
                    alert_box.failMessage("لا توجد مواد كافية");
                } else if (JsonObject.state === "error_2") {
                    alert_box.failMessage("نوع المادة غير معروف");
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });
    }

    /*   house   change    */
    else if (user_for === "reset_helper") {

        $.ajax({

            url: `${API_URL}/api/ACity/resetCityHelper`,
            data: {
                itemToUse: matrial,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {
                $("#useItemButton").removeAttr("disabled");
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {

                    game.City.getCity(idCity).City = JsonObject.City;
                    alert_box.succesMessage("تم تعديل المساعد بنجاح");
                    $(".building_worship").replaceWith(Building.dialogBoxContnet_forworship());
                    city_profile.refresh_resource_view();
                } else if (JsonObject.state === "error_0") {
                    alert_box.failMessage("خطاء بالمدينة");
                } else if (JsonObject.state === "error_1") {
                    alert_box.failMessage("لا يوجد مساعد بالمدينة");
                } else if (JsonObject.state === "error_2") {
                    alert_box.failMessage("لا توجد مواد كافية");
                }

                $("#over_lay_alert").remove();
                $("#over_lay").remove();
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });
    }


    /*  acce trainning       in  the all building   */
    else if (user_for === "army_build_acce") {

        var idTask = other;
        $.ajax({

            url: `${API_URL}/api/AArmyBatch/speedUpBatches`,
            data: {
                idBatch: idTask,
                itemToUse: matrial,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {
                $("#useItemButton").removeAttr("disabled");
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {

                    for (var iii in JsonObject.armyBatches) {
                        if (game.TimedTask.TaskList.Army[JsonObject.armyBatches[iii].id]) {
                            game.TimedTask.TaskList.Army[JsonObject.armyBatches[iii].id].time_start = JsonObject.armyBatches[iii].time_start;
                            game.TimedTask.TaskList.Army[JsonObject.armyBatches[iii].id].time_end = JsonObject.armyBatches[iii].time_end;
                            game.TimedTask.TaskList.Army[JsonObject.armyBatches[iii].id].acce = JsonObject.armyBatches[iii].acce;
                        }
                    }

                }


                Matrial.takeFrom(matrial, 1);
                Building.militrayProduction.left($(".box_header").attr("place"));
                $("#over_lay_alert").remove();
                $("#over_lay").remove();
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });
    } else if (user_for === "add_city_builder") {
        $("#useItemButton").removeAttr("disabled");
        useMatrialBox(matrial);
        $("#over_lay_alert").remove();
        $("#over_lay").remove();
    }



    /*_________________________CHANGE GUILD SLOGAN___________________________________*/
    else if (user_for === "change_g_slog") {

        var slog_btm = $(".guild_slogan img:first").attr("data-cur_image");
        var slog_top = $(".guild_slogan img:last").attr("data-cur_image");
        var slog_cnt = $(".guild_slogan img:nth-child(2)").attr("data-cur_image");
        const newGuildName = $("#newGuildNameInput").val();


        $.ajax({

            url: `https://${WS_HOST}:${WS_PORT}/api/AGuild/changeGuildName`,
            data: {
                slog_top,
                slog_cnt,
                slog_btm,
                newGuildName,
                token: game.Config.OuthToken,
                server: game.Config.idServer

            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {
                $("#useItemButton").removeAttr("disabled");
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                const JsonObjet = JSON.parse(data);
                if (JsonObjet.state === "ok") {
                    Matrial.takeFrom(matrial, 1);
                    $(".close-alert_container").click();
                    $(".guild_dialog_box .nav_bar .left-nav .selected").click();
                    Guild.getGuildData();
                    alert_box.succesMessage("تم تعديل الشعار بنجاح");
                    $("#over_lay_alert").remove();
                    $("#over_lay").remove();
                } else if (JsonObjet.state == "error_0") {
                    alert_box.failMessage("لست عضو فى الحلف")
                } else if (JsonObjet.state == "error_1") {
                    alert_box.failMessage("رتبتك لا تسمح");
                } else if (JsonObjet.state == "error_2") {
                    alert_box.failMessage("لا يمكن لإسم الخلف أن يكون أكثر من 15 حرف ")
                } else if (JsonObjet.state == "error_3") {
                    alert_box.failMessage("لا يوجد مواد كافية");
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });
    } else if (user_for === "change_player_name") {


        var new_name = $("#playe-new-name").val();
        if (new_name.length < 3) {

            alert_box.confirmMessage("اسم الملك صغير ");
            $("#over_lay_alert").remove();
            $(".select_over_lay").remove();
            return;
        } else if (new_name.length > 10) {

            alert_box.confirmMessage("اسم الملك كبير ");
            $("#over_lay_alert").remove();
            $(".select_over_lay").remove();
            return;
        } else if (new_name === game.DPlayer.Player.name) {

            alert_box.confirmMessage("يجب ان يكون الاسم الجديد مختلف");
            $("#over_lay_alert").remove();
            $(".select_over_lay").remove();
            return;
        } else {


            $.ajax({

                url: `${API_URL}/api/APlayer/changePlayerName`,
                data: {
                    NewName: new_name,
                    token: game.Config.OuthToken,
                    server: game.Config.idServer
                },
                type: 'POST',
                success: function(data, textStatus, jqXHR) {
                    $("#useItemButton").removeAttr("disabled");
                    if (!game.LBase.isJson(data))
                        return game.LBase.Error(data);
                    var JsonObject = JSON.parse(data);
                    if (JsonObject.state === "ok") {

                        $("#A-A-P-name").html(new_name + '<img src="images/btns/edit.png" class="img-sml" style="vertical-align: middle; margin-left: 15px" id="edit-player-name-btn">');
                        $(".avatar-name h1").html(new_name);
                        $("#over_lay_alert").remove();
                        $(".select_over_lay").remove();
                        game.DPlayer.Player = JsonObject.Player;
                        Player_profile.refresh_view();
                        alert_box.succesMessage("تم تغير الإسم بنجاح");

                    } else if (JsonObject.state === "error_2")
                        alert_box.failMessage("يوجد لاعب يحمل نفس الاسم");
                },
                error: function(jqXHR, textStatus, errorThrown) {

                }

            });
        }

    } else if (user_for === "increase-city-util") {

        useMatrialBox(matrial);
        $("#over_lay_alert").remove();
        $("#over_lay").remove();
    }


    /* refresh city theater with matrial*/
    else if (user_for === "refresh_theater_with_mat") {


        var all_heros = "";
        var left_content = "";


        $.ajax({

            url: `${API_URL}/api/ACityHero/refreshHeroTheaterWithLetter`,
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer,
                idCity: game.CurrentCity.City.id_city

            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {
                $("#useItemButton").removeAttr("disabled");
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                $("#over_lay_alert").remove();
                $("#over_lay").remove();
                Matrial.takeFrom(matrial, 1);
                alert_box.succesMessage("تم تحديث قائمة الابطال");
                buildingClick(cityHasType(BUILDING_TYPS.THEATER), true);
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });
    }


    /*  accelerate arriving deals*/
    else if (user_for === "acce-arriving-deal") {

        if (isNaN(other)) {
            alert("error here");
            console.log(other);
            return;
        }


        var id_deal = Number(other);
        $.ajax({

            url: `https://${WS_HOST}:${WS_PORT}/api/ACityMarket/speedUpDealTrans`,
            data: {
                idOffer: id_deal,
                idCity: game.CurrentCity.City.id_city,
                token: TOKEN
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {
                $("#useItemButton").removeAttr("disabled");
                if (isJson(data)) {
                    console.log(data);
                    var json_data = JSON.parse(data);

                    game.CurrentCity.City = json_data.cityRes;
                    city_profile.refresh_resource_view();
                    $("#my-comming-offers .tr[data-id-deal='" + id_deal + "']").remove();
                    $("#my-comming-offers").append('<div class="tr"></div>');
                    $(".close_select_menu").trigger("click");
                    $("#alert_container .close-alert").trigger("click");
                    Matrial.takeFrom(matrial, 1);
                } else {

                    alert(data);
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });
    }


    /* ازالة المبنى */
    else if (user_for === "downgrade-building-lvl") {

        var building_place = other;
        if (game.City.getCity().BuildingType[building_place] > 12) {
            alert_box.failMessage(`لا يمكنك هدم ${BuildingConstData[game.City.getCity().BuildingType[building_place]].title} `);
            return;
        }
        $.ajax({
            url: `${API_URL}/api/ACityBuilding/explodeBuilding`,
            data: {
                BuildingPlace: building_place,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {
                $("#useItemButton").removeAttr("disabled");
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {


                    game.City.getCity().BuildingType[building_place] = 0;
                    game.City.getCity().BuildingLvl[building_place] = 0;
                    fillCityWithBuilding();
                    alert_box.close();
                    $('.close_select_menu').trigger("click");
                    $('.close_dialog').trigger("click");
                    alert_box.succesMessage("تم  ازالة المبنى بنجاح");
                    Matrial.takeFrom(matrial, 1);
                    if (Number(game.City.getCity().BuildingType[building_place]) === BUILDING_TYPS.COTTAGE) {

                        game.City.getCityBase();
                    } else if (Number(game.City.getCity().BuildingType[building_place]) === BUILDING_TYPS.STORE) {

                        game.City.getCityBase();
                        game.City.getCityStorage();
                    } else if (Number(game.City.getCity().BuildingType[building_place]) === BUILDING_TYPS.PALACE) {
                        game.City.getCityBase();
                    } else if (Number(game.City.getCity().BuildingType[building_place]) === BUILDING_TYPS.WORSHIP) {
                        game.City.getCityBase();
                    } else if (Number(game.City.getCity().BuildingType[building_place]) === BUILDING_TYPS.WALL) {
                        game.City.getCityBase();
                    }


                } else if (JsonObject.state === "error_0") {
                    alert_box.failMessage('لا يوجد لديك براميل بارود كافية');
                } else if (JsonObject.state === "error_1") {
                    alert_box.failMessage("لا يمكنك هدم هذا المبنى");
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });
    }

    /*------------------------------------------------------------------------*/
    /*____________________________GOD_GATE____________________________________*/
    else if (user_for === "add-god-points") {

        GodGate.useBoxPoint(matrial);
    } else if (user_for === "open-fourth-cell") {
        GodGate.OpenFourthCell(other);
    } else if (user_for === "addArenaExp") {
        game.ArenaChallange.addExpByBox(matrial);
    } else if (user_for === "addArenaAtt") {
        game.ArenaChallange.addAttByBox(matrial);
    }

}



/* الفنكشن دى الى هستعملها مع كل المواد الى فى صندوق المود*/

function useMatrialBox(matrial_name) {
    var amount = parseInt($("#amount_to_use").val() || 1);
    if (amount <= 0) {

        $(".close-alert_container").trigger("click");
        alert_box.confirmMessage("عدد الاستخدام غير صالح");
        return;
    }
    if (!isInt(Number(amount))) {

        alert_box.failMessage("لا يمكن ان تكون الارقام عشرية");
        return;
    }

    if (Matrial.getPlayerAmount(matrial_name) < amount) {
        $(".close-alert_container").trigger("click");
        alert_box.confirmMessage("لا يوجد لديك عدد كافى من المواد");
        return;
    }
    if (matrial_name === "luck_play") {
        $(".close-alert_container").click();
        $(".close_dialog").click();
        $("#luck-wheel-btn").click();
        return;
    }

    /* some matrial need values before thay send to server*/
    if (SPECIAL_MATRIAL.indexOf(matrial_name) > -1) {

        switch (matrial_name) {


            case "certain_move":

                if (isNaN($("#new-city-y-coord").val()) || isNaN($("#new-city-x-coord").val())) {
                    alert_box.confirmMessage("عفوا عليك تحديد امكان المراد الانتقال له");
                    return;
                }

                break;
        }

    }

    if (matrial_name === "beginner_back_1" && game.City.getCity().BuildingLvl.palace < 2) {
        $(".close-alert_container").click();
        alert_box.failMessage("يجب ان يكون القصر مستوى 2 لتستطيع فتح الصندوق");
        return;
    } else if (matrial_name === "beginner_back_2" && game.City.getCity().BuildingLvl.palace < 4) {
        $(".close-alert_container").click();
        alert_box.failMessage("يجب ان يكون القصر مستوى 4 لتستطيع فتح الصندوق");
        return;
    } else if (matrial_name === "beginner_back_3" && game.City.getCity().BuildingLvl.palace < 6) {
        $(".close-alert_container").click();
        alert_box.failMessage("يجب ان يكون القصر مستوى 6 لتستطيع فتح الصندوق");
        return;
    } else if (matrial_name === "beginner_back_4" && game.City.getCity().BuildingLvl.palace < 8) {
        $(".close-alert_container").click();
        alert_box.failMessage("يجب ان يكون القصر مستوى 8 لتستطيع فتح الصندوق");
        return;
    } else if (matrial_name === "beginner_back_5" && game.City.getCity().BuildingLvl.palace < 10) {
        $(".close-alert_container").click();
        alert_box.failMessage("يجب ان يكون القصر مستوى 10 لتستطيع فتح الصندوق");
        return;
    } else if (GodGate.matrialUse.indexOf(matrial_name) > -1) {

        GodGate.useBoxPoint(matrial_name, amount);
        return;
    }

    if (game.BaseData.Items[matrial_name])
        if ($.isFunction(game.BaseData.Items[matrial_name][`UseFunc`])) {
            game.BaseData.Items[matrial_name][`UseFunc`](amount).done(function(data) {
                $("#useItemButton").removeAttr("disabled");
                $("#usePlayerItemBox").removeAttr("disabled");
                if (game.LBase.isJson(data))
                    if (JSON.parse(data).state === "ok")
                        Matrial.takeFrom(matrial_name, amount);
                $("#alert_head .close-alert_container").click();
                alert_box.succesMessage(`تم  استعمال ${amount} ${game.BaseData.Items[matrial_name].name} بنجاح`);
                $(".matrial_unit").each(function(el) {
                    var Mat = $(this).attr("matrial_type");
                    $(this).children(".img-inside-box").children(".player_amount").children("p").html(Matrial.getPlayerAmount(Mat))
                });
            });
        } else {
            alert("Item FunctionNot Found");
            alert(matrial_name);
            alert(JSON.stringify(game.BaseData.Items[matrial_name]));
        }
    else
        alert("Item Not Found");
}


function buyMatrial(matrial, amount) {

    if (amount === undefined) {
        amount = Number($("#amount_to_buy").val()) || 1;
    }

    if (!isInt(Number(amount))) {

        alert_box.failMessage("لا يمكن ان تكون الارقام عشرية");
        return;
    }

    if (amount <= 0) {
        alert_box.failMessage("لا يمكن  شراء هذة الكمية");
        return;
    }

    if (game.DPlayer.Player.gold < game.BaseData.Items[matrial].gold * amount) {

        $("body").append(alert_box.confirmMessage(" ليس لديك قطع ذهب كافية<br> <a href='gold_buy.php'> لشراء ذهب اضغط هنا</a>"));
        return;
    }


    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/AItem/buyItem`,
        data: {
            item: matrial,
            amount: amount,
            token: game.Config.OuthToken,
            server: game.Config.idServer

        },
        type: 'GET',
        success: function(data, textStatus, jqXHR) {
            $("#useItemButton").removeAttr("disabled");
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);
            var JsonObject = JSON.parse(data);
            if (JsonObject.state === "ok") {

                Player_profile.refreshMatrialBox().done(function(data) {
                    $(".matrial_unit").each(function() {

                        if ($(this).attr("matrial_type") === matrial) {

                            $(this).children(".img-inside-box").children(".player_amount").children("p").html(getArabicNumbers(Matrial.getPlayerAmount(matrial)));
                        }


                    });
                });
                Player_profile.getPlayerBaseData().done(function(data) {
                    $(".budget .txt").html("لديك:" + getArabicNumbers(game.DPlayer.Player.gold));
                });
                $(".close-alert_container").click();
                alert_box.succesMessage("تمت عملية الشراء بنجاح");
            } else {
                alert(data);
            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });
}




function successfulUse(matrial, json_obj, amount) {

    $("#dialg_box .right-content .total").html(game.Item.ItemBox($("#dialg_box .right-content .total").attr("mat_table"), $("#nav-item-box-right").attr("data-current-offset")));
}




$(document).on("click", "#goToMall", function() {

    $(".menu-list").each(function() {

        if ($(this).data("show") === "matrial") {

            $(this).click();
        }

    });
});

function BoxOfMatrialToUse(matrials, use_for, amount, other) {

    var all_list = "";
    if (amount === undefined) {
        amount = 1;
    }

    for (var index in matrials) {

        all_list += `<li>
                        <div  class=" pull-L left">
                            <div class="ar_title">${game.BaseData.Items[matrials[index]].name}</div>
                            <div class="quant">
                                ${getArabicNumbers(Matrial.getPlayerAmount(matrials[index]))}
                            </div>
                            <div class="image">
                                <img src="${game.BaseData.Items[matrials[index]].image}"/>
                            </div>
                        </div>
                        <div class="pull-R right">
                            <div class="header">
                                <button class="full-btn full-btn-3x use_matrial_hero" use_for="${use_for}" matrial_name="${matrials[index]}" amount="${amount}" data-other="${other}"> ${Translate.Button.General.Use[UserLag.language]}</button>
                            </div> 
                            <div class="desc">
                                ${game.BaseData.Items[matrials[index]].desc}
                            </div>
                        </div>
                    </li>`;
    }

    var box = `<div id="over_lay" class="select_over_lay" >
                <div id="select_from">
                    <div class="head_bar">
                        <img src="images/style/head_bar.png" class="banner">
                        <div class="title">${Translate.Button.General.Use[UserLag.language]}</div>
                        <img class="close close_select_menu" src="images/btns/close_b.png">
                    </div>
                    <p style="clear: both"></p>
                    <ul class="select_item">
                       ${all_list}
                    </ul>
                </div>
            </div>`;
    $("body").append(box);
}




function showMatrialGiftList(list) {


    var list_item = "";
    for (var iii in list) {
        list_item += `<li>
                        <div class="image">
                            <img  src="${game.BaseData.Items[list[iii].Item].image}"/>
                        </div>
                        <div class="amount stroke">
                            ${list[iii].amount} X
                        </div>
                    </li>`;
    }



    var mat_list = `<div id="over_lay">
                        <div id="select_from">
                            <div class="head_bar">
                                <img src="images/style/head_bar.png" class="banner">
                                <div class="title">قائمة المواد</div>
                                <img class="close close_use_menu" src="images/btns/close_b.png">
                            </div>
                            <p style="clear: both"></p>
                            <div id="matrial-box-gift">
                                <ul class="matrial-list">
                                    ${list_item}
                                </ul>
                            </div>
                        </div>
                    </div>`;
    $("body").append(mat_list);
}

var Matrial = {

    getPlayerAmount: function(matrial) {
        if (game.BaseData.Items[matrial])
            return Number(game.BaseData.Items[matrial].playerAmount);
        return 0;
    },
    getMatrial: function(matrial) {

        return game.BaseData.Items[matrial];
    },
    getMatrialName: function(matrial) {

        return game.BaseData.Items[matrial].name;
    },
    givePlayer: function(matrial, amount) {
        if (!amount) {
            amount = 1;
        }
        if (!game.BaseData.Items[matrial]) {
            return;
        }
        game.BaseData.Items[matrial].playerAmount =
            Number(game.BaseData.Items[matrial].playerAmount) + Number(amount);
    },
    takeFrom: function(matrial, amount) {
        if (!amount) {
            amount = 1;
        }
        if (!matrial)
            return;
        game.BaseData.Items[matrial].playerAmount -= Number(amount);
    },
    takeNeedsForAttack: function(type) {

        if (WorldUnit.isAsianSquads(type)) {
            Matrial.takeFrom("truce_pack", 1);
        } else if (WorldUnit.isGangStar(type)) {
            Matrial.takeFrom("t_map", 1);
        } else if (WorldUnit.isCamp(type) || WorldUnit.isMonawrat(type)) {
            Matrial.takeFrom("necklace_4", 1);
        }

    },
    image: function(mat) {
        return game.BaseData.Items[mat].image;
    },
    table: function(mat) {
        return game.BaseData.Items[mat].db_tab;
    },
    listOf: function(table) {

        var List = {};
        for (var ii in game.BaseData.Items)
            if (game.BaseData.Items[ii].table === table)
                List[ii] = game.BaseData.Items[ii];
        return List;
    }

};
Matrial.prizeToString = function(PrizeList) {

    var stringArray = [];
    for (var jjj in PrizeList) {

        stringArray.push(` x ${PrizeList[jjj].amount} ${this.getMatrialName(PrizeList[jjj].Item)}`);
    }



    return stringArray.join(" , ");
};
Matrial.itemUnitWidget = function(Item, isMall = false) {
    var total = "";
    if (isMall) {


        total = ` <li class="pull-L">
                           <div class="pic">
                               <img src="images/icons/resource/gold.png">
                           </div>
                           <div class="num txt-shadow">${getArabicNumbers(game.BaseData.Items[Item].gold)}</div>
                       </li>
                       <li class="pull-R">
                             <div class="buy_mat_btn">
                                <button class="full-btn full-btn-1x ellipsis">${Translate.Button.MenuList.Buy[UserLag.language]}</button>
                            </div>
                       </li>
`;
    }

    var list = `<li matrial_type="${Item}" class="tooltip_mat matrial_unit">
                   <img src=" images/style/Border-up.png" class="border_up"/>
                   <div class="img-inside-box">
                       <div class="player_amount">
                            <img src="images/icons/shopQuantityBG.png"/>
                             <p>${getArabicNumbers(Matrial.getPlayerAmount(Item))}</p>
                        </div>
                        <div class="wrapper big-img" >
                            <div class="image" style="background-image: url(${game.BaseData.Items[Item].image})"></div>
                        </div>
                        <div class="matrial">
                            <ul>
                            ${isMall ? "" : `<button class="full-btn-3x sell-matrial" data-matrial="${Item}"> عرض المادة للبيع</button>`}
                            `;
    list += total + "</ul>" +
        "</div>" +
        "</div>";
    var tail = ' <div class="txt-inside-box">' +
        '<h2>' + game.BaseData.Items[Item].name + '</h2>' +
        '</div>' +
        '<div  class="tooltip_desc"></div>' +
        '</li>';
    return list + tail + "";
};


$(document).on("click", "#buyNewItem", function() {
    var item = $(this).attr("data-item-name");
    $("#useItemButton").attr("disabled", true);
    buyMatrial(item);
});
game.Item.useItemFunc = function() {

    game.BaseData.Items[`motiv_60`][`UseFunc`] = function(amount) {

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useMotivSpeech`,
            type: 'POST',
            data: {
                Item: "motiv_60",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    Player_profile.getPlayerStateData();
                    game.Building.refreshView();
                }
            }
        });

    };

    game.BaseData.Items[`motiv_7`][`UseFunc`] = function(amount) {

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useMotivSpeech`,
            type: 'POST',
            data: {
                Item: "motiv_7",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    Fixed.refresePlayerStateList();
                    game.Building.refreshView();
                }
            }
        });

    };

    game.BaseData.Items[`prot_pop`][`UseFunc`] = function(amount) {

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useProtPop`,
            type: 'POST',
            data: {
                Item: "prot_pop",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.CurrentCity.City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });

    };

    game.BaseData.Items[`peace`][`UseFunc`] = function(amount) {

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useCeaseFire`,
            type: 'POST',
            data: {
                Item: "peace",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };
    game.BaseData.Items[`a_play`][`UseFunc`] = function(amount) {

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useTheatrics`,
            type: 'POST',
            data: {
                Item: "a_play",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.CurrentCity.City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`freedom_help`][`UseFunc`] = function(amount) {

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useFreedomHelp`,
            type: 'POST',
            data: {
                Item: "freedom_help",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.CurrentCity.City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    alert_box.succesMessage("تم رفع الإستعمار بنجاح");
                    game.World.Map.getWorldCityColonized();
                }

            }
        });

    };

    game.BaseData.Items[`medical_moun`][`UseFunc`] = function(amount) {

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useMedicalStatue`,
            type: 'POST',
            data: {
                Item: "medical_moun",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    game.BaseData.Items[`mediacl_statue`][`UseFunc`] = function(amount) {

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useMedicalStatue`,
            type: 'POST',
            data: {
                Item: "mediacl_statue",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    game.BaseData.Items[`sparta_stab`][`UseFunc`] = function(amount) {

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useAttackAdvancer`,
            type: 'POST',
            data: {
                Item: "sparta_stab",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    game.BaseData.Items[`qulinds_shaft`][`UseFunc`] = function(amount) {

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useAttackAdvancer`,
            type: 'POST',
            data: {
                Item: "qulinds_shaft",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    game.BaseData.Items[`marmlo_helmet`][`UseFunc`] = function(amount) {

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useDefenceAdvancer`,
            type: 'POST',
            data: {
                Item: "marmlo_helmet",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    game.BaseData.Items[`march_prot`][`UseFunc`] = function(amount) {

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useDefenceAdvancer`,
            type: 'POST',
            data: {
                Item: "march_prot",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    if (game['BaseData']['Items']['random_move'])
        game['BaseData']['Items']['random_move']['UseFunc'] = function(amount) {
            return alert_box['randomMove'](function() {
                var Province = $('#move-city-to .select-list')['attr']('data-value');
                return $.ajax({
                    'url': NODE_URL + '/api/AItemUse/useRandomMove',
                    'type': 'POST',
                    'data': {
                        'Item': 'random_move',
                        'amount': 1,
                        'idCity': game['CurrentCity']['City']['id_city'],
                        token: game['Config']['OuthToken'],
                        server: game['Config']['idServer'],
                        'province': Province
                    },
                    success: function(_0x73e02b, _0x3bf26e, _0x2783a1) {
                        if (!game['LBase']['isJson'](_0x73e02b))
                            return game['LBase']['Error'](_0x73e02b);
                        var JsonData = JSON['parse'](_0x73e02b);
                        if (JsonData['state'] === 'ok')
                            game['City']['getCityBase']()['done'](function(_0x1f81a0) {
                                $('#city-data .coords')['html']('[ ' + game['CurrentCity']['City']['y'] + ' , ' + game['CurrentCity']['City']['x'] + ' ]');
                                alert_box['succesMessage']('قد تم نقل مدينتك بنجاح الى الاحداثيات الاتية <br/>' + '[ ' + game['CurrentCity']['City']['x'] + ' , ' + game['CurrentCity']['City']['y'] + ' ]');

                                game.World.Map.getWorldCity().done(function() {
                                    if ($('#WorldCity')['attr']('data-view') === 'world') {
                                        $('#x_coord-input input')['val'](game['CurrentCity']['City']['x']);
                                        $('#y_coord-input input')['val'](game['CurrentCity']['City']['y']);
                                        $('#nav-btn button')['click']();
                                    }
                                    $(".close-alert_container").click();
                                    $(".close_dialog").click();
                                });
                            });
                        else if (JsonData['state'] === 'error_no_place_empty') {
                            setTimeout(function() {
                                alert_box['confirmMessage']('للاسف لا يمكنك نقل المدينة فى هذ المكان حيث ان المكان ليس خالى :]');
                            }, 0x64)
                        } else {
                            alert(_0x73e02b);
                            console['log'](_0x73e02b);
                        }
                    }
                });
            });
        };

    game.BaseData.Items[`certain_move`][`UseFunc`] = function(amount) {

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useCertainMove`,
            type: 'POST',
            data: {
                Item: "certain_move",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                newX: Number($("#new-city-x-coord").val()),
                newY: Number($("#new-city-y-coord").val()),
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    alert_box.succesMessage("قد تم نقل مدينتك بنجاح الى الاحداثيات الاتية <br/>" + "[ " + game.CurrentCity.City.x + " , " + game.CurrentCity.City.y + " ]");
                    game.City.getCityBase().done(function(data) {

                        $("#city-data .coords").html("[ " + game.CurrentCity.City.y + " , " + game.CurrentCity.City.x + " ]");

                        game.World.Map.getWorldCity().done(function() {
                            if ($('#WorldCity')['attr']('data-view') === 'world') {
                                $('#x_coord-input input')['val'](game['CurrentCity']['City']['x']);
                                $('#y_coord-input input')['val'](game['CurrentCity']['City']['y']);
                                $('#nav-btn button')['click']();
                            }

                            $(".close-alert_container").click();
                            $(".close_dialog").click();
                        });
                    });

                } else if (JsonObject.state === "error_no_place_empty") {
                    setTimeout(function() {
                        alert_box.confirmMessage("للاسف لا يمكنك نقل المدينة فى هذ المكان حيث ان المكان ليس خالى :]");
                    }, 500)
                } else {
                    alert(data);
                    console.log(data)
                }
            }
        });

    };

    game.BaseData.Items[`wheat_1`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useWheat`,
            type: 'POST',
            data: {
                Item: "wheat_1",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    game.BaseData.Items[`wheat_7`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useWheat`,
            type: 'POST',
            data: {
                Item: "wheat_7",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    game.BaseData.Items[`stone_1`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useStone`,
            type: 'POST',
            data: {
                Item: "stone_1",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    game.BaseData.Items[`stone_7`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useStone`,
            type: 'POST',
            data: {
                Item: "stone_7",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    game.BaseData.Items[`wood_1`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useWood`,
            type: 'POST',
            data: {
                Item: "wood_1",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    game.BaseData.Items[`wood_7`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useWood`,
            type: 'POST',
            data: {
                Item: "wood_7",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    game.BaseData.Items[`metal_1`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useMetal`,
            type: 'POST',
            data: {
                Item: "metal_1",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    game.BaseData.Items[`metal_7`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useMetal`,
            type: 'POST',
            data: {
                Item: "metal_1",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    game.BaseData.Items[`coin_1`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useCoin`,
            type: 'POST',
            data: {
                Item: "coin_1",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };

    game.BaseData.Items[`coin_7`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useCoin`,
            type: 'POST',
            data: {
                Item: "coin_7",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    Player_profile.getPlayerStateData();
                }
            }
        });

    };


    if (game['BaseData']['Items']['gold_5'])
        game['BaseData']['Items']['gold_5']['UseFunc'] = function(_0x4813fb) {
            var _0x329520 = game['CurrentCity']['City']['id_city'];
            return $.ajax({
                'url': NODE_URL + '/api/AItemUse/useGoldPack',
                'type': 'POST',
                'data': {
                    'Item': 'gold_5',
                    'amount': _0x4813fb,
                    'idCity': game['CurrentCity']['idCity'],
                    token: game['Config']['OuthToken'],
                    server: game['Config']['idServer']
                },
                success: function(_0xf94588, _0x53adc7, _0xd22101) {
                    if (!game['LBase']['isJson'](_0xf94588))
                        game['LBase']['Error'](_0xf94588);
                    var _0x13126a = JSON['parse'](_0xf94588);
                    _0x13126a['state'] === 'ok' && Player_profile['getPlayerBaseData']();
                }
            });
        };


    if (game['BaseData']['Items']['gold_1'])
        game['BaseData']['Items']['gold_1']['UseFunc'] = function(_0x4813fb) {
            var _0x329520 = game['CurrentCity']['City']['id_city'];
            return $.ajax({
                'url': NODE_URL + '/api/AItemUse/useGoldPack',
                'type': 'POST',
                'data': {
                    'Item': 'gold_1',
                    'amount': _0x4813fb,
                    'idCity': game['CurrentCity']['idCity'],
                    token: game['Config']['OuthToken'],
                    server: game['Config']['idServer']
                },
                success: function(_0xf94588, _0x53adc7, _0xd22101) {
                    if (!game['LBase']['isJson'](_0xf94588))
                        game['LBase']['Error'](_0xf94588);
                    var _0x13126a = JSON['parse'](_0xf94588);
                    _0x13126a['state'] === 'ok' && Player_profile['getPlayerBaseData']();
                }
            });
        };
    if (game['BaseData']['Items']['gold_10'])
        game['BaseData']['Items']['gold_10']['UseFunc'] = function(_0x3fb720) {
            var _0x1f1a2e = game['CurrentCity']['City']['id_city'];
            return $.ajax({
                'url': NODE_URL + '/api/AItemUse/useGoldPack',
                'type': 'POST',
                'data': {
                    'Item': 'gold_10',
                    'amount': _0x3fb720,
                    'idCity': game['CurrentCity']['idCity'],
                    token: game['Config']['OuthToken'],
                    server: game['Config']['idServer']
                },
                success: function(_0x334d3d, _0x108d44, _0x23e97a) {
                    if (!game['LBase']['isJson'](_0x334d3d))
                        game['LBase']['Error'](_0x334d3d);
                    var _0x5dcd18 = JSON['parse'](_0x334d3d);
                    _0x5dcd18['state'] === 'ok' && Player_profile['getPlayerBaseData']();
                }
            });
        };
    if (game['BaseData']['Items']['gold_25'])
        game['BaseData']['Items']['gold_25']['UseFunc'] = function(_0x575893) {
            var _0x34c16d = game['CurrentCity']['City']['id_city'];
            return $.ajax({
                'url': NODE_URL + '/api/AItemUse/useGoldPack',
                'type': 'POST',
                'data': {
                    'Item': 'gold_25',
                    'amount': _0x575893,
                    'idCity': game['CurrentCity']['idCity'],
                    token: game['Config']['OuthToken'],
                    server: game['Config']['idServer']
                },
                success: function(_0x5b9d65, _0x4c2bb7, _0x2c385f) {
                    if (!game['LBase']['isJson'](_0x5b9d65))
                        game['LBase']['Error'](_0x5b9d65);
                    var _0x1c3177 = JSON['parse'](_0x5b9d65);
                    _0x1c3177['state'] === 'ok' && Player_profile['getPlayerBaseData']();
                }
            });
        };
    if (game['BaseData']['Items']['gold_75'])
        game['BaseData']['Items']['gold_75']['UseFunc'] = function(_0x147f7f) {
            var _0x5a71c2 = game['CurrentCity']['City']['id_city'];
            return $.ajax({
                'url': NODE_URL + '/api/AItemUse/useGoldPack',
                'type': 'POST',
                'data': {
                    'Item': 'gold_75',
                    'amount': _0x147f7f,
                    'idCity': game['CurrentCity']['idCity'],
                    token: game['Config']['OuthToken'],
                    server: game['Config']['idServer']
                },
                success: function(_0x78da2e, _0x297788, _0x5cd0f8) {
                    if (!game['LBase']['isJson'](_0x78da2e))
                        game['LBase']['Error'](_0x78da2e);
                    var _0x1aaf85 = JSON['parse'](_0x78da2e);
                    _0x1aaf85['state'] === 'ok' && Player_profile['getPlayerBaseData']();
                }
            });
        };
    if (game['BaseData']['Items']['gold_100'])
        game['BaseData']['Items']['gold_100']['UseFunc'] = function(_0x11914b) {
            var _0x291633 = game['CurrentCity']['City']['id_city'];
            return $.ajax({
                'url': NODE_URL + '/api/AItemUse/useGoldPack',
                'type': 'POST',
                'data': {
                    'Item': 'gold_100',
                    'amount': _0x11914b,
                    'idCity': game['CurrentCity']['idCity'],
                    token: game['Config']['OuthToken'],
                    server: game['Config']['idServer']
                },
                success: function(_0x3f1d5f, _0x1d71cb, _0x1498d4) {
                    if (!game['LBase']['isJson'](_0x3f1d5f))
                        game['LBase']['Error'](_0x3f1d5f);
                    var _0x4f2b43 = JSON['parse'](_0x3f1d5f);
                    _0x4f2b43['state'] === 'ok' && Player_profile['getPlayerBaseData']();
                }
            });
        };
    if (game['BaseData']['Items']['gold_500'])
        game['BaseData']['Items']['gold_500']['UseFunc'] = function(_0x197e5c) {
            var _0x10da0d = game['CurrentCity']['City']['id_city'];
            return $.ajax({
                'url': NODE_URL + '/api/AItemUse/useGoldPack',
                'type': 'POST',
                'data': {
                    'Item': 'gold_500',
                    'amount': _0x197e5c,
                    'idCity': game['CurrentCity']['idCity'],
                    token: game['Config']['OuthToken'],
                    server: game['Config']['idServer']
                },
                success: function(_0x4f6b0f, _0x543f59, _0x4dfda6) {
                    if (!game['LBase']['isJson'](_0x4f6b0f))
                        game['LBase']['Error'](_0x4f6b0f);
                    var _0x4c1ef8 = JSON['parse'](_0x4f6b0f);
                    _0x4c1ef8['state'] === 'ok' && Player_profile['getPlayerBaseData']();
                }
            });
        };
    if (game['BaseData']['Items']['gold_1000'])
        game['BaseData']['Items']['gold_1000']['UseFunc'] = function(_0x560420) {
            var _0x32a8fd = game['CurrentCity']['City']['id_city'];
            return $.ajax({
                'url': NODE_URL + '/api/AItemUse/useGoldPack',
                'type': 'POST',
                'data': {
                    'Item': 'gold_1000',
                    'amount': _0x560420,
                    'idCity': game['CurrentCity']['idCity'],
                    token: game['Config']['OuthToken'],
                    server: game['Config']['idServer']
                },
                success: function(_0x3ecc5d, _0x5eceef, _0x456d9b) {
                    if (!game['LBase']['isJson'](_0x3ecc5d))
                        game['LBase']['Error'](_0x3ecc5d);
                    var _0x1912f1 = JSON['parse'](_0x3ecc5d);
                    _0x1912f1['state'] === 'ok' && Player_profile['getPlayerBaseData']();
                }
            });
        };


    game.BaseData.Items[`arena_attempt_1`][`UseFunc`] = function(amount) {
        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useArenaAttempt`,
            type: 'POST',
            data: {
                Item: "arena_attempt_1",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.ArenaChallange.getArenaData().done(function() {
                        $("#SArenaField").click();
                    });
                    $(".close-alert").click();
                    alert_box.succesMessage("تم إضافة 1 محاولة للميدان");
                }
            }
        });

    };

    game.BaseData.Items[`arena_attempt_5`][`UseFunc`] = function(amount) {
        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useArenaAttempt`,
            type: 'POST',
            data: {
                Item: "arena_attempt_5",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.ArenaChallange.getArenaData().done(function() {
                        $("#SArenaField").click();
                    });
                    $(".close-alert").click();
                    alert_box.succesMessage("تم إضافة 5 محاولة للميدان");
                }
            }
        });

    };

    game.BaseData.Items[`arena_attempt_10`][`UseFunc`] = function(amount) {
        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useArenaAttempt`,
            type: 'POST',
            data: {
                Item: "arena_attempt_10",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.ArenaChallange.getArenaData().done(function() {
                        $("#SArenaField").click();
                    });
                    $(".close-alert").click();
                    alert_box.succesMessage("تم إضافة 10 محاولة للميدان");
                }
            }
        });

    };


    game.BaseData.Items[`arena_exp_1`][`UseFunc`] = function(amount) {
        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useArenaExpPack`,
            type: 'POST',
            data: {
                Item: "arena_exp_1",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.ArenaChallange.getArenaData().done(function() {
                        $("#SArenaTroops").click();
                    });
                    $(".close-alert").click();
                    alert_box.succesMessage("تم إضافة 1 خبرة للميدان");

                }
            }
        });

    };

    game.BaseData.Items[`arena_exp_5`][`UseFunc`] = function(amount) {
        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useArenaExpPack`,
            type: 'POST',
            data: {
                Item: "arena_exp_5",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.ArenaChallange.getArenaData().done(function() {
                        $("#SArenaTroops").click();
                    });
                    $(".close-alert").click();
                    alert_box.succesMessage("تم إضافة 5 خبرة للميدان");

                }
            }
        });

    };


    game.BaseData.Items[`arena_exp_10`][`UseFunc`] = function(amount) {
        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useArenaExpPack`,
            type: 'POST',
            data: {
                Item: "arena_exp_10",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.ArenaChallange.getArenaData().done(function() {
                        $("#SArenaTroops").click();
                    });
                    $(".close-alert").click();
                    alert_box.succesMessage("تم إضافة 10 خبرة للميدان");
                }
            }
        });

    };

    game.BaseData.Items[`arena_exp_25`][`UseFunc`] = function(amount) {
        return $.ajax({
            url: `${NODE_URL}/api/AItemUse/useArenaExpPack`,
            type: 'POST',
            data: {
                Item: "arena_exp_25",
                amount: amount,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.ArenaChallange.getArenaData().done(function() {
                        $("#SArenaTroops").click();
                    });
                    $(".close-alert").click();
                    alert_box.succesMessage("تم إضافة 25 خبرة للميدان");
                }
            }
        });

    };
};




game.Item.useItemBoxFunc = function() {


    game.BaseData.Items[`gift_box`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useGiftBox`,
            type: 'POST',
            data: {
                Item: "gift_box",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    showMatrialGiftList(JsonObject.Item);
                    for (var iii in JsonObject.Item) {
                        Matrial.givePlayer(JsonObject.Item[iii].Item, JsonObject.Item[iii].amount)
                    }
                }
            }
        });
    };

    game.BaseData.Items[`wood_box`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useWoodBox`,
            type: 'POST',
            data: {
                Item: "wood_box",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    showMatrialGiftList(JsonObject.Item);
                    for (var iii in JsonObject.Item) {
                        Matrial.givePlayer(JsonObject.Item[iii].Item, JsonObject.Item[iii].amount)
                    }
                }
            }
        });
    };

    game.BaseData.Items[`golden_box`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useGoldenBox`,
            type: 'POST',
            data: {
                Item: "golden_box",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    showMatrialGiftList(JsonObject.Item);
                    for (var iii in JsonObject.Item) {
                        Matrial.givePlayer(JsonObject.Item[iii].Item, JsonObject.Item[iii].amount)
                    }
                }
            }
        });
    };

    game.BaseData.Items[`beginner_back_1`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useBeginnerPack`,
            type: 'POST',
            data: {
                Item: "beginner_back_1",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    showMatrialGiftList(JsonObject.Item);
                    for (var iii in JsonObject.Item) {
                        Matrial.givePlayer(JsonObject.Item[iii].Item, JsonObject.Item[iii].amount)
                    }
                }
            }
        });
    };
    game.BaseData.Items[`beginner_back_2`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useBeginnerPack`,
            type: 'POST',
            data: {
                Item: "beginner_back_2",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    showMatrialGiftList(JsonObject.Item);
                    for (var iii in JsonObject.Item) {
                        Matrial.givePlayer(JsonObject.Item[iii].Item, JsonObject.Item[iii].amount)
                    }
                }
            }
        });
    };
    game.BaseData.Items[`beginner_back_3`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useBeginnerPack`,
            type: 'POST',
            data: {
                Item: "beginner_back_3",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    showMatrialGiftList(JsonObject.Item);
                    for (var iii in JsonObject.Item) {
                        Matrial.givePlayer(JsonObject.Item[iii].Item, JsonObject.Item[iii].amount)
                    }
                }
            }
        });
    };
    game.BaseData.Items[`beginner_back_4`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useBeginnerPack`,
            type: 'POST',
            data: {
                Item: "beginner_back_4",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    showMatrialGiftList(JsonObject.Item);
                    for (var iii in JsonObject.Item) {
                        Matrial.givePlayer(JsonObject.Item[iii].Item, JsonObject.Item[iii].amount)
                    }
                }
            }
        });
    };
    game.BaseData.Items[`beginner_back_5`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useBeginnerPack`,
            type: 'POST',
            data: {
                Item: "beginner_back_5",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    showMatrialGiftList(JsonObject.Item);
                    for (var iii in JsonObject.Item) {
                        Matrial.givePlayer(JsonObject.Item[iii].Item, JsonObject.Item[iii].amount)
                    }
                }
            }
        });
    };
    game.BaseData.Items[`beginner_back_6`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useBeginnerPack`,
            type: 'POST',
            data: {
                Item: "beginner_back_6",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    showMatrialGiftList(JsonObject.Item);
                    for (var iii in JsonObject.Item) {
                        Matrial.givePlayer(JsonObject.Item[iii].Item, JsonObject.Item[iii].amount)
                    }
                }
            }
        });
    };
    game.BaseData.Items[`beginner_back_7`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useBeginnerPack`,
            type: 'POST',
            data: {
                Item: "beginner_back_7",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    showMatrialGiftList(JsonObject.Item);
                    for (var iii in JsonObject.Item) {
                        Matrial.givePlayer(JsonObject.Item[iii].Item, JsonObject.Item[iii].amount)
                    }
                }
            }
        });
    };
    game.BaseData.Items[`beginner_back_8`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useBeginnerPack`,
            type: 'POST',
            data: {
                Item: "beginner_back_8",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    showMatrialGiftList(JsonObject.Item);
                    for (var iii in JsonObject.Item) {
                        Matrial.givePlayer(JsonObject.Item[iii].Item, JsonObject.Item[iii].amount)
                    }
                }
            }
        });
    };
    game.BaseData.Items[`beginner_back_9`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useBeginnerPack`,
            type: 'POST',
            data: {
                Item: "beginner_back_9",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    showMatrialGiftList(JsonObject.Item);
                    for (var iii in JsonObject.Item) {
                        Matrial.givePlayer(JsonObject.Item[iii].Item, JsonObject.Item[iii].amount)
                    }
                }
            }
        });
    };

    game.BaseData.Items[`beginner_back_10`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useBeginnerPack`,
            type: 'POST',
            data: {
                Item: "beginner_back_10",
                amount: amount,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    showMatrialGiftList(JsonObject.Item);
                    for (var iii in JsonObject.Item) {
                        Matrial.givePlayer(JsonObject.Item[iii].Item, JsonObject.Item[iii].amount)
                    }
                }
            }
        });
    };

    game.BaseData.Items[`army_box`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useArmyBox`,
            type: 'POST',
            data: {
                Item: "army_box",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_army_view();
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`tagned_3p`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useHeroPacks`,
            type: 'POST',
            data: {
                Item: "tagned_3p",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCityHero(idCity);
                    game.City.getCityHeroMedal(idCity);
                    game.City.getCityBase(idCity);
                    game.City.getCityHeroArmy(idCity);
                    alert_box.succesMessage("تم اضافة بطل بنجاح");
                }
            }
        });
    };

    game.BaseData.Items[`tagned_4p`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useHeroPacks`,
            type: 'POST',
            data: {
                Item: "tagned_4p",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCityHero(idCity);
                    game.City.getCityHeroMedal(idCity);
                    game.City.getCityBase(idCity);
                    game.City.getCityHeroArmy(idCity);
                    alert_box.succesMessage("تم اضافة بطل بنجاح");
                }
            }
        });
    };

    game.BaseData.Items[`tagned_5p`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useHeroPacks`,
            type: 'POST',
            data: {
                Item: "tagned_5p",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCityHero(idCity);
                    game.City.getCityHeroMedal(idCity);
                    game.City.getCityBase(idCity);
                    game.City.getCityHeroArmy(idCity);
                    alert_box.succesMessage("تم اضافة بطل بنجاح");
                }
            }
        });
    };

    game.BaseData.Items[`tagned_6p`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useHeroPacks`,
            type: 'POST',
            data: {
                Item: "tagned_6p",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCityHero(idCity);
                    game.City.getCityHeroMedal(idCity);
                    game.City.getCityBase(idCity);
                    game.City.getCityHeroArmy(idCity);
                    alert_box.succesMessage("تم اضافة بطل بنجاح");
                }
            }
        });
    };

    game.BaseData.Items[`tagned_7p`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useHeroPacks`,
            type: 'POST',
            data: {
                Item: "tagned_7p",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCityHero(idCity);
                    game.City.getCityHeroMedal(idCity);
                    game.City.getCityBase(idCity);
                    game.City.getCityHeroArmy(idCity);
                    alert_box.succesMessage("تم اضافة بطل بنجاح");
                }
            }
        });
    };

    game.BaseData.Items[`tagned_8p`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useHeroPacks`,
            type: 'POST',
            data: {
                Item: "tagned_8p",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCityHero(idCity);
                    game.City.getCityHeroMedal(idCity);
                    game.City.getCityBase(idCity);
                    game.City.getCityHeroArmy(idCity);
                    alert_box.succesMessage("تم اضافة بطل بنجاح");
                }
            }
        });
    };

    game.BaseData.Items[`coin_a`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "coin_a",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`coin_b`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "coin_b",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`coin_c`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "coin_c",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`coin_d`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "coin_d",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`food_a`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "food_a",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`food_b`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "food_b",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`food_c`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "food_c",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`food_d`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "food_d",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`wood_a`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "wood_a",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`wood_b`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "wood_b",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`wood_c`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "wood_c",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`wood_d`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "wood_d",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`stone_a`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "stone_a",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`stone_b`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "stone_b",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`stone_c`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "stone_c",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`stone_d`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "stone_d",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`metal_a`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "metal_a",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };



    game.BaseData.Items[`metal_b`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "metal_b",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`metal_c`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "metal_c",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

    game.BaseData.Items[`metal_d`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemBoxUse/useResourcePacks`,
            type: 'POST',
            data: {
                Item: "metal_d",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                }
            }
        });
    };

};

game.Item.useArmyBackFunc = function() {
    game.BaseData.Items[`army_all_1`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackMini`,
            type: 'POST',
            data: {
                Item: "army_all_1",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };

    game.BaseData.Items[`army_all_2`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackMedium`,
            type: 'POST',
            data: {
                Item: "army_all_2",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };

    game.BaseData.Items[`army_all_3`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackLarge`,
            type: 'POST',
            data: {
                Item: "army_all_3",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };

    game.BaseData.Items[`army_a_100`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackA100`,
            type: 'POST',
            data: {
                Item: "army_a_100",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };
    game.BaseData.Items[`army_b_100`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackB100`,
            type: 'POST',
            data: {
                Item: "army_b_100",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };

    game.BaseData.Items[`army_c_100`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackC100`,
            type: 'POST',
            data: {
                Item: "army_c_100",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };

    game.BaseData.Items[`army_d_100`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackD100`,
            type: 'POST',
            data: {
                Item: "army_d_100",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };

    game.BaseData.Items[`army_e_100`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackE100`,
            type: 'POST',
            data: {
                Item: "army_e_100",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };

    game.BaseData.Items[`army_f_100`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackF100`,
            type: 'POST',
            data: {
                Item: "army_f_100",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };

    game.BaseData.Items[`army_a_1000`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackA1000`,
            type: 'POST',
            data: {
                Item: "army_a_1000",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };
    game.BaseData.Items[`army_b_1000`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackB1000`,
            type: 'POST',
            data: {
                Item: "army_b_1000",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };

    game.BaseData.Items[`army_c_1000`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackC1000`,
            type: 'POST',
            data: {
                Item: "army_c_100",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };

    game.BaseData.Items[`army_d_1000`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackD1000`,
            type: 'POST',
            data: {
                Item: "army_d_1000",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };

    game.BaseData.Items[`army_e_1000`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackE1000`,
            type: 'POST',
            data: {
                Item: "army_e_1000",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };

    game.BaseData.Items[`army_f_1000`][`UseFunc`] = function(amount) {
        var idCity = game.CurrentCity.City.id_city;

        return $.ajax({
            url: `${NODE_URL}/api/AItemArmyPack/useArmyPackF1000`,
            type: 'POST',
            data: {
                Item: "army_f_1000",
                amount: amount,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                var JsonObject = JSON.parse(data);
                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.City;
                    city_profile.refresh_resource_view();
                    city_profile.refresh_army_view();
                }
            }
        });
    };
};
var study_lvl;





var edu = {

    isUpInOntherCity: function(study) {

        for (var iii in game.TimedTask.TaskList.Study) {
            if (game.TimedTask.TaskList.Study[iii].study === study) {
                return true;
            }
        }
        return false;

    },

    getUniTech: function() {

        var studyTask = {};

        if (isBusyNow("uni") !== false) {
            studyTask = isBusyNow("uni");
        }



        var total_study = "<ul class='total'>";
        for (var tech in game.BaseData.Edu) {
            if (game.BaseData.Edu[tech].StudyPlace !== "uni")
                continue;

            if (this.isUpgradable(tech, game.DPlayer.PlayerEdu[tech]) === false || (isBusyNow("uni") !== false && isBusyNow("uni").study !== tech) || this.isUpInOntherCity(tech)) {

                var disabled = "disabled = 'disabled'";
                var permit = '<div class="permit-layer"></div>';

            } else {
                var disabled = "";
                var permit = "";
            }

            var button = "";
            if (studyTask.study === tech) {

                button = `  <button class="speed-up-btn edu_acce" data-id-task="${studyTask.id}">
                                <h6> تسريع </h6>
                            </button>
                            <button data-tech="${tech}" class="cancel-study cancel-btn"></button>`;

            } else {

                button = `<button data-tech="${tech}" class="full-btn full-btn-2x edu_study study_btn"  ${disabled}>${Translate.Button.Building.Study[UserLag.language]}</button>`;

            }


            total_study += ` <li class="study_unite uni_std"  type="${tech}" lvl="${game.DPlayer.PlayerEdu[tech]}">
                                
                                <div class="img-inside-box">
                                    <div class="current_lvl_study">${game.DPlayer.PlayerEdu[tech]}</div>
                                    <img src="${game.BaseData.Edu[tech].image}" class="big-img">
                                    ${permit}
                                    <div class="city_lvl_study">${Math.min(game.DPlayer.PlayerEdu[tech], game.City.getCity().BuildingLvl[cityHasType(BUILDING_TYPS.UNIVERSITY)])}</div>
                                </div> 
                                <div class="txt-inside-box">
                                    <h2>${game.BaseData.Edu[tech].ar_title}</h2>
                                </div>
                                <div class="btn-wrapper">
                                    ${button}
                                </div>
                               <div class="study_req_tooltip_con"></div>
                            </li>`;
        }
        total_study += "</ul>";
        return total_study;
    },

    getAcadTech: function() {


        var studyTask = {};

        if (isBusyNow("acad") !== false) {
            studyTask = isBusyNow("acad");
        }



        var total_study = "<ul class='total'>";
        for (var tech in game.BaseData.Edu) {
            if (game.BaseData.Edu[tech].StudyPlace !== "acad")
                continue;

            if (this.isUpgradable(tech, game.DPlayer.PlayerEdu[tech]) === false ||
                (isBusyNow("acad") !== false && isBusyNow("acad").study !== tech) ||
                this.isUpInOntherCity(tech)) {

                var disabled = "disabled = 'disabled'";
                var permit = '<div class="permit-layer"></div>';

            } else {
                var disabled = "";
                var permit = "";
            }

            var button = "";
            if (studyTask.study === tech) {

                button = `  <button class="speed-up-btn edu_acce" data-id-task="${studyTask.id}">
                                <h6> تسريع </h6>
                            </button>
                            <button data-tech="${tech}" class="cancel-study cancel-btn"></button>`;

            } else {

                button = `<button data-tech="${tech}" class="full-btn full-btn-2x edu_study study_btn"  ${disabled}>${Translate.Button.Building.Study[UserLag.language]}</button>`;

            }


            total_study += ` <li class="study_unite uni_std"  type="${tech}" lvl="${game.DPlayer.PlayerEdu[tech]}">
                                
                                <div class="img-inside-box">
                                    <div class="current_lvl_study">${game.DPlayer.PlayerEdu[tech]}</div>
                                    <img src="${game.BaseData.Edu[tech].image}" class="big-img">
                                    ${permit}
                                    <div class="city_lvl_study">${Math.min(game.DPlayer.PlayerEdu[tech], game.City.getCity().BuildingLvl[cityHasType(BUILDING_TYPS.UNIVERSITY)])}</div>
                                </div> 
                                <div class="txt-inside-box">
                                    <h2>${game.BaseData.Edu[tech].ar_title}</h2>
                                </div>
                                <div class="btn-wrapper">
                                    ${button}
                                </div>
                               <div class="study_req_tooltip_con"></div>
                            </li>`;
        }
        total_study += "</ul>";
        return total_study;
    },

    getReqTable: function(type, lvl) {

        var food = EDUCATION_REQ[type].lvl_req[lvl].food;
        var wood = EDUCATION_REQ[type].lvl_req[lvl].wood;
        var stone = EDUCATION_REQ[type].lvl_req[lvl].stone;
        var metal = EDUCATION_REQ[type].lvl_req[lvl].metal;
        var coin = EDUCATION_REQ[type].lvl_req[lvl].coin;
        var time = EDUCATION_REQ[type].time_req[lvl];

        // get condetion list item
        var condetion_list = "";
        var obj = game.BaseData.Edu[type];

        var condetions = obj.getCondetion(lvl);

        for (var one in condetions) {

            if (condetions[one].con_type === "building") {

                condetion_list += ` <li class="${Building.BuildingWithMaxLvl(condetions[one].building_type) >= condetions[one].building_lvl ? "enough" : "not_enough" }">
                                        ${condetions[one].title}
                                    </li>`;

            } else if (condetions[one].con_type === "matrial") {

                condetion_list += ` <li class="${Matrial.getPlayerAmount(condetions[one].matrial) >= condetions[one].amount ? "enough" : "not_enough" }">
                                        ${condetions[one].title}
                                    </li>`;

            }


        }



        var content = ` <table class="req_table" border="0">
                            <thead>
                                <tr>                 
                                    <td colspan="2" style="direction: rtl">                    
                                        <ol>               
                                            ${condetion_list}             
                                        </ol>              
                                    </td>            
                                </tr>       
                            </thead>       
                            <tbody>             
                                <tr>                 
                                    <td>                  
                                        <img src="images/style/food.png">                     
                                        <div class="amount ${game.CurrentCity.City.food < Number(food) ? "not_enough" : ""}">
                                            ${lvl >= 30 ? "--" : food}
                                        </div>                  
                                    </td>                    
                                    <td>                          
                                        <img src="images/style/stone.png">                  
                                        <div class="amount ${game.CurrentCity.City.stone < Number(stone) ? "not_enough" : ""}">
                                            ${lvl >= 30 ? "--" : stone}
                                        </div>                   
                                    </td>               
                                </tr>          
                                <tr>                
                                    <td>                 
                                        <img src="images/style/wood.png">                  
                                        <div class="amount ${game.CurrentCity.City.wood < Number(wood) ? "not_enough" : ""}">
                                            ${lvl >= 30 ? "--" : wood}
                                        </div>                   
                                    </td>            
                                    <td>                  
                                        <img src="images/style/iron.png">                      
                                        <div class="amount ${game.CurrentCity.City.metal < Number(metal) ? "not_enough" : ""}">
                                            ${lvl >= 30 ? "--" : metal}
                                        </div>                      
                                    </td>         
                                </tr>             
                                <tr>                  
                                    <td>                   
                                        <img src="images/style/coin.png">                 
                                            <div class="amount ${game.CurrentCity.City.coin < Number(coin) ? "not_enough" : ""}">
                                                ${lvl >= 30 ? "--" : coin}
                                            </div>                  
                                    </td>               
                                    <td>                    
                                        <img src="images/style/wait.png">                       
                                        <div class="amount">${lvl >= 30 ? "--" : changeTimeFormat(time)}</div>             
                                    </td>              
                                </tr>     
                            </tbody>
                        </table>  `;
        return content;
    },

    getReqBox: function(study_type, lvl) {
        switch (study_type) {

            case "farming": // 
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  علم الزراعة مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                               <h1 class="header-2 green">الزراعة  مستوى ${lvl >= 30 ? "---" : lvl + 1 } تزيد من انتاج المحاصيل بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 7)}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "wooding": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  علم الاخشاب مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">الورشة  مستوى ${lvl >= 30 ? "---" : lvl + 1 } تزيد من انتاج الاخشاب بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 7)}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "stoning": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  علم الاحجار مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">التحجير  مستوى ${lvl >= 30 ? "---" : lvl + 1 } تزيد من انتاج الحجارة بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 7)}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "mining": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  علم التعدين مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">التعدين  مستوى ${lvl >= 30 ? "---" : lvl + 1 } تزيد من انتاج الحديد بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 7)}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "accounting": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  المحاسبة مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">المحاسبة مستوى ${lvl >= 30 ? "---" : lvl + 1 } تزيد  (عائدات الضرائب) بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 7)}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "storing":
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  علم التخزين مستوى${lvl >= 30 ? "---" : lvl + 1}</h1>
                                    </div>
                                <h1 class="header-2 green">التخزين مستوى ${lvl >= 30 ? "---" : lvl + 1 } يزيد من سعة التخزين بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 5)}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "building": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  الهندسة المعمارية مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">الهندسة المعمارية مستوى ${lvl >= 30 ? "---" : lvl + 1 } تزيد من متانة السور  ونوبات الحراسة  بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 10)}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "scholership": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  المنح الدراسية مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">البعثات الخارجية مستوى ${lvl >= 30 ? "---" : lvl + 1 } تقلل منطلب الخبرة وتزيدمن الخبرة المكتسبة بمقدار ${lvl >= 30 ? "---" : ((lvl + 1))}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;


            case "maintenace": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  علم الصيانة مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">الترميم مستوى ${lvl >= 30 ? "---" : lvl + 1 } يزيدمن قوة ومتانة التحصينات  بمقدار  ${lvl >= 30 ? "---" : ((lvl + 1) * 100)}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "infantry": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  المشاة مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">المشاة مستوى ${lvl >= 30 ? "---" : lvl + 1 } تزيد من قوة وصلابة الفرسان المدرعين  بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 3)}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "riding": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  الفروسية مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">الفروسية مستوى ${lvl >= 30 ? "---" : lvl + 1 } تزيد من قوة وصلابة الفرسان والجواسيس  بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 3)}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "army": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  الجيش مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">الجيش مستوى ${lvl >= 30 ? "---" : lvl + 1 } يزيد من قوة المقاليع ورماة النبل السهام والمنجنيق بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 3)}%</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "spying": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  الاستخبارات مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">كلما زادت الاستخبارت زادت قوة الجواسيس   وتمنحنا معلومات ادق  عند ارسال جواسيس للاسطلاع</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "leader": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  القيادة مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green"> القيادة  مستوى ${lvl >= 30 ? "---" : lvl + 1 } تزيد من قدرة الابطال على  التحكم وفرض السيطرة بين القوات بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 3)}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "safe": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  الامن مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">الطب  مستوى ${lvl >= 30 ? "---" : lvl + 1 } يزيد من القدرة الدفاعية لدى القوات بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 3)}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "medicine": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  الطب مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">الطب مستوى ${lvl >= 30 ? "---" : lvl + 1 } يزيد من متانة القوات وسلامتها بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 5)}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "logistic": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  الدعم اللوجستى مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">اللوجستية مستوى ${lvl >= 30 ? "---" : lvl + 1 } يزيد من قوة التعبئة والدعم اللوجستى بالمواد بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 5)}%!</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "navigating": //
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  الملاحة مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">الملاحة بمستوى ${lvl >= 30 ? "---" : lvl + 1 } تزيد من سرعة و ايقاع القوات بنسبة ${lvl >= 30 ? "---" : ((lvl + 1) * 5)}%</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;

            case "supplying": // الامداد
                var box = ` <div class="study_req_tooltip">
                                <div class="upgrade-info">
                                    <div class="header-1">
                                        <h1>تحديث الى :  الامداد مستوى${lvl >= 30 ? "---" : lvl + 1 }</h1>
                                    </div>
                                <h1 class="header-2 green">الامداد مستوى ${lvl >= 30 ? "---" : lvl + 1 } يقلل من استهلاك الغذاء بمقدار ${lvl >= 30 ? "---" : ((lvl + 1) * 3)}%</h1>
                            </div>
                            ${this.getReqTable(study_type, lvl)}
                        </div>`;
                return box;
                break;
        }
    },
    checkCondetions: function(study_type, lvl) {

        var obj = game.BaseData.Edu[study_type];

        var condetions = obj.getCondetion(lvl);

        for (var one in condetions) {

            if (condetions[one].con_type === "building") {
                if (Building.BuildingWithMaxLvl(condetions[one].building_type) < condetions[one].building_lvl) {
                    return false;
                }

            } else if (condetions[one].con_type === "matrial") {

                if (Matrial.getPlayerAmount(condetions[one].matrial) < condetions[one].amount) {
                    return false;
                }

            }
        }

        return true;
    },

    isUpgradable: function(study, lvl) {
        if (Number(lvl) >= 30) {
            return false;
        } else if (game.CurrentCity.City.food < this.calResource.food(study, lvl)) {
            return false;
        } else if (game.CurrentCity.City.wood < this.calResource.wood(study, lvl)) {
            return false;
        } else if (game.CurrentCity.City.stone < this.calResource.stone(study, lvl)) {
            return false;
        } else if (game.CurrentCity.City.metal < this.calResource.metal(study, lvl)) {
            return false;
        } else if (game.CurrentCity.City.coin < this.calResource.coin(study, lvl)) {
            return false;
        } else if (!this.checkCondetions(study, lvl)) {
            return false;
        } else {
            return true;
        }
    },
    calResource: {

        food: function(study, lvl) {
            if (!EDUCATION_REQ[study].lvl_req[lvl]) {

            }
            return EDUCATION_REQ[study].lvl_req[lvl].food;
        },
        wood: function(study, lvl) {
            return EDUCATION_REQ[study].lvl_req[lvl].wood;
        },
        stone: function(study, lvl) {
            return EDUCATION_REQ[study].lvl_req[lvl].stone;
        },
        metal: function(study, lvl) {
            return EDUCATION_REQ[study].lvl_req[lvl].metal;
        },
        coin: function(study, lvl) {
            return EDUCATION_REQ[study].lvl_req[lvl].coin;
        }
    }
};

edu.refreshStudyLvl = function() {
    return Player_profile.getPlayerEdu();
};



$(document).on("mouseover", ".study_unite .img-inside-box", function() {

    var study_type = $(this).parent(".study_unite").attr("type");
    var study_lvl = $(this).parent(".study_unite").attr("lvl");

    if (!$(this).hasClass("hover")) {
        $(this).parent(".study_unite").children(".study_req_tooltip_con").html(edu.getReqBox(study_type, parseInt(study_lvl)));
        $(this).addClass("hover");
    }
});

$(document).on("mouseleave", ".study_unite .img-inside-box", function() {
    $(this).parent(".study_unite").children(".study_req_tooltip_con").empty();
    $(this).removeClass("hover");

});



$(document).on("click", ".edu_study", function() {

    var study_type = $(this).attr("data-tech");
    var sLvl = Number(game.DPlayer.PlayerEdu[study_type]);
    var category = $(".for_building_box").attr("category");
    var self_ = $(this);
    var buildingPlace = $("#dialg_box .box_header").attr("place");

    if (!category) {
        alert_box.failMessage("نوع الدراسة غير معروف");
        return;
    }

    if (typeof sLvl === undefined || !category || !study_type) {
        alert_box.failMessage("يوجد خطاء  بالمبنى  اغلق الصفحة وافتحها مرة اخرى");
        return;
    }





    if (!$(this).hasClass("disabled") && edu.isUpgradable(study_type, sLvl)) {

        var idCity = Number(game.CurrentCity.idCity);
        $.ajax({

            url: `${API_URL}/api/APlayerEdu/upgradeStudyLvl`,
            data: {
                idStudy: study_type,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {
                waitCursor();
                self_.attr("disabled", "disabled");
            },
            success: function(data, textStatus, jqXHR) {

                self_.removeAttr("disabled");
                unwaitCursor();

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {
                    game.City.getCity(idCity).City = JsonObject.cityRes;
                    city_profile.refresh_resource_view();
                    game.TimedTask.refreshListView();

                    for (var iii in game.TimedTask.TaskList.Study)
                        if (Number(game.TimedTask.TaskList.Study[iii].id_city) === idCity)
                            delete(game.TimedTask.TaskList.Study[iii]);
                    for (var iii in JsonObject.list)
                        game.TimedTask.TaskList.Study[JsonObject.list[iii].id] = JsonObject.list[iii];

                    buildingClick(buildingPlace, true);
                    game.TimedTask.refreshListView();
                }




            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);

            }

        });

    } else {

        alert_box.confirmMessage("لا يمكنك تطوير هذه الدراسة");

    }

});


function upgradeStudy(index) {

}


function isBusyNow(study_place) {

    var return_ = false;
    var idCity = Number(game.CurrentCity.idCity);

    for (var iii in game.TimedTask.TaskList.Study) {
        if (idCity !== Number(game.TimedTask.TaskList.Study[iii].id_city))
            continue;
        if (game.BaseData.Edu[game.TimedTask.TaskList.Study[iii].study].StudyPlace !== study_place)
            continue;
        return game.TimedTask.TaskList.Study[iii];

    }

    return return_;
}


$(document).on("click", ".edu_acce", function() {

    var idTask = $(this).attr("data-id-task");
    var matrial_to_use = [
        "archim_a",
        "archim_b",
        "archim_c",
        "archim_d"
    ];

    BoxOfMatrialToUse(matrial_to_use, "study_acce", 1, idTask);

});

$(document).on("click", ".reduce-time-for-study img", function() {
    var place = $(this).parents(".task-unite").attr("place");

    if (place === "U") {

        for (var key in game.City.getCity().BuildingType) {

            if (parseInt(game.City.getCity().BuildingType[key]) === 8) {
                buildingClick(key);

            }

        }


    } else if (place === "A") {

        for (var key in game.City.getCity().BuildingType) {

            if (parseInt(game.City.getCity().BuildingType[key]) === 9) {
                buildingClick(key);

            }

        }


    }


    var sleep = setTimeout(function() {
        $(".edu_acce").trigger("click");
    }, 120);
});
game.MenuList.menu = function() {

    var list = ` 
                <div class="right-content">
                    <ul class="flex">
                        <li class="menu-list" data-show="trade">
                            <div class="image" style="background:url(images/icon-menu/1_a.png); background-size: 100% 100%;"></div>
                            <div class="text">
                                <h1>${Translate.Title.MenuList.Exchange[UserLag.language]}</h1>
                            </div>
                        </li>
                        <li  class="menu-list" data-show="reports">
                            <div class="image" style="background:url(images/icon-menu/2_a.png); background-size: 100% 100%;"></div>
                            <div class="notinf_green" id="hero-not-in-city"></div>
                            <div class="notinf_red" id="hero-attacking"></div>

                            <div class="text">
                                <h1>${Translate.Title.MenuList.Report[UserLag.language]}</h1>
                            </div>
                        </li>
                        <li  class="menu-list" data-show="quests">
                            <div class="image" style="background:url(images/icon-menu/3_a.png); background-size: 100% 100%;"></div>
                            <div class="notinf_green" id="Quests-ready-notif"></div>
                            <div class="notinf_red"></div>
                            <div class="text">
                                <h1>${Translate.Title.MenuList.Quest[UserLag.language]}</h1>
                            </div>
                        </li>
                        <li  class="menu-list" data-show="messages">
                            <div class="image " style="background:url(images/icon-menu/4_a.png); background-size: 100% 100%;"></div>
                            <div class="notinf_green" id="green-msg-notif"></div>
                            <div class="notinf_red" id="red-msg-notif"></div>
                            <div class="text">
                                <h1>${Translate.Title.MenuList.Mail[UserLag.language]}</h1>
                            </div>
                        </li>
                        <li  class="menu-list" data-show="union">
                            <div class="image" style="background:url(images/icon-menu/5_a.png); background-size: 100% 100%;"></div>
                            <div class="text">
                                <h1>${Translate.Title.MenuList.League[UserLag.language]}</h1>
                            </div>
                        </li>
                        <li  class="menu-list" data-show="ranks">
                            <div class="image" style="background:url(images/icon-menu/6_a.png); background-size: 100% 100%;" ></div>
                            <div class="text">
                                <h1>${Translate.Title.MenuList.Ranking[UserLag.language]}</h1>
                            </div>
                        </li>
                        <li  class="menu-list" data-show="matrial">
                            <div class="image" style="background:url(images/icon-menu/7_a.png); background-size: 100% 100%;"></div>
                            <div class="text">
                                <h1>${Translate.Title.MenuList.ItemMall[UserLag.language]}</h1>
                            </div>
                        </li>
                        <li  class="menu-list" data-show="dominant">
                            <div class="image" style="background:url(images/icon-menu/9_n.png); background-size: 100% 100%;"></div>
                            <div class="text">
                                <h1>${Translate.Title.MenuList.Dominance[UserLag.language]}</h1>
                            </div>
                        </li>
                        <li class="menu-list" data-show="buy-gold">
                            <a href="${game.Config.PayLink}/?RechCode=${game.Config.RechCode}&idServer=${game.Config.idServer}" target="_blank">
                                <div class="image" style="background:url(images/icon-menu/8_a.png); background-size: 100% 100%;"></div>
                                <div class="text">
                                    <h1>${Translate.Title.MenuList.BuyGold[UserLag.language]}</h1>
                                </div>
                            </a>
                        </li>                                  
                    </ul>
                </div>`;

    $("#global-menu-list").html(list);

};

$("html").on("PlayerReady", function() {
    game.MenuList.menu();
});

var DailyTradeMatrialPlayer = {};
var EXCHANGE_ITEM;
const RESOURCE_IMAGE = {
    coin: "images/style/coin.png",
    food: "images/style/food.png",
    wood: "images/style/wood.png",
    stone: "images/style/stone.png",
    metal: "images/style/iron.png",
    population: "images/style/population.png",
    gold: 'images/icons/gold.png'
};



var Trading = {

    getTradeList: function() {
        $.ajax({
            url: `${API_URL}/api/AExchange/getExchangeItem`,
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    game.LBase.Error(data);
                EXCHANGE_ITEM = JSON.parse(data);
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }
        });

    },

    content_unit: function(Item) {


        var exchangeItem = Item;
        var req_list = "";
        var req = JSON.parse(Item.req);
        var reword = JSON.parse(Item.reword);
        var image = "";


        for (var iii in req) {

            if (req[iii].type === "resource" || req[iii].type === "gold") {
                image = RESOURCE_IMAGE[req[iii].resource_type];

            } else if (req[iii].type === "matrial") {
                image = Matrial.image(req[iii].matrial);
            } else if (req[iii].type === "equip") {
                image = Equipment.getImage(req[iii].Equip, req[iii].Part, req[iii].lvl);
            }

            req_list += `<li class="pull-L">
                                <div class="pic pull-L">
                                    <div class="req-unit-image" style="background-image: url(${image})">
                                    </div>
                                </div>
                                <div class="num stroke ellipsis pull-R">${req[iii].amount}</div>
                            </li>`;

        }

        var prize_image = "";
        var prize_name = "";
        var player_amount = "--";

        if (reword.type === "matrial") {

            prize_image = Matrial.image(reword.matrial);
            prize_name = Matrial.getMatrialName(reword.matrial);
            player_amount = Matrial.getPlayerAmount(reword.matrial);

        } else if (reword.type === "equip") {
            prize_image = Equipment.getImage(reword.Equip, reword.Part, reword.lvl);
            prize_name = Equipment.getName(reword.Equip, reword.Part, reword.lvl);
            player_amount = Equipment.getPlayerAmount(reword.Equip, reword.Part, reword.lvl);
        }



        var list = `<li data-index="${Item.id_ex}" matrial_type="${reword.matrial}" class="tooltip_mat matrial_unit exchange-item">
                           <img src=" images/style/Border-up.png" class="border_up"/>
                           <div class="img-inside-box">
                               <div class="player_amount">
                                    <img src="images/icons/shopQuantityBG.png"/>
                                     <p>${player_amount}</p>
                                </div>
                                <div class="wrapper big-img">
                                    <div class="image" style="background-image: url(${prize_image})"></div>
                                </div>
                                <div class="matrial">
                                    <ul class="req-list">`;


        list += req_list + "</ul>" +
            "</div>" +
            "</div>";

        var tail = ' <div class="txt-inside-box">' +
            '<h2>' + prize_name + '</h2>' +
            '</div>' +
            '<div  class="tooltip_desc"></div>' +
            '</li>';

        return list + tail + "";

    },

    dailogBox_allMat: function(category, offset = 1) {


        category = category || "trade-all";
        var all_content_unite = game.Item.ItemExchangeBox(category, offset);


        return `<div class="box_content for_mat_trade" data-page-for="exchange">
                        <div class="left-content">
                            <div class="banner-red">
                                لا توجد فاعلية
                            </div>
                            <div class="fa3lia-img">
                                <img src="images/style/sp.jpg">
                            </div>
                            <p class="fa3lia-p">لا توجد  فاعلية حالية  يمكنك متابعة اخبار الفاعليات  من خلال <a href="https://forum.game.com/index.php" target="_blank">المنتدى</a></p>
                        </div>
                        <div class="right-content">
                            <ul class='total' mat_table="trade-all">${all_content_unite}</ul>
                            <div class="right-content-footer">
                                <div class="buttons pull-R">
                                    <ul>
                                        <li>
                                            <div class="full-btn full-btn-3x" id="goToMall">
                                                ${Translate.Button.MenuList.BuyItems[UserLag.language]}
                                            </div>
                                        </li>
                                        <li>
                                            <div class="full-btn full-btn-3x">
                                                ${Translate.Button.MenuList.GetSomeGold[UserLag.language]}
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                                <div class="budget pull-L">
                                    <div class="txt">
                                        ${getArabicNumbers(game.DPlayer.Player.gold)}: لديك
                                    </div>
                                    <div>
                                        <img src="images/icons/gold_money.jpg">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>`;
    },

    calPageNum: function(cat) {

        var count = 0;

        for (var iii in EXCHANGE_ITEM) {

            if (EXCHANGE_ITEM[iii].cat === cat || !cat) {
                count++;
            }

        }

        return Math.ceil(count / 9);
    }


};


$(document).on("PlayerReady", "html", function() {

    Trading.getTradeList();

});
$('.menu-list[data-show="trade"]').click(function() {
    Trading.getTradeList();
});

$(document).on("click", "#dialg_box .for_mat_trade .matrial_unit", function() {


    var matrial_type = $(this).attr("matrial_type");
    var index = $(this).data("index");

    for (var iii in EXCHANGE_ITEM)
        if (Number(EXCHANGE_ITEM[iii].id_ex) === Number(index))
            var exchange = EXCHANGE_ITEM[iii];

    var req = JSON.parse(exchange.req);
    var reword = JSON.parse(exchange.reword);

    var image = "";
    var req_list = "";
    var right_req_list = "";


    for (var iii in req) {

        if (req[iii].type === "resource") {
            image = RESOURCE_IMAGE[req[iii].resource_type];

        } else if (req[iii].type === "matrial") {
            image = Matrial.image(req[iii].matrial);
        } else if (req[iii].type === "equip") {
            image = Equipment.getImage(req[iii].Equip, req[iii].Part, req[iii].lvl);
        }

        req_list += `<li class="pull-L">
                        <div class="pic pull-L">
                            <img src="${image}">
                        </div>
                        <div class="num stroke ellipsis pull-R">${req[iii].amount}</div>
                    </li>`;

    }
    for (var iii in req) {

        if (req[iii].type === "resource") {
            image = RESOURCE_IMAGE[req[iii].resource_type];

        } else if (req[iii].type === "matrial") {
            image = Matrial.image(req[iii].matrial);
        } else if (req[iii].type === "equip") {
            image = Equipment.getImage(req[iii].Equip, req[iii].Part, req[iii].lvl);
        }

        right_req_list += `<li>
                        <div class="image pull-L">
                            <img src="${image}"/>
                        </div>
                        <div class="amount pull-L">
                            ${req[iii].amount}
                        </div>
                    </li>`;

    }

    var prize_image = "";
    var prize_name = "";
    var player_amount = "--";
    var desc = "";
    var long_desc = "";
    if (reword.type === "matrial") {

        prize_image = Matrial.image(reword.matrial);
        prize_name = Matrial.getMatrialName(reword.matrial);
        player_amount = Matrial.getPlayerAmount(reword.matrial);
        long_desc = Matrial.getMatrial(reword.matrial).long_desc;
        desc = Matrial.getMatrial(reword.matrial).desc;

    } else if (reword.type === "equip") {

        prize_image = Equipment.getImage(reword.Equip, reword.Part, reword.lvl);
        prize_name = Equipment.getName(reword.Equip, reword.Part, reword.lvl);
        long_desc = Equipment.getEquipData(reword.Equip, reword.Part, reword.lvl).long_desc;
        desc = Equipment.getEquipData(reword.Equip, reword.Part, reword.lvl).desc;
        player_amount = Equipment.getPlayerAmount(reword.Equip, reword.Part, reword.lvl);
    }


    var confirm_box = `<div id="matral-box-use" class="bg-general"> 
                            <div id="alert_head">    
                                <div>        
                                    <img src="images/panner/king_name.png">    
                                </div>       
                                <div id="alert-title">${Translate.Button.MenuList.Buy[UserLag.language]}</div>            
                                <img src="images/btns/close_b.png" class="img-sml close-alert_container">       
                            </div>
                            <div id="alert_box" class="matrial-show matrial-trade-show">        
                                <div class="row-2">
                                    <div class="pull-L left">
                                        <img src="${prize_image}">
                                        <ul> 
                                            ${req_list}
                                        </ul>

                                        <div class="mat_desc">
                                            ${long_desc}
                                        </div>
                                    </div>
                                    <div class="pull-R right">
                                        <div class="name">
                                            ${prize_name} 
                                        </div>
                                        <div class="req">
                                            <ul>
                                                ${right_req_list}
                                            </ul>
                                        </div>
                                        <div class="item-left">
                                            <label>المواد المتبقية:</label>
                                            <span>${exchange.player_max - exchange.take_times}</span>
                                        </div>
                                        <div class="prom">
                                            <label>قسطور</label>
                                        </div>
                                        <div class="max-limit">
                                            <label>الحد الاقصى للمواد:</label>
                                            <span>${exchange.player_max} </span>
                                        </div>
                                    </div>
                                </div>  

                                <div class="row-3">        
                                    <div class="confim-btn">            
                                        <button class="full-btn full-btn-3x  pull-R enter" id="buyTradeItem" data-trade-index="${index}">${Translate.Button.MenuList.Buy[UserLag.language]}</button>  
                                        <input type="text" min="1" step="1" class="pull-L only_num input" max="${exchange.player_max - exchange.take_times}" id="amount_to_trade" value="1">
                                        <div class="number-arrow-wrapper pull-L">
                                            <label class="number-arrow up"></label>
                                            <label class="number-arrow down"></label>
                                        </div>
                                    </div>    
                                </div>
                            </div>    
                        </div>`;
    $("body").append(confirm_box);

});


function buyTradeMatral(index) {

    for (var iii in EXCHANGE_ITEM)
        if (Number(EXCHANGE_ITEM[iii].id_ex) === Number(index))
            var exchange = EXCHANGE_ITEM[iii];

    var req = JSON.parse(exchange.req);
    var reword = JSON.parse(exchange.reword);
    var amountToTrade = Number($("#amount_to_trade").val()) || 1;
    if (amountToTrade < 1)
        return;

    for (var iii in req) {

        if (req[iii].type === "matrial") {

            if (Number(Matrial.getPlayerAmount(req[iii].matrial)) < Number(req[iii].amount) * amountToTrade) {

                alert_box.confirmMessage("للاسف لا تمتلك عدد كافى من المواد");
                return;
            }
        } else if (req[iii].type === "resource") {

            if (Number(game.CurrentCity.City[req[iii].resource_type]) < Number(req[iii].amount) * amountToTrade) {

                alert_box.confirmMessage("للاسف لا تمتلك عدد كافى من الموارد");
                return;
            }

        } else if (req[iii].type === "equip") {

            if (Equipment.getPlayerAmount(req[iii].Equip, req[iii].Part, req[iii].lvl) < req[iii].amount * amountToTrade) {
                alert_box.confirmMessage("للاسف لا تمتلك عدد كافى من المعدات");
                return;
            }


        }

    }




    if (reword.type === "matrial") {
        if (Number(exchange.max_to_have) < Number(Matrial.getPlayerAmount(reword.matrial)) + amountToTrade) {
            alert_box.confirmMessage("لقد تجاوزت الحد الاقصى للمواد");
            return;

        }
    } else if (reword.type === "equip") {
        if (Number(exchange.max_to_have) < Number(Equipment.getPlayerAmount(reword.Equip, reword.Part, reword.lvl)) + amountToTrade) {

            alert_box.confirmMessage("لقد تجاوزت الحد الاقصى للمعدات");
            return;

        }
    }


    $.ajax({

        url: `${API_URL}/api/AExchange/buyExchange`,
        type: 'POST',
        data: {
            idExchange: exchange.id_ex,
            idCity: game.CurrentCity.City.id_city,
            amountToTrade: amountToTrade,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        beforeSend: function(xhr) {
            waitCursor();
            $("#alert_box button").attr("disabled", "disabled");
        },
        success: function(data, textStatus, jqXHR) {
            unwaitCursor();

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var jsonData = JSON.parse(data);

            if (jsonData.state === 'ok') {

                exchange.take_times = Number(exchange.take_times) + amountToTrade;

                $(".close-alert_container").click();

                var reword = JSON.parse(exchange.reword);

                if (reword.type === "matrial") {

                    Matrial.givePlayer(reword.matrial, reword.amount * amountToTrade);

                } else if (reword.type === "equip") {

                    game.Equip.getPlayerEquip().done(function() {

                        $("#dialg_box .nav_bar .left-nav .selected").click();

                    });

                }


                for (var iii in req) {

                    if (req[iii].type === "matrial") {

                        Matrial.takeFrom(req[iii].matrial, req[iii].amount * amountToTrade);

                    } else if (req[iii].type === "resource") {

                        game.CurrentCity.City[req[iii].resource_type] -= req[iii].amount * amountToTrade;

                    }
                }

                alert_box.succesMessage("تم التبادل بنجاح");


            } else if (jsonData.state === "error_1") {

                alert_box.confirmMessage("لقد استنفذت الحد اليومى المسموح من التبادل");

            } else if (jsonData.state === "error_2") {

                alert_box.confirmMessage("للاسف لا تمتلك عدد كافى من المواد");

            } else if (jsonData.state === "error_3") {

                alert_box.confirmMessage("تم استنفاذ العدد الاقصى المسموح بالسيرفر");

            } else if (jsonData.state === "error_4") {

                alert_box.confirmMessage("للاسف لا تمتلك عدد كافى من المواد");

            } else if (jsonData.state === "error_5") {

                alert_box.confirmMessage("للاسف لا تمتلك عدد كافى من المعدات");

            } else if (jsonData.state === "error_over_max") {
                alert_box.confirmMessage("لقد وصلت الى الحد الاقصى من الجوائز");
            } else {
                alert(data);
            }

            city_profile.refresh_resource_view();
            $("#dialg_box .nav_bar .left-nav .selected").click();


        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

}

//<button class="full-btn full-btn-3x  pull-R enter" id="buyTradeItem" data-trade-index="${index}" onclick="buyTradeMatral('${index}')">${Translate.Button.MenuList.Buy[UserLag.language]}</button>
$(document).on("click", "#buyTradeItem", function() {
    var index = $(this).attr("data-trade-index");
    buyTradeMatral(index);
});
var BATTEL_REPORTS = {};

var Reports = {
    chang_content_leaving: function() {

        var all_lines = "";
        Reports.refresh_content_leaving();

        $.ajax({
            url: `${API_URL}/api/ABattelRunning/getLeavingHero`,
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'GET',
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                game.Battel.LeavinHeros = JSON.parse(data);
                Reports.refresh_content_leaving();


            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    },
    refresh_content_leaving: function() {
        var all_lines = "";
        var all = game.Battel.LeavinHeros;
        for (var iii = 0; iii < 16; iii++) {



            if (all[iii]) {
                var arrive_date = new Date(all[iii].time_end * 1000);
                var Hero = game.Hero.getHero(all[iii].id_hero);
                all_lines += `<div class="tr" id_battel = "${all[iii].id_battel}"  id_hero="${all[iii].id_hero}">
                                    <div class="td_1">${BATTAL_TASKS[all[iii].task].ar_title}</div>
                                    <div class="td_2">[${(all[iii].y_city)} , ${(all[iii].x_city)} ] &nbsp; &nbsp; ${game.City.getCity(Hero.Hero.id_city).City.name}</div>
                                    <div class="td_3">[${(all[iii].y_coord)} , ${(all[iii].x_coord)} ]</div>
                                    <div class="td_4">${(arrive_date.getHours()) + ":" + (arrive_date.getMinutes()) + ':' + (arrive_date.getSeconds())}</div>
                                    <div class="td_5 time_counter" time-end="${all[iii].time_end}"> ${changeTimeFormat(all[iii].time_end - Date.now() / 1000)}</div>

                                    <div class="td_6">
                                        <button class="full-btn full-btn-3x battel_hero_back"> استرجاع</button>
                                    </div>
                                </div>
                                `;
            } else {
                all_lines += `<div class="tr">

                                </div>
                                `;
            }


        }

        var output = `<div class="box_content for_report ">
                            <div class="left-content full">
                                <div class="th">
                                    <div class="td_1 ellipsis">${Translate.Title.TH.Expedition[UserLag.language]}</div>
                                    <div class="td_2 ellipsis">${Translate.Title.TH.HomeCity[UserLag.language]}</div>
                                    <div class="td_3 ellipsis">${Translate.Title.TH.TargetArena[UserLag.language]}</div>
                                    <div class="td_4 ellipsis">${Translate.Title.TH.ArrivalTime[UserLag.language]}</div>
                                    <div class="td_5 ellipsis">${Translate.Title.TH.RemainingTime[UserLag.language]}</div>
                                    <div class="td_6 ellipsis">${Translate.Button.General.Action[UserLag.language]}</div>
                                </div>
                                   ${all_lines} 
                            </div>
                        </div>`;

        $(".for_report").replaceWith(output);
    },
    change_content_heroBack: function() {

        $.ajax({
            url: `${API_URL}/api/ABattelRunning/getHeroBack`,
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'GET',
            beforeSend: function(xhr) {
                Reports.refresh_content_heroBack();
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                game.Battel.HeroBack = JSON.parse(data);
                Reports.refresh_content_heroBack();

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });


    },
    refresh_content_heroBack: function() {
        var all_lines = "";
        for (var iii = 0; iii < 16; iii++) {
            if (game.Battel.HeroBack[iii]) {

                var arrive_date = new Date(game.Battel.HeroBack[iii].time_back * 1000);

                all_lines += `<div class="tr" id_hero="${game.Battel.HeroBack[iii].id_hero}">
                                    <div class="td_1">${game.Battel.HeroBack[iii].Task < 5 ? "عودة من" : ""} ${BATTAL_TASKS[game.Battel.HeroBack[iii].Task].ar_title}</div>
                                    <div class="td_2">[${(game.Battel.HeroBack[iii].yFrom)} , ${(game.Battel.HeroBack[iii].xFrom)} ] &nbsp; &nbsp; ${game.City.getCityByCoord(game.Battel.HeroBack[iii].xTo, game.Battel.HeroBack[iii].yTo).City.name}</div>
                                    <div class="td_3">[${(game.Battel.HeroBack[iii].yTo)} , ${(game.Battel.HeroBack[iii].xTo)} ]</div>
                                    <div class="td_4">${(arrive_date.getHours()) + ":" + (arrive_date.getMinutes())}</div>
                                    <div class="td_5 time_counter" time-end="${game.Battel.HeroBack[iii].time_back}"> ${changeTimeFormat(game.Battel.HeroBack[iii].time_back - Date.now() / 1000)}</div>

                                    <div class="td_6">
                                        <button class="full-btn full-btn-3x show_hero_back show-hero-detailed-review" data-id-hero="${game.Battel.HeroBack[iii].id_hero}"> ${Translate.Button.MenuList.View[UserLag.language]}</button>
                                    </div>
                                </div>
                                `;
            } else {

                all_lines += `<div class="tr">

                                </div>
                                `;
            }


        }



        var output = `<div class="box_content for_report hero_back_list">
                            <div class="left-content full">
                                <div class="th">
                                    <div class="td_1 ellipsis">${Translate.Title.TH.Expedition[UserLag.language]}</div>
                                    <div class="td_2 ellipsis">${Translate.Title.TH.HomeCity[UserLag.language]}</div>
                                    <div class="td_3 ellipsis">${Translate.Title.TH.TargetArena[UserLag.language]}</div>
                                    <div class="td_4 ellipsis">${Translate.Title.TH.ArrivalTime[UserLag.language]}</div>
                                    <div class="td_5 ellipsis">${Translate.Title.TH.RemainingTime[UserLag.language]}</div>
                                    <div class="td_6 ellipsis">${Translate.Button.General.Action[UserLag.language]}</div>
                                </div>
                                    ${all_lines} 
                            </div>  
                        </div>`;
        $("#dialg_box .for_report").replaceWith(output);
        $("#dialg_box .nicescroll-rails").remove();
    },
    change_content_GarrisonUnits: function() {
        Reports.refresh_content_GarrisonUnits();
        $.ajax({
            url: `${API_URL}/api/ABattelRunning/getGarrisonHeros`,
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'GET',
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);


                game.Battel.HeroGarrison = JSON.parse(data);
                Reports.refresh_content_GarrisonUnits();

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });



    },
    refresh_content_GarrisonUnits: function() {

        var all_lines = "";

        for (var iii = 0; iii < 16; iii++) {
            if (game.Battel.HeroGarrison[iii]) {
                var Unit = WorldUnit.getWorldUnit(game.Battel.HeroGarrison[iii].x_coord, game.Battel.HeroGarrison[iii].y_coord);
                all_lines += `<div class="tr">
                                    <div class="td_1">[${game.Battel.HeroGarrison[iii].x_coord} , ${game.Battel.HeroGarrison[iii].y_coord}]</div>
                                    <div class="td_2">${game.City.getCity(game.Hero.getHero(game.Battel.HeroGarrison[iii].id_hero)).City.name}</div>
                                    <div class="td_3">${game.Hero.getHero(game.Battel.HeroGarrison[iii].id_hero).Hero.name}</div>
                                    <div class="td_4">${WorldUnit.isCity(Unit.ut) ? "مدينة" : `${game.World.UnitTypeData[Unit.ut].Title} مستوى ${Unit.l}`}</div>
                                    <div class="td_5"> ----</div>

                                    <div class="td_6">
                                        <button class="full-btn full-btn-3x small show_hero show-hero-detailed-review" data-id-hero="${game.Battel.HeroGarrison[iii].id_hero}"> ${Translate.Button.MenuList.View[UserLag.language]}</button>
                                        <button class="full-btn full-btn-3x small hero_back_from_garrison" data-id-hero="${game.Battel.HeroGarrison[iii].id_hero}"> استرجاع</button>
                                    </div>
                                </div>
                                `;
            } else {

                all_lines += `<div class="tr">

                                </div>
                                `;
            }


        }



        var output = ` <div class="box_content for_report hero_garrison_list">
                            <div class="left-content full">
                                <div class="th">
                                    <div class="td_1 ellipsis">${Translate.Title.TH.Expedition[UserLag.language]}</div>
                                    <div class="td_2 ellipsis">${Translate.Title.TH.HomeCity[UserLag.language]}</div>
                                    <div class="td_3 ellipsis">${Translate.Title.TH.Hero[UserLag.language]}</div>
                                    <div class="td_3 ellipsis">${Translate.Title.TH.TargetArena[UserLag.language]}</div>
                                    <div class="td_5 ellipsis">${Translate.Title.TH.RemainingTime[UserLag.language]}</div>
                                    <div class="td_6 ellipsis">${Translate.Button.General.Action[UserLag.language]}</div>
                                </div>
                                  ${all_lines} 
                            </div>
                        </div>`;
        $("#dialg_box .for_report").replaceWith(output);
        $("#dialg_box .nicescroll-rails").remove();

    },
    change_content_SpyTask: function() {

        Reports.refresh_content_SpyTask();
        $.ajax({
            url: `${API_URL}/api/ABattelRunning/getSpyRuning`,
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'GET',
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                game.Battel.SpyingList = JSON.parse(data);
                Reports.refresh_content_SpyTask();

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });



    },
    refresh_content_SpyTask: function() {
        var all_lines = "";
        for (var iii = 0; iii < 16; iii++) {
            if (game.Battel.SpyingList[iii]) {
                var Unit = WorldUnit.getWorldUnit(game.Battel.SpyingList[iii].x_to, game.Battel.SpyingList[iii].y_to)
                all_lines += `<div class="tr">
                                    <div class="td_1">[${game.Battel.SpyingList[iii].x_to} , ${game.Battel.SpyingList[iii].y_to}]</div>
                                    <div class="td_2">${game.City.getCity(game.Battel.SpyingList[iii].id_city).City.name}</div>
                                    <div class="td_3">${game.Battel.SpyingList[iii].spy_num}</div>
                                    <div class="td_4">${WorldUnit.isCity(Unit.ut) ?  "مدينة" : `${getUnitTitle(Unit.ut)} مستوى ${Unit.l}`}</div>
                                    <div class="td_5 time_counter" time-end="${game.Battel.SpyingList[iii].time_arrive}">${changeTimeFormat(game.Battel.SpyingList[iii].time_arrive - $.now() / 1000)}</div>

                                    <div class="td_6">
                                        <button class="full-btn full-btn-3x cansel_spy" data-id-spy="${game.Battel.SpyingList[iii].id_spy}">${Translate.Button.General.Cancel[UserLag.language]}</button>
                                    </div>
                                </div>
                                `;
            } else {

                all_lines += `<div class="tr">

                                </div>
                                `;
            }
        }

        var output = `<div class="box_content for_report spy_task_list">
                            <div class="left-content full">
                                <div class="th">
                                    <div class="td_1 ellipsis">${Translate.Title.TH.Expedition[UserLag.language]}</div>
                                    <div class="td_2 ellipsis">${Translate.Title.TH.HomeCity[UserLag.language]}</div>
                                    <div class="td_3 ellipsis">${Translate.Title.TH.Scout[UserLag.language]}</div>
                                    <div class="td_3 ellipsis">${Translate.Title.TH.TargetArena[UserLag.language]}</div>
                                    <div class="td_5 ellipsis">${Translate.Title.TH.RemainingTime[UserLag.language]}</div>
                                    <div class="td_6 ellipsis">${Translate.Button.General.Action[UserLag.language]}</div>
                                </div>
                                  ${all_lines}
                            </div>
                        </div>`;
        $("#dialg_box .for_report").replaceWith(output);
    }

};



/*  retreat from battel */
$(document).on("click", ".battel_hero_back, #getHeroFromBattel", function() {

    var id_hero = $(this).parents(".tr").attr("id_hero");
    var id_battel = $(this).parents(".tr").attr("id_battel");
    var self_ = $(this);
    alert_box.confirmDialog("تاكيد انسحاب البطل ", function() {


        var flag_check = false;

        var json_obj = {
            url: "Battel/abort",
            data: {
                idHero: id_hero
            }
        };
        ws.send(JSON.stringify(json_obj));
        flag_check = true;
    });

});



$(document).on("click", ".cansel_spy", function() {

    var id_spy = $(this).attr("data-id-spy");

    alert_box.confirmDialog("تاكيد الغاء عملية التجسس", function() {
        var idCity = game.CurrentCity.City.idCity;
        $.ajax({

            url: `${API_URL}/api/ASpy/cancel`,
            data: {
                idSpy: id_spy,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                Reports.change_content_SpyTask();
                alert_box.succesMessage("تم الغاء عملبة التجسس بنجاح");
                PLAYER_NOTIF.spy_task -= 1;
                Fixed.refreshPlayerNotif();

                game.City.getCity(idCity).City = JsonObject.City;
                city_profile.refresh_army_view();
                city_profile.refresh_resource_view();



            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    });

});


$(document).on("click", ".hero_back_from_garrison", function() {

    var id_hero = Number($(this).attr("data-id-hero"));
    var self_ = $(this);

    alert_box.confirmDialog("تأكيد سحب البطل ", function() {

        var idCity = game.CurrentCity.City.id_city;

        $.ajax({
            url: `${API_URL}/api/ACityPalace/removeHeroFromGarrison`,
            data: {
                idHero: id_hero,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    alert_box.succesMessage("تم  سحب البطل بنجاح");

                    game.Battel.HeroGarrison = JsonObject.Garrison;
                    game.Hero.getHero(id_hero).Hero = JsonObject.Hero;
                    Reports.refresh_content_GarrisonUnits();
                    city_profile.refresh_hero_view();

                } else {
                    alert(data);
                    console.log(data);
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    });

});
var Dominant = {};



$(document).on("click", ".left-nav ul  li", function() {
    $(".left-nav ul  li").each(function(el) {
        $(this).removeClass("selected")
    });
    $(this).addClass("selected");
    $("#dialg_box .nicescroll-rails").remove();

    var head_title = $(this).attr("head_title");
    switch (head_title) {
        // فيها صفحة الرئيسى ف الموارد
        case "colonizer-city":
            Dominant.cityColonizer();
            break;
        case "my-colonized-city":
            Dominant.MyColonizedCity();
            break;
    }
});

Dominant.dialogBox = function() {

    return menu_bar.dialogBox(Translate.Title.MenuList.Dominance[UserLag.language], NavBar.Dominance, `<div id="WORLD_UNIT_DOMINANT" class="box_content"></div>`, 0);
};

Dominant.armyCapital = function() {
    $.ajax({

        url: "api/dominant.php",
        data: {

            GET_ARMY_CAPITAL_DOMINANT: true

        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (isJson(data)) {
                var jsonData = JSON.parse(data);
                console.log(jsonData)
            } else {
                alert(data);
                return;
            }

            var list = `<div class="th">
                            <div class="td_1 ellipsis" style="width:25%">${Translate.Title.TH.Capital[UserLag.language]}</div>
                            <div class="td_2 ellipsis" style="width:20%">${Translate.Title.TH.Coordinate[UserLag.language]}</div>
                            <div class="td_3 ellipsis" style="width:30%">${Translate.Title.TH.Dominant[UserLag.language]}</div>
                            <div class="td_4 ellipsis" style="width:10%">${Translate.Title.TH.Duration[UserLag.language]}</div>
                            <div class="td_5 ellipsis" style="width:15%">${Translate.Button.General.Action[UserLag.language]}</div>
                        </div>`;

            for (var iii in jsonData.unit) {

                if (jsonData.unit[iii].rank.length > 0) {
                    var duration = 0;
                    if (jsonData.type === "rank") {
                        duration = jsonData.unit[iii].rank[0].d_sum;
                    } else if (jsonData.type === "domain") {

                        duration = Math.floor(Date.now() / 1000 - jsonData.unit[iii].rank[0].time_stamp);

                    }


                    list += `<div class="tr">
                                 <div class="td_1" style="width:25%">${jsonData.unit[iii].title}</div>
                                 <div class="td_2" style="width:20%">[${jsonData.unit[iii].x} , ${jsonData.unit[iii].y}]</div>
                                 <div class="td_3" style="width:30%">${jsonData.unit[iii].rank[0].name}</div>
                                 <div class="td_4 rtl" style="width:10%">${`${Math.floor(duration / 60)} د ${duration % 60} ث`}</div>
                                 <div class="td_5" style="width:15%">
                                     <button class="full-btn-3x open-world-unit" data-x-coord="${jsonData.unit[iii].x}" data-y-coord="${jsonData.unit[iii].y}">${Translate.Button.MenuList.View[UserLag.language]}</button>
                                 </div>
                             </div>`;
                } else {

                    list += `<div class="tr">
                                <div class="td_1" style="width:25%">${jsonData.unit[iii].title}</div>
                                <div class="td_2" style="width:20%">[${jsonData.unit[iii].x} , ${jsonData.unit[iii].y}]</div>
                                <div class="td_3" style="width:30%">----</div>
                                <div class="td_4" style="width:10%">----</div>
                                <div class="td_5" style="width:15%">
                                    <button class="full-btn-3x open-world-unit"  data-x-coord="${jsonData.unit[iii].x}" data-y-coord="${jsonData.unit[iii].y}">${Translate.Button.MenuList.View[UserLag.language]}</button>
                                </div>
                            </div>`;

                }

            }
            var content = `<div class="left-content full">
                            ${list}
                            <div class="tr"></div><div class="tr"></div>
                            <div class="tr"></div><div class="tr"></div>
                        </div>`;

            $("#WORLD_UNIT_DOMINANT").html(content);

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });
};

Dominant.cityColonizer = function() {
    $.ajax({

        url: `${API_URL}/api/ADominant/getCityColonizer`,
        data: {
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var jsonData = JSON.parse(data);

            var list = `<div class="th">
                            <div class="td_1 ellipsis" style="width:15%">المدينة</div>
                            <div class="td_2 ellipsis" style="width:20%">${Translate.Title.TH.Coordinate[UserLag.language]}</div>
                            <div class="td_3 ellipsis" style="width:15%">${Translate.Title.TH.Dominant[UserLag.language]}</div>
                            <div class="td_4 ellipsis" style="width:25%">التاريخ</div>
                            <div class="td_5 ellipsis" style="width:25%">${Translate.Button.General.Action[UserLag.language]}</div>
                        </div>`;

            for (var iii = 0; iii < 10; iii++) {
                if (jsonData[iii]) {
                    list += `<div class="tr">
                                 <div class="td_1" style="width:15%">${jsonData[iii].CityName}</div>
                                 <div class="td_2" style="width:20%">[${jsonData[iii].x} , ${jsonData[iii].y}]</div>
                                 <div class="td_3" style="width:15%">${jsonData[iii].PlayerName}</div>
                                 <div class="td_4 rtl" style="width:25%">${dateTimeFormatShort(new Date(jsonData[iii].time_stamp))}</div>
                                 <div class="td_5" style="width:25%">
                                     <button class="full-btn-3x open-world-unit" style="width: 25%" data-x-coord="${jsonData[iii].x}" data-y-coord="${jsonData[iii].y}">${Translate.Button.MenuList.View[UserLag.language]}</button>
                                     <button class="full-btn-3x abondonColonizedCity" style="width: 25%; height: 26px" data-id-city="${jsonData[iii].id_city_colonized}">تخلى</button>
                                 </div>
                             </div>`;
                } else {
                    list += `<div class="tr"></div>`;
                }
            }

            var content = `<div class="left-content full">
                            ${list}
                        </div>`;

            $("#WORLD_UNIT_DOMINANT").html(content);

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });
};

Dominant.MyColonizedCity = function() {
    $.ajax({

        url: `${API_URL}/api/ADominant/getCityColonized`,
        data: {
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var jsonData = JSON.parse(data);

            var list = `<div class="th">
                            <div class="td_1 ellipsis" style="width:25%">المدينة</div>
                            <div class="td_2 ellipsis" style="width:20%">${Translate.Title.TH.Coordinate[UserLag.language]}</div>
                            <div class="td_3 ellipsis" style="width:30%">${Translate.Title.TH.Dominant[UserLag.language]}</div>
                            <div class="td_4 ellipsis" style="width:10%">${Translate.Title.TH.Duration[UserLag.language]}</div>
                            <div class="td_5 ellipsis" style="width:15%">${Translate.Button.General.Action[UserLag.language]}</div>
                        </div>`;

            for (var iii = 0; iii < 10; iii++) {
                if (jsonData[iii]) {
                    list += `<div class="tr">
                                 <div class="td_1" style="width:25%">${jsonData[iii].CityName}</div>
                                 <div class="td_2" style="width:20%">[${jsonData[iii].x} , ${jsonData[iii].y}]</div>
                                 <div class="td_3" style="width:30%">${jsonData[iii].PlayerName}</div>
                                 <div class="td_4 rtl" style="width:10%">${dateTimeFormatShort(new Date(jsonData[iii].time_stamp))}</div>
                                 <div class="td_5" style="width:15%">
                                     <button class="full-btn-3x open-world-unit" style="width: 25%" data-x-coord="${jsonData[iii].x}" data-y-coord="${jsonData[iii].y}">${Translate.Button.MenuList.View[UserLag.language]}</button>
                                     <button class="full-btn-3x  fireColonizer" style="width: 25%; height: 26px" data-id-city="${jsonData[iii].id_city_colonized}">طرد المستعمر</button>
                                 </div>
                             </div>`;
                } else {
                    list += `<div class="tr"></div>`;
                }
            }

            var content = `<div class="left-content full">
                            ${list}
                        </div>`;

            $("#WORLD_UNIT_DOMINANT").html(content);

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });
};




$(document).on("click", ".open-world-unit", function() {

    var x_coord = $(this).attr("data-x-coord");
    var y_coord = $(this).attr("data-y-coord");
    $("#dialg_box").slideUp("fast", function() {
        $("#dialg_box").remove();
        uniteMapClick(x_coord, y_coord);
    });

});


$(document).on("click", ".abondonColonizedCity", function() {

    var idCity = $(this).attr("data-id-city");
    $.ajax({
        url: `${API_URL}/api/ADominant/abondonColonizedCity`,
        data: {
            idCity: idCity,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);
            Dominant.cityColonizer();
            if (JsonObject.state === "ok") {
                alert_box.succesMessage("تم التخلى بنجاح");
                game.City.getCityBase();
            } else {
                alert_box.confirmMessage("لست المسيطر على المدينة");
            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });
});


$(document).on("click", ".fireColonizer", function() {

    var idCity = $(this).attr("data-id-city");

    alert_box.confirmDialog("تاكيد طرد المستعمر مقابل 1 مساعدة حرية", function() {
        $.ajax({
            url: `${API_URL}/api/ADominant/fireColonizer`,
            data: {
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);
                Dominant.cityColonizer();
                if (JsonObject.state === "ok") {
                    alert_box.succesMessage("تم  الطرد بنجاح");
                    game.City.getCityBase();
                } else if (JsonObject.state === "error_1") {
                    alert_box.confirmMessage("لا توجد مواد كافية ");
                } else {
                    alert_box.confirmMessage("لست المسيطر على المدينة");
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });
    });
});
game.Item.ItemBox = function(Box, pageOffset = 1) {
    var ListString = "";
    var ListOfItem = Matrial.listOf(Box);
    var FilteredList = {};
    var currentOffset = 0;

    var maxPageCount = Math.ceil(Object.keys(ListOfItem).filter(It => Matrial.getPlayerAmount(It) > 0).length / 12);

    if (pageOffset > maxPageCount)
        return "";
    if (pageOffset < 1)
        return "";




    $("#page-nav-holder").html(`${pageOffset}/${Math.ceil(Object.keys(ListOfItem).filter(It => Matrial.getPlayerAmount(It) > 0).length / 12)}`);
    $("#nav-item-box-right").attr("data-current-offset", pageOffset);
    $("#nav-item-box-left").attr("data-current-offset", pageOffset);
    $("#dialg_box .right-content .total").attr("mat_table", Box);
    $(".box_content").attr("data-page-for", "box-item");
    for (var iii in ListOfItem) {

        if (Matrial.getPlayerAmount(iii) <= 0)
            continue;
        currentOffset++;

        if (currentOffset > pageOffset * 12)
            break;
        if (currentOffset <= (pageOffset - 1) * 12)
            continue;

        FilteredList[iii] = ListOfItem[iii];
    }

    for (var iii in FilteredList)
        ListString += Matrial.itemUnitWidget(iii, false);

    return ListString;

};


game.Item.ItemMallBox = function(Box, pageOffset = 1) {

    var ListString = "";
    var ListOfItem = Matrial.listOf(Box);
    var FilteredList = {};
    var currentOffset = 0;

    var maxPageCount = Math.ceil(Object.keys(ListOfItem).filter(It => ListOfItem[It].gold > 0).length / 12);

    if (pageOffset > maxPageCount)
        return;
    if (pageOffset < 1)
        return;

    $("#page-nav-holder").html(`${pageOffset}/${Math.ceil(Object.keys(ListOfItem).filter(It => ListOfItem[It].gold > 0).length / 12)}`);
    $("#nav-item-box-right").attr("data-current-offset", pageOffset);
    $("#nav-item-box-left").attr("data-current-offset", pageOffset);
    $("#dialg_box .right-content .total").attr("mat_table", Box);
    $(".box_content").attr("data-page-for", "mall");
    for (var iii in ListOfItem) {

        if (ListOfItem[iii].gold <= 0)
            continue;
        currentOffset++;

        if (currentOffset > pageOffset * 12)
            break;
        if (currentOffset <= (pageOffset - 1) * 12)
            continue;

        FilteredList[iii] = ListOfItem[iii];
    }

    for (var iii in FilteredList)
        ListString += Matrial.itemUnitWidget(iii, true);

    return ListString;

};

game.Item.ItemExchangeBox = function(Box, pageOffset = 1) {

    var ListString = "";
    var FilteredList = [];
    var currentOffset = 0;

    var maxPageCount = Math.ceil(EXCHANGE_ITEM.filter(It => It.cat === Box || Box === "trade-all").length / 9);

    if (pageOffset > maxPageCount)
        return "";
    if (pageOffset < 1)
        return "";

    $("#page-nav-holder").html(`${pageOffset}/${maxPageCount}`);
    $("#nav-item-box-right").attr("data-current-offset", pageOffset);
    $("#nav-item-box-left").attr("data-current-offset", pageOffset);
    $("#dialg_box .right-content .total").attr("mat_table", Box);
    $(".box_content").attr("data-page-for", "exchange");



    for (var iii in EXCHANGE_ITEM) {
        currentOffset++;

        if (currentOffset > pageOffset * 9)
            break;
        if (currentOffset <= (pageOffset - 1) * 9)
            continue;

        FilteredList.push(EXCHANGE_ITEM[iii]);
    }

    for (var iii in FilteredList)
        ListString += Trading.content_unit(FilteredList[iii]);


    return ListString;

};

game.Item.EquipBox = function(pageOffset = 1) {

    var all_equip = "";
    var FilteredList = [];
    var currentOffset = 0;

    var maxPageCount = Math.ceil(game.DPlayer.Equip.filter(It => !It.id_hero).length / 12);

    if (pageOffset > maxPageCount)
        return;
    if (pageOffset < 1)
        return;

    $("#page-nav-holder").html(`${pageOffset}/${maxPageCount}`);
    $("#nav-item-box-right").attr("data-current-offset", pageOffset);
    $("#nav-item-box-left").attr("data-current-offset", pageOffset);
    $("#dialg_box .right-content .total").attr("mat_table", "equip");
    $(".box_content").attr("data-page-for", "equip");

    for (var iii in game.DPlayer.Equip) {

        if (game.DPlayer.Equip[iii].id_hero)
            continue;
        currentOffset++;

        if (currentOffset > pageOffset * 12)
            break;
        if (currentOffset <= (pageOffset - 1) * 12)
            continue;

        FilteredList.push(game.DPlayer.Equip[iii]);
    }

    for (var iii in FilteredList)
        all_equip += `  <li class="matrial_unit" data-id-equip="${FilteredList[iii].id_equip}">
                            <img src=" images/style/Border-up.png" class="border_up"/>
                            <div class="img-inside-box">
                                 <img src="${Equipment.getImage(FilteredList[iii].type, FilteredList[iii].part, FilteredList[iii].lvl)}" class="big-img equip-unit" data-equi-part="${FilteredList[iii].part}" data-equi-type="${FilteredList[iii].type}" data-equi-lvl="${FilteredList[iii].lvl}">
                             </div>
                             <div class="txt-inside-box">
                                 <h2>${Equipment.getName(FilteredList[iii].type, FilteredList[iii].part, FilteredList[iii].lvl)}</h2>
                             </div>
                         </li>`;

    return all_equip;

};


$(document).on("click", "#nav-item-box-right", function() {

    var currentOffset = Number($(this).attr("data-current-offset"));
    var PageFor = $(".box_content").attr("data-page-for");

    if (PageFor === "mall")
        return $("#dialg_box .right-content .total").html(game.Item.ItemMallBox($("#dialg_box .right-content .total").attr("mat_table"), currentOffset + 1));
    if (PageFor === "box-item") {
        let Cont = game.Item.ItemBox($("#dialg_box .right-content .total").attr("mat_table"), currentOffset + 1);
        if (Cont == "")
            return;
        return $("#dialg_box .right-content .total").html(Cont);
    }

    if (PageFor === "equip")
        return $("#dialg_box .right-content .total").html(game.Item.EquipBox(currentOffset + 1));
    if (PageFor === "exchange")
        return $("#dialg_box .right-content .total").html(game.Item.ItemExchangeBox($("#dialg_box .right-content .total").attr("mat_table"), currentOffset + 1));

});


$(document).on("click", "#nav-item-box-left", function() {

    var currentOffset = Number($(this).attr("data-current-offset"));
    var PageFor = $(".box_content").attr("data-page-for");

    if (PageFor === "mall")
        return $("#dialg_box .right-content .total").html(game.Item.ItemMallBox($("#dialg_box .right-content .total").attr("mat_table"), currentOffset - 1));
    if (PageFor === "box-item")
        return $("#dialg_box .right-content .total").html(game.Item.ItemBox($("#dialg_box .right-content .total").attr("mat_table"), currentOffset - 1));
    if (PageFor === "equip")
        return $("#dialg_box .right-content .total").html(game.Item.EquipBox(currentOffset - 1));
    if (PageFor === "exchange")
        return $("#dialg_box .right-content .total").html(game.Item.ItemExchangeBox($("#dialg_box .right-content .total").attr("mat_table"), currentOffset - 1));

});
game.Rank = {};


game.Rank.RankFor = {

    Player: "Players",
    Guild: "unuions",
    Hero: "heros",
    City: "cities",

};



game.Rank.RankLastCount = {

    [game.Rank.RankFor.Player]: "player_num",
    [game.Rank.RankFor.Guild]: "guild_num",
    [game.Rank.RankFor.Hero]: "hero_num",
    [game.Rank.RankFor.City]: "city_num",

};

game.Rank.EmptyBox = function() {
    return ` <div class="box_content">
                <div id="TeamBox">
                    <div id="RankList" class="RankPage">
                        <div class="List">
                            <div class="Body">
                                <div class="RankRows"> </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
            <div id="DialBoxFooter" data-rank-for="">
                <div id="BesideNavBtns">
                    <div class="NavContBtns">
                        <div class="nav-arrows flex">
                            <div data-move="most-left" class="most-left-btn move_p_rank"></div>
                            <div data-move="left"      class="left-btn move_p_rank"></div>
                            <div class="page-count flex stroke"><span id="current_page_num"></span>/<span id="TotalPageNumber"></span></div>
                            <div data-move="right" class="right-btn move_p_rank"></div>
                            <div data-move="most-right" class="most-right-btn move_p_rank"></div>
                        </div>
                        <div id="goToBtnRankCo">
                            <div class="flex">
                                <input type="text" class="only_num input">
                                <button class="goBtn btn full-btn full-btn-1x ellipsis">
                                    اذهب الى
                                </button>
                            </div>
                        </div>
                        <div id="RankSearchSelect">
                        ${game.Ui.Select.make([{value: "ByName", title: "الأسم"}])}
                        </div>
                        <div id="SearchByInput">
                            <div id="nav_search" class="flex">
                                <input type="text" class="input">
                                <button class="full-btn full-btn-1x ellipsis">
                                    بحث
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>`;
};
game.Rank.PlayerGeneralRank = function(offset) {
    $.ajax({
        url: `${API_URL}/api/ARankingPlayer/generalRank`,
        data: {
            token: game.Config.OuthToken,
            server: game.Config.idServer,
            offset: offset
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {
            console.log(data)
            if (isJson(data)) {
                game.Rank.playerRow(offset, JSON.parse(data));
            } else {
                alert(data);
            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });
}
game.Rank.playerRow = function(offset, PlayerList) {
    var _return = "";

    _return += `<div class="Header HeaderEnemyFrie flex">
                    <div class="tc-rank">${Translate.Title.TH.Ranking[UserLag.language]}</div>
                    <div class="tc-leader">${Translate.Title.TH.Lord[UserLag.language]}</div>
                    <div class="tc-team">${Translate.Title.TH.League[UserLag.language]}</div>
                    <div class="tc-pres">${Translate.Title.TH.Prestige[UserLag.language]}</div>
                    <div class="tc-honor">${Translate.Title.TH.Honor[UserLag.language]}</div>
                    <div class="tc-memNum">${Translate.Title.TH.NobleRank[UserLag.language]}</div>
                    <div class="tc-show">${Translate.Button.General.Action[UserLag.language]}</div>
                </div>`;



    var title_count = 0;
    var p_name = "";
    var name = "";

    for (var iii = 0; iii < 10; iii++) {

        if (!PlayerList[iii]) {

            _return += `<div class="tr" data-rank="${offset + iii + 1}"></div>`
            continue;
        }

        name = "";
        p_name = "";
        title_count = 0;

        if (PlayerList[iii].title_1) {
            p_name += `<div class="rank-title rank-title_1" style="width: 75px;">${PlayerList[iii].title_1}</div>`;
            title_count++;
        }
        if (PlayerList[iii].title_2) {
            p_name += `<div class="rank-title rank-title_2" style="width: 75px; margin-right: -65px;">${PlayerList[iii].title_2}</div>`;
            title_count++;
        }
        if (PlayerList[iii].title_3) {
            p_name += `<div class="rank-title rank-title_3" style="width: 75px; margin-right: -65px;">${PlayerList[iii].title_3}</div>`;
            title_count++;
        }
        if (PlayerList[iii].title_4) {
            p_name += `<div class="rank-title rank-title_4" style="width: 75px; margin-right: -65px;">${PlayerList[iii].title_4}</div>`;
            title_count++;
        }
        if (PlayerList[iii].title_5) {
            p_name += `<div class="rank-title rank-title_5" style="width: 75px; margin-right: -65px;">${PlayerList[iii].title_5}</div>`;
            title_count++;
        }
        if (PlayerList[iii].title_6) {
            p_name += `<div class="rank-title rank-title_6" style="width: 75px; margin-right: -65px;">${PlayerList[iii].title_6}</div>`;
            title_count++;
        }


        name = `<div class="name">${PlayerList[iii].name}</div>`;


        _return += `<div class="tr" data-rank="${offset + iii + 1}">
                            <div class="tc-rank" data-rank="${offset + Number(iii) + 1}">${offset + Number(iii) + 1}</div>
                            <div class="tc-leader flex">
                                <div class="image" style="background-image: url(${game.BaseData.HeroAvatar[PlayerList[iii].avatar]});">
                                    <div class="border"></div>
                                </div>
                                ${name + p_name}
                            </div>
                            <div class="tc-team flex">
                            ${PlayerList[iii].id_guild ? `
                                <div class="team-slog">
                                    <div class="slog" style="background-image: url(images/style/bottom-${PlayerList[iii].slog_btm}.png);">
                                    </div>
                                    <div class="slog"
                                        style="background-image: url(images/style/central-${PlayerList[iii].slog_cnt}.png); margin-top: -37px;">
                                    </div>
                                    <div class="slog"
                                        style="background-image: url(images/style/top-${PlayerList[iii].slog_top}.png); margin-top: -37px;">
                                    </div>
                                </div>` : ""}
                                
                                <div class="team-name">${PlayerList[iii].guild || "-----"}</div>
                            </div>
                            
                            <div class="tc-pres flex">${getArabicNumbers(PlayerList[iii].prestige)}</div>
                            <div class="tc-honor flex">${getArabicNumbers(PlayerList[iii].honor)}</div>
                            <div class="tc-memNum flex">${game.BaseData.Promotion[PlayerList[iii].porm].Title}</div>
                            <div class="tc-show">
                                <button class="full-btn-3x btn show-player-profile"  data-id-player="${PlayerList[iii].id_player}">${Translate.Button.MenuList.View[UserLag.language]}</button>
                            </div>
                        </div>`;

    }

    $("#RankList .RankRows").html(_return);
    $("#current_page_num").html(getArabicNumbers(Math.ceil(offset / 10) + 1));
    $("#TotalPageNumber").html(Math.ceil(SERVER_DATA.player_num / 10));
};
game.Rank.GuildGeneralRank = function(offset) {

    $.ajax({
        url: `${API_URL}/api/ARankingGuild/generalRank`,
        data: {
            token: game.Config.OuthToken,
            server: game.Config.idServer,
            offset: offset
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (isJson(data)) {
                var json_data = JSON.parse(data);
            } else {
                alert(data);
            }
            game.Rank.GuildRow(offset, JSON.parse(data))



        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

}
game.Rank.GuildRow = function(offset, GuildList) {
    var _return = "";

    _return += `<div class="Header HeaderEnemyFrie flex">
                    <div class="tc-rank">${Translate.Title.TH.Ranking[UserLag.language]}</div>
                    <div class="tc-team">${Translate.Title.TH.League[UserLag.language]}</div>
                    <div class="tc-leader">${Translate.Title.TH.Host[UserLag.language]}</div>
                    <div class="tc-pres">${Translate.Title.TH.Prestige[UserLag.language]}</div>
                    <div class="tc-honor">${Translate.Title.TH.Honor[UserLag.language]}</div>
                    <div class="tc-memNum">${Translate.Title.TH.Members[UserLag.language]}</div>
                    <div class="tc-show">${Translate.Button.General.Action[UserLag.language]}</div>
                </div>`;


    for (var iii = 0; iii < 10; iii++) {

        if (!GuildList[iii]) {
            _return += `<div class="tr" data-rank="${offset + iii + 1}"></div>`
            continue;
        }
        _return += `<div class="tr" data-rank="${offset + iii + 1}">
                            <div class="tc-rank" data-rank="${offset + Number(iii) + 1}">${offset + Number(iii) + 1}</div>
                            <div class="tc-team flex">
                            ${GuildList[iii].id_guild ? `
                                <div class="team-slog">
                                    <div class="slog" style="background-image: url(images/style/bottom-${GuildList[iii].slog_btm}.png);">
                                    </div>
                                    <div class="slog"
                                        style="background-image: url(images/style/central-${GuildList[iii].slog_cnt}.png); margin-top: -37px;">
                                    </div>
                                    <div class="slog"
                                        style="background-image: url(images/style/top-${GuildList[iii].slog_top}.png); margin-top: -37px;">
                                    </div>
                                </div>` : ""}
                                
                                <div class="team-name">${GuildList[iii].GuildName || "-----"}</div>
                            </div>
                            <div class="tc-leader flex">
                                <div class="image" style="background-image: url(${game.BaseData.HeroAvatar[GuildList[iii].avatar]});">
                                    <div class="border"></div>
                                </div>
                                <div class="name">${GuildList[iii].lord_name}</div>
                            </div>
                            <div class="tc-pres flex">${getArabicNumbers(GuildList[iii].prestige)}</div>
                            <div class="tc-honor flex">${getArabicNumbers(GuildList[iii].honor)}</div>
                            <div class="tc-memNum flex">${GuildList[iii].mem_num}</div>
                            <div class="tc-show">
                                <button class="full-btn-3x btn show-guild-prev"  data-id-guild="${GuildList[iii].id_guild}">${Translate.Button.MenuList.View[UserLag.language]}</button>
                            </div>
                        </div>`;

    }

    $("#RankList .RankRows").html(_return);
    $("#current_page_num").html(getArabicNumbers(Math.ceil(offset / 10) + 1));
    $("#TotalPageNumber").html(Math.ceil(SERVER_DATA.guild_num / 10));

}
game.Rank.HeroGeneralRank = function(offset) {
    $.ajax({
        url: `${API_URL}/api/ARankingHero/generalRank`,
        data: {
            token: game.Config.OuthToken,
            server: game.Config.idServer,
            offset: offset
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            game.Rank.HeroRow(offset, JSON.parse(data));

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

}
game.Rank.HeroRow = function(offset, HeroList) {

    var List = "";


    List += `<div class="Header HeaderEnemyFrie flex">
                <div class="tc-rank">${Translate.Title.MenuList.Ranking[UserLag.language]}</div>
                <div class="tc-leader">${Translate.Title.TH.Hero[UserLag.language]}</div>
                <div class="tc-leader">${Translate.Title.TH.Lord[UserLag.language]}</div>
                <div class="tc-hero-lvl">${Translate.Title.TH.Lvl[UserLag.language]}</div>
                <div class="tc-hero-point_a">${Translate.Title.TH.Sway[UserLag.language]}</div>
                <div class="tc-hero-point_b">${Translate.Title.TH.Bravery[UserLag.language]}</div>
                <div class="tc-hero-point_c">${Translate.Title.TH.Parry[UserLag.language]}</div>
                <div class="tc-show">${Translate.Button.General.Action[UserLag.language]}</div>
            </div>`;


    for (var iii = 0; iii < 10; iii++) {

        if (!HeroList[iii]) {
            List += `<div class="tr" data-rank="${offset + iii + 1}"></div>`;
            continue;
        }
        List += `<div class="tr" data-rank="${offset + iii + 1}">
                            <div class="tc-rank" data-rank="${offset + Number(iii) + 1}">${offset + Number(iii) + 1}</div>
                            <div class="tc-leader flex">
                                <div class="image" style="background-image: url(${game.BaseData.HeroAvatar[HeroList[iii].heroAvatar]});">
                                    <div class="border"></div>
                                </div>
                                <div class="name">${HeroList[iii].name}</div>
                            </div>
                            <div class="tc-leader flex">
                                <div class="image" style="background-image: url(${game.BaseData.HeroAvatar[HeroList[iii].avatar]});">
                                    <div class="border"></div>
                                </div>
                                <div class="name">${HeroList[iii].lord_name}</div>
                            </div>
                            <div class="tc-hero-lvl stroke flex">${HeroList[iii].lvl}</div>
                            <div class="tc-hero-point_a flex">${HeroList[iii].point_a}</div>
                            <div class="tc-hero-point_b flex">${HeroList[iii].point_b}</div>
                            <div class="tc-hero-point_c flex">${HeroList[iii].point_c}</div>
                            <div class="tc-show">
                                <button class="full-btn-3x btn show-guild-prev"  data-id-guild="${HeroList[iii].id_guild}">${Translate.Button.MenuList.View[UserLag.language]}</button>
                            </div>
                        </div>`;

    }

    $("#RankList .RankRows").html(List);
    $("#current_page_num").html(getArabicNumbers(Math.ceil(offset / 10) + 1));
    $("#TotalPageNumber").html(Math.ceil(SERVER_DATA.hero_num / 10));

}
game.Rank.CityGeneralRank = function(offset) {

    $.ajax({
        url: `${API_URL}/api/ARankingCity/generalRank`,
        data: {
            token: game.Config.OuthToken,
            server: game.Config.idServer,
            offset: offset
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            game.Rank.CityRow(offset, JSON.parse(data));

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });


}
game.Rank.CityRow = function(offset, CityList) {

    var List = "";
    List += `<div class="th">
                <div class="tc-rank">${Translate.Title.TH.Ranking[UserLag.language]}</div>
                <div class="tc-memNum">${Translate.Title.TH.Name[UserLag.language]}</div>
                <div class="tc-pres">${Translate.Title.TH.Lvl[UserLag.language]}</div>
                <div class="tc-leader">${Translate.Title.TH.Lord[UserLag.language]}</div>
                <div class="tc-team">${Translate.Title.MenuList.League[UserLag.language]}</div>
                <div class="tc-honor">${Translate.Title.TH.Population[UserLag.language]}</div>
                <div class="tc-show">${Translate.Button.General.Action[UserLag.language]}</div>
            </div>`;



    for (var iii = 0; iii < 10; iii++) {

        if (!CityList[iii]) {
            List += `<div class="tr" data-rank="${offset + iii + 1}"></div>`;
            continue;
        }


        List += `<div class="tr" data-rank="${offset + iii + 1}">
                            <div class="tc-rank" data-rank="${offset + Number(iii) + 1}">${offset + Number(iii) + 1}</div>
                            <div class="tc-memNum flex">${CityList[iii].name}</div>
                            <div class="tc-pres flex">${getArabicNumbers(CityList[iii].lvl)}</div>
                            <div class="tc-leader flex">
                                <div class="image" style="background-image: url(${game.BaseData.HeroAvatar[CityList[iii].avatar]});">
                                    <div class="border"></div>
                                </div>
                                <div class="name">${CityList[iii].lord_name}</div>
                            </div>
                            <div class="tc-team flex">
                            ${CityList[iii].id_guild ? `
                                <div class="team-slog">
                                    <div class="slog" style="background-image: url(images/style/bottom-${CityList[iii].slog_btm}.png);">
                                    </div>
                                    <div class="slog"
                                        style="background-image: url(images/style/central-${CityList[iii].slog_cnt}.png); margin-top: -37px;">
                                    </div>
                                    <div class="slog"
                                        style="background-image: url(images/style/top-${CityList[iii].slog_top}.png); margin-top: -37px;">
                                    </div>
                                </div>` : ""}
                                
                                <div class="team-name">${CityList[iii].GuildName || "-----"}</div>
                            </div>
                            <div class="tc-honor flex">${getArabicNumbers(CityList[iii].pop)}</div>
                            <div class="tc-show">
                                <button class="full-btn-3x btn" >${Translate.Button.MenuList.View[UserLag.language]}</button>
                            </div>
                        </div>`;

    }

    $("#RankList .RankRows").html(List);
    $("#current_page_num").html(getArabicNumbers(Math.ceil(offset / 10) + 1));
    $("#TotalPageNumber").html(Math.ceil(SERVER_DATA.city_num / 10));


}


$(document).on("click", ".move_p_rank", function() {

    var move = $(this).attr("data-move");
    var rank_for = $("#DialBoxFooter").attr("data-rank-for");

    var offset = (Math.ceil($("#RankList .tr:last-child").attr("data-rank") / 10)) * 10;

    if (move === "right" && SERVER_DATA[game.Rank.RankLastCount[rank_for]] > offset) {


        menu_bar.getContentForRanks(rank_for, offset);




    } else if (move === "left") {
        offset = Math.max(0, offset - 20);

        menu_bar.getContentForRanks(rank_for, offset);






    } else if (move === "most-left") {

        menu_bar.getContentForRanks(rank_for, 0);


    } else if (move === "most-right") {

        menu_bar.getContentForRanks(rank_for, Math.floor(SERVER_DATA[game.Rank.RankLastCount[rank_for]] / 10) * 10);

    }

});


$(document).on("click", "#goToBtnRankCo  .goBtn", function() {



    const page_number = $("#goToBtnRankCo .input").val() - 1;
    const rank_for = $("#DialBoxFooter").attr("data-rank-for");
    let Offset = page_number * 10;
    if (page_number * 10 > SERVER_DATA[game.Rank.RankLastCount[rank_for]])
        Offset = Math.floor(SERVER_DATA[game.Rank.RankLastCount[rank_for]] / 10) * 10;


    menu_bar.getContentForRanks(rank_for, Offset);
});
var WS_utile = {};
var ws;
WS_utile.failsConTime = 0;



WS_utile.onopen = function() {
    WS_utile.failsConTime = 0;
    if (!EXAMINE_PLAYER_MUTE) {
        ws.send(JSON.stringify({
            url: "Player/addPlayer",
            data: {
                idPlayer: ID_PLAYER
            }
        }));
    }

    game.World.Map.getWorldCity().done(function() {
        game.Team.getPlayerTeam();
    });
    game.World.Map.getWorldCityColonized();
    game.World.Map.getWorldFiredUnit();
    game.World.MapBattel.getAllBattels();
};

WS_utile.onmessage = function(e) {

    console.log(e.data);

    if (isJson(e.data)) {
        var data = JSON.parse(e.data);
    } else {

        alert(e.data);
        console.log(e);
    }

    var classPath = data.classPath.split(".");

    if (!$.isArray(classPath)) {
        alert_box.confirmMessage("برجاء تصوير الرسالة وارسالها الى فريق الدعم" + e.data);
    }

    if (classPath.length === 2)
        game.WsLib[classPath[0]][classPath[1]](data);
    else if (classPath.length === 3)
        game.WsLib[classPath[0]][classPath[1]][classPath[2]](data);

};

WS_utile.onclose = function(event) {

    alert_box.confirmMessage("انقطاع الاتصال");

    $(".close-alert").remove();
    $(".confim-btn").off("click");
    $(".confim-btn").click(function() {
        window.location.href = "https://www.game.com";
        window.location.replace("https://www.game.com");
    });


};


WS_utile.connect = function() {

    ws = new WebSocket(`wss://${WS_HOST}:${WS_PORT}?idPlayer=${ID_PLAYER}&server=${SERVER_ID}&token=${game.Config.OuthToken}`);
    ws.onopen = WS_utile.onopen;
    ws.onmessage = WS_utile.onmessage;
    ws.onclose = WS_utile.onclose;
    console.log("connected");
};


/*
 $(document).on("PlayerReady", "html", function (){
 
 $.getScript(`js${JS_VERSION}/ws/lib/chat.js`, function (){
 $.getScript(`js${JS_VERSION}/ws/lib/battel.js`, function (){
 $.getScript(`js${JS_VERSION}/ws/lib/guild.js`, function (){
 $.getScript(`js${JS_VERSION}/ws/lib/mail.js`, function (){
 $.getScript(`js${JS_VERSION}/ws/lib/hero.js`, function (){
 $.getScript(`js${JS_VERSION}/ws/lib/player.js`, function (){
 $.getScript(`js${JS_VERSION}/ws/lib/serverAnnounce.js`, function (){
 $.getScript(`js${JS_VERSION}/ws/lib/city.js`, function (){
 WS_utile.connect();
 });
 
 });
 });
 });
 });
 });
 });
 });
 });*/
var WsBattel = {};

WsBattel.started = function(battel) {

    if (Number(battel.id_battel) < 0) {
        alert_box.failMessage("حدث خطاء");
        return;
    }

    $(".close-alert").click();
    $(".close_dialog").click();

    Hero.heroAttackProc();
    PLAYER_NOTIF.battel_number = Number(PLAYER_NOTIF.battel_number) + 1;
    PLAYER_NOTIF.hero_in_battel = Number(PLAYER_NOTIF.hero_in_battel) + 1;
    Fixed.refreshPlayerNotif();

    //Crafty.audio.play("war_sound");
    city_profile.refresh_hero_view();

    var world_unit = WorldUnit.getWorldUnit(battel_data.x_coord, battel_data.y_coord).entite;
    Matrial.takeNeedsForAttack(world_unit.t);

    if (!game.Battel.Battels) {

        game.Battel.Battels = [battel.Battel];

    } else {

        game.Battel.Battels.push(battel.Battel);

    }



    for (var ii in battel.StartingPrice) {
        Matrial.takeFrom(battel.StartingPrice[ii].Item, battel.StartingPrice[ii].amount);
    }

};

WsBattel.effectedPlayer = function(battel) {

    var Unit = WorldUnit['getWorldUnit'](battel['Battel']['x_coord'], battel['Battel']['y_coord']);
    var Msg = "";
    if (WorldUnit['isArmyCapital'](Unit['ut'])) {
        alert_box['systemChatMessage'](`<p class="round-announce">بداء <span class="red">  ${battel['Attacker']['PlayerName']} </span>بالهجوم على 
                 <span class="red">  ${game['World']['UnitTypeData'][Unit['ut']]['Title']} </span> ${Extract['coordDirect'](battel['Battel']['x_coord'], battel['Battel']['y_coord'])}
                   التى تسيطر عليها القوات الخاصة بك!</p>`);
    } else {
        if (WorldUnit['isCity'](Unit['ut']))
            if (game['City']['getCityByCoord'](Unit['x'], Unit['y']) != null) {
                Msg = `<div class="battel-f-ann">بداء الملك  (<span class="red">${battel['Attacker']['PlayerName']}</span>) 
                         حملة (<span class="red"> ${game['BaseData']['BattelTaskData'][battel['Battel']['task']]['Title']} </span>)  من المدينة                     
                         (<span class="span"> ${battel['Attacker']['CityName']}</span>
                         ${Extract['coordDirect'](battel['Battel']['x_city'], battel['Battel']['y_city'])}  على المدينة 
                          ('<span class="red">${ battel['Defender']['CityName']}</span> ${ Extract['coordDirect'](battel['Battel']['x_coord'], battel['Battel']['y_coord'])})
                         التابعة لك.</div>`;
                Chat['append'](Msg);
                Fixed['refreshPlayerNotif']();
                city_profile['afterBattelFinish']();
                playerBattels();
            } else {
                Msg = `<div class="guild_msg">بداء الملك 
                        (<span class="red"> ${battel['Attacker']['PlayerName']} </span>)} حملة 
                        ('<span class="red">  ${game['BaseData']['BattelTaskData'][battel['Battel']['task']]['Title']}  </span>)}
                         من المدينة (<span class="span">  ${battel['Attacker']['CityName']} </span> ${Extract['coordDirect'](battel['Battel']['x_city'], battel['Battel']['y_city'])})
                         على المدينة (<span class="red"> ${battel['Defender']['CityName']}  </span>   ${Extract['coordDirect'](battel['Battel']['x_coord'], battel['Battel']['y_coord'])})
                         التابعة للملك <span class="red"> ${battel['Defender']['PlayerName']} </span>. 
                      </div>`;
                Chat['append'](Msg);
            }
    }


};



WsBattel.ended = function(data) {

    for (var iii = 0; iii < game.Battel.Battels.length; iii++) {

        if (Number(game.Battel.Battels[iii].id_battel) === Number(data.Battel.id_battel)) {
            game.Battel.Battels.splice(iii, 1);
            break;
        }

    }

    $("#dialg_box[type=reports] .left-nav .selected").click();

    city_profile.afterBattelFinish(data);

    Battel.afterFininsh(data);

    PLAYER_NOTIF.msg_report = Number(PLAYER_NOTIF.msg_report) + 1;
    PLAYER_NOTIF.battel_number = Number(PLAYER_NOTIF.battel_number) - 1;
    Fixed.refreshPlayerNotif();


};


WsBattel.cityIsOnFire = function(data) {

    alert_box.failMessage(`يبداء الان الهجوم على المدينة ${data.city_name}(${data.x_to},${data.y_to})  من [${data.x_from},${data.y_from}]`);
    alert_box.systemChatMessage(`يبداء الان الهجوم على المدينة ${data.city_name}(${data.x_to},${data.y_to})  من [${data.x_from},${data.y_from}]`);
    // Crafty.audio.play("war_sound");
    PLAYER_NOTIF.battel_number = Number(PLAYER_NOTIF.battel_number) + 1;
    Fixed.refreshPlayerNotif();
    city_profile.afterBattelFinish();
    playerBattels();

};


WsBattel.helperList = function(data) {

    var enemyArray = [];
    var allayArray = [];

    var enemyNames = [];
    var allayNames = [];

    data.players.forEach((player, index) => {

        data.playersName.forEach((p) => {
            if (Number(p.id_player) === Number(player.id_player)) {
                player.name = p.name;
            }
        });

        if (Number(player.id_player) === Number(data.attacker)) {

        } else if (Number(player.side) === 1) {
            enemyArray.push(player);
        } else if (Number(player.side) === 0) {
            allayArray.push(player);
        }

    });

    allayArray.forEach((p) => {
        allayNames.push(p.name);
    });
    enemyArray.forEach((p) => {
        enemyNames.push(p.name);
    });

    var result = {
        allaylist: "",
        enemyList: ""
    };

    if (allayNames.length > 0)
        result.allaylist = join(`وذالك بمساعدة <span class="red">${allayNames.join(" , ")}</span>`);
    if (allayNames.length > 0)
        result.enemyList = join(` و معاونية <span class="red">${enemyNames.join(" , ")}</span>`);



    return result;
};



WsBattel.announceHonorGained = function(data) {

    var honor = 0;
    data.players.forEach(function(player) {
        if (Number(player.id_player) === Number(data.attacker)) {
            honor = player.prize.honor;
        }

    });

    return honor;

};

WsBattel.announceAttackerName = function(data) {

    var name = '';
    data.playersName.forEach(function(player) {

        if (Number(player.id_player) === Number(data.attacker)) {
            name = player.name;
        }

    });

    return name;
};

WsBattel.endedAnnounce = function(data) {


    var playerNames = this.helperList(data);

    var msg = `<div class="battel-f-ann">
                        قام <span class="red">${data.Attacker.name}</span> بهزيمة بطل النظام ${playerNames.enemyList} فى <span class="red">${game.World.UnitTypeData[data.WorldUnit.t].Title}</span> مستوى <span class="red">${data.WorldUnit.l}</span>.
                        ${playerNames.allaylist},
                        وفى المقابل  حصل على  <span class="red">${Matrial.prizeToString(data.WinPrize)}</span> 
                        وايضا <span class="red">${data.honor}</span> شرف
                 </div>`;
    Chat.append(msg);

};


$(document).on("PlayerReady", "html", function() {
    WS_utile.connect();
});
game.WsLib.Chat = {};

game.WsLib.Chat.scrollChat = function() {
    if ($("#msg-area").getNiceScroll(0).page.maxh - $("#msg-area").getNiceScroll(0).getScrollTop() < 15) {
        setTimeout(function() {
            $("#msg-area").getNiceScroll(0).doScrollTop($("#msg-area").getNiceScroll(0).getContentSize().h, 0);
        }, 100);
    }
};


game.WsLib.Chat.WorldMsg = function(data) {
    Chat.worldMessage(data);
    this.scrollChat();
};

game.WsLib.Chat.GuildMsg = function(data) {
    Chat.guildMessage(data);
    this.scrollChat();
};


game.WsLib.Chat.deleteMsg = function(data) {
    $(`#msg-area .msg-unit[data-id-msg=${data.idMsg}]`).animate({
        opacity: 0
    }, 800, function() {
        var msg = `قام ${data.DeletedBy}  بحذف رسالة اللاعب ${data.DeletedFor}`;
        $(this).html(`<div class='d-msg-replacement font-2'>${msg}</div>`);
        $(this).css({
            opacity: 1
        });
    });
    this.scrollChat();
};

game.WsLib.Chat.banPlayer = function(data) {
    var msg = `<div class="msg-unit panne-msg font-2">قام ${data.p_name_panner} بحظر اللاعب ${data.p_name_panned} لمدة ${changeTimeFormat(data.duration)}</div>`;
    if (Number(data.idPlayerToPan) === Number(game.DPlayer.Player.id_player)) {
        alert_box.confirmMessage("  لقد قام المراقب بحظرك من الشات  <br/>\n\
                                 اذا ان لديك اى شكوى يمكنك تقديمها فى صندوق الشكاوى <a href='https://forum.game.com/index.php?forums/14/' target='_blank'>هنا</a>");
        game.DPlayer.Player.chat_panne = Math.floor(Date.now() / 1000) + Number(data.duration);
        Fixed.refresePlayerStateList();
        Player_profile.refresh_player_data();
    }

    $("#msg-area").append(msg);
    this.scrollChat();
};



game.WsLib.Chat.privateMsg = function(data) {



    showPrivateChatNotif(data.idFrom, data.fromName, data.playerFromAvatar);

    var chatRoom = $("#SMB-" + data.idFrom);
    var msg_container = `<div class="sender-msg">
                                        <div class="content"><span>[${data.fromName}]:</span> ${extractEmjoi(extractUrl(data.chatMsg))}</div>
                                    </div>`;
    chatRoom.append(msg_container);
    setTimeout(function() {
        chatRoom.getNiceScroll(0).doScrollTop(chatRoom.getNiceScroll(0).getContentSize().h, 0);
    }, 35);

};

game.WsLib.Chat.NotOnline = function(msg) {
    alert_box['confirmMessage']('هذا اللاعب غير متصل الان');
}


game.WsLib.Chat.sendMsgImage = function(data) {

    var msg = `<div data-id-msg="${data.idFrom}-${data.idMsg}" 
                        class="msg-unit world_chat ${"user-group-"+data.userGroup}" 
                        data-id-player="${data.idFrom}" data-avatar="${data.playerAvatar}" 
                        data-name="${data.fromName}" data-user-group="${data.userGroup}">
                        <div class="msg-from">
                            [${data.fromName}]:
                        </div>
                        <div class="msg-body">
                            <P>
                              <img style="max-width: 100%;" src="${data.image}"/>
                            </P>
                        </div>
                    </div>`;
    $("#msg-area").append(msg);
    this.scrollChat();

};

game.WsLib.Chat.QueenPrizeSent = function(data) {

    var Unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord)
    var msg = ` <div class="msg-unit battel-f-ann">
                    تم فوز حلفك بـ <span class="ann-red">&nbsp;${game.World.UnitTypeData[Unit.ut].Title}&nbsp;</span>  و حصلت على قائمة الهدايا (ستجد رسالة فى بريدك)
                </div>`;
    Player_profile.refreshPlayerNotif();
    Chat.append(msg);
};

game.WsLib.Chat.PrizeSent = function(data) {

    var Unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord);
    var msg = ` <div class="msg-unit  battel-f-ann">
                    تم وصول جوائز الى صندوقك على قائمة الهدايا بعد الفوز على<span class="ann-red">&nbsp;${game.World.UnitTypeData[Unit.ut].Title}&nbsp;</span> (ستجد رسالة فى بريدك)
                </div>`;
    Player_profile.refreshPlayerNotif();
    Chat.append(msg);
};


game.WsLib.Chat.PlayerTitleChanged = function(data) {

    var msg = ` <div class="msg-unit  battel-f-ann">حصل الملك <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span> على لقب جديد !! </div>`;
    Chat.append(msg);
};

game.WsLib.Chat.TitledPlayerOpen = function(data) {
    var msg = ` <div class="msg-unit  battel-f-ann"> ${data.Title} <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span> متصل الأن!! </div>`;
    Chat.append(msg);
};

game.WsLib.Battel = {};



game.WsLib.Battel.battel = function(data) {

    if (data.task === "finish") {
        WsBattel.ended(data);
    } else if (data.task === "YOUR_CITY_FIRE") {
        WsBattel.cityIsOnFire(data);
    } else if (data.task === "aborted") {

        for (var iii = 0; iii < game.Battel.Battels.length; iii++) {
            if (Number(game.Battel.Battels[iii].id_battel) === Number(data.id_battel)) {
                game.Battel.Battels.splice(iii, 1);
            }
        }

        $('#dialg_box[type="reports"] .left-nav .selected').click();
        PLAYER_NOTIF.battel_number--;
        Fixed.refreshPlayerNotif();
        alert_box.succesMessage("تم سحب الابطال من المعركة بنجاح");


    } else if (data.task === "aborted_fail") {
        alert_box.confirmMessage("لا يمكنك الانسحاب من المعركة لقد فات الاوان");
    } else if (data.task === "not_in_city") {
        alert_box.confirmMessage("البطل الحالى ليس فى المدينة");
    } else if (data.task === "no_more_lvls") {
        alert_box.confirmMessage("لا توجد مستويت اخرى للهجوم عليها");
    } else if (data.task === "locked_unit") {
        alert_box.confirmMessage("لا يمكنك الهجوم على وحدة مغلقة");
    } else if (data.task === "hero_cant_used") {
        alert_box.confirmMessage("لا يمكنك الهجوم بالبطل الحالى");
    } else if (data.task === "no_enough_mat") {
        alert_box.confirmMessage("لا توجد مواد كافية");
    }

};


game.WsLib.Battel.Started = function(data) {
    WsBattel.started(data);
}

game.WsLib.Battel.StartFailed = function(data) {
    if (data.state === "not_his_role") {
        alert_box.confirmMessage("لست الحلف المسيطر عليها");
    } else if (data.state === "not_in_city") {
        alert_box.confirmMessage("البطل الحالى ليس فى المدينة");
    } else if (data.state === "no_more_lvls") {
        alert_box.confirmMessage("لا توجد مستويت اخرى للهجوم عليها");
    } else if (data.state === "locked_unit") {
        alert_box.confirmMessage("لا يمكنك الهجوم على وحدة مغلقة");
    } else if (data.state === "hero_cant_used") {
        alert_box.confirmMessage("لا يمكنك الهجوم بالبطل الحالى");
    } else if (data.state === "no_enough_mat") {
        alert_box.confirmMessage("لا توجد مواد كافية");
    } else if (data.state === "hero_carry_no_army") {
        alert_box.confirmMessage("البطل لا يحمل اى قوات");
    } else if (data.state === "in_attackable") {
        alert_box.confirmMessage("لا يمكنك الهجوم");
    } else if (data.state === "hero_count_over_plaze") {
        alert_box.confirmMessage("عدد الأبطال بالخارج أكثر من مستوى المدينة");
    }
}



game.WsLib.Battel.Finished = function(data) {

    WsBattel.ended(data);

}

game.WsLib.Battel.startAnnounce = function(data) {
    WsBattel.effectedPlayer(data);
};



game.WsLib.Battel.finishAnnounce = function(data) {
    WsBattel.endedAnnounce(data);
};

game.WsLib.Battel.unitLastLvl = function(data) {

    PLAYER_NOTIF.battel_number -= 1;
    Fixed.refreshPlayerNotif();
    $("#dialg_box[type='reports'] .nav_bar .left-nav ul .selected").click();

};

game.WsLib.Battel.Spy = {};

game.WsLib.Battel.Spy.Notif = function(data) {

    PLAYER_NOTIF.spy_task -= 1;
    PLAYER_NOTIF.spy_report = Number(PLAYER_NOTIF.spy_report) + 1;
    Fixed.refreshPlayerNotif();
    game.CurrentCity.City.spies = Number(game.CurrentCity.City.spies) + Number(data.spy_num);
    city_profile.refresh_army_view();
    city_profile.afterBattelFinish();
    $("#dialg_box[type=reports] .selected[head_title=spy]").click();

};

game.WsLib.Battel.garrisonFire = function(data) {

    Animation.fireWorldUnit(data.x_to, data.y_to);
    PLAYER_NOTIF.battel_number = Number(PLAYER_NOTIF.battel_number) + 1;
    Fixed.refreshPlayerNotif();
};



game.WsLib.Battel.garrisonCityAdded = function(data) {

    Palace.getCityGarison().done(function() {

        if ($("#dialg_box .nav_bar .left-nav .selected").attr("head_title") === "city_garrison") {
            $("#palace_content").html(Palace.cityGarrison($("#city-garrison-list .tr:first-child").data("offset")));
        }
        alert_box.systemChatMessage("تم استقبال حراس الى مدينتك");
    });
};
game.WsLib.Guild = {};
game.WsLib.Team = {};



game.WsLib.Guild.GuildInvSent = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                تم إرسال دعوة إلى الملك <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span>
                 بواسطة الملك <span class="ann-red">&nbsp;${data.InvByName}&nbsp;</span> قائد حلف <span class="ann-red">&nbsp;${data.GuildName}&nbsp;</span> 
                </div>`;
    Chat.append(msg);
    Guild.getGuildData();

};

game.WsLib.Guild.PlayerInvRejected = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                    تم رفض دعوة إنضمام اللاعب <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span> إلى حلف <span class="ann-red">&nbsp;${data.GuildName}&nbsp;</span> !
                </div>`;
    Chat.append(msg);
    Guild.getGuildData();
};


game.WsLib.Guild.PlayerInvAccepted = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                    تم قبول دعوة إنضمام اللاعب <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span> إلى حلف <span class="ann-red">&nbsp;${data.GuildName}&nbsp;</span> !
                </div>`;
    Chat.append(msg);
    Guild.getGuildData();
};


game.WsLib.Guild.PlayerInvCanceled = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                تم إلغاء  دعوة  الملك <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span>
                 بواسطة الملك <span class="ann-red">&nbsp;${data.CancelledBy}&nbsp;</span> قائد حلف <span class="ann-red">&nbsp;${data.GuildName}&nbsp;</span> 
                </div>`;
    Chat.append(msg);
    Guild.getGuildData();

};

game.WsLib.Guild.joinReqSent = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                    قام اللاعب <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span> بإرسال طلب إنضمام لحلف <span class="ann-red">&nbsp;${data.GuildName}&nbsp;</span>
                </div>`;
    Chat.append(msg);
    Guild.getGuildData();

};

game.WsLib.Guild.joinReqCanceled = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                    قام اللاعب <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span> بإلغاء طلب الإنضمام لحلف <span class="ann-red">&nbsp;${data.GuildName}&nbsp;</span>
                </div>`;
    Chat.append(msg);
    Guild.getGuildData();

};



game.WsLib.Guild.joinReqAccepted = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                    قام اللاعب <span class="ann-red">&nbsp;${data.AcceptBy}&nbsp;</span> بقبول طلب إنضمام <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span> إلى حلف <span class="ann-red">&nbsp;${data.GuildName}&nbsp;</span>
                </div>`;
    Chat.append(msg);
    Guild.getGuildData();

};


game.WsLib.Guild.joinReqRejected = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                    قام اللاعب <span class="ann-red">&nbsp;${data.RejectedBy}&nbsp;</span> برفض طلب إنضمام <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span> إلى حلف <span class="ann-red">&nbsp;${data.GuildName}&nbsp;</span>
                </div>`;
    Chat.append(msg);
    Guild.getGuildData();

};




game.WsLib.Guild.announceRelation = function(data) {

    var relation_title = game.BaseData.GuildRelationTitle;

    var msg = `تم تغير العلاقة بين حلف ${data.GuildNameOne} وحلف ${data.GuildNameTwo} الى -${relation_title[data.relation]}- بواسطة  ${data.PlayerName}`;
    alert_box.systemChatMessage(msg);
    if (Number(data.idGuildOne) === Number(game.DPlayer.Player.id_guild) || Number(data.idGuildTwo) === Number(game.DPlayer.Player.id_guild)) {
        Guild.getGuildData();
    }

};




game.WsLib.Guild.msgSent = function(data) {

    PLAYER_NOTIF.msg_in = Number(PLAYER_NOTIF.msg_in) + 1;
    Fixed.refreshPlayerNotif();

};


game.WsLib.Guild.PrizeSent = function(data) {
    alert_box.systemChatMessage(`تم إرسال هدايا إلى جميع أعضاء حلف ${data.GuildName} الأن !`);
}




game.WsLib.Guild.GuildNameChanged = function(data) {

    var msg = `قام الملك <span class="ann-red">&nbsp;${data.ChangeBy}&nbsp;</span> بتغير إسم حلفه <span class="ann-red">&nbsp;(${data.OldName})&nbsp;</span> إلى <span class="ann-red">&nbsp;${data.NewName}&nbsp;</span> !`;
    alert_box.systemChatMessage(msg);
    if (Number(data.idGuild) === Number(game.DPlayer.Player.id_guild)) {
        Guild.getGuildData();
    }
}


game.WsLib.Team.announceRelation = function(data) {

    var relation_title = game.BaseData.GuildRelationTitle;

    var msg = `<div class="msg-unit team-ann">تم تغير العلاقة بين الفريق ${data.TeamNameOne} و الفريق ${data.TeamNameTwo} الى -${relation_title[data.relation]}- بواسطة  ${data.PlayerName}</div>`;
    alert_box.systemChatMessage(msg);
    if (!game.Team.PlayerTeam.Team)
        return;

    if (Number(data.idTeamOne) === Number(game.Team.PlayerTeam.Team.id_team))
        game.Team.getPlayerTeam();
    if (Number(data.idTeamTwo) === Number(game.Team.PlayerTeam.Team.id_team))
        game.Team.getPlayerTeam();

};


game.WsLib.Team.TeamInvSent = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                تم إرسال دعوة إلى الملك <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span>
                 بواسطة الملك <span class="ann-red">&nbsp;${data.InvByName}&nbsp;</span> قائد فريق <span class="ann-red">&nbsp;${data.TeamName}&nbsp;</span> 
                </div>`;
    Chat.append(msg);
    game.Team.getPlayerTeam();

};

game.WsLib.Team.TeamReqSent = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                تم إرسال طلب للإنضمام إلى فريق <span class="ann-red">&nbsp;${data.TeamName}&nbsp;</span> من اللاعب <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span>
                </div>`;
    Chat.append(msg);
    game.Team.getPlayerTeam();
};

game.WsLib.Team.PlayerInvRejected = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                    تم رفض دعوة إنضمام اللاعب <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span> إلى فريق <span class="ann-red">&nbsp;${data.TeamName}&nbsp;</span> !
                </div>`;
    Chat.append(msg);
    game.Team.getPlayerTeam();
};


game.WsLib.Team.PlayerAcceptInv = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                    تم قبول دعوة إنضمام اللاعب <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span> إلى فريق <span class="ann-red">&nbsp;${data.TeamName}&nbsp;</span> !
                </div>`;
    Chat.append(msg);
    game.Team.getPlayerTeam();
};

game.WsLib.Team.playerTeamLeave = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                    غادر اللاعب<span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span>  فريق <span class="ann-red">&nbsp;${data.TeamName}&nbsp;</span> !
                </div>`;
    Chat.append(msg);
    game.Team.getPlayerTeam();
};

game.WsLib.Team.TeamDisbanded = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                    تم تفكيك فريق <span class="ann-red">&nbsp;${data.TeamName}&nbsp;</span>!
                </div>`;
    Chat.append(msg);
    game.Team.getPlayerTeam();
};

game.WsLib.Team.playerTeamResign = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                    إستقال اللاعب <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span>  من منصبة فى فريق <span class="ann-red">&nbsp;${data.TeamName}&nbsp;</span> !
                </div>`;
    Chat.append(msg);
    game.Team.getPlayerTeam();
};

game.WsLib.Team.TeamMemberFired = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                    تم طرد اللاعب <span class="ann-red">&nbsp;${data.FiredName}&nbsp;</span> من فريق <span class="ann-red">&nbsp;${data.TeamName}&nbsp;</span>!
                </div>`;
    Chat.append(msg);
    game.Team.getPlayerTeam().done(function() {
        $("#TeamHeaderNavBar .selected").click();
    });
};

game.WsLib.Team.TeamReqCanceled = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                   تم ألغاء طلب أنضمام اللاعب <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span> إلى فريق <span class="ann-red">&nbsp;${data.TeamName}&nbsp;</span>! 
                </div>`;
    Chat.append(msg);
    game.Team.getPlayerTeam();
};


game.WsLib.Team.TeamReqAccepted = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                   تم قبول طلب أنضمام اللاعب <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span> إلى فريق <span class="ann-red">&nbsp;${data.TeamName}&nbsp;</span>! 
                </div>`;
    Chat.append(msg);
    game.Team.getPlayerTeam();
};


game.WsLib.Team.TeamReqRejected = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                   تم رفض طلب أنضمام اللاعب <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span> إلى فريق <span class="ann-red">&nbsp;${data.TeamName}&nbsp;</span>! 
                </div>`;
    Chat.append(msg);
    game.Team.getPlayerTeam();
};

game.WsLib.Team.TeamInvCanceled = function(data) {

    var msg = ` <div class="msg-unit team-ann">
                   تم إلغاء دعوة أنضمام اللاعب <span class="ann-red">&nbsp;${data.PlayerName}&nbsp;</span> إلى فريق <span class="ann-red">&nbsp;${data.TeamName}&nbsp;</span>! 
                </div>`;
    Chat.append(msg);
    game.Team.getPlayerTeam();
};
game.WsLib.Mail = {};


game.WsLib.Mail.sentTo = function(data) {
    PLAYER_NOTIF.msg_in = Number(PLAYER_NOTIF.msg_in) + 1;
    Fixed.refreshPlayerNotif();
};

game.WsLib.Mail.someOneSpy = function(data) {
    PLAYER_NOTIF.spy_report = Number(PLAYER_NOTIF.spy_report) + 1;
    Fixed.refreshPlayerNotif();
    city_profile.afterBattelFinish();
};
game.WsLib.Hero = {};

game.WsLib.Hero.Power = {};

game.WsLib.Hero.Power.Added = function(data) {

    for (var iii in data.Heros) {
        if (game.Hero.getHero(data.Heros[iii].idHero))
            if (game.Hero.getHero(data.Heros[iii].idHero).Hero)
                game.Hero.getHero(data.Heros[iii].idHero).Hero.power = data.Heros[iii].power;

        if (Number(game.CurrentHero.Hero.id_hero) === Number(data.Heros[iii].idHero)) {
            if ($("#dialg_box[type=hero]").length > 0) {
                $("#dialg_box .middle-content").replaceWith(army.middle_content(game.CurrentHero));
            }
        }
    }

};


game.WsLib.Hero.Back = function(data) {

    var HeroName = '';
    var CityName = 'المدينة';
    var Hero = game.Hero.getHero(data['idHero']);
    var City = game['City']['getCityByCoord'](data['xTo'], data['yTo']);

    if (Hero && Hero['Hero'] && Hero['Hero']['name'])
        HeroName = Hero['Hero']['name'];
    if (City && City['City'] && City['City']['name'])
        CityName = City['City']['name'];
    PLAYER_NOTIF['hero_in_battel'] -= 1;
    Hero['Hero']['in_city'] = data['inCity'];
    if (Number(data['Task']) === game['BaseData']['BattelTasks']['BATTEL_TASK_SUPPLY'] || data['task'] == game['BaseData']['BattelTasks']['BATTEL_TASK_HERO_TRANS']) {
        var idCity = Number(game['CurrentCity']['City']['id_city']);
        var CityC = game['City']['getCityByCoord'](data['xTo'], data['yTo']);
        if (CityC && CityC['City']) {
            game.City.getCityHero(CityC['City']['id_city']);
            game.City.getCityHeroArmy(CityC['City']['id_city']);
            game.City.getCityHeroMedal(CityC['City']['id_city']);
            game.City.getCityHeroEquip(CityC['City']['id_city']);
            game.City.getCityHero(idCity);
            game.City.getCityHeroArmy(idCity);
            game.City.getCityHeroMedal(idCity);
            game.City.getCityHeroEquip(idCity);
        }

    }
    Fixed['refreshPlayerNotif']();
    city_profile['refresh_hero_view']();
    var Msg = ` تم عودة البطل   ${HeroName}   من   ${BATTAL_TASKS[data['Task']]['ar_title']}    [ ${data['xTo']}  ,  ${data['yTo']} ] الى المدينة   ${CityName}  `;
    if (Number(data['Task']) === BATTEL_TYPES_CONST['GARRISON'])
        (Msg = ' تم ارسال البطل ' + HeroName + '  بنجاح الى [' + data['xTo'] + ',' + data['yTo'] + '] لبدء عملية الامداد');
    alert_box['systemChatMessage'](Msg);

};
game.WsLib.Player = {};

game.WsLib.Player.someOneOppend = function() {

    alert_box.confirmMessage("هذا الحساب مفتوح فى  مكان اخر");
    $(".close-alert").remove();
    $(".confim-btn").off("click");
    $(".confim-btn").click(function() {
        window.location.href = "https://www.game.com";
        window.location.replace("https://www.game.com");
    });

};
game.WsLib.ServerAnnounce = {};

game.WsLib.ServerAnnounce.capitalUnLock = function(data) {

    var WorldUnit = data.WorldUnit;

    var msg = `<div class="msg-unit ann-red announce">تم فتح ${game.World.UnitTypeData[WorldUnit.ut].Title} ${Extract.coordDirect(WorldUnit.x, WorldUnit.y)} وسيتم اغلاقها بعد ساعتين من الان للمساعدة اضغط <a class="safe-url" href="commingsoon.php" target="_blank">هنا </a></div>`;
    Chat.append(msg);
};



game.WsLib.ServerAnnounce.capitalLock = function(data) {

    var playerName = "---";

    if (data.Player)
        playerName = data.Player.name || "----";

    var WorldUnit = data.WorldUnit;

    var msg = `<div class="msg-unit announce user-group-5">تم اغلاق ${game.World.UnitTypeData[WorldUnit.ut].Title} ${Extract.coordDirect(WorldUnit.x, WorldUnit.y)} و كان الفوز بالمركز الاول من  نصيب&nbsp;<span class="ann-red"> ${playerName} </span> </div>`;
    Chat.append(msg);
};




game.WsLib.ServerAnnounce.QueenCityOpened = function(data) {

    var WorldUnit = data.WorldUnit;
    var msg = ` <div class="msg-unit battel-f-ann">تم فتح &nbsp;<span class="ann-red">${game.World.UnitTypeData[WorldUnit.ut].Title}</span> ${Extract.coordDirect(WorldUnit.x, WorldUnit.y)} &nbsp;
                </div>`;
    Chat.append(msg);
};

game.WsLib.ServerAnnounce.QueenCityClosed = function(data) {

    var WorldUnit = data.WorldUnit;
    var msg = ` <div class="msg-unit  battel-f-ann">تم إغلاق &nbsp;<span class="ann-red">${game.World.UnitTypeData[WorldUnit.ut].Title}</span> ${Extract.coordDirect(WorldUnit.x, WorldUnit.y)} &nbsp;
                    وكان الفوز من نصيب حلف <span class="ann-red">&nbsp;${data.WinnerGuild.GuildName || " ---"}&nbsp;</span>
                </div>`;
    Chat.append(msg);
};


game.WsLib.ServerAnnounce.RepleCastleOpened = function(data) {

    var GuildAtt = "---";
    var GuildDef = "---";
    var WorldUnit = data.WorldUnit;

    if (data.GuildDef)
        var msg = ` <div class="msg-unit  battel-f-ann">
                    تم فتح 
                    <span class="ann-red">&nbsp;${game.World.UnitTypeData[WorldUnit.ut].Title}&nbsp;</span>
                     للإستقبال معركة حلف <span class="ann-red">&nbsp;${data.GuildAtt ? data.GuildAtt.GuildName : "----" } (هجوم)&nbsp;</span> ضد حلف <span class="ann-red">&nbsp;${data.GuildDef ? data.GuildAtt.GuildName : "===="} (دفاع)&nbsp;</span> الأن!
                </div>`;
    else
        var msg = ` <div class="msg-unit announce battel-f-ann">تم فتح &nbsp;<span class="ann-red">${game.World.UnitTypeData[WorldUnit.ut].Title}</span> ${Extract.coordDirect(WorldUnit.x, WorldUnit.y)} &nbsp;
                   </div>`;


    Chat.append(msg);
};





game.WsLib.ServerAnnounce.RepleCastleClosed = function(data) {

    var WorldUnit = data.WorldUnit;
    var msg = ` <div class="msg-unit battel-f-ann">
    تم إغلاق <span class="ann-red">&nbsp;${game.World.UnitTypeData[WorldUnit.ut].Title}&nbsp;</span> !
                </div>`;
    Chat.append(msg);
};


game.WsLib.ServerAnnounce.Battel = {};

WsBattel.helperList = function(data) {

    var enemyArray = [];
    var allayArray = [];

    var enemyNames = [];
    var allayNames = [];

    data.Joiners.forEach((player, index) => {
        allayNames.push(player.name);
    });
    data.Defender.forEach((player, index) => {
        enemyNames.push(player.name);
    });

    var result = {
        allaylist: "",
        enemyList: ""
    };

    if (allayNames.length > 0)
        result.allaylist = join(`وذالك بمساعدة <span class="red">${allayNames.join(" , ")}</span>`);
    if (allayNames.length > 0)
        result.enemyList = join(` و معاونية <span class="red">${enemyNames.join(" , ")}</span>`);



    return result;
};

game.WsLib.ServerAnnounce.Battel.Win = function(data) {


    var playerNames = WsBattel.helperList(data);

    var msg = `<div class="battel-f-ann">
                        قام <span class="red">${data.Attacker.name}</span> بهزيمة بطل النظام ${playerNames.enemyList} فى <span class="red">${game.World.UnitTypeData[data.WorldUnit.ut].Title}</span> مستوى <span class="red">${data.WorldUnit.l}</span>.
                        ${playerNames.allaylist},
                        وفى المقابل  حصل على  <span class="red">${Matrial.prizeToString(data.WinPrize)}</span> 
                        وايضا <span class="red">${data.honor}</span> شرف
                 </div>`;
    Chat.append(msg);

};

game.WsLib.ServerAnnounce.Battel.GuildWin = function(data) {


    var Unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord);

    var msg = `<div class="battel-f-ann">نجح حلف <span class="red">${data.GuildName}</span> بقيادة <span class="red">${data.PlayerName}</span> بالسيطرة على ${game.World.UnitTypeData[Unit.ut].Title} ${Extract.coordDirect(Unit.x, Unit.y)}</div>`;
    Chat.append(msg);

};

game.WsLib.ServerAnnounce.Battel.Started = function(data) {

    var Unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord);
    var msg = `<div class="battel-f-ann">بداء حلف <span class="red">${data.GuildName}</span> بقيادة <span class="red">${data.PlayerName}</span> معركة ضد ${game.World.UnitTypeData[Unit.ut].Title} ${Extract.coordDirect(Unit.x, Unit.y)} الان</div>`;
    Chat.append(msg);

};


game.WsLib.ServerAnnounce.CityColonized = function(data) {
    var Unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord);
    Unit.CityColonizerFlag = data.CityColonizerFlag;
    Unit.CityColonized = true;
    Unit.ColonizerIdGuild = data.ColonizerIdGuild;
    Unit.ColonizerIdPlayer = data.ColonizerIdPlayer;
    game.World.Map.RefreshWorld();
    var msg = `<div class="battel-f-ann">نجح الملك <span class="red">${data.ColonizerName}</span> فى استعمار المدينة <span class="red">${data.CityColonizedName}</span> ${Extract.coordDirect(data.xCoord, data.yCoord)} التابعة للملك <span class="red">${data.ColonizedName}</span> </div>`;
    Chat.append(msg);

};


game.WsLib.ServerAnnounce.newMailSent = function(data) {
    var Msg = `<div class="msg-unit ann-red announce">تم وصول رسالة بريد من النظام</div>`;
    Chat['append'](Msg);
    PLAYER_NOTIF['msg_in']++;
    Fixed['refreshPlayerNotif']();
}

game.WsLib.ServerAnnounce.NewServerAnnounce = function(data) {
    var Msg = `<div class="msg-unit announce server-announce-${data['AnnounceRank']}">[النظام]:  ${data['Announce']} </div>`;
    Chat['append'](Msg);
};


game.WsLib.ServerAnnounce.ArenachallangeLvlUp = function(data) {
    var Msg = `<div class="battel-f-ann">تهانينا! تم ترقية ميدان الملك  
                (<span class="red"> ${data['Player']['PlayerName']}</span>)
              الى مستوى   (<span class="red">  ${(Number(data['ArenaData']['lvl']) + 0x1)}  </span>)  
                </div>'`;
    Chat['append'](Msg);
    if (game['DPlayer']['Player']['id_player'] == data['Player']['id_player'])
        game.ArenaChallange.getArenaData().done(function() {
            $('#SArenaField')['click']();
        });
};

game.WsLib.ServerAnnounce.ArenachallangeTeamLvlUp = function(data) {
    var Msg = `<div class="battel-f-ann">تهانينا! تم ترقية ميدان الفريق  
                (<span class="red"> ${data.Team.TeamName}</span>)
              الى مستوى   (<span class="red">  ${(Number(data.ArenaData.lvl) + 0x1)}  </span>)  
                </div>'`;
    Chat.append(Msg);

    game.ArenaChallange.getArenaData().done(function() {
        $('#SArenaField')['click']();
    });
};

game.WsLib.ServerAnnounce.ArenachallangeGuildLvlUp = function(data) {
    var Msg = `<div class="battel-f-ann">تهانينا! تم ترقية ميدان حلف  
                (<span class="red"> ${data.Guild.GuildName}</span>)
              الى مستوى   (<span class="red">  ${(Number(data.ArenaData.lvl) + 0x1)}  </span>)  
                </div>'`;
    Chat.append(Msg);

    game.ArenaChallange.getArenaData().done(function() {
        $('#SArenaField')['click']();
    });
};

game.WsLib.ServerAnnounce.KingOfArenaChallange = function(data) {
    var Msg = `<div class="battel-f-ann">تهانينا! اصبح الملك   (<span class="red">  ${data['Player']['PlayerName']}  </span>)   ملك ميدان التحدى الاول!}</div>`;
    Chat.append(Msg);
    game.ArenaChallange.getArenaData().done(function() {
        $('#SArenaField')['click']();
    });
};

game.WsLib.ServerAnnounce.KingOfArenaTeamChallange = function(data) {
    var Msg = `<div class="battel-f-ann">تهانينا! اصبح الفريق   (<span class="red">  ${data.Team.TeamName}  </span>)   ملك ميدان تحدى الفرق الاول!}</div>`;
    Chat.append(Msg);
    game.ArenaChallange.getArenaData().done(function() {
        $('#SArenaField')['click']();
    });
};


game.WsLib.ServerAnnounce.KingOfArenaGuildChallange = function(data) {
    var Msg = `<div class="battel-f-ann">تهانينا! اصبح حلف   (<span class="red">  ${data.Guild.GuildName}  </span>)   ملك ميدان تحدى الأحلاف الاول!}</div>`;
    Chat.append(Msg);
    game.ArenaChallange.getArenaData().done(function() {
        $('#SArenaField').click();
    });
};

game.WsLib.ServerAnnounce.ArenaChallangeRoundEnd = function(data) {
    var Msg = `<div class="battel-f-ann">تم انهاء جولة ميدان التحدى و فاز الملك   (<span class="red">  ${data['PlayerName']}  </span>)   !</div>`;
    Chat['append'](Msg);
};
game.WsLib.ServerAnnounce.ArenaChallangeTeamRoundEnd = function(data) {
    var Msg = `<div class="battel-f-ann">تم انهاء جولة ميدان التحدى و فاز الفريق   (<span class="red">  ${data['TeamName']}  </span>)   !</div>`;
    Chat['append'](Msg);
};
game.WsLib.ServerAnnounce.ArenaChallangeGuildRoundEnd = function(data) {
    var Msg = `<div class="battel-f-ann">تم انهاء جولة ميدان التحدى و فاز الحلف   (<span class="red">  ${data['GuildName']}  </span>)   !</div>`;
    Chat['append'](Msg);
};

game.WsLib.ServerAnnounce.SeaCityOppend = function(_0xa042dd) {
    var Msg = `<div class="battel-f-ann"> تم فتح قلاع   <span class="red">الغذاء </span> و <span class="red">الاخشاب </span>و  <span class="red"> الحديد</span> و <span class="red">الصخور</span>  وسيتم اغلاقها بعد <span class="red">ساعة</span> !</div>`;
    Chat['append'](Msg);
};

game.WsLib.ServerAnnounce.SeaCityClosed = function(data) {
    var Msg = `<div class="battel-f-ann"> تم غلق قلاع <span class="red">الغذاء </span> و <span class="red">الاخشاب</span> و <span class="red">الحديد</span> و <span class="red">الصخور</span> !</div>`;
    Chat['append'](Msg);
};

game.WsLib.ServerAnnounce.SeaCityCoinOppend = function(data) {
    var Msg = '<div class="battel-f-ann"> تم فتح قلاع <span class="red">عملات السسترسس </span>  وسيتم اغلاقها بعد <span class="red">ساعة</span> !</div>';
    Chat['append'](Msg);
};

game.WsLib.ServerAnnounce.SeaCityCoinClosed = function(data) {
    var Msg = '<div class="battel-f-ann"> تم غلق قلاع <span class="red">عملات السسترسس </span>!</div>';
    Chat['append'](Msg);
};

game.WsLib.ServerAnnounce.SeaCityGoldOppend = function(data) {
    var Msg = '<div class="battel-f-ann"> تم فتح قلاع <span class="red"> الذهب </span>  وسيتم اغلاقها بعد <span class="red">ساعة</span> !</div>';
    Chat['append'](Msg);
};

game.WsLib.ServerAnnounce.SeaCityGoldClosed = function(data) {
    var Msg = '<div class="battel-f-ann"> تم غلق قلاع <span class="red"> الذهب </span>!</div>';
    Chat['append'](Msg);
};

game.WsLib.City = {};
game.WsLib.Market = {};

game.WsLib.City.Pop = {}

game.WsLib.City.Pop.Update = function(data) {

    game.City.getCityBase(data.idCity);

};

game.WsLib.City.Pop.UpdateLoy = function(data) {

    game.City.getCityBase(data.idCity);

};


game.WsLib.City.WorldCity = function(data) {



};

game.WsLib.Market.Trans = {};
game.WsLib.Market.Buy = {};


game.WsLib.Market.Trans.Arrived = function() {

    if ($("#transport-res-inner-nav .nav-title").length)
        Market.transportedResourcesList($("#transport-res-inner-nav .nav-title").attr("data-in-out"));

    PLAYER_NOTIF.msg_diff = Number(PLAYER_NOTIF.msg_diff) + 1;
    Fixed.refreshPlayerNotif();
    alert_box.succesMessage("تم وصول الموارد");
};


game.WsLib.Market.Buy.TransmitDone = function() {
    $("#market-inner-nav .selected").click();
    PLAYER_NOTIF.msg_diff = Number(PLAYER_NOTIF.msg_diff) + 1;
    Fixed.refreshPlayerNotif();
    alert_box.succesMessage("تم وصول الموارد");
};
game.WsLib.Base = {};


WS_utile.Reqs = {};
WS_utile.CurReqId = 0;
WS_utile.Ack = function(Req) {

    var Cu = WS_utile.CurReqId;
    Req.data.ReqId = Cu;
    ws.send(JSON.stringify({
        'url': Req.url,
        'data': Req.data
    }));

    WS_utile.Reqs[Cu] = {
        callBack: Req.callBack
    };

    WS_utile.CurReqId++;
};


game.WsLib.Base.Ack = function(data) {
    if (!WS_utile.Reqs[data.ReqId])
        return;
    if ($.isFunction(WS_utile.Reqs[data.ReqId].callBack))
        WS_utile.Reqs[data.ReqId].callBack(data.Res);
};


game.WsLib.Base.CrossReq = function(data) {

    if ($.isFunction(game.WsLib.Base.CrossReqFun[data.url]))
        game.WsLib.Base.CrossReqFun[data.url](data.Res);
    else
        console.log(data);

}

game.WsLib.Base.CrossReqFun = {};

game.WsLib.Base.MakeCrossReq = function(url, Parm, ResFun) {

    game.WsLib.Base.CrossReqFun[url] = ResFun;
    ws.send(
        JSON.stringify({
            url: url,
            data: Parm
        })
    );

};


game.WsLib.Base.worldCity = function(data) {
    var Unit;

    for (var iii in data.City) {

        Unit = WorldUnit.getWorldUnit(data.City[iii].x, data.City[iii].y);
        if (!Unit)
            continue;


        Unit.idGuild = data.City[iii].ig;
        Unit.CityLvl = data.City[iii].l;
        Unit.idCity = data.City[iii].ic;
        Unit.idPlayer = data.City[iii].ip;
        Unit.CityFlag = data.City[iii].f;
        Unit.ut = Number(data.City[iii].l) + WUT_CITY_LVL_0;
        Unit.l = data.City[iii].l;
        Unit.t = Number(data.City[iii].l) + 17;
    }

};

game.WsLib.Base.worldCityColonized = function(data) {
    var Unit;
    for (var iii in data.City) {

        Unit = WorldUnit.getWorldUnit(data.City[iii].x, data.City[iii].y);
        Unit.CityColonizerFlag = data.City[iii].city_flag;
        Unit.CityColonized = true;
        Unit.ColonizerIdGuild = data.City[iii].id_guild;
        Unit.ColonizerIdPlayer = data.City[iii].id_player;
    }

};


game.WsLib.Base.refreshWorldCitiesForPlayers = function(data) {
    var Unit;

    Unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord);
    Unit.idGuild = data.idGuild;
    Unit.CityLvl = data.CityLvl;
    Unit.idCity = data.idCity;
    Unit.idPlayer = data.idPlayer;
    Unit.CityFlag = data.CityFlag;
    Unit.ut = 0 + WUT_CITY_LVL_0;
    Unit.l = 0;
    Unit.t = 0 + 17;
    if (Unit.entite)
        Unit.entite.destroy();
    game.World.Map.Scroll(true);
    game.World.Map.RefreshWorld();

};


game['WsLib']['Base']['WorldFireUnit'] = function(data) {
    var _0x96c110;
    for (var ii in data['Units']) {
        var xCoord = Math['floor'](ii / 500);
        var yCoord = ii % 500;
        WorldUnit['getWorldUnit'](xCoord, yCoord)['s'] = 1;
    }
    game['World']['Map']['Scroll'](false);
    game['World']['Map']['RefreshWorld']();
};

game['WsLib']['Base']['DailyRest'] = function() {
    alert_box['systemChatMessage']('تمت اعادة التعيين اليومية.');
};
game.WsLib.Base.PrizeSent = function() {
    PLAYER_NOTIF.msg_diff = Number(PLAYER_NOTIF.msg_diff) + 1;
    Fixed.refreshPlayerNotif();
    alert_box['systemChatMessage']('وصلك جوائز فى صندوقك إفحص البريد');
};
game.WsLib.World = {};
game.WsLib.World.Fire = {};
game.WsLib.World.Battel = {};

game.WsLib.World.ResetLvl = function(data) {
    for (var ii in game['worldAllUnits']) {
        if (game['worldAllUnits'][ii]['ut'] === 0x0) continue;
        if (game['worldAllUnits'][ii]['ut'] < WUT_MONAWRAT) continue;
        if (!data['UnitList']['includes'](game['worldAllUnits'][ii]['ut'])) continue;
        game['worldAllUnits'][ii]['l'] = 0x1;
    }
    alert_box['systemChatMessage']('تم اعادة التعين');
}



game.WsLib.World.Battel.Started = function(data) {
    var world_unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord);
    world_unit.s = 1;
    Animation.fireWorldUnit(data.xCoord, data.yCoord);
    game.World.MapBattel.newBattel(data);

}


game.WsLib.World.Battel.Ended = function(data) {
    var world_unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord);
    game.World.MapBattel.removeBattel(data);

}

game.WsLib.World.Fire.On = function(data) {
    var world_unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord);
    world_unit.s = 1;
    Animation.fireWorldUnit(data.xCoord, data.yCoord);

}

game.WsLib.World.Fire.Off = function(data) {
    var Unit = WorldUnit['getWorldUnit'](data['xCoord'], data['yCoord']);
    Unit['s'] = 0;
    WorldUnit.refreshUnitView(data.xCoord, data.yCoord);
}

game.WsLib.World.RefereshWorldUnit = function(data) {
    var WorldUnits = data['WorldUnits'];
    for (var ii in WorldUnits) {
        var Unit = game['worldAllUnits'][WorldUnits[ii]['x'] * 500 + WorldUnits[ii]['y']];
        Unit['t'] = WorldUnits[ii]['t'];
        Unit['ut'] = WorldUnits[ii]['ut'];
        Unit['l'] = WorldUnits[ii]['l'];
        WorldUnit.refreshUnitView(WorldUnits[ii]['x'], WorldUnits[ii]['y']);
    }
    game.World.Map.getWorldCityColonized();
    game.World.Map.getWorldCity();
}


game.WsLib.World.LvlChangedByGM = function(data) {

    var Unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord);
    Unit.l = data.lvlTo;
    var msg = `<div class="msg-unit ann-red announce">
        تم تعديل مستوى ${WorldUnit.getUnitData(Unit.ut).Title} ${Extract.coordDirect(data.xCoord, data.yCoord)} حتى يصبح المستوى الحالى ${data.lvlTo}
    </div>`;
    Chat.append(msg);

};


game.WsLib.World.UnitLockedByGM = function(data) {

    var Unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord);
    Unit.lo = 1;
    var msg = `<div class="msg-unit ann-red announce">
        تم إغلاق ${WorldUnit.getUnitData(Unit.ut).Title} ${Extract.coordDirect(data.xCoord, data.yCoord)} 
    </div>`;
    Chat.append(msg);

};

game.WsLib.World.UnitLockedByGM = function(data) {

    var Unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord);
    Unit.lo = 0;
    var msg = `<div class="msg-unit ann-red announce">
        تم فتح ${WorldUnit.getUnitData(Unit.ut).Title} ${Extract.coordDirect(data.xCoord, data.yCoord)} 
    </div>`;
    Chat.append(msg);

};

game.WsLib.World.UnitRoundFinishedByGM = function(data) {

    var Unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord);
    var msg = `<div class="msg-unit ann-red announce">
        تم إنهاء الجولة الحالية لـ ${WorldUnit.getUnitData(Unit.ut).Title} ${Extract.coordDirect(data.xCoord, data.yCoord)} 
    </div>`;
    Chat.append(msg);

};

game.WsLib.World.UnitRoundStartedByGM = function(data) {

    var Unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord);
    var msg = `<div class="msg-unit ann-red announce">
        تم بدء الجولة الحالية لـ ${WorldUnit.getUnitData(Unit.ut).Title} ${Extract.coordDirect(data.xCoord, data.yCoord)} 
    </div>`;
    Chat.append(msg);

};

game.WsLib.World.UnitTypeLvlChange = function(data) {
    var Titles = [];
    for (var iii in data.UnitType) {

        Titles.push(WorldUnit.getUnitData(data.UnitType[iii]).Title)
    }

    var msg = `<div class="msg-unit ann-red announce"> تم تعديل مستوى جميع (${Titles.join(" - ")}) حتى يصبح المستوى الحالى ${data.lvlTo} !</div>`;
    Chat.append(msg);

};


game.WsLib.World.newBarrColonized = function(data) {

    const Unit = WorldUnit.getWorldUnit(data.xCoord, data.yCoord);
    const UnitData = WorldUnit.getUnitData(Unit.ut);
    alert_box.systemChatMessage(`تم إضافة ${UnitData.Title} مستوى ${Unit.l}  ${Extract.coordDirect(data.xCoord, data.yCoord)} إلى مستعمراتك فى المدينة ${game.City.getCity(data.idCity).City.name} بنجاح !`)
    game.City.getCityBarray(data.idCity);
    WorldUnit.refreshUnitView(data.xCoord, data.yCoord);
};


const WUT_EMPTY = 0;

const WUT_RIVER_LVL_1 = 1;
const WUT_RIVER_LVL_2 = 2;
const WUT_RIVER_LVL_3 = 3;
const WUT_RIVER_LVL_4 = 4;
const WUT_RIVER_LVL_5 = 5;
const WUT_RIVER_LVL_6 = 6;
const WUT_RIVER_LVL_7 = 7;
const WUT_RIVER_LVL_8 = 8;
const WUT_RIVER_LVL_9 = 9;
const WUT_RIVER_LVL_10 = 10;

const WUT_BUSY_UNIT = 12;
const WUT_WORLD_FLOOR = 11;

const WUT_MOUNT_LVL_1 = 30;
const WUT_MOUNT_LVL_2 = 31;
const WUT_MOUNT_LVL_3 = 32;
const WUT_MOUNT_LVL_4 = 33;
const WUT_MOUNT_LVL_5 = 34;
const WUT_MOUNT_LVL_6 = 35;
const WUT_MOUNT_LVL_7 = 36;
const WUT_MOUNT_LVL_8 = 37;
const WUT_MOUNT_LVL_9 = 38;
const WUT_MOUNT_LVL_10 = 39;

const WUT_DESERT_LVL_1 = 40;
const WUT_DESERT_LVL_2 = 41;
const WUT_DESERT_LVL_3 = 42;
const WUT_DESERT_LVL_4 = 43;
const WUT_DESERT_LVL_5 = 44;
const WUT_DESERT_LVL_6 = 45;
const WUT_DESERT_LVL_7 = 46;
const WUT_DESERT_LVL_8 = 47;
const WUT_DESERT_LVL_9 = 48;
const WUT_DESERT_LVL_10 = 49;

const WUT_WOODS_LVL_1 = 50;
const WUT_WOODS_LVL_2 = 51;
const WUT_WOODS_LVL_3 = 52;
const WUT_WOODS_LVL_4 = 53;
const WUT_WOODS_LVL_5 = 54;
const WUT_WOODS_LVL_6 = 55;
const WUT_WOODS_LVL_7 = 56;
const WUT_WOODS_LVL_8 = 57;
const WUT_WOODS_LVL_9 = 58;
const WUT_WOODS_LVL_10 = 59;

const WUT_CITY_LVL_0 = 60;
const WUT_CITY_LVL_1 = 61;
const WUT_CITY_LVL_2 = 62;
const WUT_CITY_LVL_3 = 63;

const WUT_MONAWRAT = 70;

const WUT_CAMP_BRITONS = 71;
const WUT_CAMP_REICH = 72;
const WUT_CAMP_ASIANA = 73;
const WUT_CAMP_GAULS = 74;
const WUT_CAMP_MACEDON = 75;
const WUT_CAMP_HISPANIA = 76;
const WUT_CAMP_ITALIA = 77;
const WUT_CAMP_PARTHIA = 78;
const WUT_CAMP_CARTHAGE = 79;
const WUT_CAMP_EGYPT = 80;



const WUT_FRONT_SQUAD = 81;
const WUT_FRONT_BAND = 82;
const WUT_FRONT_SQUADRON = 83;
const WUT_FRONT_DIVISION = 84;


const WUT_ARMY_LIGHT_SQUAD = 85;
const WUT_ARMY_LIGHT_BAND = 86;
const WUT_ARMY_LIGHT_SQUADRON = 87;
const WUT_ARMY_LIGHT_DIVISION = 88;

const WUT_ARMY_HEAVY_SQUAD = 89;
const WUT_ARMY_HEAVY_BAND = 90;
const WUT_ARMY_HEAVY_SQUADRON = 91;
const WUT_ARMY_HEAVY_DIVISION = 92;

const WUT_GUARD_SQUAD = 93;
const WUT_GUARD_BAND = 94;
const WUT_GUARD_SQUADRON = 95;
const WUT_GUARD_DIVISION = 96;

const WUT_BRAVE_THUNDER = 97;

const WUT_GANG = 98;
const WUT_MUGGER = 99;
const WUT_THIEF = 100;

/* CARTAGE */

const WUT_CARTHAGE_GANG = 101;
const WUT_CARTHAGE_TEAMS = 102;
const WUT_CARTHAGE_REBELS = 103;
const WUT_CARTHAGE_FORCES = 104;
const WUT_CARTHAGE_CAPITAL = 105;


const WUT_ARMY_CAPITAL_A = 150;
const WUT_ARMY_CAPITAL_B = 151;
const WUT_ARMY_CAPITAL_C = 152;
const WUT_ARMY_CAPITAL_D = 153;
const WUT_ARMY_CAPITAL_E = 154;
const WUT_ARMY_CAPITAL_F = 155;


const WUT_ARENA_CHALLANGE = 175;
const WUT_ARENA_DEATH = 176;
const WUT_ARENA_GUILD = 177;


const WUT_QUEEN_CITY_A = 180;
const WUT_QUEEN_CITY_B = 181;
const WUT_QUEEN_CITY_C = 182;

const WUT_REPLE_CASTLE_A = 184;
const WUT_REPLE_CASTLE_B = 185;
const WUT_REPLE_CASTLE_C = 186;

const WUT_WAR_STATUE_A = 200;
const WUT_WAR_STATUE_B = 201;
const WUT_WAR_STATUE_C = 202;


const WUT_WOLF_STATUE_A = 203;
const WUT_WOLF_STATUE_B = 204;
const WUT_WOLF_STATUE_C = 205;


const WUT_CHALLAGE_FIELD_PLAYER = 220;
const WUT_CHALLAGE_FIELD_TEAM = 221;
const WUT_CHALLAGE_FIELD_GUILD = 222;
const WUT_CHALLAGE_FIELD_SERVER = 223;

const WUT_FIEGHT_FIELD_PLAYER = 224;
const WUT_FIEGHT_FIELD_TEAM = 225;
const WUT_FIEGHT_FIELD_GUILD = 226;
const WUT_FIEGHT_FIELD_SERVER = 227;

const WUT_SEA_CITY_1 = 231;
const WUT_SEA_CITY_2 = 232;
const WUT_SEA_CITY_3 = 233;
const WUT_SEA_CITY_4 = 234;
const WUT_SEA_CITY_5 = 235;
const WUT_SEA_CITY_6 = 236;

var WorldUnit = {

    isBarrary: function(unitType) {
        return (Number(unitType) >= WUT_RIVER_LVL_1 && unitType <= WUT_WOODS_LVL_10);
    },

    isRiver: function(unitType) {
        return (Number(unitType) >= WUT_RIVER_LVL_1 && unitType <= WUT_RIVER_LVL_10);
    },

    isEmpty: function(unitType) {
        return (Number(unitType) === WUT_EMPTY);
    },

    isCity: function(unitType) {
        return (Number(unitType) >= WUT_CITY_LVL_0 && unitType <= WUT_CITY_LVL_3);
    },
    isCityLv0: function(unitType) {
        return (Number(unitType) === WUT_CITY_LVL_0);
    },
    isCityLv1: function(unitType) {
        return (Number(unitType) === WUT_CITY_LVL_1);
    },
    isCityLv2: function(unitType) {
        return (Number(unitType) === WUT_CITY_LVL_2);
    },
    isCityLv3: function(unitType) {
        return (Number(unitType) === WUT_CITY_LVL_3);
    },

    isMountain: function(unitType) {
        return (Number(unitType) >= WUT_MOUNT_LVL_1 && unitType <= WUT_MOUNT_LVL_10);
    },

    isDesert: function(unitType) {
        return (Number(unitType) >= WUT_DESERT_LVL_1 && unitType <= WUT_DESERT_LVL_10);
    },

    isWood: function(unitType) {
        return (Number(unitType) >= WUT_WOODS_LVL_1 && unitType <= WUT_WOODS_LVL_10);
    },

    isMonawrat: function(unitType) {
        return (Number(unitType) === WUT_MONAWRAT);
    },

    isCamp: function(unitType) {
        return (Number(unitType) >= WUT_CAMP_BRITONS && unitType <= WUT_CAMP_EGYPT);
    },

    isAsianSquads: function(unitType) {
        return (Number(unitType) >= WUT_FRONT_SQUAD && unitType <= WUT_BRAVE_THUNDER);
    },

    isOneFRONT: function(unitType) {
        return (Number(unitType) >= WUT_FRONT_SQUAD && unitType <= WUT_FRONT_DIVISION);
    },

    isFrontSquad: function(unitType) {
        return (Number(unitType) === WUT_FRONT_SQUAD);
    },

    isFrontBand: function(unitType) {
        return (Number(unitType) === WUT_FRONT_BAND);
    },

    isFrontSquadron: function(unitType) {
        return (Number(unitType) === WUT_FRONT_SQUADRON);
    },

    isFrontDivision: function(unitType) {
        return (Number(unitType) === WUT_FRONT_DIVISION);
    },

    isOneLight: function(unitType) {
        return (Number(unitType) >= WUT_ARMY_LIGHT_SQUAD && unitType <= WUT_ARMY_LIGHT_DIVISION);
    },

    isLightSquad: function(unitType) {
        return (Number(unitType) === WUT_ARMY_LIGHT_SQUAD);
    },

    isLightBand: function(unitType) {
        return (Number(unitType) === WUT_ARMY_LIGHT_BAND);
    },

    isLightSquadron: function(unitType) {
        return (Number(unitType) === WUT_ARMY_LIGHT_SQUADRON);
    },

    isLightDivision: function(unitType) {
        return (Number(unitType) === WUT_ARMY_LIGHT_DIVISION);
    },

    isOneHeavy: function(unitType) {
        return (Number(unitType) >= WUT_ARMY_HEAVY_SQUAD && unitType <= WUT_ARMY_HEAVY_DIVISION);
    },

    isHeavySquad: function(unitType) {
        return (Number(unitType) === WUT_ARMY_HEAVY_SQUAD);
    },

    isHeavyBand: function(unitType) {
        return (Number(unitType) === WUT_ARMY_HEAVY_SQUAD);
    },

    isHeavySquadron: function(unitType) {
        return (Number(unitType) === WUT_ARMY_HEAVY_SQUADRON);
    },

    isHeavyDivision: function(unitType) {
        return (Number(unitType) === WUT_ARMY_HEAVY_DIVISION);
    },

    isOneGuard: function(unitType) {
        return (Number(unitType) >= WUT_GUARD_SQUAD && unitType <= WUT_GUARD_DIVISION);
    },

    isGuardSquad: function(unitType) {
        return (Number(unitType) === WUT_GUARD_SQUAD);
    },

    isGuardBand: function(unitType) {
        return (Number(unitType) === WUT_GUARD_BAND);
    },

    isGuardSquadron: function(unitType) {
        return (Number(unitType) === WUT_GUARD_SQUADRON);
    },

    isGuardDivision: function(unitType) {
        return (Number(unitType) === WUT_GUARD_DIVISION);
    },

    isBraveThunder: function(unitType) {
        return (Number(unitType) === WUT_BRAVE_THUNDER);
    },

    isGangStar: function(unitType) {
        return (Number(unitType) >= WUT_GANG && unitType <= WUT_THIEF);
    },

    isGang: function(unitType) {
        return (Number(unitType) === WUT_GANG);
    },

    isMugger: function(unitType) {
        return (Number(unitType) === WUT_MUGGER);
    },

    isThiefs: function(unitType) {
        return (Number(unitType) === WUT_THIEF);
    },

    isCarthagianArmies: function(unitType) {
        return (Number(unitType) >= WUT_CARTHAGE_GANG && unitType <= WUT_CARTHAGE_CAPITAL);
    },

    isCarthasianGang: function(unitType) {
        return (Number(unitType) === WUT_CARTHAGE_GANG);
    },

    isCarthageTeams: function(unitType) {
        return (Number(unitType) === WUT_CARTHAGE_TEAMS);
    },

    isCarthageRebals: function(unitType) {
        return (Number(unitType) === WUT_CARTHAGE_REBELS);
    },

    isCarthageForces: function(unitType) {
        return (Number(unitType) === WUT_CARTHAGE_FORCES);
    },

    isCarthageCapital: function(unitType) {
        return (Number(unitType) === WUT_CARTHAGE_CAPITAL);
    },

    isArmyCapital: function(unitType) {
        return (Number(unitType) >= WUT_ARMY_CAPITAL_A && unitType <= WUT_ARMY_CAPITAL_F);
    },

    isArmyCapitalA: function(unitType) {
        return (Number(unitType) === WUT_ARMY_CAPITAL_A);
    },

    isArmyCapitalB: function(unitType) {
        return (Number(unitType) === WUT_ARMY_CAPITAL_B);
    },

    isArmyCapitalC: function(unitType) {
        return (Number(unitType) === WUT_ARMY_CAPITAL_C);
    },

    isArmyCapitalD: function(unitType) {
        return (Number(unitType) === WUT_ARMY_CAPITAL_D);
    },

    isArmyCapitalE: function(unitType) {
        return (Number(unitType) === WUT_ARMY_CAPITAL_E);
    },

    isArmyCapitalF: function(unitType) {
        return (Number(unitType) === WUT_ARMY_CAPITAL_F);
    },

    isQueenCity: function(unitType) {
        return (Number(unitType) >= WUT_QUEEN_CITY_A && unitType <= WUT_QUEEN_CITY_C);
    },

    isQueenCityS: function(unitType) {
        return (Number(unitType) === WUT_QUEEN_CITY_A);
    },

    isQueenCityM: function(unitType) {
        return (Number(unitType) === WUT_QUEEN_CITY_B);
    },

    isQueenCityH: function(unitType) {
        return (Number(unitType) === WUT_QUEEN_CITY_C);
    },

    isRepelCastle: function(unitType) {
        return (Number(unitType) >= WUT_REPLE_CASTLE_A && unitType <= WUT_REPLE_CASTLE_C);
    },

    isRepelCastleS: function(unitType) {
        return (Number(unitType) === WUT_REPLE_CASTLE_A);
    },

    isRepelCastleM: function(unitType) {
        return (Number(unitType) === WUT_REPLE_CASTLE_B);
    },

    isRepelCastleH: function(unitType) {
        return (Number(unitType) === WUT_REPLE_CASTLE_C);
    },

    isStatueWar: function(unitType) {
        return (Number(unitType) >= WUT_WAR_STATUE_A && unitType <= WUT_WAR_STATUE_C);
    },

    isStatueWarS: function(unitType) {
        return (Number(unitType) === WUT_WAR_STATUE_A);
    },

    isStatueWarM: function(unitType) {
        return (Number(unitType) === WUT_WAR_STATUE_B);
    },

    isStatueWarH: function(unitType) {
        return (Number(unitType) === WUT_WAR_STATUE_C);
    },

    isStatueWalf: function(unitType) {
        return (Number(unitType) >= WUT_WOLF_STATUE_A && unitType <= WUT_WOLF_STATUE_C);
    },

    isStatueWalfS: function(unitType) {
        return (Number(unitType) === WUT_WOLF_STATUE_A);
    },

    isStatueWalfM: function(unitType) {
        return (Number(unitType) === WUT_WOLF_STATUE_B);
    },

    isStatueWalfH: function(unitType) {
        return (Number(unitType) === WUT_WOLF_STATUE_C);
    },

    canHasGarrison: function(unitType) {
        return (isCity(unitType) || isBarrary(unitType));
    },

    isArena: function(unitType) {
        return (Number(unitType) >= WUT_ARENA_CHALLANGE && unitType <= WUT_ARENA_GUILD);
    },

    isArenaChallange: function(unitType) {
        return (Number(unitType) === WUT_ARENA_CHALLANGE);
    },
    isDominatable: function(unitType) {
        return WorldUnit['isQueenCity'](unitType) || WorldUnit['isRepelCastle'](unitType) || WorldUnit['isArmyCapital'](unitType);
    },
    'isSeaCity': function(unitType) {
        return Number(unitType) >= WUT_SEA_CITY_1 && unitType <= WUT_SEA_CITY_6;
    },
    isArenaDeath: function(unitType) {
        return (Number(unitType) === WUT_ARENA_DEATH);
    },

    isArenaGuild: function(unitType) {
        return (Number(unitType) === WUT_ARENA_GUILD);
    },

    getWorldUnit: function(x, y) {
        return game.worldAllUnits[x * 500 + Number(y)];
    },
    getUnitData: function(unitType) {
        return game.World.UnitTypeData[unitType];
    },

    refreshUnitData: function(x, y) {


        return $.ajax({
            url: `${API_URL}/api/AWorld/refreshWorldUnitLvl`,
            data: {
                xCoord: x,
                yCoord: y,
                server: game.Config.idServer,
                token: game.Config.OuthToken
            },
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var jsonData = JSON.parse(data);
                WorldUnit.getWorldUnit(x, y).l = jsonData.l;
                WorldUnit.getWorldUnit(x, y).t = jsonData.t;
                WorldUnit.getWorldUnit(x, y).ut = jsonData.ut;

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    },

    getCampFlage(x, y) {

        x = Number(x);
        y = Number(y);

        var Unit = WorldUnit.getWorldUnit(x, y);
        $flag = "";
        if (Number(Unit.ut) === WUT_CAMP_GAULS) {
            $flag = "flag_france";
        } else if (Number(Unit.ut) === WUT_CAMP_ASIANA) {
            $flag = "flag_magul";
        } else if (Number(Unit.ut) === WUT_CAMP_BRITONS) {
            $flag = "flag_england";
        } else if (Number(Unit.ut) === WUT_CAMP_MACEDON) {
            $flag = "flag_macdoni";
        } else if (Number(Unit.ut) === WUT_CAMP_ITALIA) {
            $flag = "flag_roma";
        } else if (Number(Unit.ut) === WUT_CAMP_HISPANIA) {
            $flag = "flag_spain";
        } else if (Number(Unit.ut) === WUT_CAMP_PARTHIA) {
            $flag = "flag_greek";
        } else if (Number(Unit.ut) === WUT_CAMP_EGYPT) {
            $flag = "flag_egypt";
        } else if (Number(Unit.ut) === WUT_CAMP_CARTHAGE) {
            $flag = "flag_cartaga";
        } else if (Number(Unit.ut) === WUT_CAMP_REICH) {
            $flag = "flag_germany";
        }

        return $flag;

    },

    refreshUnitView(x, y) {

        game.World.Map.DeletUnit(game.World.Map.realCoord(x), game.World.Map.realCoord(y))
        addMapUnite({
            x: x,
            y: y
        });
        Animation.cityFlag();
        Animation.fireWorldUnit(x, y);

    }
};



WorldUnit.WorldUnitRank = function(x, y) {

    var unitType = Number(WorldUnit.getWorldUnit(x, y).ut);
    $.ajax({

        url: `${API_URL}/api/AWorld/getWorldUnitRank`,
        data: {
            xCoord: x,
            yCoord: y,
            unitType: unitType,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'GET',
        success: function(data, textStatus, jqXHR) {

            if (isJson(data)) {
                var jsonData = JSON.parse(data);
            } else {
                alert(data);
            }
            var icon = ["1st", "2nd", "3rd", "4th", "5th"];

            var list = "";
            var name = "";
            var guild = "";
            var duration = "";
            var innerList = "";

            for (var iii = 0; iii < 5; iii++) {

                if (jsonData[iii]) {

                    name = jsonData[iii].PlayerName || jsonData[iii].GuildName;
                    guild = jsonData[iii].GuildName === "NULL" ? "---" : jsonData[iii].GuildName;
                    duration = `${Math.floor(jsonData[iii].totalDuration / 60)}د ${jsonData[iii].totalDuration % 60} ث`;

                } else {

                    name = "";
                    guild = "";
                    duration = "";

                }

                if (WorldUnit.isArenaGuild(unitType)) {

                    innerList = `   <div class="td_1" style="width: 30%">
                                        <div class="rank-image" style="background-image: url(images/number/${icon[iii]}.png)"></div>
                                    </div>
                                    <div class="td_1" style="width: 40%">${name}</div>
                                    <div class="td_1 rtl font-2"  style="width: 30%">${duration}</div>`;
                } else {

                    innerList = `<div class="td_1" style="width: 20%">
                                    <div class="rank-image" style="background-image: url(images/number/${icon[iii]}.png)"></div>
                                </div>
                                <div class="td_1" style="width: 30%">${name}</div>
                                <div class="td_1" style="width: 30%">${guild}</div>
                                <div class="td_1 rtl font-2"  style="width: 20%">${duration}</div>`;

                }

                list += `<div class="tr">
                            ${innerList}
                        </div>`;

            }

            var content = ` <div class="unit-with-rank">
                        
                                <div class="rank-list">

                                    <div class="inner_nav">
                                        ${
                    WorldUnit.isArenaGuild(unitType) ?
                    `<div class="td_1 font-2" style="width:30%">التصنيف</div>
                                            <div class="td_1 font-2" style="width: 40%">${Translate.Button.Chat.League[UserLag.language]}</div>
                                            <div class="td_1 font-2" style="width: 30%">المدة</div>`
                    :
                    `<div class="td_1 font-2" style="width:20%">التصنيف</div>
                                            <div class="td_1 font-2" style="width: 30%">الملك</div>
                                            <div class="td_1 font-2" style="width: 30%">${Translate.Button.Chat.League[UserLag.language]}</div>
                                            <div class="td_1 font-2" style="width: 20%">المدة</div>`

                    }
                                    </div>
                                    ${list}
                                </div>
                            </div>`;


            $(".unit-with-rank").replaceWith(content);
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

};

$(document).on("click", "#new-city-confirm button", function() {

    var city_new_name = $("#new-city-name").val();
    var xCoord = $(this).attr("data-x-coord");
    var yCoord = $(this).attr("data-y-coord");

    if (city_new_name.length < 1) {
        alert_box.confirmMessage("لا يمكنك ترك اسم المدينة خالى ");
        return;
    }

    alert_box.confirmDialog("تأكيد  بناء مدينة ", function() {

        var idCity = game.CurrentCity.City.id_city;

        if (canBuildNewCity(xCoord, yCoord)) {

            $.ajax({
                url: `${API_URL}/api/AWorld/BuildNewCity`,
                data: {
                    idCity: idCity,
                    xCoord: xCoord,
                    yCoord: yCoord,
                    CityName: city_new_name,
                    token: game.Config.OuthToken,
                    server: game.Config.idServer
                },
                type: 'POST',
                success: function(data, textStatus, jqXHR) {

                    if (!game.LBase.isJson(data))
                        return game.LBase.Error(data);

                    var json_data = JSON.parse(data);



                    var json_data = JSON.parse(data);
                    if (json_data.state === "error_0") {

                    } else if (json_data.state === "error_1") {

                    } else if (json_data.state === "error_2") {

                    } else if (json_data.state === "ok") {

                        if (json_data.City) {

                            game.DPlayer.City[json_data.City.id_city].City = json_data.City;
                            game.City.refreshBtnList();
                            $(".close_RB img").click();
                            $("#x_coord-input input").val(xCoord);
                            $("#y_coord-input input").val(yCoord);
                            $("#nav-btn button").click();


                        } else {
                            alert("error add city");
                        }


                    } else {

                        alert(data);

                    }



                },
                error: function(jqXHR, textStatus, errorThrown) {

                }
            });


        } else {

            alert_box.failMessage("لا يمكنك  بناء مدينة جديدة");
            return;

        }

    });

});
var campDB = {



    showDialogBox: function(x_coord, y_coord) {

        var unit = WorldUnit.getWorldUnit(x_coord, y_coord);
        var lvl = unit.l;
        var type = unit.ut;
        var now_date = new Date();



        var box = ` <div id="dialg_box" class="world" style="top: -500px;">
                        <div class="head_bar">
                            <img src="images/style/head_bar.png">
                            <div class="title">${game.World.UnitTypeData[type].Title}</div>
                        </div>
                        <div class="nav_bar">
                            <div class="right-nav">
                                <div class="nav_icon">
                                    <img class="close_dialog" src="images/btns/close_b.png" style="float: right; margin-right: 15px; margin-top: 20px">
                                </div>
                            </div>   
                        </div>
                        <div class="box_content camps">
                            ${this.left_content(x_coord , y_coord)}
                            <div class="right-content  camps">
                                ${this.overview(x_coord , y_coord)}
                                <div class="th ellipsis">
                                    استخبارات المدينة
                                </div>
                                ${this.armyContainer(x_coord, y_coord)}
                            </div>
                            <div id="camp-panal-equip-row" class="footer camp-equip flex"></div>
                        </div>
                    </div>`;

        if ($("#dialg_box").length === 0) {
            $("body").append(box);
            $("#dialg_box").animate({
                top: "150px"
            }, 200);
            campDB.equipRow([]);
        } else {
            $("#dialg_box").remove(function() {
                $("body").append(box);
                $("#dialg_box").animate({
                    top: "150px"
                }, 200);
                campDB.equipRow([]);
            });
        }
    },

    armyContainer: function(x_coord, y_coord) {

        var unit = WorldUnit.getWorldUnit(x_coord, y_coord);
        var lvl = unit.l;
        var type = unit.ut;


        if (WorldUnit.isArmyCapital(type) ||
            WorldUnit.isArenaChallange(type) ||
            WorldUnit.isArenaDeath(type) ||
            WorldUnit.isQueenCity(type)
        ) {
            WorldUnit.WorldUnitRank(x_coord, y_coord);
            return `<div class="unit-with-rank">
                        <div class="army-col">
                            <ul>
                                <li>
                                    <div class="image" style="background-image: url(images/tech/soldier_3.jpg)"></div>
                                </li>
                            </ul>
                        </div>
                        <div class="rank-list">
                          
                            <div class="inner_nav">
                                <div class="td_1 font-2" style="width:20%">التصنيف</div>
                                <div class="td_1 font-2" style="width: 30%">الملك</div>
                                <div class="td_1 font-2" style="width: 30%">${Translate.Button.Chat.League[UserLag.language]}</div>
                                <div class="td_1 font-2" style="width: 20%">المدة</div>
                            </div>
                            <div class="tr">
                                <div class="td_1" style="width: 20%">
                                    <div class="rank-image" style="background-image: url(images/number/1st.png)"></div>
                                </div>
                                <div class="td_1" style="width: 30%"></div>
                                <div class="td_1" style="width: 30%"></div>
                                <div class="td_1 rtl font-2"  style="width: 20%"></div>
                            </div>
                            <div class="tr">
                                <div class="td_1" style="width: 20%">
                                    <div class="rank-image" style="background-image: url(images/number/2nd.png)"></div>
                                </div>
                                <div class="td_1" style="width: 30%"></div>
                                <div class="td_1" style="width: 30%"></div>
                                <div class="td_1 rtl font-2"  style="width: 20%"></div>
                            </div>
                            <div class="tr">
                                <div class="td_1"  style="width: 20%">
                                    <div class="rank-image" style="background-image: url(images/number/3rd.png)"></div>
                                </div>
                                <div class="td_1" style="width: 30%"></div>
                                <div class="td_1" style="width: 30%"></div>
                                <div class="td_1 rtl font-2"  style="width: 20%"></div>
                            </div>
                            <div class="tr">
                                <div class="td_1" style="width: 20%">
                                    <div class="rank-image" style="background-image: url(images/number/4th.png)"></div>
                                </div>
                                <div class="td_1" style="width: 30%"></div>
                                <div class="td_1" style="width: 30%"></div>
                                <div class="td_1 rtl font-2"  style="width: 20%"></div>
                            </div>
                            <div class="tr">
                                <div class="td_1" style="width: 20%">
                                    <div class="rank-image" style="background-image: url(images/number/5th.png)"></div>
                                </div>
                                <div class="td_1" style="width: 30%"></div>
                                <div class="td_1" style="width: 30%"></div>
                                <div class="td_1 rtl font-2"  style="width: 20%"></div>
                            </div>
                        </div>
                    </div>`;
        } else if (WorldUnit.isRepelCastle(type)) {
            campDB.getQueAttackList(x_coord, y_coord);
            return `<div class="unit-with-rank">
                        <div class="rank-list">
                            <div class="inner_nav">
                                <div class="td_1 font-2" style="width: 40%">${Translate.Button.Chat.League[UserLag.language]}</div>
                                <div class="td_1 font-2" style="width: 30%">وقت البداء</div>
                                <div class="td_1 font-2" style="width: 30%">وقت الانتهاء</div>
                            </div>
                            <div class="tr">
                                <div class="td_1" style="width: 40%"></div>
                                <div class="td_1" style="width: 30%"></div>
                                <div class="td_1 rtl font-2"  style="width: 20%"></div>
                                <div class="td_1 rtl font-2"  style="width: 20%"></div>
                            </div>
                            <div class="tr">
                                <div class="td_1" style="width: 20%">
                                </div>
                                <div class="td_1" style="width: 40%"></div>
                                <div class="td_1 rtl font-2"  style="width: 30%"></div>
                            </div>
                            <div class="tr">
                                <div class="td_1"  style="width: 30%">
                                </div>
                                <div class="td_1" style="width: 40%"></div>
                                <div class="td_1 rtl font-2"  style="width: 30%"></div>
                            </div>
                            <div class="tr">
                                <div class="td_1" style="width: 30%">
                                </div>
                                <div class="td_1" style="width: 40%"></div>
                                <div class="td_1 rtl font-2"  style="width: 30%"></div>
                            </div>
                            <div class="tr">
                                <div class="td_1" style="width: 30%">
                                </div>
                                <div class="td_1" style="width: 40%"></div>
                                <div class="td_1 rtl font-2"  style="width: 30%"></div>
                            </div>
                        </div>
                    </div>`;
        } else if (WorldUnit.isArenaGuild(type)) {
            WorldUnit.WorldUnitRank(x_coord, y_coord);
            return `<div class="unit-with-rank">
                        <div class="army-col">
                            <ul>
                                <li>
                                    <div class="image" style="background-image: url(images/tech/soldier_3.jpg)"></div>
                                </li>
                            </ul>
                        </div>
                        <div class="rank-list">
                          
                            <div class="inner_nav">
                                <div class="td_1 font-2" style="width: 30%">التصنيف</div>
                                <div class="td_1 font-2" style="width: 40%">${Translate.Button.Chat.League[UserLag.language]}</div>
                                <div class="td_1 font-2" style="width: 30%">المدة</div>
                            </div>
                            <div class="tr">
                                <div class="td_1" style="width: 30%">
                                    <div class="rank-image" style="background-image: url(images/number/1st.png)"></div>
                                </div>
                                <div class="td_1" style="width: 40%"></div>
                                <div class="td_1 rtl font-2"  style="width: 30%"></div>
                            </div>
                            <div class="tr">
                                <div class="td_1" style="width: 30%">
                                    <div class="rank-image" style="background-image: url(images/number/2nd.png)"></div>
                                </div>
                                <div class="td_1" style="width: 40%"></div>
                                <div class="td_1 rtl font-2"  style="width: 30%"></div>
                            </div>
                            <div class="tr">
                                <div class="td_1"  style="width: 30%">
                                    <div class="rank-image" style="background-image: url(images/number/3rd.png)"></div>
                                </div>
                                <div class="td_1" style="width: 40%"></div>
                                <div class="td_1 rtl font-2"  style="width: 30%"></div>
                            </div>
                            <div class="tr">
                                <div class="td_1" style="width: 30%">
                                    <div class="rank-image" style="background-image: url(images/number/4th.png)"></div>
                                </div>
                                <div class="td_1" style="width: 40%"></div>
                                <div class="td_1 rtl font-2"  style="width: 30%"></div>
                            </div>
                            <div class="tr">
                                <div class="td_1" style="width: 30%">
                                    <div class="rank-image" style="background-image: url(images/number/5th.png)"></div>
                                </div>
                                <div class="td_1" style="width: 40%"></div>
                                <div class="td_1 rtl font-2"  style="width: 30%"></div>
                            </div>
                        </div>
                    </div>`;
        }

        var renew_time = game.World.UnitData[unit.t].timeNextRest().getTime();
        return `<div class="camp-data">
                    <div class="left pull-L blue-ribbon">
                        <table id="camp-army-table">
                            <tr>
                                <td>
                                    <img src="images/tech/soldier_1.jpg"/>
                                    <h1 class="army_count stroke ellipsis ${Fixed.getArmyAmountColor(this.getArmyAmountForUnit(type ,lvl ,"army_a"))}">
                                        ${lvl <= game.World.UnitTypeData[type].maxLvl ? this.getArmyAmountForUnit(type , lvl ,"army_a") : "0"}
                                    </h1>
                                </td>
                                <td>
                                    <img src="images/tech/soldier_2.jpg"/>
                                    <h1 class="army_count stroke ellipsis ${Fixed.getArmyAmountColor(this.getArmyAmountForUnit(type ,lvl ,"army_b"))}">
                                        ${lvl <= game.World.UnitTypeData[type].maxLvl ? this.getArmyAmountForUnit(type ,lvl ,"army_b") : "0"}
                                    </h1>
                                </td>
                                <td>
                                    <img src="images/tech/soldier_3.jpg"/>
                                    <h1 class="army_count stroke ellipsis ${Fixed.getArmyAmountColor(this.getArmyAmountForUnit(type ,lvl ,"army_c"))}">
                                        ${lvl <= game.World.UnitTypeData[type].maxLvl ? this.getArmyAmountForUnit(type ,lvl ,"army_c") : "0"}
                                    </h1>
                                </td>

                            </tr>
                            <tr>
                                <td>
                                    <img src="images/tech/soldier_4.jpg"/>
                                    <h1 class="army_count stroke ellipsis ${Fixed.getArmyAmountColor(this.getArmyAmountForUnit(type ,lvl ,"army_d"))}">
                                        ${lvl <= game.World.UnitTypeData[type].maxLvl ? this.getArmyAmountForUnit(type ,lvl ,"army_d") : "0"}
                                    </h1>
                                </td>
                                <td>
                                    <img src="images/tech/soldier_5.jpg"/>
                                    <h1 class="army_count stroke ellipsis ${Fixed.getArmyAmountColor(this.getArmyAmountForUnit(type ,lvl ,"army_e"))}">
                                        ${lvl <= game.World.UnitTypeData[type].maxLvl ? this.getArmyAmountForUnit(type ,lvl ,"army_e") : "0"}
                                    </h1>
                                </td>
                                <td>
                                    <img src="images/tech/soldier_6.jpg"/>
                                    <h1 class="army_count stroke ellipsis ${Fixed.getArmyAmountColor(this.getArmyAmountForUnit(type ,lvl ,"army_f"))}">
                                        ${lvl <= game.World.UnitTypeData[type].maxLvl ? this.getArmyAmountForUnit(type ,lvl ,"army_f") : "0"}
                                    </h1>
                                </td>

                            </tr>

                        </table>
                    </div>
                    <div class="right pull-R">
                        <div class="refresh_time">
                            <div class="pull-R" >
                                <h1>وقت اعادة التعيين</h1>
                                <h2 class="time_counter  rtl attack_time_reset"  time-end="${renew_time/1000}"></h2>
                            </div>
                            <div class="pull-L">
                                <h1>المستوى</h1>
                                <h3><span>${Math.min(lvl , game.World.UnitTypeData[type].maxLvl)}/</span>${game.World.UnitTypeData[type].maxLvl}</h3>
                            </div>
                        </div>
                        <table border="1">
                            <tr>
                                <td>${game.World.UnitTypeData[type].heroLvl ? game.World.UnitTypeData[type].heroLvl :getArabicNumbers(5+(lvl*5))}</td>
                                <td>مستوى البطل</td>
                            </tr>
                            <tr>
                                <td>${game.World.UnitTypeData[type].heroNum ? game.World.UnitTypeData[type].heroNum : getArabicNumbers( lvl%10 === 0? 3 : 1)}</td>
                                <td>عدد الابطال</td>
                            </tr>
                            <tr>
                                <td>${game.World.UnitTypeData[type].techLvl ? game.World.UnitTypeData[type].techLvl :  getArabicNumbers(Math.floor(lvl/10)*2+2)}</td>
                                <td>مستوى الدراسة</td>
                            </tr>
                        </table>
                    </div>
                </div>`;

    },

    overview: function(x_coord, y_coord) {
        var unit = WorldUnit.getWorldUnit(x_coord, y_coord);
        var type = unit.ut;
        var list = `<ul>`;

        list += WorldUnit.prize.prizeAllLvlsList(x_coord, y_coord);

        list += `</ul>`;

        var ov = `<div class="overview" >
                        <div class="th ellipsis">
                            نظرة عامة
                        </div>
                        <div  class="wrapper" style=" height: 80%">
                            <p id="camp-over-view-desc"  style=" outline: currentcolor none medium;" tabindex="4">
                                ${game.World.UnitTypeData[type].Desc}
                           </p>
                            <div class="image pull-R" id="camp-prize">
                             ${list}
                            </div>
                        </div>
                    </div>`;
        return ov;
    },
    left_content: function(x_coord, y_coord) {

        var unit = WorldUnit.getWorldUnit(x_coord, y_coord);
        var type = unit.ut;
        var lvl = unit.l;
        var title = game.World.UnitTypeData[type].Title;

        var left_content = `<div class="left-content ">
                                <table border="1" class="camp_review">
                                    <tr>
                                        <td rowspan="4" class="camp_snap_shot" style="background: url(images/background/frame.png) 100% 80%">
                                            <img src="images/world/snap-shot/${game.World.UnitTypeData[type].WSnapShoot}"/>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td id="reviewUnitBoxName" colspan="2">
                                            ${title}
                                        </td>
                                    </tr>
                                    <tr>
                                        <td colspan="2">
                                            <div class="coord-txt">[${getArabicNumbers(x_coord)},${getArabicNumbers(y_coord)}]</div>
                                            <div class="copy-coord-icon">
                                                <button class="copy-coord" data-x-coord="${x_coord}" data-y-coord="${y_coord}"></button>
                                            </div>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>${Translate.Text.Province[UserLag.language]}</td>
                                        <td>${game.World.Province.getTitle(x_coord , y_coord)}</td>
                                    </tr>
                                    <tr>

                                        <td>
                                            <div class="${Number(game.World.UnitTypeData[type].reqProm) > Number(game.DPlayer.Player.porm) ? "not-enough" : "enough"}">
                                                ${game.BaseData.Promotion[game.World.UnitTypeData[type].reqProm].Title}
                                            </div>
                                        </td>
                                        <td colspan="2">
                                            تصنيف النبيل المطلوب
                                        </td>
                                    </tr>
                                    <tr>

                                        <td>
                                            ${(game.World.UnitTypeData[type].reqFitness)} 
                                        </td>
                                        <td colspan="2">
                                              اللياقة البدنية
                                        </td>
                                    </tr>
                                </table>
                                ${this.attackBtns(x_coord, y_coord)}
                                <div class="battel_req">
                                    <ul>
                                        ${this.get_req(type)}
                                    </ul>
                                </div>
                            </div>`;
        return left_content;
    },

    attackBtns: function(xCoord, yCoord) {

        var Unit = WorldUnit.getWorldUnit(xCoord, yCoord);
        if (WorldUnit.isQueenCity(Unit.ut) || WorldUnit.isRepelCastle(Unit.ut))
            return `<div class="attakBtns four-btn-camp">
                        <div class="container">
                            <div class="attck_start pull-L" id="attack_camp">
                                <button id="START_ATTACK" data-x-coord="${xCoord}" data-y-coord="${yCoord}" class="full-btn full-btn-3x enter"> انشاء</button>
                            </div>
                            <div class="attack_join pull-R">
                                <button id="JOIN_ATTACK"  data-x-coord="${xCoord}" data-y-coord="${yCoord}" class="full-btn full-btn-3x"> انضمام</button>
                            </div>
                            <div class="request-order pull-L">
                                <button id="REQUEST_ORDER" data-x-coord="${xCoord}" data-y-coord="${yCoord}" class="full-btn full-btn-3x"> طلب</button>
                            </div>
                            <div class="plunde-prize pull-R">
                                <button id="PLUNDE_PRIZE"  data-x-coord="${xCoord}" data-y-coord="${yCoord}" class="full-btn full-btn-3x"> غنيمة</button>
                            </div>
                        </div>
                    </div>`;


        return `<div class="attakBtns">
                    <div class="container">
                        <div class="attck_start pull-L" id="attack_camp">
                            <button id="START_ATTACK" data-x-coord="${xCoord}" data-y-coord="${yCoord}" class="full-btn full-btn-3x enter" disabled='disabled' > انشاء</button>
                        </div>
                        <div class="attack_join pull-R">
                            <button id="JOIN_ATTACK" data-x-coord="${xCoord}" data-y-coord="${yCoord}" class="full-btn full-btn-3x" disabled='disabled' > انضمام</button>
                        </div>
                    </div>
                </div>`;

    },

    get_req: function(type) {
        var camp_obj = game.World.UnitTypeData[type];

        var total_req = "";
        var total_join_req = "";
        var total = "";

        camp_obj.MakeReq.forEach(function(el) { // هنجيب المتطلبات بتاعة  الهجوم ونحطها  فى ليست
            if (el !== "") {
                total_req += `<span class="${Matrial.getPlayerAmount(el.Item) < el.amount ? "not-enough" : "enough"} "> ${el.amount} من  ${game.BaseData.Items[el.Item].name}</span>`;
            }
        });
        if (total_req !== "") {
            total += `<li>
                        يستهلك${total_req} لانشاء معركة
                    </li>`;
        }
        camp_obj.JoinReq.forEach(function(el) { // هنجيب المتطلبات بتاعة  الانضمام ونحطها  فى ليست
            if (el !== "") {
                total_join_req += `<span  class="${Matrial.getPlayerAmount(el.Item) < 1 ? "not-enough" : "enough"} "> ${el.amount} من  ${game.BaseData.Items[el.Item].name}</span>`;
            }
        });
        if (total_join_req !== "") {
            total += `<li>
                        يستهلك${total_join_req} لانشاء معركة
                    </li>`;
        }
        return total;
    },
    'getArmyAmountForUnit' (unitType, Lvl, ArmyType) {
        if (!game['World']['UnitArmy'][unitType]) return 0x0;
        if (!game['World']['UnitArmy'][unitType][Lvl]) return 0x0;
        if (!game['World']['UnitArmy'][unitType][Lvl][ArmyType]) return 0x0;
        return game['World']['UnitArmy'][unitType][Lvl][ArmyType];
    },
    'getDominaterName' (xCoord, yCoord) {
        var Unit = WorldUnit['getWorldUnit'](xCoord, yCoord);
        $.ajax({
            'url': API_URL + '/api/AWorldUnit/getWorldUnitDominator',
            'type': 'GET',
            'data': {
                'xCoord': xCoord,
                'yCoord': yCoord,
                'unitType': Unit.ut,
                server: game.Config.idServer,
                token: game.Config.OuthToken
            },
            success: function(data, _0x2bf316, _0x1a4707) {
                if (!game['LBase']['isJson'](data))
                    return game['LBase']['Error'](data);
                var JsonData = JSON['parse'](data);
                if (JsonData['Name'] != '')
                    $('#reviewUnitBoxName').html(JsonData['Name']);
            },
            'error': function(_0x1ed427, _0xebf258, _0x2fd59e) {}
        });
    }
};


campDB.equipRow = function(equip) {

    var returnEquiImage = function(part) {
        var ii;
        for (ii in equip) {
            if (equip[ii].part === part) {
                return Equipment.getImage(equip[ii].equip, equip[ii].part, equip[ii].lvl);
            }
        }
        return "images/tech/no_army.png";
    };

    $("#camp-panal-equip-row").html(
        `
        <ul>
            <li equi_type="helmet"> 
                    <div class="image-wrapper">
                        <div class="equip" style="background-image: url(${returnEquiImage("helmet")})"></div>
                        <div class="icon" style="background-image: url(images/box/helmet.png)"></div>
                    </div>
                </li>
                <li equi_type="necklace"> 
                    <div class="image-wrapper">
                        <div class="equip" style="background-image: url(${returnEquiImage("necklace")})"></div>
                        <div class="icon" style="background-image: url(images/box/lock.png)"></div>
                    </div>
                </li>
                <li equi_type="armor"> 
                    <div class="image-wrapper">
                        <div class="equip" style="background-image: url(${returnEquiImage("armor")})"></div>
                        <div class="icon" style="background-image: url(images/box/armor.png)"></div>
                    </div>
                </li>
                <li equi_type="boot"> 
                    <div class="image-wrapper">
                        <div class="equip" style="background-image: url(${returnEquiImage("boot")})"></div>
                        <div class="icon" style="background-image: url(images/box/boots.png)"></div>
                    </div>
                </li>
                <li equi_type="sword"> 
                    <div class="image-wrapper">
                        <div class="equip" style="background-image: url(${returnEquiImage("sword")})"></div>
                        <div class="icon" style="background-image: url(images/box/sword.png)"></div>
                    </div>
                </li>
                <li equi_type="shield"> 
                    <div class="image-wrapper">
                        <div class="equip" style="background-image: url(${returnEquiImage("shield")})"></div>
                        <div class="icon" style="background-image: url(images/box/shield.png)"></div>
                    </div>
                </li>
                <li equi_type="horse"> 
                    <div class="image-wrapper">
                        <div class="equip" style="background-image: url(${returnEquiImage("steed")})"></div>
                        <div class="icon" style="background-image: url(images/box/lock.png)"></div>
                    </div>
                </li>

                <li equi_type="ring"> 
                    <div class="image-wrapper">
                        <div class="equip" style="background-image: url(${returnEquiImage("ring")})"></div>
                        <div class="icon" style="background-image: url(images/box/lock.png)"></div>
                    </div>
                </li>
                <li equi_type="belt"> 
                    <div class="image-wrapper">
                        <div class="equip" style="background-image: url(${returnEquiImage("belt")})"></div>
                        <div class="icon" style="background-image: url(images/box/lock.png)"></div>
                    </div>
                </li>
                <li equi_type="niche"> 
                    <div class="image-wrapper">
                        <div class="equip" style="background-image: url(${returnEquiImage("pendant")})"></div>
                        <div class="icon" style="background-image: url(images/box/lock.png)"></div>
                    </div>
                </li>
            </ul>`);
};

campDB.armyRow = function(heroList) {

    var armyObj = Hero.calWorldUnitArmy(heroList);
    var tb = "<tr>";
    for (var iii = 1; iii <= 3; iii++) {
        tb += `<td>
                    <img src="images/tech/soldier_${iii}.jpg"/>
                    <h1 class="army_count stroke ellipsis ${Fixed.getArmyAmountColor(armyObj[iii])}">
                        ${armyObj[iii]}
                    </h1>
                </td>`;
    }
    tb += "</tr><tr>";
    for (var iii = 4; iii <= 6; iii++) {
        tb += `<td>
                    <img src="images/tech/soldier_${iii}.jpg"/>
                    <h1 class="army_count stroke ellipsis ${Fixed.getArmyAmountColor(armyObj[iii])}">
                        ${armyObj[iii]}
                    </h1>
                </td>`;
    }
    tb += "</tr>";
    $("#camp-army-table").html(`<tr> ${tb} </tr>`);
};

campDB.getQueAttackList = function(xCoord, yCoord) {
    var Unit = WorldUnit.getWorldUnit(xCoord, yCoord);

    if (!WorldUnit.isRepelCastle(Unit.ut))
        return;
    return $.ajax({

        url: `${API_URL}/api/AWorld/getGuildAttackQue`,
        type: 'GET',
        data: {
            token: game.Config.OuthToken,
            server: game.Config.idServer,
            xCoord: xCoord,
            yCoord: yCoord
        },
        success: function(data, textStatus, jqXHR) {
            console.log(data)
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            game.CurrentWorldUnit.AttackQueList = JsonObject;
            campDB.refreshQueAttackList(xCoord, yCoord);
        }

    });
};

campDB.refreshQueAttackList = function(xCoord, yCoord) {
    var Unit = WorldUnit.getWorldUnit(xCoord, yCoord);

    var icon = ["1st", "2nd", "3rd", "4th", "5th"];

    var list = "";
    var name = "";
    var guild = "";
    var timeEnd = "";
    var timeStart = "";
    var innerList = "";
    for (var iii = 0; iii < 5; iii++) {
        var ListItem = game.CurrentWorldUnit.AttackQueList[iii];
        if (ListItem) {


            name = ListItem.PlayerName || ListItem.GuildName;
            guild = ListItem.GuildName === "NULL" ? "---" : ListItem.GuildName;
            timeEnd = `${dateTimeFormatShort(new Date(ListItem.time_end*1000))}`;
            timeStart = `${dateTimeFormatShort(new Date(ListItem.time_start*1000))}`;

        } else {

            name = "";
            guild = "";
            timeEnd = '';
            timeStart = "";

        }

        if (WorldUnit.isRepelCastle(Unit.ut)) {

            innerList = `   <div class="td_1" style="width: 30%">${name}</div>
                                    <div class="td_1" style="width: 35%">${timeStart}</div>
                                    <div class="td_1" style="width: 35%">${timeEnd}</div>`;
        }

        list += `<div class="tr">
                            ${innerList}
                        </div>`;

    }

    var content = ` <div class="unit-with-rank">
                        
                                <div class="rank-list">
                                        ${
                                            WorldUnit.isRepelCastle(Unit.ut) ? 
                                            `<div class="inner_nav">
                                                <div class="td_1 font-2" style="width: 40%">${Translate.Button.Chat.League[UserLag.language]}</div>
                                                <div class="td_1 font-2" style="width: 30%">وقت البداء</div>
                                                <div class="td_1 font-2" style="width: 30%">وقت الانتهاء</div>
                                            ` 
                                        : 
                                                
                                            `<div class="td_1 font-2" style="width:20%">التصنيف</div>
                                            <div class="td_1 font-2" style="width: 30%">الملك</div>
                                            <div class="td_1 font-2" style="width: 30%">${Translate.Button.Chat.League[UserLag.language]}</div>
                                            <div class="td_1 font-2" style="width: 20%">المدة</div>`
            
                                        }
                                    </div>
                                    ${list}
                                </div>
                            </div>`;


    $(".unit-with-rank").replaceWith(content);
};
game.World.WorldMapIcon.MapIcon = {};

game.World.WorldMapIcon.Rad = 70;

game.World.WorldMapIcon.MapIcon = {
    AttackOnlyUnit: [{
            Deg: -90,
            Icon: "MapIconAttack",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_CONQUER,
            YOffset: 0
        },
        {
            Deg: 90,
            Icon: "MapIconArena",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_OPEN_BATTEL_FIELD,
            YOffset: -15
        },
        {
            Deg: 90,
            Icon: "Text",
            Id: "Title",
            YOffset: -15
        },
        {
            Deg: -90,
            Icon: "Text",
            Id: "Coord",
            YOffset: 40
        },
        {
            Deg: -90,
            Icon: "Text",
            Id: "CoordBg",
            YOffset: 38
        }
    ],
    BarrayAttack: [{
            Deg: -15,
            Icon: "MapIconRainForce",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_SUPPORT,
            YOffset: 0
        },
        {
            Deg: -65,
            Icon: "MapIconSpy",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_SPY,
            YOffset: 0
        },
        {
            Deg: -115,
            Icon: "MapIconOccupy",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_DOMINATE,
            YOffset: 0
        },
        {
            Deg: -165,
            Icon: "MapIconAttack",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_CONQUER,
            YOffset: 0
        },
        {
            Deg: 90,
            Icon: "MapIconArena",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_OPEN_BATTEL_FIELD,
            YOffset: -15
        },
        {
            Deg: 90,
            Icon: "Text",
            Id: "Title",
            YOffset: -15
        },
        {
            Deg: -90,
            Icon: "Text",
            Id: "Coord",
            YOffset: 40
        },
        {
            Deg: -90,
            Icon: "Text",
            Id: "CoordBg",
            YOffset: 38
        }
    ],
    CityAttack: [{
            Deg: 10,
            Icon: "MapIconTransPort",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_SUPPLY,
            YOffset: 0
        },
        {
            Deg: -40,
            Icon: "MapIconRainForce",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_SUPPORT,
            YOffset: 0
        },
        {
            Deg: -90,
            Icon: "MapIconSpy",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_SPY,
            YOffset: 0
        },
        {
            Deg: -140,
            Icon: "MapIconOccupy",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_DOMINATE,
            YOffset: 0
        },
        {
            Deg: -190,
            Icon: "MapIconAttack",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_CONQUER,
            YOffset: 0
        },
        {
            Deg: 90,
            Icon: "MapIconArena",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_OPEN_BATTEL_FIELD,
            YOffset: -15
        },
        {
            Deg: 90,
            Icon: "Text",
            Id: "Title",
            YOffset: -15
        },
        {
            Deg: -90,
            Icon: "Text",
            Id: "Coord",
            YOffset: 40
        },
        {
            Deg: -90,
            Icon: "Text",
            Id: "CoordBg",
            YOffset: 38
        }
    ],
    MyCity: [{
            Deg: -45,
            Icon: "MapIconTransPort",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_SUPPLY,
            YOffset: 0
        },
        {
            Deg: -90,
            Icon: "MapIconRainForce",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_HERO_TRANS,
            YOffset: 0
        },
        {
            Deg: -135,
            Icon: "MapIconEnter",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_ENTER_CITY,
            YOffset: 0
        },
        {
            Deg: 90,
            Icon: "MapIconArena",
            Task: game.BaseData.BattelTasks.BATTEL_TASK_OPEN_BATTEL_FIELD,
            YOffset: -15
        },
        {
            Deg: 90,
            Icon: "Text",
            Id: "Title",
            YOffset: -15
        },
        {
            Deg: -90,
            Icon: "Text",
            Id: "Coord",
            YOffset: 40
        },
        {
            Deg: -90,
            Icon: "Text",
            Id: "CoordBg",
            YOffset: 38
        }
    ]
};




game.World.WorldMapIcon.getIconList = function(xCoord, yCoord) {

    var Unit = WorldUnit.getWorldUnit(game.World.Map.realCoord(xCoord), game.World.Map.realCoord(yCoord));

    if (
        WorldUnit.isArena(Unit.ut) ||
        WorldUnit.isArmyCapital(Unit.ut) || WorldUnit.isAsianSquads(Unit.ut) ||
        WorldUnit.isCamp(Unit.ut) || WorldUnit.isCarthagianArmies(Unit.ut) ||
        WorldUnit.isSeaCity(Unit.ut) || WorldUnit.isQueenCity(Unit.ut) ||
        WorldUnit.isRepelCastle(Unit.ut) || WorldUnit.isThiefs(Unit.ut) ||
        WorldUnit.isGang(Unit.ut) || WorldUnit.isMugger(Unit.ut) ||
        WorldUnit.isStatueWar(Unit.ut) || WorldUnit.isStatueWalf(Unit.ut)
    )
        return game.World.WorldMapIcon.MapIcon.AttackOnlyUnit;
    if (WorldUnit.isBarrary(Unit.ut))
        return game.World.WorldMapIcon.MapIcon.BarrayAttack;
    if (WorldUnit.isCity(Unit.ut))
        return game.World.WorldMapIcon.MapIcon.CityAttack;

    return game.World.WorldMapIcon.MapIcon.AttackOnlyUnit;
};

game.World.WorldMapIcon.IconClicked = function(xCoord, yCoord, BattelTask) {
    game.World.WorldMapIcon.Clicked(game.World.Map.realCoord(xCoord), game.World.Map.realCoord(yCoord), BattelTask);
};



game.World.WorldMapIcon.showWorldUnitIcons = function(xCoord, yCoord) {

    this.removeWorldUnitIcons();
    var x = game.World.Map.posX(xCoord, yCoord) + 64;
    var y = game.World.Map.posY(xCoord, yCoord) + 80;
    var z = game.World.Map.posZ(xCoord, yCoord) + 15;

    var IconList = game.World.WorldMapIcon.getIconList(xCoord, yCoord);
    var xPos, yPos;

    //var Icon = {0: "MapIconAttack", "1": "MapIconOccupy", "2": "MapIconRainForce", "3": "MapIconSpy", "4": "MapIconTransPort", "5": "MapIconEnter", "5": "MapIconEnter", "6": "MapIconArena"};

    for (var iii in IconList) {
        xPos = Math.cos(Phaser.Math.DegToRad(IconList[iii].Deg));
        yPos = Math.sin(Phaser.Math.DegToRad(IconList[iii].Deg));
        if (IconList[iii].Icon == "Text") {
            if (IconList[iii].Id == "Title") {
                game.GE.WorldScene.WorldUnitIcons[iii] = game.GE.WorldScene.add.text(0, 0, "أرض المعركة", {
                    fixedHeight: 20,
                    fontStyle: "bold",
                    fontSize: 14,
                    stroke: '#000000',
                    strokeThickness: 3
                }).setDepth(z + 10).setOrigin(0.5, 0.5);
            } else if (IconList[iii].Id == "Coord") {
                game.GE.WorldScene.WorldUnitIcons[iii] = game.GE.WorldScene.add.text(0, 0, `${xCoord}  ${yCoord}`, {
                    fixedHeight: 20,
                    fontStyle: "bold",
                    fontSize: 14,
                    stroke: '#000000',
                    strokeThickness: 3
                }).setDepth(z + 10).setOrigin(0.5, 0.5);
            } else if (IconList[iii].Id == "CoordBg") {
                game.GE.WorldScene.WorldUnitIcons[iii] = game.GE.WorldScene.add.image(x + 20 * xPos, y + 20 * yPos, "CoordHolder").setDepth(z + 9).setScale(0.8, 0.6)
            }


        } else {
            game.GE.WorldScene.WorldUnitIcons[iii] = game.GE.WorldScene.add.image(x + 20 * xPos, y + 20 * yPos, IconList[iii].Icon).setDepth(z + 10)
                .setInteractive()
                .on("click", function(Obj) {
                    game.World.WorldMapIcon.IconClicked(Obj.data.get("xCoord"), Obj.data.get("yCoord"), Obj.data.get("BattelTask"));
                });
            game.GE.WorldScene.WorldUnitIcons[iii].setDataEnabled();
            game.GE.WorldScene.WorldUnitIcons[iii].data.set('BattelTask', IconList[iii].Task);
            game.GE.WorldScene.WorldUnitIcons[iii].data.set('xCoord', game.World.Map.realCoord(xCoord));
            game.GE.WorldScene.WorldUnitIcons[iii].data.set('yCoord', game.World.Map.realCoord(yCoord));
        }

    }

    this.tweenWorldUnitIcons(x, y, IconList);

    game.GE.WorldScene.CircleUnitIcon = game.GE.WorldScene.add.circle(x, y, game.World.WorldMapIcon.Rad).setStrokeStyle(4, 0x000000)
        .setDepth(z + 9)
        .setInteractive(new Phaser.Geom.Circle(70, 70, game.World.WorldMapIcon.Rad + 10), Phaser.Geom.Circle.Contains)
        .on("pointerover", function(P, X, Y, E) {
            E.stopPropagation();
        })
        .on("pointerdown", function(P, X, Y, E) {
            game.World.WorldMapIcon.removeWorldUnitIcons();
        });
    game.GE.WorldScene.CircleUnitIcon.canClickThrough = true;
    game.GE.WorldScene.tweens.add({
        targets: game.GE.WorldScene.CircleUnitIcon,
        scale: {
            from: 0.75,
            to: 1
        },
        ease: 'Cubic', // 'Cubic', 'Elastic', 'Bounce', 'Back'
        duration: 600
    });
};

game.World.WorldMapIcon.removeWorldUnitIcons = function() {

    for (var ii in game.GE.WorldScene.WorldUnitIcons) {
        if (game.GE.WorldScene.WorldUnitIcons[ii])
            game.GE.WorldScene.WorldUnitIcons[ii].destroy();
    }
    if (game.GE.WorldScene.Tween)
        game.GE.WorldScene.Tween.remove();
    if (game.GE.WorldScene.CircleUnitIcon)
        game.GE.WorldScene.CircleUnitIcon.destroy();
};


game.World.WorldMapIcon.removeUnitCoords = function() {
    if (game.GE.WorldScene.UnitCoords && game.GE.WorldScene.UnitCoords.Bg) {
        game.GE.WorldScene.UnitCoords.Bg.destroy();
        game.GE.WorldScene.UnitCoords.Text.destroy();
    }
};
game.World.WorldMapIcon.showUnitCoords = function(xCoord, yCoord) {


    game.World.WorldMapIcon.removeUnitCoords();

    var x = game.World.Map.posX(xCoord, yCoord) + 64;
    var y = game.World.Map.posY(xCoord, yCoord) + 80;
    var z = game.World.Map.posZ(xCoord, yCoord) + 15;
    game.GE.WorldScene.UnitCoords = {};
    game.GE.WorldScene.UnitCoords.Text = game.GE.WorldScene.add.text(x, y, `${xCoord}  ${yCoord}`, {
        fixedHeight: 20,
        fontStyle: "bold",
        fontSize: 14,
        stroke: '#000000',
        strokeThickness: 3
    }).setDepth(z + 10).setOrigin(0.5, 0.5);
    game.GE.WorldScene.UnitCoords.Bg = game.GE.WorldScene.add.image(x, y, "CoordHolder").setDepth(z + 9).setScale(0.8, 0.6);


};

game.World.WorldMapIcon.tweenWorldUnitIcons = function(x, y, IconList) {
    var Rad = 70;
    var xPos, yPos;
    game.GE.WorldScene.Tween = game.GE.WorldScene.tweens.add({
        targets: Object.values(game.GE.WorldScene.WorldUnitIcons),
        x: {
            getStart: function(target, key, value, targetIndex, totalTargets, tween) {
                if (!IconList[targetIndex]) {
                    console.log(targetIndex, target, key)
                    return 0;
                }


                return x + 52.5 * Math.cos(Phaser.Math.DegToRad(IconList[targetIndex].Deg));
            },
            getEnd: function(target, key, value, targetIndex, totalTargets, tween) {
                if (!IconList[targetIndex]) {
                    console.log(targetIndex, target, key)
                    return 0;
                }
                return x + Rad * Math.cos(Phaser.Math.DegToRad(IconList[targetIndex].Deg));
            }
        },
        y: {
            getStart: function(target, key, value, targetIndex, totalTargets, tween) {
                if (!IconList[targetIndex]) {
                    console.log(targetIndex, target, key)
                    return 0;
                }
                return y + 52.5 * Math.sin(Phaser.Math.DegToRad(IconList[targetIndex].Deg));
            },
            getEnd: function(target, key, value, targetIndex, totalTargets, tween) {
                if (!IconList[targetIndex]) {
                    console.log(targetIndex, target, key)
                    return 0;
                }
                return y + Rad * Math.sin(Phaser.Math.DegToRad(IconList[targetIndex].Deg)) + IconList[targetIndex].YOffset;
            }
        },
        ease: 'Cubic', // 'Cubic', 'Elastic', 'Bounce', 'Back'
        duration: 600
    });

};
/* global WorldUnit */

const army_mo3_and_mon = {
    "1": {
        "type_1": "army_a",
        "amount_1": 10,
        "type_2": "army_d",
        "amount_2": 8
    },
    "2": {
        "type_1": "army_a",
        "amount_1": 16,
        "type_2": "army_d",
        "amount_2": 11
    },
    "3": {
        "type_1": "army_a",
        "amount_1": 26,
        "type_2": "army_d",
        "amount_2": 18
    },
    "4": {
        "type_1": "army_a",
        "amount_1": 38,
        "type_2": "army_d",
        "amount_2": 23
    },
    "5": {
        "type_1": "army_a",
        "amount_1": 47,
        "type_2": "army_d",
        "amount_2": 31
    },
    "6": {
        "type_1": "army_a",
        "amount_1": 60,
        "type_2": "army_d",
        "amount_2": 36
    },
    "7": {
        "type_1": "army_a",
        "amount_1": 70,
        "type_2": "army_d",
        "amount_2": 44
    },
    "8": {
        "type_1": "army_a",
        "amount_1": 81,
        "type_2": "army_d",
        "amount_2": 10
    },
    "9": {
        "type_1": "army_a",
        "amount_1": 91,
        "type_2": "army_d",
        "amount_2": 59
    },
    "10": {
        "type_1": "army_a",
        "amount_1": 110,
        "type_2": "army_d",
        "amount_2": 98
    },
    "11": {
        "type_1": "army_a",
        "amount_1": 190,
        "type_2": "army_e",
        "amount_2": 54
    },
    "12": {
        "type_1": "army_a",
        "amount_1": 271,
        "type_2": "army_e",
        "amount_2": 54
    },
    "13": {
        "type_1": "army_a",
        "amount_1": 350,
        "type_2": "army_e",
        "amount_2": 72
    },
    "14": {
        "type_1": "army_a",
        "amount_1": 427,
        "type_2": "army_e",
        "amount_2": 88
    },
    "15": {
        "type_1": "army_a",
        "amount_1": 509,
        "type_2": "army_e",
        "amount_2": 104
    },
    "16": {
        "type_1": "army_a",
        "amount_1": 589,
        "type_2": "army_e",
        "amount_2": 19
    },
    "17": {
        "type_1": "army_a",
        "amount_1": 666,
        "type_2": "army_e",
        "amount_2": 137
    },
    "18": {
        "type_1": "army_a",
        "amount_1": 745,
        "type_2": "army_e",
        "amount_2": 153
    },
    "19": {
        "type_1": "army_a",
        "amount_1": 824,
        "type_2": "army_e",
        "amount_2": 168
    },
    "20": {
        "type_1": "army_a",
        "amount_1": 9003,
        "type_2": "army_e",
        "amount_2": 185
    },
    "21": {
        "type_1": "army_b",
        "amount_1": 787,
        "type_2": "army_e",
        "amount_2": 1093
    },
    "22": {
        "type_1": "army_b",
        "amount_1": 1381,
        "type_2": "army_e",
        "amount_2": 1920
    },
    "23": {
        "type_1": "army_b",
        "amount_1": 1976,
        "type_2": "army_e",
        "amount_2": 2747
    },
    "24": {
        "type_1": "army_b",
        "amount_1": 2570,
        "type_2": "army_e",
        "amount_2": 3573
    },
    "25": {
        "type_1": "army_b",
        "amount_1": 3163,
        "type_2": "army_e",
        "amount_2": 4400
    },
    "26": {
        "type_1": "army_b",
        "amount_1": 3759,
        "type_2": "army_e",
        "amount_2": 5227
    },
    "27": {
        "type_1": "army_b",
        "amount_1": 4352,
        "type_2": "army_e",
        "amount_2": 6053
    },
    "28": {
        "type_1": "army_b",
        "amount_1": 4948,
        "type_2": "army_e",
        "amount_2": 6880
    },
    "29": {
        "type_1": "army_b",
        "amount_1": 5541,
        "type_2": "army_e",
        "amount_2": 7707
    },
    "30": {
        "type_1": "army_b",
        "amount_1": 5541,
        "type_2": "army_e",
        "amount_2": 7707
    },
    "31": {
        "type_1": "army_b",
        "amount_1": 6719,
        "type_2": "army_f",
        "amount_2": 1938
    },
    "32": {
        "type_1": "army_b",
        "amount_1": 5153,
        "type_2": "army_f",
        "amount_2": 1477
    },
    "33": {
        "type_1": "army_b",
        "amount_1": 5583,
        "type_2": "army_f",
        "amount_2": 1602
    },
    "34": {
        "type_1": "army_b",
        "amount_1": 6013,
        "type_2": "army_f",
        "amount_2": 1725
    },
    "35": {
        "type_1": "army_b",
        "amount_1": 6442,
        "type_2": "army_f",
        "amount_2": 1847
    },
    "36": {
        "type_1": "army_b",
        "amount_1": 6872,
        "type_2": "army_f",
        "amount_2": 1972
    },
    "37": {
        "type_1": "army_b",
        "amount_1": 7301,
        "type_2": "army_f",
        "amount_2": 2217
    },
    "38": {
        "type_1": "army_b",
        "amount_1": 7731,
        "type_2": "army_f",
        "amount_2": 2217
    },
    "39": {
        "type_1": "army_b",
        "amount_1": 8160,
        "type_2": "army_f",
        "amount_2": 2342
    },
    "40": {
        "type_1": "army_b",
        "amount_1": 8588,
        "type_2": "army_f",
        "amount_2": 2465
    },
    "41": {
        "type_1": "army_a",
        "amount_1": 8295,
        "type_2": "army_f",
        "amount_2": 4192
    },
    "42": {
        "type_1": "army_c",
        "amount_1": 8295,
        "type_2": "army_f",
        "amount_2": 4192
    },
    "43": {
        "type_1": "army_c",
        "amount_1": 11712,
        "type_2": "army_f",
        "amount_2": 5919
    },
    "44": {
        "type_1": "army_c",
        "amount_1": 18544,
        "type_2": "army_f",
        "amount_2": 9371
    },
    "45": {
        "type_1": "army_c",
        "amount_1": 21959,
        "type_2": "army_f",
        "amount_2": 11098
    },
    "46": {
        "type_1": "army_c",
        "amount_1": 25376,
        "type_2": "army_f",
        "amount_2": 12824
    },
    "47": {
        "type_1": "army_c",
        "amount_1": 28762,
        "type_2": "army_f",
        "amount_2": 14551
    },
    "48": {
        "type_1": "army_c",
        "amount_1": 32208,
        "type_2": "army_f",
        "amount_2": 16276
    },
    "49": {
        "type_1": "army_c",
        "amount_1": 35625,
        "type_2": "army_f",
        "amount_2": 18003
    },
    "50": {
        "type_1": "army_c",
        "amount_1": 35625,
        "type_2": "army_f",
        "amount_2": 18003
    }
};
var ARMY_ASIAN_SQUAD = {};

ARMY_ASIAN_SQUAD[WUT_FRONT_SQUAD] = { // الفرقة الامامية
    army_a: 0,
    army_b: 0,
    army_c: 16002,
    army_d: 0,
    army_e: 0,
    army_f: 4002
};
ARMY_ASIAN_SQUAD[WUT_FRONT_BAND] = { // السرية الامامية
    army_a: 0,
    army_b: 0,
    army_c: 24006,
    army_d: 0,
    army_e: 0,
    army_f: 6006
};
ARMY_ASIAN_SQUAD[WUT_FRONT_SQUADRON] = { // الجماعة الامامية
    army_a: 0,
    army_b: 0,
    army_c: 32004,
    army_d: 0,
    army_e: 0,
    army_f: 8004
};
ARMY_ASIAN_SQUAD[WUT_FRONT_DIVISION] = { // الكتيبة الامامية
    army_a: 0,
    army_b: 0,
    army_c: 40002,
    army_d: 0,
    army_e: 0,
    army_f: 10002
};
ARMY_ASIAN_SQUAD[WUT_ARMY_LIGHT_SQUAD] = { //  فرقة التسليح الخفيف
    army_a: 0,
    army_b: 0,
    army_c: 56010,
    army_d: 0,
    army_e: 0,
    army_f: 14010
};
ARMY_ASIAN_SQUAD[WUT_ARMY_LIGHT_BAND] = { //  سرية التسليح الخفيف
    army_a: 0,
    army_b: 0,
    army_c: 64089,
    army_d: 0,
    army_e: 0,
    army_f: 16029
};
ARMY_ASIAN_SQUAD[WUT_ARMY_LIGHT_SQUADRON] = { //  جماعة التسليح الخفيف
    army_a: 0,
    army_b: 0,
    army_c: 72006,
    army_d: 0,
    army_e: 0,
    army_f: 18006
};
ARMY_ASIAN_SQUAD[WUT_ARMY_LIGHT_DIVISION] = { //  كتيبة التسليح الخفيف
    army_a: 0,
    army_b: 0,
    army_c: 80007,
    army_d: 0,
    army_e: 0,
    army_f: 20010
};
ARMY_ASIAN_SQUAD[WUT_ARMY_HEAVY_SQUAD] = { //  فرقة التسليح الثقيل
    army_a: 0,
    army_b: 0,
    army_c: 95772,
    army_d: 0,
    army_e: 0,
    army_f: 23952
};
ARMY_ASIAN_SQUAD[WUT_ARMY_HEAVY_BAND] = { //  سرية التسليح الثقيل
    army_a: 0,
    army_b: 0,
    army_c: 104466,
    army_d: 0,
    army_e: 0,
    army_f: 26124
};
ARMY_ASIAN_SQUAD[WUT_ARMY_HEAVY_SQUADRON] = { //  جماعة التسليح الثقيل
    army_a: 0,
    army_b: 0,
    army_c: 112335,
    army_d: 0,
    army_e: 0,
    army_f: 28095
};
ARMY_ASIAN_SQUAD[WUT_ARMY_HEAVY_DIVISION] = { //  كتيبة التسليح الثقيل
    army_a: 0,
    army_b: 0,
    army_c: 120009,
    army_d: 0,
    army_e: 0,
    army_f: 30012
};
ARMY_ASIAN_SQUAD[WUT_GUARD_SQUAD] = { //  فرقة الحراسة 
    army_a: 0,
    army_b: 0,
    army_c: 132996,
    army_d: 0,
    army_e: 0,
    army_f: 34011
};
ARMY_ASIAN_SQUAD[WUT_GUARD_BAND] = { //  سرية الحراسة 
    army_a: 0,
    army_b: 0,
    army_c: 144162,
    army_d: 0,
    army_e: 0,
    army_f: 36051
};
ARMY_ASIAN_SQUAD[WUT_GUARD_SQUADRON] = { //  جماعة الحراسة 
    army_a: 0,
    army_b: 0,
    army_c: 152772,
    army_d: 0,
    army_e: 0,
    army_f: 38208
};
ARMY_ASIAN_SQUAD[WUT_GUARD_DIVISION] = { //  كتيبة الحراسة 
    army_a: 0,
    army_b: 0,
    army_c: 165615,
    army_d: 0,
    army_e: 0,
    army_f: 41424
};
ARMY_ASIAN_SQUAD[WUT_BRAVE_THUNDER] = { // الثاندر الشجاع
    army_a: 0,
    army_b: 0,
    army_c: 248427,
    army_d: 0,
    army_e: 0,
    army_f: 62130
};
var ARMY_GANGSTAR = {};

ARMY_GANGSTAR[WUT_GANG] = { // الفرقة الامامية
    army_a: 486,
    army_b: 0,
    army_c: 0,
    army_d: 392,
    army_e: 0,
    army_f: 0
};
ARMY_GANGSTAR[WUT_MUGGER] = { // السرية الامامية
    army_a: 322,
    army_b: 0,
    army_c: 0,
    army_d: 206,
    army_e: 0,
    army_f: 0
};
ARMY_GANGSTAR[WUT_THIEF] = { // الجماعة الامامية
    army_a: 243,
    army_b: 0,
    army_c: 0,
    army_d: 153,
    army_e: 0,
    army_f: 0
};

var ARMY_CARTHIAN = {};

ARMY_CARTHIAN[WUT_CARTHAGE_GANG] = { // الفرقة الامامية
    "1": {
        army_a: 10400,
        army_b: 0,
        army_c: 0,
        army_d: 5200,
        army_e: 0,
        army_f: 0
    },
    "2": {
        army_a: 10400,
        army_b: 0,
        army_c: 0,
        army_d: 5200,
        army_e: 0,
        army_f: 0
    },
    "3": {
        army_a: 10400,
        army_b: 0,
        army_c: 0,
        army_d: 5200,
        army_e: 0,
        army_f: 0
    },
    "4": {
        army_a: 10400,
        army_b: 0,
        army_c: 0,
        army_d: 5200,
        army_e: 0,
        army_f: 0
    },
    "5": {
        army_a: 31200,
        army_b: 7800,
        army_c: 0,
        army_d: 31200,
        army_e: 0,
        army_f: 0
    },
    "6": {
        army_a: 11700,
        army_b: 0,
        army_c: 0,
        army_d: 9100,
        army_e: 0,
        army_f: 0
    },
    "7": {
        army_a: 11700,
        army_b: 0,
        army_c: 0,
        army_d: 9100,
        army_e: 0,
        army_f: 0
    },
    "8": {
        army_a: 11700,
        army_b: 0,
        army_c: 0,
        army_d: 9100,
        army_e: 0,
        army_f: 0
    },
    "9": {
        army_a: 11700,
        army_b: 0,
        army_c: 0,
        army_d: 9100,
        army_e: 0,
        army_f: 0
    },
    "10": {
        army_a: 46800,
        army_b: 7800,
        army_c: 0,
        army_d: 31200,
        army_e: 5850,
        army_f: 0
    }

};
ARMY_CARTHIAN[WUT_CARTHAGE_TEAMS] = { // السرية الامامية
    "1": {
        army_a: 15600,
        army_b: 2600,
        army_c: 0,
        army_d: 10400,
        army_e: 1950,
        army_f: 0
    },
    "2": {
        army_a: 15600,
        army_b: 2600,
        army_c: 0,
        army_d: 10400,
        army_e: 1950,
        army_f: 0
    },
    "3": {
        army_a: 15600,
        army_b: 2600,
        army_c: 0,
        army_d: 10400,
        army_e: 1950,
        army_f: 0
    },
    "4": {
        army_a: 15600,
        army_b: 2600,
        army_c: 0,
        army_d: 10400,
        army_e: 1950,
        army_f: 0
    },
    "5": {
        army_a: 78000,
        army_b: 23400,
        army_c: 0,
        army_d: 46800,
        army_e: 11700,
        army_f: 0
    },
    "6": {
        army_a: 20800,
        army_b: 5200,
        army_c: 0,
        army_d: 13000,
        army_e: 1950,
        army_f: 0
    },
    "7": {
        army_a: 20800,
        army_b: 5200,
        army_c: 0,
        army_d: 13000,
        army_e: 1950,
        army_f: 0
    },
    "8": {
        army_a: 20800,
        army_b: 5200,
        army_c: 0,
        army_d: 13000,
        army_e: 1950,
        army_f: 0
    },
    "9": {
        army_a: 20800,
        army_b: 5200,
        army_c: 0,
        army_d: 13000,
        army_e: 1950,
        army_f: 0
    },
    "10": {
        army_a: 0,
        army_b: 65000,
        army_c: 13000,
        army_d: 0,
        army_e: 32500,
        army_f: 6500
    }
};
ARMY_CARTHIAN[WUT_CARTHAGE_REBELS] = { // الجماعة الامامية
    "1": {
        army_a: 0,
        army_b: 22554,
        army_c: 86136,
        army_d: 0,
        army_e: 26922,
        army_f: 0
    },
    "2": {
        army_a: 0,
        army_b: 22554,
        army_c: 86136,
        army_d: 0,
        army_e: 26922,
        army_f: 0
    },
    "3": {
        army_a: 0,
        army_b: 22554,
        army_c: 86136,
        army_d: 0,
        army_e: 26922,
        army_f: 0
    },
    "4": {
        army_a: 0,
        army_b: 22554,
        army_c: 86136,
        army_d: 0,
        army_e: 26922,
        army_f: 0
    },
    "5": {
        army_a: 0,
        army_b: 67662,
        army_c: 258408,
        army_d: 0,
        army_e: 80766,
        army_f: 0
    },
    "6": {
        army_a: 0,
        army_b: 0,
        army_c: 108690,
        army_d: 0,
        army_e: 0,
        army_f: 26922
    },
    "7": {
        army_a: 0,
        army_b: 0,
        army_c: 108690,
        army_d: 0,
        army_e: 0,
        army_f: 26922
    },
    "8": {
        army_a: 0,
        army_b: 0,
        army_c: 108690,
        army_d: 0,
        army_e: 0,
        army_f: 26922
    },
    "9": {
        army_a: 0,
        army_b: 0,
        army_c: 108690,
        army_d: 0,
        army_e: 0,
        army_f: 26922
    },
    "10": {
        army_a: 0,
        army_b: 0,
        army_c: 435000,
        army_d: 0,
        army_e: 0,
        army_f: 110000
    }
};
ARMY_CARTHIAN[WUT_CARTHAGE_FORCES] = { // الفرقة الامامية
    "1": {
        army_a: 0,
        army_b: 0,
        army_c: 108690,
        army_d: 0,
        army_e: 0,
        army_f: 26922
    },
    "2": {
        army_a: 0,
        army_b: 0,
        army_c: 108690,
        army_d: 0,
        army_e: 0,
        army_f: 26922
    },
    "3": {
        army_a: 0,
        army_b: 0,
        army_c: 108690,
        army_d: 0,
        army_e: 0,
        army_f: 26922
    },
    "4": {
        army_a: 0,
        army_b: 0,
        army_c: 108690,
        army_d: 0,
        army_e: 0,
        army_f: 26922
    },
    "5": {
        army_a: 0,
        army_b: 0,
        army_c: 435000,
        army_d: 0,
        army_e: 0,
        army_f: 110000
    },
    "6": {
        army_a: 0,
        army_b: 0,
        army_c: 188690,
        army_d: 0,
        army_e: 0,
        army_f: 46922
    },
    "7": {
        army_a: 0,
        army_b: 0,
        army_c: 188690,
        army_d: 0,
        army_e: 0,
        army_f: 46922
    },
    "8": {
        army_a: 0,
        army_b: 0,
        army_c: 188690,
        army_d: 0,
        army_e: 0,
        army_f: 46922
    },
    "9": {
        army_a: 0,
        army_b: 0,
        army_c: 188690,
        army_d: 0,
        army_e: 0,
        army_f: 46922
    },
    "10": {
        army_a: 0,
        army_b: 0,
        army_c: 635000,
        army_d: 0,
        army_e: 0,
        army_f: 210000
    }
};
ARMY_CARTHIAN[WUT_CARTHAGE_CAPITAL] = { // السرية الامامية
    "1": {
        army_a: 0,
        army_b: 0,
        army_c: 326070,
        army_d: 0,
        army_e: 0,
        army_f: 80766
    },
    "2": {
        army_a: 0,
        army_b: 0,
        army_c: 326070,
        army_d: 0,
        army_e: 0,
        army_f: 80766
    },
    "3": {
        army_a: 0,
        army_b: 0,
        army_c: 326070,
        army_d: 0,
        army_e: 0,
        army_f: 80766
    },
    "4": {
        army_a: 0,
        army_b: 0,
        army_c: 326070,
        army_d: 0,
        army_e: 0,
        army_f: 80766
    },
    "5": {
        army_a: 0,
        army_b: 0,
        army_c: 793482,
        army_d: 0,
        army_e: 0,
        army_f: 322140
    },
    "6": {
        army_a: 0,
        army_b: 0,
        army_c: 396741,
        army_d: 0,
        army_e: 0,
        army_f: 161070
    },
    "7": {
        army_a: 0,
        army_b: 0,
        army_c: 396741,
        army_d: 0,
        army_e: 0,
        army_f: 161070
    },
    "8": {
        army_a: 0,
        army_b: 0,
        army_c: 396741,
        army_d: 0,
        army_e: 0,
        army_f: 161070
    },
    "9": {
        army_a: 0,
        army_b: 0,
        army_c: 396741,
        army_d: 0,
        army_e: 0,
        army_f: 161070
    },
    "10": {
        army_a: 0,
        army_b: 0,
        army_c: 1586979,
        army_d: 0,
        army_e: 0,
        army_f: 644280
    }
};


var CURRENT_CURSOR_COORDS;
var GENERAL_TIMER;

var unitLvlPrize = [
    "هنا يمكنك  بناء مدينة لك ان كنت تمتلك ",
    "",
    "هنا يمكن الهجوم والحصول على صبغً",
    "هنا يمكن الهجوم والحصول على بهارات",
    "هنا يمكن الهجوم والحصول على نبيذ",
    "هنا يمكن الهجوم والحصول على  صوف",
    "هنا يمكن الهجوم والحصول على حرير",
    "هنا يمكن الهجوم والحصول على فرو",
    "هنا يمكن الهجوم والحصول على بخور",
    "هنا يمكن الهجوم والحصول على عاج",
    "هنا يمكن الهجوم والحصول على جواهر"
];

var allUniteType = {
    lake: {
        ar_title: "بحيرة",
        prod: "غذاء"
    },
    mountain: {
        ar_title: " جبال",
        prod: "حديد"
    },
    desert: {
        ar_title: "صحراء",
        prod: "صخور"
    },
    wood: {
        ar_title: "غابات",
        prod: "غذاء"
    },
    city: {
        ar_title: "مدينة",
        prod: ""
    },
    empty: {
        ar_title: "مكان خالى",
        prod: ""
    }


};





var TimeRest = {
    restEvery4: function() {
        var date = new Date();
        var currentHour = date.getUTCHours();
        var currentDay = date.getUTCDate();

        var restDate = new Date();
        restDate.setUTCMinutes(0);
        restDate.setUTCSeconds(2);

        if (currentHour >= 20) {
            restDate.setUTCDate(Number(currentDay) + 1);
            restDate.setUTCHours(0);

        } else if (currentHour >= 16) {
            restDate.setUTCDate(currentDay);
            restDate.setUTCHours(20);
        } else if (currentHour >= 12) {

            restDate.setUTCDate(currentDay);
            restDate.setUTCHours(16);

        } else if (currentHour >= 8) {

            restDate.setUTCDate(currentDay);
            restDate.setUTCHours(12);

        } else if (currentHour >= 4) {

            restDate.setUTCDate(currentDay);
            restDate.setUTCHours(8);

        } else if (currentHour >= 0) {

            restDate.setUTCDate(currentDay);
            restDate.setUTCHours(4);

        }
        return restDate;
    },

    restEvery6: function() {
        var date = new Date();
        var currentHour = date.getUTCHours();
        var currentDay = date.getUTCDate();

        var restDate = new Date();
        restDate.setUTCMinutes(0);
        restDate.setUTCSeconds(2);

        if (currentHour >= 20) {

            restDate.setUTCDate(Number(currentDay) + 1);
            restDate.setUTCHours(0);

        } else if (currentHour >= 14) {

            restDate.setUTCDate(currentDay);
            restDate.setUTCHours(20);

        } else if (currentHour >= 8) {

            restDate.setUTCDate(currentDay);
            restDate.setUTCHours(14);

        } else if (currentHour >= 2) {

            restDate.setUTCDate(currentDay);
            restDate.setUTCHours(8);

        }
        return restDate;
    },

    restEvery12: function() {

        var date = new Date();
        var currentHour = date.getUTCHours();
        var currentDay = date.getUTCDate();
        var restDate = new Date();
        restDate.setUTCMinutes(0);
        restDate.setUTCSeconds(0);

        if (currentHour >= 20) {

            restDate.setUTCDate(Number(currentDay) + 1);
            restDate.setUTCHours(8);

        } else {

            restDate.setUTCDate(currentDay);
            restDate.setUTCHours(20);

        }
        return restDate;
    }
};




function getUnitObj(type) {

    if (WorldUnit.isEmpty(type)) {
        return allUniteType.empty;
    } else if (WorldUnit.isRiver(type)) {
        return allUniteType.lake;
    } else if (WorldUnit.isMountain(type)) {
        return allUniteType.mountain;
    } else if (WorldUnit.isDesert(type)) {
        return allUniteType.desert;
    } else if (WorldUnit.isWood(type)) {
        return allUniteType.wood;
    }

}



var WorldUtil = {

    tooltipHeader: function(xCoord, yCoord) {
        var Unit = WorldUnit.getWorldUnit(xCoord, yCoord);
        if (game.World.UnitTypeData[Unit.ut].lvlChange)
            return `${game.World.UnitTypeData[Unit.ut].Title} مستوى ${game.World.UnitTypeData[Unit.ut].maxLvl > 0 ? (game.World.UnitTypeData[Unit.ut].maxLvl <= Unit.l ? "---" : Unit.l) : Unit.l}`
        else
            return `${game.World.UnitTypeData[Unit.ut].Title}`;

    },
    getDesc: function(type, x_coord, y_coord) {

        if (WorldUnit.isBarrary(type)) {

            return unitLvlPrize[WorldUnit.getWorldUnit(x_coord, y_coord).l] === "" ? "" : unitLvlPrize[WorldUnit.getWorldUnit(x_coord, y_coord).l];

        } else if (WorldUnit.isCity(type)) { // جبال صحراء و غابات

            WorldUtil.descForCity(x_coord, y_coord).done(function(data) {

                var tooltip = ` 
                                <div class="map-tooltip city-unit-tooltip">
                                    <div class="tt-header">
                                        <div class="coords">
                                            [ ${getArabicNumbers(y_coord)} ,  ${getArabicNumbers(x_coord)}]    <span class="distance">${getDistance(x_coord, y_coord)} ميل</span>
                                        </div>

                                    </div>
                                    <div class="tt-desc">
                                        <div class="tt-title friend">
                                            ${data.name}
                                        </div>
                                        <table>
                                            <tr>
                                                <td>الملك</td>
                                                <td class="friend">${data.p_name}</td>
                                            </tr>
                                            <tr>
                                                <td>الاتحاد</td>
                                                <td class="friend">${data.guild}</td>
                                            </tr>
                                            <tr>
                                                <td>البرستيج</td>
                                                <td>${getArabicNumbers(data.prestige)}</td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>`;

                /*if (Crafty("UnitToolTip").get().length === 0) {

                    Crafty.e("HTML , UnitToolTip").append(tooltip).attr({x: x_coord * 64 - y_coord * 64 + 100, y: x_coord * 32 + y_coord * 32 + 100, z: 99999999999});

                } else {

                    Crafty("UnitToolTip").get(0).replace(tooltip).attr({x: x_coord * 64 - y_coord * 64 + 100, y: x_coord * 32 + y_coord * 32 + 100, z: 999999999999});

                }*/


            });



        } else if (WorldUnit.isMonawrat(type)) { // مناورات

            return ` يمكنك الحصول على هدايا قيمة م مجلس الشيوخ مثل تسريع التديب ,خبز وايضا قلادات حمراء`;

        } else if (WorldUnit.isCamp(type)) { // معسكرات

            return `من هنا يتم الحصول على الشعارت لتبديلها مع مواد من صندوق المواد وايضا الحصول على معدات`;

        } else if (WorldUnit.isEmpty(type)) {

            return " يمكنك   بناء مدينة هنا";

        } else if (WorldUnit.isAsianSquads(type)) {
            return " مواد بناء وترقية , رفاهيات, وهدايا قيمة يمكنك الحصول عليها من هذة المجموعات  المتمردة فى اسيا";
        } else if (WorldUnit.isGangStar(type)) {
            return "حزم جيوش , رفاهيات, وهدايا قيمة يمكنك الحصول عليها من هذة المجموعات المتمردة";
        } else if (WorldUnit.isCarthagianArmies(type)) {
            return "حزم جيوش , رفاهيات, وهدايا قيمة يمكنك الحصول عليها من هذة المجموعات المتمردة";
        } else if (WorldUnit.isArmyCapital(type)) {
            return "حزم جيوش , موارد , خام,...ألخ  يمكن الحصول عليها من عاصمة الجيوش وذالك بسبب قوتها الجبارة";
        } else if (WorldUnit.isArena(type)) {
            return "لتحكم العالم عليك اثبات جدارتك اولا , تحدى الملوك و قم بالفوز...";
        } else if (WorldUnit.isQueenCity(type)) {
            return "تحدى الملكات بين الاحلاف لاثبات  الاجدر بينهم";
        } else if (WorldUnit.isRepelCastle(type)) {
            return "تحدى القلاع بين الاحلاف لاثبات  الاجدر بينهم";
        } else if (WorldUnit.isStatueWalf(type)) {
            return "نافس الذئاب فى وكرهم وسيكون من نصيبك جوائز قيمة";
        } else if (WorldUnit.isStatueWar(type)) {
            return "تمثال الحرب رمز للصمود فى العصور القديمة, اذا تمكنت من هدم الاسطورة سيكون من نصيبك جوائز قيمة";
        }


    },
    descForCity: function(x_coord, y_coord) {

        return $.ajax({
            url: "api/city.php",
            data: {
                get_data_by_coords: true,
                x_coord: x_coord,
                y_coord: y_coord,
                id_player: ID_PLAYER,
                token: TOKEN
            },
            type: 'GET',
            dataType: 'JSON'

        });

    },

    showMapTooltip: function(xCoord, yCoord) {
        return;
        var unit = WorldUnit.getWorldUnit(game.World.Map.realCoord(xCoord), game.World.Map.realCoord(yCoord));
        /* var desc = WorldUtil.getDesc(unit.ut, x_coord, y_coord);*/
        if (unit.ut == WUT_BUSY_UNIT)
            return;
        else if (WorldUnit.isEmpty(unit.ut))
            game.World.WorldMapIcon.showWorldUnitIcons(xCoord, yCoord);
        else
            game.World.WorldMapIcon.showWorldUnitIcons(xCoord, yCoord);

    }



};


function uniteMapClick(x_coord, y_coord) {
    var unit = WorldUnit.getWorldUnit(x_coord, y_coord);
    var type = unit.ut;

    if (WorldUnit.isEmpty(type))
        game.World.Map.OnEmptyUnitClick(unit);
    else if (WorldUnit.isBarrary(type))
        game.World.Map.onBarrayClicked(unit);
    else if (WorldUnit['isSeaCity'](type)) {
        game.World.Map.OnSeaCityClicked(unit);
    } else if (WorldUnit.isCity(type))
        game.World.Map.OnCityClicked(unit);
    else
        game.World.Map.OnOtherUnitClicked(unit);


    if (WorldUnit['isDominatable'](type))
        campDB.getDominaterName(x_coord, y_coord);
}




function canBuildNewCity(x_coord, y_coord) {
    var city_counts = Object.keys(game.DPlayer.City).length;
    if (!WorldUnit.isEmpty(WorldUnit.getWorldUnit(x_coord, y_coord).ut)) {
        return false;
    } else if (Number(game.CurrentCity.City.food) < Math.pow(10, city_counts + 3)) {
        return false;
    } else if (Number(game.CurrentCity.City.wood) < Math.pow(10, city_counts + 3)) {
        return false;
    } else if (Number(game.CurrentCity.City.stone) < Math.pow(10, city_counts + 3)) {
        return false;
    } else if (Number(game.CurrentCity.City.metal) < Math.pow(10, city_counts + 3)) {
        return false;
    } else if (Number(game.CurrentCity.City.coin) < Math.pow(10, city_counts + 3)) {
        return false;
    } else if (Number(game.DPlayer.Player.porm) < city_counts * 2) {
        return false;
    }

    return true;

}


function getDistance(x, y) {
    var difX = Math.abs(game.CurrentCity.City.x - x);
    var difY = Math.abs(game.CurrentCity.City.y - y);
    console.log(difX, difY)
    if (difX > 249)
        difX -= 500;
    if (difY > 249)
        difY -= 500;
    console.log(difX, difY)
    return (Math.floor(Math.sqrt(Math.pow((difX), 2) + Math.pow((difY), 2))) * 6000);
}


var reviewBox = {

    getSmallBox: function(x_coord, y_coord, type, title, desc, lvl, state, snap_shoot) {


        var box = `<div id="unit_review" class="bg-general" x_coord = "${x_coord}" y_coord="${y_coord}" type="${type}" lvl="${lvl}">
                        <div class="header">
                            <div class="title banner-red">
                                 ${title}
                            </div>
                            <div class="close_RB">
                                <img src="images/btns/close_b.png"/>.
                            </div>
                        </div>
                        <div class="content">
                            <div class="left_cont">
                                <div class="unite_image">
                                    <div style="background-image:url(${snap_shoot})"></div>
                                </div>
                                <button class="battel-field" ${Number(state) === 0 ? " disabled" : ""} data-title="${title}">
                                    ارض المعركة
                                </button>
                            </div>
                             <div class="right_cont">
                                <div class="dist">
                                   <div class="coords" style="margin-right: 37px">
                                       <a href="#">[${y_coord} , ${x_coord}]</a>
                                   </div>
                                   <div class="mile">
                                        ${getDistance(x_coord, y_coord)} ميل
                                   </div>
                                   <div class="copy-coord-icon">
                                        <button class="copy-coord" data-x-coord="${x_coord}" data-y-coord="${y_coord}"></button>
                                    </div>
                                </div>
                                <div class="desc">
                                    <div class="province">${Translate.Text.Province[UserLag.language]}: ${game.World.Province.getTitle(x_coord, y_coord)}</div>
                                   ${desc}
                                </div>
                                <div class="under-desc">
                                </div>
                                <div class="prize-list">
                                    <ul></ul>
                                </div>
                            </div>
                        </div>
                        <div class="footer">
                            ${this.footer(x_coord, y_coord)}
                        </div>
                    </div>`;
        return box;
    },

    descForBarray: function(type, lvl) {
        return ` <p>
                    زيادة انتاج ${getUnitObj(type).prod} بمقدار ${getArabicNumbers(3 * lvl)}% فى مديتك
               </p>`;
    },
    descForCity: function(JsonData) {



        var desc = `<div class="name bg-btn-blu">
                        <h1>
                            ${JsonData.PlayerName}
                        </h1>
                        <div class="msg_icon">
                            ${Number(JsonData.id_player) === Number(game.DPlayer.Player.id_player) ? "" :
                `<img src="images/tech/message_icon.png" 
                                        id="mail-player-from-world" data-id-player="${JsonData.id_player}"
                                        data-player-name="${JsonData.PlayerName}"/>`}
                        </div>
                    </div>
                    <table class="player-table-data">
                        <tr>
                            <td>${getArabicNumbers(JsonData.prestige)}</td>
                            <td>البرستيج</td>
                        </tr>
                        <tr>
                            <td>${JsonData.GuildName}</td>
                            <td>الاتحاد</td>
                        </tr>
                        <tr>
                            <td>طبيعي</td>
                            <td>الحالة </td>
                        </tr>
                    </table>`;
        return desc;
    },
    footer: function(xCoord, yCoord) {

        var recource_supply = "";
        const Unit = WorldUnit.getWorldUnit(xCoord, yCoord);
        for (var ii in game.DPlayer.City) {

            var CCity = game.DPlayer.City[ii];

            if (Number(CCity.City.x) != Number(xCoord))
                continue;
            if (Number(CCity.City.y) != Number(yCoord))
                continue;
            return ` <ul id="footer_bar">
                        <li data-type="${game.BaseData.BattelTasks.BATTEL_TASK_ENTER_CITY}">
                            <img src="images/icons/war-icon/enter-city.png" /> 
                        </li>
                        <li data-type="${game.BaseData.BattelTasks.BATTEL_TASK_HERO_TRANS}">
                            <img src="images/icons/war-icon/supply.png"/> 
                        </li>
                        <li data-type="${game.BaseData.BattelTasks.BATTEL_TASK_SUPPLY}">
                            <img src="images/icons/war-icon/resource-supply.png"/> 
                        </li>
                    </ul>`;

        }

        if (WorldUnit.isCity(Unit.ut)) {

            recource_supply = ` <li data-type="${game.BaseData.BattelTasks.BATTEL_TASK_SUPPLY}">
                                        <img src="images/icons/war-icon/resource-supply.png"/> 
                                    </li>`;

        }

        if (Number(Unit.idGuild) === Number(game.DPlayer.Player.id_guild) && !isNaN(game.DPlayer.Player.id_guild)) {

            return `<ul id="footer_bar">
                        <li data-type="${game.BaseData.BattelTasks.BATTEL_TASK_SUPPORT}">
                            <img src="images/icons/war-icon/supply.png"/> 
                        </li>
                        ${recource_supply}
                    </ul>`;

        }


        return `<ul id="footer_bar">
                    <li data-type="${game.BaseData.BattelTasks.BATTEL_TASK_CONQUER}">
                        <img src="images/icons/war-icon/attack.png" /> 
                    </li>
                    <li data-type="${game.BaseData.BattelTasks.BATTEL_TASK_DOMINATE}">
                        <img src="images/icons/war-icon/dominate.png"/> 
                    </li>   
                    <li data-type="${game.BaseData.BattelTasks.BATTEL_TASK_SPY}">
                        <img src="images/icons/war-icon/spy.png"/> 
                    </li>
                    <li data-type="${game.BaseData.BattelTasks.BATTEL_TASK_SUPPORT}">
                        <img src="images/icons/war-icon/supply.png"/> 
                    </li>
                    ${recource_supply}
                </ul>`;
    },

    battelField: function(x_coord, y_coord, title, unit_type) {

        var dialoge_box = `<div id="dialg_box_two" type="battel_field" style="top: 125px;" x_coord="${x_coord}" y_coord="${y_coord} data-unit-type="${unit_type}">
                                <div class="head_bar">
                                    <img src="images/style/head_bar.png">
                                    <div class="title">ارض المعركة</div>
                                </div>
                                <div class="nav_bar">
                                    <div class="right-nav">
                                        <div class="nav_icon">

                                            <img class="close_BF_dialog_box" src="images/btns/close_b.png">
                                        </div>
                                     </div>
                                        <div class="left-nav">
                                             <ul>
                                                <li head_title="battle">ارض المعركة</li>
                                            </ul>
                                        </div>
                                </div>
                                <div class="box_content for_report">

                                    <div class="left-content " id="reports_list_BF">
                                        <div class="th ellipsis">
                                            ${Translate.Title.TH.Subject[UserLag.language]}
                                        </div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                    </div>

                                    <div class="right-content ">
                                        <div class="rest-time">
                                            <h6> الوقت المتبقى: </h6>
                                            <span id="AJAX-REMAIN-TIME">
                                            </span>
                                        </div>
                                        <div class="report_state">
                                            <div class="defense-side">
                                                <div class="banner-red">
                                                    ${title}
                                                </div>
                                                <div class="image">

                                                    <img src="images/style/defense.png" class="big-img">
                                                    <div class="joined-num" id="AJAX-DEF-NUM"></div>
                                                </div>
                                                <div class="full-btn" id="JOIN_DEFENCE_SIDE">

                                                </div>
                                            </div>
                                            <div class="attack-side">
                                                <div class="banner-red" id="AFTER_AJAX_ATTACKER">

                                                </div>
                                                <div class="image">
                                                    <img src="images/style/attack.png" class="big-img">
                                                    <div class="joined-num" id="AJAX-ATK-NUM"></div>
                                                </div>
                                                <div class="full-btn" id="JOIN_ATTACK_SIDE">

                                                </div>
                                            </div>
                                        </div>
                                        <div class="down_report">
                                            <div class="reload">
                                                <div class="full-btn ">
                                                    الاستخبارات
                                                </div>
                                                <div class="full-btn deactive">
                                                    تحديث المعركة 
                                                </div>
                                            </div>
                                            <div class="time_start">
                                                وقت البداء: 
                                                <span>٤٣&nbsp;ث&nbsp;٣٨&nbsp;د&nbsp;٥&nbsp;س&nbsp; </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>                
                            </div>`;


        $("body").append(dialoge_box);


    },

    refreshBattaelField: function() {

        var x_coord = parseInt($("#dialg_box_two").attr("x_coord"));
        var y_coord = parseInt($("#dialg_box_two").attr("y_coord"));
        var id_battel = $("#reports_list_BF .selected").attr("id_battel");

        if (!isNaN(x_coord) || !isNaN(y_coord)) {

            $.ajax({

                url: "api/battel.php",
                data: {
                    GET_BATTEL_FIELD_DATA: true,
                    x_coord: x_coord,
                    y_coord: y_coord,
                    id_player: ID_PLAYER,
                    token: TOKEN
                },
                type: 'GET',
                cache: false,
                beforeSend: function(xhr) {

                },
                success: function(data, textStatus, jqXHR) {

                    /*[{"id_battel":"1","x_city":"151","y_city":"32","city_name":"MuStapha","player_name":"mustpaha_1"}]*/
                    var json_data = JSON.parse(data);

                    var all_reportHeader = "";
                    for (var iii = 0; iii < 14; iii++) {

                        if (json_data[iii]) {

                            all_reportHeader += `<div class="tr has_battel_BF ${json_data[iii].id_battel === id_battel || (id_battel === undefined && iii === 0) ? "selected" : ""}"  id_battel="${json_data[iii].id_battel}"  >
                                                    قام الملك ${json_data[iii].player_name} بانشاء  معركة    من المدينة  ${json_data[iii].city_name}
                                                </div>`;

                        } else {

                            all_reportHeader += `<div class="tr" > </div>`;

                        }


                    }

                    $("#reports_list_BF").html(`<div class="th ellipsis">${Translate.Title.TH.Subject[UserLag.language]}</div>` + all_reportHeader);
                    reviewBox.refreshBattelDetail();

                },
                error: function(jqXHR, textStatus, errorThrown) {

                }


            });

        }

    },

    refreshBattelDetail: function() {

        var id_battel = false;

        $("#reports_list .tr , #reports_list_BF .tr").each(function() {

            if ($(this).hasClass("selected")) {

                id_battel = parseInt($(this).attr("id_battel"));

            }

        });

        if (!id_battel) {

            id_battel = parseInt($("#reports_list .tr:first").attr("id_battel")) ||
                parseInt($("#reports_list_BF .tr:first").attr("id_battel")) ||
                false;
        }

        if (!id_battel) {
            return;
        }

        $.ajax({

            url: "api/battel.php",
            data: {
                GET_BATTEL_FIELD_DETAIL: true,
                id_battel: id_battel,
                id_player: ID_PLAYER,
                token: TOKEN
            },
            type: 'GET',
            cache: false,
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                /* {"time_start":"1539888070","time_end":"1549995750","attack_num":1,"defence_num":0}*/
                var json_data = JSON.parse(data);

                $("#AJAX-DEF-NUM").html(getArabicNumbers(json_data.defence_num));
                $("#AJAX-ATK-NUM").html(getArabicNumbers(json_data.attack_num));


            },
            error: function(jqXHR, textStatus, errorThrown) {

            }


        });

    },
    firstClikBattelData: function(id_battel, x_coord, y_coord) {

        if (id_battel === false) {

            $.ajax({

                url: "api/battel.php",
                data: {

                    GET_BATTEL_FIXED_DATA: true,
                    x_coord: x_coord,
                    y_coord: y_coord,
                    id_player: ID_PLAYER,
                    token: TOKEN
                },
                type: 'GET',
                beforeSend: function(xhr) {

                },
                success: function(data, textStatus, jqXHR) {

                    /*{"time_end":"1549995750","time_start":"1539888070","name":"MuStapha"}*/
                    var json_data = JSON.parse(data);

                    $("#AFTER_AJAX_ATTACKER").html(json_data.name);
                    $("#AJAX-REMAIN-TIME").addClass("time_counter");
                    $("#AJAX-REMAIN-TIME").attr("time-end", json_data.time_end);
                    $("#JOIN_ATTACK_SIDE").html("انضمام للهجوم");
                    $("#JOIN_DEFENCE_SIDE").html("انضمام للدفاع");
                    $("#JOIN_ATTACK_SIDE").attr("data-id-battel", json_data.id_battel);
                    $("#JOIN_DEFENCE_SIDE").attr("data-id-battel", json_data.id_battel);

                    $("#JOIN_ATTACK_SIDE").attr("data-x_coord", x_coord);
                    $("#JOIN_ATTACK_SIDE").attr("data-y_coord", y_coord);
                    $("#JOIN_DEFENCE_SIDE").attr("data-x_coord", x_coord);
                    $("#JOIN_DEFENCE_SIDE").attr("data-y_coord", y_coord);

                    $("#JOIN_ATTACK_SIDE").attr("data-title", $.trim($(".attack-side .banner-red").html()));
                    $("#JOIN_DEFENCE_SIDE").attr("data-title", $.trim($(".defense-side .banner-red").html()));



                },
                error: function(jqXHR, textStatus, errorThrown) {

                }

            });

        } else {

            $.ajax({

                url: "api/battel.php",
                data: {

                    GET_BATTEL_FIXED_DATA: true,
                    id_battel: id_battel,
                    id_player: ID_PLAYER,
                    token: TOKEN
                },
                type: 'GET',
                beforeSend: function(xhr) {

                },
                success: function(data, textStatus, jqXHR) {

                    if (!isJson(data)) {
                        alert(data);
                        return;
                    }
                    var json_data = JSON.parse(data);

                    $("#AFTER_AJAX_ATTACKER").html(json_data.name);
                    $("#AJAX-REMAIN-TIME").addClass("time_counter");
                    $("#AJAX-REMAIN-TIME").attr("time-end", json_data.time_end);
                    $("#JOIN_ATTACK_SIDE").html("انضمام للهجوم");
                    $("#JOIN_DEFENCE_SIDE").html("انضمام للدفاع");
                    $("#JOIN_ATTACK_SIDE").attr("data-id-battel", json_data.id_battel);
                    $("#JOIN_DEFENCE_SIDE").attr("data-id-battel", json_data.id_battel);

                },
                error: function(jqXHR, textStatus, errorThrown) {

                }

            });

        }


    }
};



$(document).on("click", ".close_RB img", function() {
    $("#unit_review").remove();
});



$(document)['on']('click', '#smallMap-icon img', function() {
    var CityIcons = '';
    for (var idCity in game['DPlayer']['City']) {
        CityIcons += `<lable type="18" style="background-image: url(images/world/map-icon/myCity.png); width:20px; height:20px; left: ${game.DPlayer.City[idCity].City.x}px; top: ${game.DPlayer.City[idCity].City.y}px"></lable>'`;
    }
    var Map = `'<div id="smallMap">
                        <img src="images/world/smallMap.jpg"/>
                        <div id="smallMap_close">
                            <img src="images/btns/close_b.png"/>
                        </div>
                        <div class="overMap">
                            <div id="CURRENT_CURSOR_COORDS"></div>
                            <lable type="${ WUT_CAMP_ASIANA }" style="background-image: url(images/world/ratterCastle.png); left: 78px; top: 300px"></lable>
                            <lable type="${ WUT_CAMP_BRITONS }" style="background-image: url(images/world/ratterCastle.png); left: 88px; top: 444px"></lable>
                            <lable type="${ WUT_CAMP_CARTHAGE }" style="background-image: url(images/world/ratterCastle.png); left: 106px;top: 19px"></lable>
                            <lable type="${ WUT_CAMP_EGYPT }" style="background-image: url(images/world/ratterCastle.png); left: 136px;top: 160px"></lable>
                            <lable type="${ WUT_CAMP_GAULS }" style="background-image: url(images/world/ratterCastle.png); left: 246px;top: 111px"></lable>
                            <lable type="${ WUT_CAMP_HISPANIA }" style="background-image: url(images/world/ratterCastle.png); left: 266px;top: 245px"></lable>
                            <lable type="${ WUT_CAMP_ITALIA }" style="background-image: url(images/world/ratterCastle.png); left: 316px;top: 450px"></lable>
                            <lable type="${ WUT_CAMP_MACEDON }" style="background-image: url(images/world/ratterCastle.png); left: 392px;top: 213px"></lable>
                            <lable type="${ WUT_CAMP_PARTHIA }" style="background-image: url(images/world/ratterCastle.png); left: 407px;top: 66px"></lable>
                            <lable type="${ WUT_CAMP_REICH }" style="background-image: url(images/world/ratterCastle.png); left: 427px;top: 337px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 20px;top: 30px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 20px;top: 170px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 20px;top: 310px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 20px;top: 470px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 60px;top: 100px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 60px;top: 230px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 60px;top: 390px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 100px;top: 30px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 100px;top: 170px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 100px;top: 310px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 100px;top: 470px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 140px;top: 100px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 140px;top: 230px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 140px;top: 390px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 180px;top: 30px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 180px;top: 170px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 180px;top: 310px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 180px;top: 470px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 220px;top: 100px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 220px;top: 230px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 220px;top: 390px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 260px;top: 30px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 260px;top: 170px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 260px;top: 310px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 260px;top: 470px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 300px;top: 230px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 300px;top: 390px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 340px;top: 30px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 340px;top: 170px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 340px;top: 310px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 340px;top: 470px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 380px;top: 100px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 380px;top: 230px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 380px;top: 390px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 420px;top: 30px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 420px;top: 170px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 420px;top: 310px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 420px;top: 470px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 460px;top: 100px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 460px;top: 230px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 460px;top: 390px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 490px;top: 30px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 490px;top: 170px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 490px;top: 310px"></lable>
                            <lable type="${ WUT_MONAWRAT }" style="background-image: url(images/world/npcCastle.png); left: 490px;top: 470px"></lable>
   
    
    
    
    

    
    
                            <lable type="${ WUT_FRONT_SQUAD }" style="background-image: url(images/world/map-icon/dr.png); left: 464px;top:  93px"></lable>
                            <lable type="${ WUT_FRONT_SQUAD }" style="background-image: url(images/world/map-icon/dr.png); left: 463px;top:  86px"></lable>
                            <lable type="${ WUT_FRONT_BAND }" style="background-image: url(images/world/map-icon/dr.png); left: 447px;top:  72px"></lable>
                            <lable type="${ WUT_FRONT_BAND }" style="background-image: url(images/world/map-icon/dr.png); left: 450px;top:  69px"></lable>
                            <lable type="${ WUT_FRONT_SQUADRON }" style="background-image: url(images/world/map-icon/dr.png); left: 432px;top:  52px"></lable>
                            <lable type="${ WUT_FRONT_SQUADRON }" style="background-image: url(images/world/map-icon/dr.png); left: 434px;top:  56px"></lable>
                            <lable type="${ WUT_FRONT_DIVISION }" style="background-image: url(images/world/map-icon/dr.png); left: 417px;top:  39px"></lable>
                            <lable type="${ WUT_FRONT_DIVISION }" style="background-image: url(images/world/map-icon/dr.png); left: 412px;top:  37px"></lable>
                            <lable type="${ WUT_ARMY_LIGHT_SQUAD }" style="background-image: url(images/world/map-icon/dr.png); left: 470px;top:  76px"></lable>
                            <lable type="${ WUT_ARMY_LIGHT_SQUAD }" style="background-image: url(images/world/map-icon/dr.png); left: 473px;top:  72px"></lable>
                            <lable type="${ WUT_ARMY_LIGHT_BAND }" style="background-image: url(images/world/map-icon/dr.png); left: 458px;top:  62px"></lable>
                            <lable type="${ WUT_ARMY_LIGHT_BAND }" style="background-image: url(images/world/map-icon/dr.png); left: 456px;top:  58px"></lable>
                            <lable type="${ WUT_ARMY_LIGHT_SQUADRON }" style="background-image: url(images/world/map-icon/dr.png); left: 445px;top:  48px"></lable>
                            <lable type="${ WUT_ARMY_LIGHT_SQUADRON }" style="background-image: url(images/world/map-icon/dr.png); left: 442px;top:  47px"></lable>
                            <lable type="${ WUT_ARMY_LIGHT_DIVISION }" style="background-image: url(images/world/map-icon/dr.png); left: 427px;top:  33px"></lable>
                            <lable type="${ WUT_ARMY_LIGHT_DIVISION }" style="background-image: url(images/world/map-icon/dr.png); left: 431px;top:  30px"></lable>
                            <lable type="${ WUT_ARMY_HEAVY_SQUAD }" style="background-image: url(images/world/map-icon/dr.png); left: 475px;top:  57px"></lable>
                            <lable type="${ WUT_ARMY_HEAVY_SQUAD }" style="background-image: url(images/world/map-icon/dr.png); left: 479px;top:  60px"></lable>
                            <lable type="${ WUT_ARMY_HEAVY_BAND }" style="background-image: url(images/world/map-icon/dr.png); left: 467px;top:  47px"></lable>
                            <lable type="${ WUT_ARMY_HEAVY_BAND }" style="background-image: url(images/world/map-icon/dr.png); left: 465px;top:  49px"></lable>
                            <lable type="${ WUT_ARMY_HEAVY_SQUADRON }" style="background-image: url(images/world/map-icon/dr.png); left: 453px;top:  37px"></lable>
                            <lable type="${ WUT_ARMY_HEAVY_SQUADRON }" style="background-image: url(images/world/map-icon/dr.png); left: 457px;top:  36px"></lable>
                            <lable type="${ WUT_ARMY_HEAVY_DIVISION }" style="background-image: url(images/world/map-icon/dr.png); left: 446px;top:  28px"></lable>
                            <lable type="${ WUT_ARMY_HEAVY_DIVISION }" style="background-image: url(images/world/map-icon/dr.png); left: 441px;top:  23px"></lable>
                            <lable type="${ WUT_GUARD_SQUAD }" style="background-image: url(images/world/map-icon/dr.png); left: 480px;top:  42px"></lable>
                            <lable type="${ WUT_GUARD_BAND }" style="background-image: url(images/world/map-icon/dr.png); left: 475px;top:  35px"></lable>
                            <lable type="${ WUT_GUARD_SQUADRON }" style="background-image: url(images/world/map-icon/dr.png); left: 464px;top:  26px"></lable>
                            <lable type="${ WUT_GUARD_DIVISION }" style="background-image: url(images/world/map-icon/dr.png); left: 458px;top:  20px"></lable>
                            <lable type="${ WUT_BRAVE_THUNDER }" style="background-image: url(images/world/map-icon/dr.png); left: 478px;top:  21px"></lable>
 
                            <lable type="49" style="background-image: url(images/world/map-icon/p33.png); left: 44px;top:  465px"></lable>
                            <lable type="49" style="background-image: url(images/world/map-icon/p33.png); left: 353px;top:  233px"></lable>
                            <lable type="49" style="background-image: url(images/world/map-icon/p33.png); left: 284px;top:  141px"></lable>
                            <lable type="49" style="background-image: url(images/world/map-icon/p33.png); left: 281px;top:  299px"></lable>
                            <lable type="49" style="background-image: url(images/world/map-icon/p33.png); left: 264px;top:  458px"></lable>
                            <lable type="49" style="background-image: url(images/world/map-icon/p33.png); left: 367px;top:  87px"></lable>
                            <lable type="49" style="background-image: url(images/world/map-icon/p33.png); left: 122px;top:  154px"></lable>
                            <lable type="49" style="background-image: url(images/world/map-icon/p33.png); left: 74px; top:  33px"></lable>
                            <lable type="49" style="background-image: url(images/world/map-icon/p33.png); left: 74px; top:  326px"></lable>
                            <lable type="49" style="background-image: url(images/world/map-icon/p33.png); left: 472px;top:  379px"></lable>
    
                            <lable type="50" style="background-image: url(images/world/map-icon/p33.png); left: 363px;top: 76px"></lable>
                            <lable type="50" style="background-image: url(images/world/map-icon/p33.png); left: 354px;top: 233px"></lable>
                            <lable type="50" style="background-image: url(images/world/map-icon/p33.png); left: 59px;top:  456px"></lable>
                            <lable type="50" style="background-image: url(images/world/map-icon/p33.png); left: 467px;top: 370px"></lable>
                            <lable type="50" style="background-image: url(images/world/map-icon/p33.png); left: 282px;top: 297px"></lable>
                            <lable type="50" style="background-image: url(images/world/map-icon/p33.png); left: 77px;top:  33px"></lable>
                            <lable type="50" style="background-image: url(images/world/map-icon/p33.png); left: 262px;top: 459px"></lable>
                            <lable type="50" style="background-image: url(images/world/map-icon/p33.png); left: 261px;top: 137px"></lable>
                            <lable type="50" style="background-image: url(images/world/map-icon/p33.png); left: 136px;top: 158px"></lable>
                            <lable type="50" style="background-image: url(images/world/map-icon/p33.png); left: 75px;top:  325px"></lable>
    
                            <lable type="51" style="background-image: url(images/world/map-icon/p33.png); left: 474px;top:  378px"></lable>
                            <lable type="51" style="background-image: url(images/world/map-icon/p33.png); left: 135px;top:  157px"></lable>
                            <lable type="51" style="background-image: url(images/world/map-icon/p33.png); left: 352px;top:  237px"></lable>
                            <lable type="51" style="background-image: url(images/world/map-icon/p33.png); left: 286px;top:  296px"></lable>
                            <lable type="51" style="background-image: url(images/world/map-icon/p33.png); left: 259px;top:  136px"></lable>
                            <lable type="51" style="background-image: url(images/world/map-icon/p33.png); left: 286px;top:  296px"></lable>
                            <lable type="51" style="background-image: url(images/world/map-icon/p33.png); left: 135px;top:  157px"></lable>
                            <lable type="51" style="background-image: url(images/world/map-icon/p33.png); left: 259px;top:  136px"></lable>
                            <lable type="51" style="background-image: url(images/world/map-icon/p33.png); left: 260px;top:  458px"></lable>
                            <lable type="51" style="background-image: url(images/world/map-icon/p33.png); left: 474px;top:  378px"></lable>
    
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 66px; top:  470px"></lable>
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 220px;top:  463px"></lable>
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 187px;top:  493px"></lable>
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 133px;top:  410px"></lable>
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 58px; top:  452px"></lable>
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 136px;top:  450px"></lable>
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 50px; top:  433px"></lable>
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 150px;top:  433px"></lable>
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 44px; top:  472px"></lable>
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 159px;top:  408px"></lable>
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 32px; top:  495px"></lable>
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 28px; top:  489px"></lable>
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 24px; top:  429px"></lable>
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 11px; top:  400px"></lable>
                            <lable type="52" style="background-image: url(images/world/map-icon/p33.png); left: 79px; top:  490px"></lable>
    
    
                            <lable type="53" style="background-image: url(images/world/map-icon/p33.png); left: 1px;   top:  380px"></lable>
                            <lable type="53" style="background-image: url(images/world/map-icon/p33.png); left: 16px;  top:  380px"></lable>
                            <lable type="53" style="background-image: url(images/world/map-icon/p33.png); left: 47px;  top:  486px"></lable>
                            <lable type="53" style="background-image: url(images/world/map-icon/p33.png); left: 57px;  top:  410px"></lable>
                            <lable type="53" style="background-image: url(images/world/map-icon/p33.png); left: 64px;  top:  470px"></lable>
                            <lable type="53" style="background-image: url(images/world/map-icon/p33.png); left: 73px;  top:  483px"></lable>
                            <lable type="53" style="background-image: url(images/world/map-icon/p33.png); left: 81px;  top:  425px"></lable>
                            <lable type="53" style="background-image: url(images/world/map-icon/p33.png); left: 86px;  top:  429px"></lable>
                            <lable type="53" style="background-image: url(images/world/map-icon/p33.png); left: 104px; top:  469px"></lable>
                            <lable type="53" style="background-image: url(images/world/map-icon/p33.png); left: 109px; top:  440px"></lable>
    
                            <lable type="54" style="background-image: url(images/world/map-icon/p33.png); left: 40px;  top:  412px"></lable>
                            <lable type="54" style="background-image: url(images/world/map-icon/p33.png); left: 67px;  top:  395px"></lable>
                            <lable type="54" style="background-image: url(images/world/map-icon/p33.png); left: 80px;  top:  469px"></lable>
                            <lable type="54" style="background-image: url(images/world/map-icon/p33.png); left: 83px;  top:  418px"></lable>
                            <lable type="54" style="background-image: url(images/world/map-icon/p33.png); left: 85px;  top:  428px"></lable>
                            <lable type="54" style="background-image: url(images/world/map-icon/p33.png); left: 85px;  top:  461px"></lable>
                            <lable type="54" style="background-image: url(images/world/map-icon/p33.png); left: 95px;  top:  418px"></lable>
                            <lable type="54" style="background-image: url(images/world/map-icon/p33.png); left: 99px;  top:  392px"></lable>
                            <lable type="54" style="background-image: url(images/world/map-icon/p33.png); left: 120px; top:  450px"></lable>
                            <lable type="54" style="background-image: url(images/world/map-icon/p33.png); left: 132px; top:  448px"></lable>
    
                            <lable type="55" style="background-image: url(images/world/map-icon/p33.png); left: 80px;  top:  460px"></lable>
                            <lable type="55" style="background-image: url(images/world/map-icon/p33.png); left: 88px;  top:  448px"></lable>
                            <lable type="55" style="background-image: url(images/world/map-icon/p33.png); left: 90px;  top:  476px"></lable>
                            <lable type="55" style="background-image: url(images/world/map-icon/p33.png); left: 94px;  top:  463px"></lable>
                            <lable type="55" style="background-image: url(images/world/map-icon/p33.png); left: 104px; top:  483px"></lable>
    
                            <lable type="56" style="background-image: url(images/world/map-icon/p33.png); left: 103px; top:  447px"></lable>
                            
                            <lable type="100" style="background-image: url(images/world/map-icon/army-capital.png); width:15px; height:15px; left: 235px; top:  125px"></lable>
                            <lable type="101" style="background-image: url(images/world/map-icon/army-capital.png); width:15px; height:15px; left: 140px; top:  170px"></lable>
                            <lable type="102" style="background-image: url(images/world/map-icon/army-capital.png); width:15px; height:15px; left: 400px; top:  230px"></lable>
                            <lable type="103" style="background-image: url(images/world/map-icon/army-capital.png); width:15px; height:15px; left: 255px; top:  266px"></lable>
                            <lable type="104" style="background-image: url(images/world/map-icon/army-capital.png); width:15px; height:15px; left: 80px;  top:  280px"></lable>
                            <lable type="105" style="background-image: url(images/world/map-icon/army-capital.png); width:15px; height:15px; left: 400px; top:  340px"></lable>
    
                            <lable type="${ WUT_SEA_CITY_1 }" style="background-image: url(images/world/seaCity_1.png); width:15px; height:15px; left: 36px; top:  77px"></lable>
                            <lable type="${ WUT_SEA_CITY_2 }" style="background-image: url(images/world/seaCity_1.png); width:15px; height:15px; left: 53px; top:  147px"></lable>
                            <lable type="${ WUT_SEA_CITY_3 }" style="background-image: url(images/world/seaCity_1.png); width:15px; height:15px; left: 20px; top:  357px"></lable>
                            <lable type="${ WUT_SEA_CITY_4 }" style="background-image: url(images/world/seaCity_1.png); width:15px; height:15px; left: 146px; top:  396px"></lable>
                            <lable type="${ WUT_SEA_CITY_5 }" style="background-image: url(images/world/seaCity_1.png); width:15px; height:15px; left: 336px;  top:  356px"></lable>
                            <lable type="${ WUT_SEA_CITY_6 }" style="background-image: url(images/world/seaCity_1.png); width:15px; height:15px; left: 493px; top:  287px"></lable>
                            
                            
                            <lable type="125" style="background-image: url(images/world/map-icon/arena.png); width:15px; height:15px; left: 249px; top:  247px"></lable>
    
                            <lable type="130" style="background-image: url(images/world/map-icon/matchNpc.png); left: 300px; top:  100px"></lable>
                            <lable type="131" style="background-image: url(images/world/map-icon/matchNpc.png); left: 300px; top:   90px"></lable>
                            <lable type="132" style="background-image: url(images/world/map-icon/matchNpc.png); left: 300px; top:   80px"></lable>
                            <lable type="134" style="background-image: url(images/world/map-icon/occupy.png); left: 280px; top:  100px"></lable>
                            <lable type="135" style="background-image: url(images/world/map-icon/occupy.png); left: 280px; top:   90px"></lable>
                            <lable type="136" style="background-image: url(images/world/map-icon/occupy.png); left: 280px; top:   80px"></lable>
    
                            <lable type="150" style="background-image: url(images/world/map-icon/npcBlue.png); left: 320px; top:  410px"></lable>
                            <lable type="151" style="background-image: url(images/world/map-icon/npcBlue.png); left: 330px; top:   410px"></lable>
                            <lable type="152" style="background-image: url(images/world/map-icon/npcBlue.png); left: 340px; top:   410px"></lable>
                            <lable type="153" style="background-image: url(images/world/map-icon/ratterCastle1.png); left: 320px; top:  420px"></lable>
                            <lable type="154" style="background-image: url(images/world/map-icon/ratterCastle1.png); left: 330px; top:   420px"></lable>
                            <lable type="155" style="background-image: url(images/world/map-icon/ratterCastle1.png); left: 340px; top:   420px"></lable>
    
                            
                            ${ CityIcons }
                            
                        </div>
                    </div>`;
    if ($('#smallMap')['length'] > 0x0) {} else
        $('body')['append'](Map);
    CURRENT_CURSOR_COORDS = $('#CURRENT_CURSOR_COORDS');
});




$(document).on("mouseover", ".overMap lable", function() {

    var type = parseInt($(this).attr("type"));
    var x_coord = parseInt($(this).css("left").replace("px", ""));
    var y_coord = parseInt($(this).css("top").replace("px", ""));


    $.ajax({
        url: `${API_URL}/api/AWorld/refreshWorldUnitLvl`,
        type: 'GET',
        data: {
            xCoord: x_coord,
            yCoord: y_coord,
            server: game.Config.idServer,
            token: game.Config.OuthToken
        },
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);
            var JsonObject = JSON.parse(data);

            WorldUnit.getWorldUnit(x_coord, y_coord).l = JsonObject.l;

            var tooltip = `<div class="map-tooltip" style="left:${x_coord + 15}px; top: ${y_coord + 15}px">
                                    <div class="tt-header">
                                        <div class="coords">
                                           [ ${getArabicNumbers(y_coord) /*هى المفروض بالعكس بس العربى بيعكس يعنى الى بيظهر هنا هو الاكس*/} , ${getArabicNumbers(x_coord)}]  
                                        </div>
                                    </div>
                                    <div class="tt-title">
                                           ${WorldUtil.tooltipHeader(x_coord, y_coord)}
                                    </div>
                                    <div class="tt-desc">
                                        ${WorldUtil.getDesc(WorldUnit.getWorldUnit(x_coord, y_coord).ut, x_coord, y_coord) }
                                    </div>
                                </div>`;
            $(".map-tooltip").remove();
            $(".overMap").append(tooltip);
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });
});

$(document).on("mouseout", ".overMap lable", function() {
    $(".map-tooltip").remove();
});
$(document).on("click", "#smallMap_close img", function() {
    $("#smallMap").remove();
});
$(document).on("mouseleave", "#cr-stage canvas", function() {
    Crafty("UnitToolTip").each(function() {
        this.destroy()
    });
});





/*
 * عشان اهجم على المعسكرات والمناورات
 */
$(document).on("click", "#START_ATTACK", function() {

    var x_coord = parseInt($(this).attr("data-x-coord"));
    var y_coord = parseInt($(this).attr("data-y-coord"));
    var Unit = WorldUnit.getWorldUnit(x_coord, y_coord);
    var type = Unit.ut;
    var lvl = Unit.l;

    var battel = {
        x_coord: x_coord,
        y_coord: y_coord,
        ar_title: game.World.UnitTypeData[type].Title,
        task: BATTEL_TYPES_CONST.ATTACK,
        task_title: "هجوم",
        time: calAttakTime(),
        type: type
    };

    var hero_object;

    for (var iii in game.DPlayer.Heros) {
        if (game.DPlayer.Heros[iii].Hero.id_city != game.CurrentCity.City.id_city)
            continue;
        if (game.DPlayer.Heros[iii].Hero.in_city == 1 && game.DPlayer.Heros[iii].Hero.console == 0) {
            game.CurrentHero = game.DPlayer.Heros[iii];
            army.getCurrentArmy(game.CurrentHero);
            break;
        }
    }



    $("#dialg_box").remove();

    var content = army.dialogBoxContent_forCamp(game.CurrentHero, battel);
    var dialog_box = army.dialogBox(Translate.Title.Box.Hero[UserLag.language], NavBar.Hero, content);
    if ($("#dialg_box").length > 0) {
        $("#dialg_box").animate({
            top: "-800px"
        }, 200, "linear", function() {
            $(this).remove();
            $("body").append(dialog_box);
            $("#dialg_box").attr("type", "hero");
            $("#dialg_box").animate({
                top: "150px"
            }, 200);
            $("#city-hero-list").niceScroll(SCROLL_BAR_PROP);
        });
    } else {
        $("body").append(dialog_box);

        $("#dialg_box").attr("type", "hero");
        $("#dialg_box").animate({
            top: "150px"
        }, 200);
        $("#city-hero-list").niceScroll(SCROLL_BAR_PROP);
    }

    $(".left-nav ul li").each(function() {
        if ($(this).attr("head_title") === "camp") {
            $(this).addClass("selected");
        }
    });


});



$(document).on("click", ".battel-field", function() {

    var title = $(this).attr("data-title");
    var x_coord = parseInt($("#unit_review").attr("x_coord"));
    var y_coord = parseInt($("#unit_review").attr("y_coord"));
    var unite_type = parseInt($("#unit_review").attr("type"));

    $("#unit_review").remove();

    BattelField.battelField({
        x_coord: x_coord,
        y_coord: y_coord,
        unite_type: unite_type,
        navBar: BattelFieldNavBar,
        totalBox: true
    });

    /*
     reviewBox.battelField(x_coord , y_coord , title , unite_type);
     reviewBox.refreshBattaelField();
     reviewBox.firstClikBattelData(false , x_coord , y_coord);
     
     
     
     
     GENERAL_TIMER = setInterval(function (){
     
     reviewBox.refreshBattaelField();
     
     } , 1000);
     */
});

$(document).on("click", ".close_BF_dialog_box", function() {

    $("#dialg_box_two").remove();
    clearInterval(GENERAL_TIMER);

});



/*   msg fromsmall  box    */
$(document).on("click", "#mail-player-from-world", function() {

    //<img src="images/tech/message_icon.png"  id="mail-player-from-world" data-id-player="${WorldCurrentUnit.__id_player}" data-player-name="${WorldCurrentUnit.__player_name}"/>

    var player_name = $(this).attr("data-player-name");
    var player_id = $(this).attr(" data-id-player");

    $(".close_RB img").trigger("click");
    var dialog_box = menu_bar.dialogBox(Translate.Title.MenuList.Mail[UserLag.language], msg_nav_bar, message.dialogBoxcontent_msgWrite({
        name: player_name,
        id: player_id
    }), 0);
    dialogBoxShow(dialog_box);

});



function addRemainBarryData(xCoord, yCoord) {
    $.ajax({
        url: `${API_URL}/api/AWorld/getBarrayConolizer`,
        data: {
            xCoord: xCoord,
            yCoord: yCoord,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'GET',
        beforeSend: function(xhr) {
            $("#unit_review .prize-list ul").html(WorldUnit.prize.prizeList(xCoord, yCoord));
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            const JsonObject = JSON.parse(data);
            if (JsonObject.length == 0)
                return;

            var under_desc = `  <ul>
                                    <li> 
                                        <label>المدينة :</label>
                                        <span>${JsonObject[0].CityName}</span>
                                    </li>
                                    <li> 
                                        <label>الاحداثيات :</label>
                                        <span>${JsonObject[0].x} , ${JsonObject[0].y}</span>
                                    </li>
                                    <li> 
                                        <label>الملك :</label>
                                        <span>${JsonObject[0].PlayerName}</span>
                                    </li>
                                    <li> 
                                        <label>${Translate.Button.Chat.League[UserLag.language]} : </label>
                                        <span>${JsonObject[0].GuildName}</span>
                                    </li>
                                </ul>`;
            $("#unit_review .under-desc").html(under_desc);
            $("#unit_review .prize-list ul").html("");
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });



}
WorldUnit.prize = {};

WorldUnit.prize.prizes = {};


WorldUnit.prize.getAllPrize = function() {
    $.ajax({
        'url': API_URL + '/api/AWorld/getWorldUnitPrize',
        'data': {
            token: game['Config']['OuthToken'],
            server: game['Config']['idServer']
        },
        'type': 'GET',
        success: function(data, _0x45a054, _0x31b37d) {
            if (isJson(data))
                WorldUnit['prize']['prizes'] = JSON['parse'](data);
            else
                alert(data);
        },
        'error': function(_0x295c85, _0x4fa13c, _0x20447d) {}
    });
};

WorldUnit.prize.PrizFor = {
    'Win': 'Win',
    'Lose': 'Lose',
    'Sp': 'Sp',
    'Plunder': 'Plunder'
};



WorldUnit['prize']['getUnitPrize'] = function(unitType, lvl, PrizeFor = 'Win') {
    unitType = Number(unitType);
    lvl = Number(lvl);
    var PrizeList = [];
    for (var iii in WorldUnit['prize']['prizes'][PrizeFor]) {
        if (WorldUnit['prize']['prizes'][PrizeFor][iii]['unitType'] === unitType &&
            WorldUnit['prize']['prizes'][PrizeFor][iii]['lvl'] === lvl)
            PrizeList.push(WorldUnit['prize']['prizes'][PrizeFor][iii]);
    }
    return PrizeList;
};

WorldUnit['prize']['getUnitAllLvlsPrize'] = function(unitType, PrizeFor = 'Win') {
    unitType = Number(unitType);
    var PrizeList = [];
    for (var iii in WorldUnit['prize']['prizes'][PrizeFor]) {
        if (WorldUnit['prize']['prizes'][PrizeFor][iii]['unitType'] === unitType)
            PrizeList.push(WorldUnit['prize']['prizes'][PrizeFor][iii]);
    }
    return PrizeList;
};


WorldUnit.prize.prizeList = function(x_coord, y_coord) {

    if (!WorldUnit.getWorldUnit(x_coord, y_coord))
        return;

    var lvl = Number(WorldUnit.getWorldUnit(x_coord, y_coord).l);
    var type = Number(WorldUnit.getWorldUnit(x_coord, y_coord).ut);

    var prize = this.getUnitPrize(type, lvl);
    var list = "";
    for (var iii in prize) {
        list += `   <li>
                        <div class="golden-border">
                            <div class="unit-image" style="background-image: url(${Matrial.image(prize[iii].prize)})">
                                <div class="amount stroke">(${prize[iii].amount_min}-${prize[iii].amount_max})X</div>
                            </div>
                        </div>
                    </li>
                    `;
    }

    return list;
};

WorldUnit['prize']['prizeAllLvlsList'] = function(xCoord, yCoord, prizeFor = 'Win') {
    if (!WorldUnit['getWorldUnit'](xCoord, yCoord))
        return;
    var lvl = Number(WorldUnit['getWorldUnit'](xCoord, yCoord)['l']),
        unitType = Number(WorldUnit['getWorldUnit'](xCoord, yCoord)['ut']),
        PrizeList = WorldUnit['prize']['getUnitAllLvlsPrize'](unitType, prizeFor),
        PList = [],
        List = '';
    for (var iii in PrizeList) {
        if (PList['indexOf'](PrizeList[iii]['prize']) === -0x1)
            PList.push(PrizeList[iii]['prize']);
        else
            continue;
        if (PList['length'] > 0x10)
            break;
        List += `   <li>
                        <div class="golden-border">
                            <div class="unit-image ${PrizeList[iii].lvl !== lvl ? "gray-filter" : ""}" style="background-image: url(${Matrial.image(PrizeList[iii].prize)})">
                                <div class="amount stroke">(${PrizeList[iii].amount_min}-${PrizeList[iii].amount_max})X</div>
                            </div>
                        </div>
                    </li>
                    `;
    }
    return List;
};



$(document).on("PlayerReady", "html", function() {
    WorldUnit.prize.getAllPrize();
});
game.World.Map.posX = function(xCoord, yCoord) {
    return xCoord * 64 - yCoord * 64;
};

game.World.Map.posY = function(xCoord, yCoord) {
    return xCoord * 32 + yCoord * 32;
};


game.World.Map.xCoord = function(x, y) {
    return Math.round((2 * y + x) / 128);
};
game.World.Map.yCoord = function(x, y) {
    return Math.round((2 * y - x) / 128);
};

game.World.Map.widthInTile = function() {
    return Math.ceil(game.MAX_SCREEN_WIDTH / 128);
};
game.World.Map.heightInTile = function() {
    return Math.ceil(game.MAX_SCREEN_HEIGHT / 64);
};



game.World.Map.realCoord = function(coord) {
    return (500 * 500 + Number(coord)) % 500;
};

game.World.Map.posZ = function(xCoord, yCoord) {

    var z_offset_x = (xCoord) < 0 ? -500 : (xCoord) > 499 ? 500 : 1;
    var z_offset_y = (yCoord) < 0 ? -500 : (yCoord) > 499 ? 500 : 1;

    return 500 * 500 * 500 + Math.max(this.realCoord(xCoord) + this.realCoord(yCoord)) + z_offset_y + z_offset_x;

};

game.World.Map.getEntity = function(xCoord, yCoord) {

    var Unit = WorldUnit.getWorldUnit(xCoord, yCoord);

    if (WorldUnit.isRiver(Unit.ut) || WorldUnit.isEmpty(Unit.ut) || (Unit.ut) == WUT_BUSY_UNIT) {
        return game.GE.WorldScene.add.rectangle(game.World.Map.posX(xCoord, yCoord), game.World.Map.posY(xCoord, yCoord), 128, 128).setOrigin(0, 0).setDepth(0);
    } else if (WorldUnit.isWood(Unit.ut))
        return game.GE.WorldScene.add
            .sprite(
                game.World.Map.posX(xCoord, yCoord),
                game.World.Map.posY(xCoord, yCoord),
                game.World.UnitTypeData[Unit.ut].tileName).setDepth(game.World.Map.posZ(xCoord, yCoord)).setOrigin(0, 0).play(game.World.UnitTypeData[Unit.ut].AnimKey);


    return game.GE.WorldScene.add
        .image(
            game.World.Map.posX(xCoord, yCoord),
            game.World.Map.posY(xCoord, yCoord),
            game.World.UnitTypeData[Unit.ut].tileName).setDepth(game.World.Map.posZ(xCoord, yCoord)).setOrigin(0, 0);


};




game.World.Map.base = {
    x: 0,
    y: 0
};
game.World.Map.active = false;
game.World.Map.dragging = false;
game.World.Map.dragStartOn = 0;
game.World.Map.dragStartAt = {
    x: 0,
    y: 0
};
game.World.Map.lastMouse = {
    x: 0,
    y: 0
};
game.World.Map.diff = {
    x: 0,
    y: 0
};


game.World.Map.deltaDrag = {
    x: 0,
    y: 0
};



game.World.Map.DeletUnit = function(xCoord, yCoord) {
    var Unit = WorldUnit.getWorldUnit(xCoord, yCoord);
    delete Unit.entite;
    delete Unit.floor;

    if ($.isArray(Unit.UnitFire)) {
        for (var iii in Unit.UnitFire) {
            Unit.UnitFire[iii].destroy();
        }
        delete(Unit.UnitFire);
    }

    if (Unit.CityFlagEntite) {
        Unit.CityFlagEntite.destroy();
        delete Unit.CityFlagEntite;
    }



};


function addMapUnite(el) {

    var unit = game
        .worldAllUnits[game.World.Map.realCoord(el.x) * 500 + Number(game.World.Map.realCoord(el.y))];

    if (!$.isEmptyObject(unit.entite)) {
        unit.entite.setPosition(game.World.Map.posX(el.x, el.y), game.World.Map.posY(el.x, el.y));
        return false;

    }




    var tile = game.World.Map.getEntity(unit.x, unit.y);



    tile.setInteractive({
            hitArea: new Phaser.Geom.Polygon(game.World.UnitTypeData[unit.ut].hitArea),
            hitAreaCallback: Phaser.Geom.Polygon.Contains
        })
        .on("click", function(e) {
            uniteMapClick(unit.x, unit.y);
        })
        .on("pointerover", function(P) {
            game.GE.WorldScene.UnitFloor.setPosition(game.World.Map.posX(el.x, el.y), game.World.Map.posY(el.x, el.y) + TILE_SIZE / 2);

            if (tile.PointerOver)
                return;
            tile.PointerOver = true;

            if (WorldUnit.isEmpty(unit.ut) || true) {
                game.World.WorldMapIcon.removeWorldUnitIcons();
                game.World.WorldMapIcon.showUnitCoords(el.x, el.y);
                return;
            }

            WorldUtil.showMapTooltip(el.x, el.y);

        })
        .on("pointerout", function() {
            tile.PointerOver = false;
            game.World.WorldMapIcon.removeUnitCoords();
        }).setOrigin(0, 0);

    unit.entite = tile;
    tile.setDataEnabled();
    tile.data.set("xCoord", unit.x);
    tile.data.set("yCoord", unit.y);


    return true;





}

function addMapWorldFloor(el) {

    var realX = game.World.Map.realCoord(el.x);
    var realY = game.World.Map.realCoord(el.y);

    var unit = WorldUnit.getWorldUnit(realX, realY);


    if (typeof unit.floor === "object" && !$.isEmptyObject(unit.floor)) {

        unit.floor.setPosition(
            game.World.Map.posX(el.x, el.y),
            game.World.Map.posY(el.x, el.y)
        );
        return false;
    }
    unit.floor = game.GE.WorldScene.add.image(game.World.Map.posX(el.x, el.y), game.World.Map.posY(el.x, el.y), "worldFloor").setDepth(-1).setOrigin(0, 0);
    unit.floor.setDataEnabled();
    unit.floor.data.set("xCoord", realX);
    unit.floor.data.set("yCoord", realY);
    return true;
}



game.World.Map.mouseMoveFn = function(Pointer, ObjArr) {


    var cam = game.GE.WorldScene.cameras.main;
    if (!Pointer.isDown) {
        return;
    }


    if (game.World.Map.dragStartOn === 0) {
        game.World.Map.dragStartOn = Date.now();
        game.World.Map.dragStartAt.x = cam.x;
        game.World.Map.dragStartAt.y = cam.y;
    }
    game.GE.WorldScene.isMapDraging = true;
    cam.scrollX -= (Pointer.x - Pointer.prevPosition.x) / cam.zoom;
    cam.scrollY -= (Pointer.y - Pointer.prevPosition.y) / cam.zoom;
    game.World.Map.Scroll();

};


game.World.Map.mouseUpFn = function(e) {

    game.World.Map.clear();
    game.World.Map.clear();
    game.World.Map.RefreshWorld();
    game.World.MapBattel.AddBattels();
    game.World.Map.dragging = false;
    game.World.Map.dragStartOn = 0;

    game.GE.WorldScene.time.delayedCall(500, function() {
        game.GE.WorldScene.isMapDraging = false;
    });

};



game.World.Map.mouseDownFn = function(P) {


    if (game.World.Map.dragging)
        return;

    game.World.Map.base.x = game.GE.WorldScene.cameras.main.scrollX;
    game.World.Map.base.y = game.GE.WorldScene.cameras.main.scrollY;
    game.World.Map.dragging = true;



};





game.World.Map.Scroll = function(Force) {

    var viewport = {
        x: game.GE.WorldScene.cameras.main.scrollX,
        y: game.GE.WorldScene.cameras.main.scrollY
    };



    if (Math.abs(viewport.x - game.World.Map.base.x) >= 50 || Math.abs(viewport.y - game.World.Map.base.y) >= 50 || Force) {

        var FloorCount = 0;
        var UnitCount = 0;

        game.World.Map.base.x = viewport.x;
        game.World.Map.base.y = viewport.y;

        var xCoord = game.World.Map.xCoord(viewport.x, viewport.y) - 2;
        var yCoord = game.World.Map.yCoord(viewport.x, viewport.y);
        var widthInTile = game.World.Map.widthInTile() + 4;
        var heightInTile = game.World.Map.heightInTile() + 4;
        console.log("Coord ", xCoord, yCoord);

        var vvv = 0;
        var kkk = 0;

        for (; vvv <= heightInTile; vvv++) {
            for (; kkk <= widthInTile; kkk++) {

                UnitCount += addMapUnite({
                    x: xCoord + vvv + kkk,
                    y: yCoord + vvv - kkk
                });
                UnitCount += addMapUnite({
                    x: xCoord + vvv + kkk + 1,
                    y: yCoord + vvv - kkk
                });

            }
            kkk = 0;
        }




        var floorXStart = Math.round(xCoord / 10) * 10 - 20;
        var floorYStart = Math.round(yCoord / 10) * 10 - 10;
        var iii = 0;
        var jjj = 0;

        for (; iii <= heightInTile + 20; iii += 10) {
            for (; jjj <= widthInTile + 10; jjj += 10) {


                FloorCount += addMapWorldFloor({
                    x: floorXStart + iii + jjj,
                    y: floorYStart + iii - jjj
                });
                FloorCount += addMapWorldFloor({
                    x: floorXStart + iii + jjj + 10,
                    y: floorYStart + iii - jjj
                });

            }
            jjj = 0;
        }
    }


};



game.World.Map.RefreshWorld = function() {
    Animation.cityFlag();
    Animation.cityColonizerFlag();
    Animation.WorldFire();
};

game.World.Map.clear = function() {


    if (game.GE.WorldScene.children.list.length < 500)
        return;

    var R = game.World.getRectView();
    game.GE.WorldScene.children.list.forEach(function(Obj, Index) {
        if (!Phaser.Geom.Rectangle.Overlaps(Obj.getBounds(), R)) {
            if (Obj.data)
                game.World.Map.DeletUnit(Obj.data.get("xCoord"), Obj.data.get("yCoord"));

            Obj.destroy();
        }
    });

};

game.World.Map.CityFound = false;

game.World.Map.getWorldCity = function() {

    return $.ajax({
        url: `https://${WS_HOST}:${WS_PORT}/api/AWorld/getWorldCity`,
        type: 'GET',
        crossDomain: true,
        data: {
            token: game.Config.OuthToken,
            idPlayer: game.DPlayer.Player.id_player
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);
            console.log(data)
            var JsonObject = JSON.parse(data);
            console.log(JsonObject)
            var Unit;
            for (var iii in JsonObject) {

                Unit = WorldUnit.getWorldUnit(JsonObject[iii].x, JsonObject[iii].y);
                if (!Unit)
                    continue;


                Unit.idGuild = JsonObject[iii].ig;
                Unit.CityLvl = JsonObject[iii].l;
                Unit.idCity = JsonObject[iii].ic;
                Unit.idPlayer = JsonObject[iii].ip;
                Unit.CityFlag = JsonObject[iii].f;
                Unit.ut = Number(JsonObject[iii].l) + WUT_CITY_LVL_0;
                Unit.l = JsonObject[iii].l;
                Unit.t = Number(JsonObject[iii].l) + 17;
                game.World.Map.CityFound = true;
            }

        },
        error: function(jqXHR, textStatus, errorThrown) {
            console.log(arguments)
        }
    });

    /*
     
     ws.send(JSON.stringify({
     url: "World/getWorldCity"
     }));*/


};

game.World.Map.getWorldCityColonized = function() {

    ws.send(JSON.stringify({
        url: "World/getWorldCityColonized"
    }));
};

game.World.Map.getWorldFiredUnit = function() {

    ws.send(JSON.stringify({
        url: "World/getWorldFireUnit"
    }));
};

function t(x_coord, y_coord) {}


game.World.Map.OnEmptyUnitClick = function(Unit) {


    var city_counts = Object.keys(game.DPlayer.City).length;

    var box = ` <div id="unit_review" class="bg-general" x_coord="${Unit.x}" y_coord="${Unit.y}" type="0" lvl="${Unit.l}">
                        <div class="header">
                            <div class="title banner-red">
                                مكان خالى
                            </div>
                            <div class="close_RB">
                                <img src="images/btns/close_b.png">.
                            </div>
                        </div>
                        <div class="content">
                            <div class="right_cont">
                                <div class="dist">
                                    <div class="coords" style="margin-right: 37px">
                                        <a href="#">[${Unit.y} , ${Unit.x}]</a>
                                    </div>
                                    <div class="mile">
                                        ${getDistance(Unit.x, Unit.y)} ميل
                                    </div>
                                    <div class="copy-coord-icon">
                                        <button class="copy-coord" data-x-coord="${Unit.x}" data-y-coord="${Unit.y}"></button>
                                    </div>
                                </div>
                                <div class="new-city-req-table">
                                    <table class="req_table " border="0"> 
                                        <tbody> 
                                            <tr> 
                                                <td> 
                                                    <img src="images/style/food.png"> 
                                                    <div class="amount ${Number(game.CurrentCity.City.food) < Math.pow(10, city_counts + 3) ? "not_enough" : "enough"}"> 
                                                        ${Math.pow(10, city_counts + 3)} 
                                                    </div> 
                                                </td> 
                                                <td> 
                                                    <img src="images/style/stone.png"> 
                                                    <div class="amount ${Number(game.CurrentCity.City.stone) < Math.pow(10, city_counts + 3) ? "not_enough" : "enough"}"> 
                                                        ${Math.pow(10, city_counts + 3)}  
                                                    </div> 
                                                </td> 
                                            </tr> 
                                            <tr> 
                                                <td> 
                                                    <img src="images/style/wood.png"> 
                                                    <div class="amount ${Number(game.CurrentCity.City.wood) < Math.pow(10, city_counts + 3) ? "not_enough" : "enough"}"> 
                                                        ${Math.pow(10, city_counts + 3)}  
                                                    </div> 
                                                </td> 
                                                <td> 
                                                    <img src="images/style/iron.png"> 
                                                    <div class="amount ${Number(game.CurrentCity.City.metal) < Math.pow(10, city_counts + 3) ? "not_enough" : "enough"} "> 
                                                        ${Math.pow(10, city_counts + 3)}  
                                                    </div> 
                                                </td> 
                                            </tr> 
                                            <tr> 
                                                <td> 
                                                    <img src="images/style/coin.png"> 
                                                    <div class="amount ${Number(game.CurrentCity.City.coin) < Math.pow(10, city_counts + 3) ? "not_enough" : "enough"}"> 
                                                        ${Math.pow(10, city_counts + 3)}  
                                                    </div> 
                                                </td> 
                                                <td> 
                                                    <img src="images/style/wait.png"> 
                                                    <div class="amount sol-people"> 
                                                        0 ث
                                                    </div> 
                                                </td> 
                                            </tr> 
                                        </tbody> 
                                    </table> 
                                    
                                    <div class="province">${Translate.Text.Province[UserLag.language]}: ${game.World.Province.getTitle(Unit.x, Unit.y)}</div>
                                    
                                </div>
                            </div>
                            <div class="left_cont">
                                <div class="unite_image">
                                    <div style="background-image:url(images/world/snap-shot/empty-place.jpg)"></div>
                                </div>
                                <div class="required-prom">
                                    <label>تصنيف لنبيل:</label><span class="${Number(game.DPlayer.Player.porm) < city_counts * 2 ? "not_enough" : "enough" }">${game.BaseData.Promotion[city_counts * 2].Title}</span>
                                </div>
                            </div>
                        </div>
                        <div class="footer  new-city-footer">
                            <ul>
                                <div class="inputs">
                                    <div class="input-wrapper pull-L">
                                        <input id="new-city-name" ${canBuildNewCity(Unit.x, Unit.y) ? "" : "disabled='disabled'"} type="text" class="input" placeholder="اسم المدينة الجديدة"/>
                                    </div>
                                    <div  id="new-city-confirm" class="pull-R">
                                        <button class="full-btn-3x" ${canBuildNewCity(Unit.x, Unit.y) ? "" : "disabled='disabled'"} data-x-coord="${Unit.x}" data-y-coord="${Unit.y}"> بناء مدينة</button>
                                    </div>
                                </div>
                            </ul>

                        </div>
                    </div>`;

    $("#unit_review").remove();
    $("body").append(box);



};

game.World.Map.onBarrayClicked = function(Unit) {
    var unitObj = getUnitObj(Unit.ut);
    var title = `${game.World.UnitTypeData[Unit.ut].Title}  مستوى ${getArabicNumbers(Unit.l)}`;
    var desc = reviewBox.descForBarray(Unit.ut, Unit.l);
    var box = reviewBox.getSmallBox(Unit.x, Unit.y, Unit.ut, title, desc, Unit.l, Unit.s, `images/world/snap-shot/${game.World.UnitTypeData[Unit.ut].WSnapShoot}`);
    $("#unit_review").remove();
    $("body").append(box);
    addRemainBarryData(Unit.x, Unit.y);
};



game.World.Map.OnSeaCityClicked = function(Unit) {
    var Box = reviewBox.getSmallBox(Unit.x, Unit.y, Unit.ut, game.World.UnitTypeData[Unit.ut].Title, game.World.UnitTypeData[Unit.ut].Desc, Unit.l, Unit.s, 'images/world/snap-shot/' + game.World.UnitTypeData[Unit.ut].WSnapShoot);
    $('#unit_review')['remove'](), $('body')['append'](Box);
};

game.World.Map.OnCityClicked = function(Unit) {

    $.ajax({

        url: `${API_URL}/api/AWorld/getCityData`,
        data: {
            xCoord: Unit.x,
            yCoord: Unit.y,
            server: game.Config.idServer,
            token: game.Config.OuthToken
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);
            var JsonData = JSON.parse(data);


            var desc = reviewBox.descForCity(JsonData);

            var box = reviewBox.getSmallBox(Unit.x, Unit.y,
                Unit.ut, JsonData.CityName, desc, Unit.l,
                Unit.s, PLAYER_FACES[JsonData.avatar]);

            $("#unit_review").remove();
            $("body").append(box);

        },
        error: function(jqXHR, textStatus, errorThrown) {
            console.log(errorThrown)
        }
    });

};

game.World.Map.OnOtherUnitClicked = function(Unit) {

    campDB.showDialogBox(Unit.x, Unit.y);
    $("#camp-over-view-desc").niceScroll(SCROLL_BAR_PROP);

    WorldUnit.refreshUnitData(Unit.x, Unit.y).done(function(data) {

        if (isJson(data)) {
            var jsonData = JSON.parse(data);
            Unit.l = jsonData.l;
        } else {
            alert(data);
            return;
        }
        campDB.equipRow(jsonData.equip);
        campDB.armyRow(jsonData.hero);

        $('#lvlChangableUnit')['html'](campDB['armyContainer'](Unit.x, Unit.y));

        if (Number(jsonData.l) > game.World.UnitTypeData[Unit.ut].maxLvl) {
            return;
        } else if (!game.World.UnitData.isAttackable(Unit.ut)) {
            return;
        } else if (Number(jsonData.lo) === 1) {
            return;
        } else {
            $("#JOIN_ATTACK").removeAttr("disabled");
            $("#START_ATTACK").removeAttr("disabled");
        }




    });
}

game.World.MapBattel = {};







game.World.MapBattel.BattelList = {};


game.World.MapBattel.getAllBattels = function() {
    WS_utile.Ack({
        url: "Battel/getAllWorldBattels",
        data: {},
        callBack: function(Res) {
            if (Res && Res.length)
                game.World.MapBattel.BattelList = Res;
            else
                game.World.MapBattel.BattelList = [];

            console.log(Res);
        }
    });
};


game.World.MapBattel.removeBattel = function(Battel) {
    const BattelKey = `${Battel.xCity}.${Battel.yCity}-${Battel.xCoord}.${Battel.yCoord}`;

    if (game.World.MapBattel.BattelList[BattelKey].Line)
        game.World.MapBattel.BattelList[BattelKey].Line.destroy();
    if (game.World.MapBattel.BattelList[BattelKey].GoSourceBtn)
        game.World.MapBattel.BattelList[BattelKey].GoSourceBtn.destroy();
    if (game.World.MapBattel.BattelList[BattelKey].GoDistBtn)
        game.World.MapBattel.BattelList[BattelKey].GoDistBtn.destroy();
    if (game.World.MapBattel.BattelList[BattelKey].GoHeroAvatarBtn)
        game.World.MapBattel.BattelList[BattelKey].GoHeroAvatarBtn.destroy();
    if (game.World.MapBattel.BattelList[BattelKey].TimeElapsed)
        game.World.MapBattel.BattelList[BattelKey].TimeElapsed.destroy();

    delete game.World.MapBattel.BattelList[BattelKey];
};


game.World.MapBattel.LineColor = function(OneBattel) {
    var LineKey = "DashedLineGray";
    if (OneBattel.idPlayer == game.DPlayer.Player.id_player)
        LineKey = "DashedLineBlue";
    else if (!OneBattel.idGuild || !game.Guild.GuildData)
        LineKey = "DashedLineGray";
    else if (OneBattel.idGuild == game.DPlayer.Player.id_guild)
        LineKey = "DashedLineLGreen";
    else {
        for (var jjj in game.Guild.Allay) {
            if (Number(game.Guild.Allay[jjj].idGuild) === Number(OneBattel.idGuild)) {

                if (Number(game.Guild.Allay[jjj].state) === 1) {
                    LineKey = "DashedLineRed";

                } else if (Number(game.Guild.Allay[jjj].state) === 2) {
                    LineKey = "DashedLineGreen";
                }
            }
        }
    }

    return LineKey;
};

game.World.MapBattel.AddBattels = function() {


    var OneBattel;
    for (var iii in game.World.MapBattel.BattelList) {

        OneBattel = game.World.MapBattel.BattelList[iii];
        if (OneBattel.Line)
            continue;
        if (OneBattel.timeEnd < Date.now() / 1000) {
            game.World.MapBattel.removeBattel(OneBattel);
            continue;
        }

        let x1 = game.World.Map.posX(OneBattel.xCity, OneBattel.yCity) + 64;
        let y1 = game.World.Map.posY(OneBattel.xCity, OneBattel.yCity) + 64;
        let x2 = game.World.Map.posX(OneBattel.xCoord, OneBattel.yCoord) + 64;
        let y2 = game.World.Map.posY(OneBattel.xCoord, OneBattel.yCoord) + 64;

        if (!Phaser.Geom.Intersects.LineToRectangle(new Phaser.Geom.Line(x1, y1, x2, y2), game.World.getRectView()))
            continue;



        game.World.MapBattel.BattelLine(OneBattel, x1, y1, x2, y2);


    }
};


game.World.MapBattel.BattelLine = function(OneBattel, x1, y1, x2, y2) {


    const LineWidth = Phaser.Math.Distance.Between(x1, y1, x2, y2);
    const LineAngle = Phaser.Math.Angle.Between(x1, y1, x2, y2);
    OneBattel.Line = game.GE.WorldScene.add.tileSprite(x1, y1, LineWidth, 4, this.LineColor(OneBattel)).setDepth(game.World.Map.posZ(255, 255))
        .setInteractive({
            cursor: 'pointer'
        });
    OneBattel.Line.input.hitArea.setTo(0, -4, LineWidth, 12);
    OneBattel.Line.setOrigin(0, 0);
    OneBattel.Line.setRotation(LineAngle);
    OneBattel.Line.on("destroy", function() {
        delete OneBattel.Line;
    });
    this.BattelLineOver(OneBattel, x1, y1, x2, y2);

    OneBattel.Line.on("pointerup", function(P, X, Y, E) {
        game.World.WorldMapIcon.removeWorldUnitIcons();
        game.World.WorldMapIcon.removeUnitCoords();
        game.GE.WorldScene.tweens.add({
            targets: OneBattel.GoSourceBtn,
            x: x1 + (X - 60) * Math.cos(LineAngle) - 25 * Math.cos(Math.PI / 2 - LineAngle),
            y: y1 + (X - 60) * Math.sin(LineAngle) + 25 * Math.sin(Math.PI / 2 - LineAngle),
            ease: 'Cubic', // 'Cubic', 'Elastic', 'Bounce', 'Back'
            duration: 600
        });
        game.GE.WorldScene.tweens.add({
            targets: OneBattel.GoDistBtn,
            x: x1 + (X + 60) * Math.cos(LineAngle) - 25 * Math.cos(Math.PI / 2 - LineAngle),
            y: y1 + (X + 60) * Math.sin(LineAngle) + 25 * Math.sin(Math.PI / 2 - LineAngle),
            ease: 'Cubic', // 'Cubic', 'Elastic', 'Bounce', 'Back'
            duration: 600
        });
        game.GE.WorldScene.tweens.add({
            targets: OneBattel.GoHeroAvatarBtn,
            x: x1 + (X) * Math.cos(LineAngle) - 25 * Math.cos(Math.PI / 2 - LineAngle),
            y: y1 + (X) * Math.sin(LineAngle) + 25 * Math.sin(Math.PI / 2 - LineAngle),
            ease: 'Cubic', // 'Cubic', 'Elastic', 'Bounce', 'Back'
            duration: 600
        });
        game.GE.WorldScene.tweens.add({
            targets: OneBattel.TimeElapsed,
            x: x1 + (X) * Math.cos(LineAngle) - 50 * Math.cos(Math.PI / 2 - LineAngle),
            y: y1 + (X) * Math.sin(LineAngle) + 50 * Math.sin(Math.PI / 2 - LineAngle),
            ease: 'Cubic', // 'Cubic', 'Elastic', 'Bounce', 'Back'
            duration: 600
        });
        E.stopPropagation();
    });


};
game.World.MapBattel.changeTimeFormat = function(time_diff) {
    if (isNaN(time_diff))
        return "---";
    time_diff = parseInt(time_diff);
    var days = Math.floor(time_diff / (60 * 60 * 24));
    var hours = Math.floor((time_diff % (60 * 60 * 24)) / (60 * 60));
    var minutes = Math.floor((time_diff % (60 * 60)) / (60));
    var seconds = Math.floor((time_diff % (60)) / 1);
    return ` ث ${seconds} د ${minutes} س ${hours} ي ${days} `;
    return (getArabicNumbers(seconds) + " ث " + (minutes > 0 ? getArabicNumbers(minutes) +
        " د " : "") + (hours > 0 ? getArabicNumbers(hours) +
        " س " : "") + (days > 0 ? getArabicNumbers(days) +
        " ي " : ""));
}

game.World.MapBattel.BattelLineOver = function(OneBattel, x1, y1, x2, y2) {

    const LineAngle = Phaser.Math.Angle.Between(x1, y1, x2, y2);
    OneBattel.GoSourceBtn = game.GE.WorldScene.add.image(x1, y1, "goSourceN").setDepth(game.World.Map.posZ(255, 255)).setRotation(LineAngle);
    OneBattel.GoHeroAvatarBtn = game.GE.WorldScene.add.image(x1, y1, "SFaceA1").setDepth(game.World.Map.posZ(255, 255)).setRotation(LineAngle);
    OneBattel.TimeElapsed = game.GE.WorldScene.add.text(x1, y1, `${this.changeTimeFormat(OneBattel.timeEnd - Date.now()/1000)}`, {
            fixedHeight: 20,
            fontStyle: "bold",
            fontSize: 14,
            stroke: '#000000',
            strokeThickness: 3,
            backgroundColor: "#000000"
        })
        .setDepth(game.World.Map.posZ(255, 255)).setOrigin(0.5, 0.5).setRotation(LineAngle);
    OneBattel.GoDistBtn = game.GE.WorldScene.add.image(x1, y1, "goSourceN").setDepth(game.World.Map.posZ(255, 255)).setRotation(LineAngle).setFlipX(true);

    OneBattel.GoSourceBtn.setInteractive().on("pointerover", function(P) {
        if (P.isDown)
            OneBattel.GoSourceBtn.setTexture("goSourceA");
        else
            OneBattel.GoSourceBtn.setTexture("goSourceH");
    }).on("pointerout", function(P) {
        OneBattel.GoSourceBtn.setTexture("goSourceN");
    }).on("pointerup", function() {
        alert_box.confirmDialog("تأكيد الذهاب الى مصدر الهجوم", function() {
            game.World.navigateTo(OneBattel.xCity, OneBattel.yCity);
        });
    });

    OneBattel.GoDistBtn.setInteractive().on("pointerover", function(P) {
        if (P.isDown)
            OneBattel.GoDistBtn.setTexture("goSourceA");
        else
            OneBattel.GoDistBtn.setTexture("goSourceH");
    }).on("pointerout", function(P) {
        OneBattel.GoDistBtn.setTexture("goSourceN");
    }).on("pointerup", function() {
        alert_box.confirmDialog("تأكيد الذهاب الى جهة الهجوم", function() {
            game.World.navigateTo(OneBattel.xCoord, OneBattel.yCoord);
        });
    });


    OneBattel.GoHeroAvatarBtn.setInteractive().on("click", function() {
        alert_box.confirmMessage("Clicked")
    })

};


game.World.MapBattel.newBattel = function(Battel) {
    const BattelKey = `${Battel.xCity}.${Battel.yCity}-${Battel.xCoord}.${Battel.yCoord}`;
    game.World.MapBattel.BattelList[BattelKey] = Battel;
    game.World.MapBattel.AddBattels();


};


game.World.MapBattel.battelEnded = function(Battel) {

};
var WorldCurrentUnit = {};


game.World.unitWidth = 128;
game.World.unitHeight = 128;

MAX_SCREEN_WIDTH = $(document).width();
MAX_SCREEN_HEIGHT = $(document).height();




const TILE_SIZE = 128;








//Crafty.WORLD_MOVES = 0;



function loading(percent) {

    $("#load-percent").html(Math.floor(percent) + "%");
    $("#load-bar div").css({
        width: percent + "%"
    });

}













game.World.navigateTo = function(x, y) {
    $("#x_coord-input input").val(x);
    $("#y_coord-input input").val(y);
    $("#nav-btn button").trigger("click");


};




game.World.getRectView = function() {
    var camView = game.GE.WorldScene.cameras.main.worldView;
    return new Phaser.Geom.Rectangle(camView.x - 600, camView.y - 300, camView.width + 1200, camView.height + 600);
};


/*____________________________________________________________________________*/
/*__________________________NAVIGET IN WORLD MAP______________________________*/







$(document).on("mousemove", "#smallMap .overMap", function(evt) {

    var x = Math.floor(evt.pageX - $(this).offset().left);
    var y = Math.floor(evt.pageY - $(this).offset().top);

    CURRENT_CURSOR_COORDS.css({
        left: x + 25,
        top: y + 25
    });
    CURRENT_CURSOR_COORDS.html(`[${x} , ${y}]`);


});
$(document).on("mouseout", "#smallMap .overMap", function() {
    CURRENT_CURSOR_COORDS.html("");

});

$(document).on("click", "#smallMap .overMap", function(evt) {

    var x = Math.floor(evt.pageX - $(this).offset().left);
    var y = Math.floor(evt.pageY - $(this).offset().top);

    $("#x_coord-input input").val(x);
    $("#y_coord-input input").val(y);


    $("#nav-btn button").trigger("click");

});







/*+___________________________________________________________________________*/
/*___________________________________CHAT BOX_________________________________*/

/*$(document).on("keydown", "#input-chat input", function (e){
 if(e.keyCode ===13 && !e.shiftKey){
 var msg = `<div class="msg-unit">
 <div class="msg-from">
 [Mustapha]:
 </div>
 <div class="msg-body">
 <P>
 ${$("#input-chat input").val()}
 </P>
 </div>
 </div>`;
 $("#msg-area").append(msg);
 $("#input-chat input").val("");
 setTimeout(function (){$("#msg-area").getNiceScroll(0).doScrollTop($("#msg-area").getNiceScroll(0).getContentSize().h , 0);} , 100);
 }
 });
 */
var army_icon = {
    "0": "",
    "1": '<img src="images/tech/soldier_1.jpg"/>',
    "2": '<img src="images/tech/soldier_2.jpg"/>',
    "3": '<img src="images/tech/soldier_3.jpg"/>',
    "4": '<img src="images/tech/soldier_4.jpg"/>',
    "5": '<img src="images/tech/soldier_5.jpg"/>',
    "6": '<img src="images/tech/soldier_6.jpg"/>',
    "10": '<img src="images/tech/defense01.jpg"/>',
    "11": '<img src="images/tech/defense02.jpg"/>',
    "12": '<img src="images/tech/defense03.jpg"/>'
};


const BATTEL_TYPES_CONST = {
    ATTACK: 0,
    DOMINATE: 1,
    JOIN_ATTACK: 2,
    JOIN_DEFENCE: 3,
    SPY: 4,
    SUPPLY: 5,
    GARRISON: 6,
    resourceSupply: 7,
    enterCity: 8

};

speeds = [
    100, //البطل  فاضى
    300, //مشاة
    900, //فرسان
    600, //مدرعين
    250, //رماة
    150, //مقاليع
    100 //منجنيق
];

const BATTEL_JOIN_ATTACK = 2;
const BATTEL_JOIN_DEFENCE = 3;


game.World.WorldMapIcon.Clicked = function(xCoord, yCoord, BattelTask) {

    var Unit = WorldUnit.getWorldUnit(xCoord, yCoord);

    if (Number(BattelTask) === game.BaseData.BattelTasks.BATTEL_TASK_SUPPLY) {

        buildingClick("market");
        $(".nav_bar .left-nav li[head_title=transport_resources]").click();
        $("#transport-distin input[data-coord=x]").val(xCoord);
        $("#transport-distin input[data-coord=y]").val(yCoord);
        $(".close_RB img").trigger("click");

        return;
    }
    /*
     if (Number(game.DPlayer.PlayerState.peace) - 12 * 60 * 60 > ($.now() / 1000)) {
     alert_box.failMessage("لا  يمكنك الهجوم و انت  فى حالة هدنة");
     return;
     } else if (world_unit.__peace && world_unit.__peace > $.now() / 1000) {
     alert_box.succesMessage("لا يمكنك الهجوم على هذه المدينة  </br> ( ملك المدينة قام بتفعيل هدنة)");
     
     return;
     }
     */

    if (Number(BattelTask) === game.BaseData.BattelTasks.BATTEL_TASK_SPY) {

        SPY.sendSpy(xCoord, yCoord);

        return;

    } else if (Number(BattelTask) === game.BaseData.BattelTasks.BATTEL_TASK_ENTER_CITY) {

        $("#WorldCity").trigger("click");
        $(".close_RB img").trigger("click");

        return;

    }

    // get hero id 
    var hero_object;

    for (var iii in game.DPlayer.Heros) {
        if (game.DPlayer.Heros[iii].Hero.id_city != game.CurrentCity.City.id_city)
            continue;
        if (game.DPlayer.Heros[iii].Hero.in_city != game.Hero.HeroState.HERO_IN_CITY)
            continue;
        if (game.Hero.isConsole(game.DPlayer.Heros[iii].Hero.id_hero))
            continue;
        game.CurrentHero = game.DPlayer.Heros[iii];
        break;
    }

    if (typeof game.CurrentHero !== "object" || !game.CurrentHero.Hero) {

        if (!cityHasType(BUILDING_TYPS.THEATER)) {
            alert_box.confirmMessage("لا يوجد ابطال او مسارح لتجنيد ابطال داخل المدينة");
            return;
        }

        buildingClick(cityHasType(BUILDING_TYPS.THEATER), true);
        return;

    }

    var battel = {
        x_coord: xCoord,
        y_coord: yCoord,
        ar_title: WorldUtil.tooltipHeader(xCoord, yCoord),
        task: BattelTask,
        task_title: "غزو",
        time: 60,
        type: Unit.ut,
        lvl: Unit.l
    };

    var content = army.dialogBoxContent_forCamp(game.CurrentHero, battel);
    var dialog_box = army.dialogBox("الابطال", NavBar.Hero, content);


    dialogBoxShow(dialog_box, function() {
        army.getCurrentArmy(game.CurrentHero);
        getHeroEquip(game.CurrentHero.Hero.id_hero);
        $("#city-hero-list").niceScroll(SCROLL_BAR_PROP);
    });

    /*     HEILIGHT   THE CAMP TAB */
    $(".left-nav ul li").each(function() {
        if ($(this).attr("head_title") === "camp") {
            $(this).addClass("selected");
        }
    });

    // close  samll box
    $(".close_RB img").trigger("click");

};

$(document).on("click", "#footer_bar li", function() {

    var xCoord = parseInt($("#unit_review").attr("x_coord"));
    var yCoord = parseInt($("#unit_review").attr("y_coord"));
    var BattelTask = $(this).attr("data-type");

    game.World.WorldMapIcon.Clicked(xCoord, yCoord, BattelTask);



});



function getUnitTitle(type) {
    if (game.World.UnitTypeData[type])
        return game.World.UnitTypeData[type].Title;
    return "---";
}


//                              START BATTEL BUTTON
$(document).on("click", "#start_battel", function() {

    if (battel_data.x_coord === null || battel_data.y_coord == null) {

        $("body").append(alert_box.confirmMessage("برجاء اختيار واجهة الهجوم"));
        return;

    }

    if (Number(game.CurrentHero.Hero.power) < Hero.getPowerRequired(battel_data.x_coord, battel_data.y_coord)) {
        alert_box.confirmMessage("لا توجد لياقة بدنية كافية للبطل");
        return;
    }

    if (!heroAvailableForTask(game.CurrentHero.Hero.id_hero))
        return alert_box.confirmMessage("لا يمكنك ارسال البطل الى المعركة وهو فى مهمة ");



    $(this).attr("disabled", "disabled");
    var coords = `[${getArabicNumbers(battel_data.x_coord)},${getArabicNumbers(battel_data.y_coord)}]`;
    var task = `تاكيد ${BATTAL_TASKS[battel_data.task].ar_title} ${battel_data.ar_title}`;
    alert_box.confirmDialog(`${task}</br> ${coords}`, function() {

        battelStart();
        $(this).removeAttr("disabled");
    });

});

function isMyBarr(_0x22de03, _0x4dcc19) {
    var _0x46bfff, _0x179d13;
    for (var _0x4d186f in game['DPlayer']['City']) {
        _0x46bfff = game['DPlayer']['City'][_0x4d186f];
        for (var _0x215ce1 in _0x46bfff['Barray']) {
            if (_0x46bfff['Barray'][_0x215ce1]['x_coord'] == _0x22de03 && _0x46bfff['Barray'][_0x215ce1]['y_coord'] == _0x4dcc19)
                return !![];
        }
    }
    return ![];
}


function battelStart() {

    if (Number(game.CurrentHero.Hero.in_city) !== game.Hero.HeroState.HERO_IN_CITY) {
        $('.close-alert').click();
        alert_box.failMessage('لا يمكنك ارسال بطل الى بعثة و هو فى ليس داخل المدينة');
        return;
    }
    if (Number(game.CurrentHero.Hero.id_hero) === Number(game['CurrentCity']['City']['console'])) {
        $('.close-alert').click();
        alert_box['failMessage']('لا يمكنك ارسال بطل الى بعثة و هو قنصل');
        return;
    }
    var _0x2d501c = WorldUnit['getWorldUnit'](battel_data['x_coord'], battel_data['y_coord']);
    if (!game['World']['UnitData']['isPromLvlOk'](_0x2d501c['ut'])) {
        alert_box['failMessage']('لا يمكنك الهجو..م تحقق من توافق الشروط');
        return;
    }
    var _0x2a0e73 = 0x0,
        _0x542482 = Number(game['CurrentHero']['Hero']['id_city']);
    for (var _0x2c5cbf in game['DPlayer']['Heros']) {
        if (Number(game['DPlayer']['Heros'][_0x2c5cbf]['Hero']['id_city']) !== _0x542482)
            continue;
        Number(game['DPlayer']['Heros'][_0x2c5cbf]['Hero']['in_city']) !== game['Hero']['HeroState']['HERO_IN_CITY'] && _0x2a0e73++;
    }
    var _0x24c850 = cityHasType(BUILDING_TYPS['HOSPITAL']);
    if (!_0x24c850) {
        $('.close-alert')['click'](), alert_box['failMessage']('لا يمكنك ارسال بعثات خارج المدينة حيث لا يوجد بلازا داخل المدينة');
        return;
    }
    var _0x63b21d = Math['min'](Number(game['City']['getCity']()['BuildingLvl'][_0x24c850]), 0x14);
    if (_0x2a0e73 >= _0x63b21d) {
        $('.close-alert')['click'](), alert_box['failMessage']('وصل عدد الابطال بالخارج الى الحد الاقصى لا يمكنك ارسال قوات اخرى</br> (يمكنك الانتظار حتى عودة الابطال من الخارج)');
        return;
    }
    if (!Battel['isAttackable'](game['CurrentHero']['Hero']['id_hero'], _0x2d501c['ut'])) {
        alert_box['failMessage']('لا يمكنك الهجوم بالبطل الحالى! ');
        return;
    }
    if (Number(battel_data['task']) === game['BaseData']['BattelTasks']['BATTEL_TASK_SUPPORT']) {
        Battel['millertySupply'](battel_data['x_coord'], battel_data['y_coord']);
        game['CurrentHero']['Hero']['in_city'] = 0;
        city_profile['refresh_hero_view']();
        return;
    }
    if (isMyBarr(_0x2d501c['x'], _0x2d501c['y'])) {
        alert_box['failMessage']('لا يمكنك الهجوم على البرارى الخاصة بك');
        return;
    }
    if (Number(battel_data['task']) === game['BaseData']['BattelTasks']['BATTEL_TASK_JOIN_ATT'] || Number(battel_data['task']) === game['BaseData']['BattelTasks']['BATTEL_TASK_JOIN_DEF']) {
        if (!Battel['checkJoinReq'](battel_data['x_coord'], battel_data['y_coord'])) {
            alert_box['failMessage']('لا يوجد لديك مواد كافية للانضمام');
            return;
        }
        $.ajax({
            'url': `https://${WS_HOST}:${WS_PORT}/api/ABattel/joinBattel`,
            'data': {
                'idBattel': battel_data['id_battel'],
                'idHero': game.CurrentHero.Hero.id_hero,
                'side': battel_data['side'],
                'token': game.Config.OuthToken,
                'server': game.Config.idServer
            },
            'type': 'POST',
            'success': function(data, _0x4f103d, _0x3e9120) {
                if (isJson(data))
                    var JsonObject = JSON['parse'](data);
                else
                    alert(data);
                if (JsonObject['state'] === 'ok') {
                    $('.close_dialog')['trigger']('click');
                    game['CurrentHero']['Hero']['in_city'] = 0x0;
                    $('.close-alert')['trigger']('click');
                    battel_data['type'] = JsonObject['unit_type'];
                    battel_data['lvl'] = JsonObject['unit_lvl'];
                    Hero['heroAttackProc']();
                    PLAYER_NOTIF['hero_in_battel'] = Number(PLAYER_NOTIF['hero_in_battel']) + 0x1, city_profile['refresh_hero_view']();
                    var Battel = JsonObject['Battel'];

                    var found = false;
                    for (var iii in game['Battel']['Battels']) {
                        if (Number(game['Battel']['Battels'][iii]['id_battel']) === Number(battel_data['id_battel'])) {
                            found = true;
                            game['Battel']['Battels'][iii] = Battel;
                        };
                    }

                    if (!found) {
                        PLAYER_NOTIF['battel_number'] = Number(PLAYER_NOTIF['battel_number']) + 0x1;
                        if (!game['Battel']['Battels']) {
                            game['Battel']['Battels'] = [];
                        }
                        game['Battel']['Battels']['push'](Battel);
                        Fixed['refreshPlayerNotif']();
                        Battel['afterJoin'](battel_data['x_coord'], battel_data['y_coord'])
                    }
                } else if (JsonObject['state'] === 'error_1') {
                    alert_box['confirmMessage']('البطل ليس فى المدينة');
                } else if (JsonObject['state'] === 'error_2') {
                    alert_box['confirmMessage']('انتهت المعركة لا يمكنك الانضمام');
                } else if (JsonObject['state'] === 'error_3') {
                    alert_box['confirmMessage']('لا يمكنك الانضمام للدفاع </br> (وصل عدد المنضمين الى الحد الاقصى)');
                } else if (JsonObject['state'] === 'error_5') {
                    alert_box['confirmMessage']('لا يمكنك الدفاع ضد هذا الحلف');
                } else if (JsonObject.state == "error_6") {
                    alert_box['confirmMessage'](`متطلبات الإنضمام غير مكتملة`);
                } else if (JsonObject.state == "error_7") {
                    alert_box['confirmMessage'](`البطل ليس لدية لياقة كافية`);
                } else if (JsonObject.state == "error_9") {
                    alert_box['confirmMessage'](`وصل عدد الأبطال بالخارج للحد الأقصى`);
                } else if (JsonObject.state == "error_8_1") {
                    alert_box['confirmMessage'](`لا يمكنك الإنضمام`);
                } else if (JsonObject.state == "error_8_2") {
                    alert_box['confirmMessage'](`لا يمكنك الإنضمام`);
                }
            },
            'error': function(_0x9c1e15, _0x370e1e, _0x58f5ad) {}
        });
    } else {
        if (Number(battel_data['task']) === game['BaseData']['BattelTasks']['BATTEL_TASK_SUPPORT'])
            game.Battel.supportByHero();
        else
            Number(battel_data['task']) === game['BaseData']['BattelTasks']['BATTEL_TASK_HERO_TRANS'] ? game['Battel']['TransHero']() : ws['send'](JSON['stringify']({
                'url': 'Battel/start',
                'data': {
                    'xCoord': battel_data['x_coord'],
                    'yCoord': battel_data['y_coord'],
                    'idHero': game['CurrentHero']['Hero']['id_hero'],
                    'attackTask': battel_data['task']
                }
            }));
    }
}



function getReportTitle(type, lvl, x_coord, y_coord) {

    var Unit = WorldUnit.getWorldUnit(x_coord, y_coord);
    if (WorldUnit.isArmyCapital(Unit.ut) || WorldUnit.isArena(Unit.ut)) {
        return `تقرير المعركة على ${game.World.UnitTypeData[Unit.ut].Title} [${getArabicNumbers(y_coord)} ,${getArabicNumbers(x_coord)}] `;
    } else {
        return `تقرير المعركة على ${game.World.UnitTypeData[Unit.ut].Title} [${getArabicNumbers(y_coord)} ,${getArabicNumbers(x_coord)}] مستوى ${lvl}`;
    }

}

function getSpyReportTitle(type, lvl, x_coord, y_coord) {
    var Unit = WorldUnit.getWorldUnit(x_coord, y_coord);
    return `تقرير التجسس على ${game.World.UnitTypeData[Unit.ut].Title} [${(y_coord)} ,${(x_coord)}] مستوى ${(lvl)}`;
}

$(document).on("click", ".battel-con", function() {
    $("#confirm_battel").trigger("click");
});



var Back_heros = new Array();

function playerBattels() {

    return $.ajax({

        url: `${API_URL}/api/ABattelRunning/getBattels`,
        data: {
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'GET',
        success: function(data, textStatus, jqXHR) {


            game.Battel.Battels = JSON.parse(data);

            if ($("#dialg_box").attr("type") === "reports" && game.Battel.Battels && game.Battel.Battels.length > 0) { // if opened menu is for reports

                if ($("#reports_list .selected").length > 0) { // if there selected  battel

                    $("#reports_list").html(BattelField.getBattelHeaders(game.Battel.Battels, $("#reports_list .selected").attr("id_battel"), true));
                    BattelField.battelField({
                        navBar: NavBar.Report,
                        totalBox: false,
                        id_battel: $("#reports_list .selected").attr("id_battel")
                    }, game.Battel.Battels);
                    //$(".box_content").replaceWith(Reports.dialogBoxcontent_reports($("#reports_list .selected").attr("id_battel")));


                } else if ($("#reports_list").length > 0) { // no battels

                    $("#reports_list").html(BattelField.getBattelHeaders(game.Battel.Battels, 0, true));

                }

            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

}

$(document).on("PlayerReady", "html", function() {
    playerBattels();
});



game.Battel.supportByHero = function(idHero) {
    if (!idHero)
        idHero = game.CurrentHero.Hero.id_hero;

    return $.ajax({
        url: `${API_URL}/api/AWorldUnit/supportByHero`,
        type: 'POST',
        data: {

            xTo: battel_data.x_coord,
            yTo: battel_data.y_coord,
            idHero: idHero,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        success: function(data, textStatus, jqXHR) {
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {

                alert_box.succesMessage("تم ارسال البطل الى البعثة");
                PLAYER_NOTIF.hero_in_battel = Number(PLAYER_NOTIF.hero_in_battel) + 1;
                Fixed.refreshPlayerNotif();
                game.Hero.getHero(idHero).Hero.in_city = game.Hero.HeroState.HERO_IN_BATTEL;
                city_profile.refresh_hero_view();
                $(".nav_icon .close_dialog").click();

            } else if (JsonObject.state === "error_0") {
                alert_box.failMessage("لا تمتلك هذا البطل");
            } else if (JsonObject.state === "error_1") {
                alert_box.failMessage("لا توجد هذة الوحدة");
            } else if (JsonObject.state === "error_2") {
                alert_box.failMessage("البطل ليس فى المدينة");
            } else if (JsonObject.state === "error_3") {
                alert_box.failMessage("لا يمكنك ارسال البطل");
            }


        }
    });

};

game.Battel.TransHero = function(idHero) {

    if (!idHero)
        idHero = game.CurrentHero.Hero.id_hero;

    return $.ajax({
        url: `${API_URL}/api/AWorldUnit/transHero`,
        type: 'POST',
        data: {

            xTo: battel_data.x_coord,
            yTo: battel_data.y_coord,
            idHero: idHero,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {
                game.Hero.getHero(idHero).in_city = game.Hero.HeroState.HERO_IN_BATTEL;
                alert_box.succesMessage("تم ارسال البطل الى البعثة");
                PLAYER_NOTIF.hero_in_battel = Number(PLAYER_NOTIF.hero_in_battel) + 1;
                Fixed.refreshPlayerNotif();
                city_profile.refresh_hero_view();
                $(".nav_icon .close_dialog").click();

            } else if (JsonObject.state === "error_0") {
                alert_box.failMessage("لا تمتلك هذا البطل");
            } else if (JsonObject.state === "error_1") {
                alert_box.failMessage("لا توجد هذة الوحدة");
            } else if (JsonObject.state === "error_2") {
                alert_box.failMessage("البطل ليس فى المدينة");
            } else if (JsonObject.state === "error_3") {
                alert_box.failMessage("لا يمكنك ارسال البطل");
            }
        }
    });
};




$(document).on("click", "#REFRESH_BATTEL_DATA", function() {

    var idBattel = parseInt($(this).attr("data-id-battel"));

    if (!idBattel) {

        alert_box.confirmMessage("برجاء اختيار المعركة");

    } else {

        $.ajax({

            url: `https://${WS_HOST}:${WS_PORT}/api/ABattelRuning/refreshBattelData`,
            data: {
                token: game.Config.OuthToken,
                idBattel: idBattel
            },
            type: 'GET',
            beforeSend: function(xhr) {
                console.log(this.data)
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var JsonObject = JSON.parse(data);



                $(".attack-side .joined-num").html(JsonObject.attackNum || 0);
                $(".defense-side .joined-num").html(JsonObject.defenceNum || 0); // refresh defence num

            },
            error: function(jqXHR, textStatus, errorThrown) {



            }

        });


    }

});

Battel = {

    millertySupply: function(x_coord, y_coord) {


        $.ajax({
            url: `${API_URL}/api/AWorldUnit/supportByHero`,
            data: {
                xTo: x_coord,
                yTo: y_coord,
                idHero: game.CurrentHero.Hero.id_hero,
                token: TOKEN,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {
                console.log(this.data)
            },
            success: function(data, textStatus, jqXHR) {
                if (isJson(data)) {

                } else {
                    alert(data);
                }
                $(".close_dialog").click();
                PLAYER_NOTIF.hero_in_battel = Number(PLAYER_NOTIF.hero_in_battel) + 1;
                Fixed.refreshPlayerNotif();

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    },

    afterFininsh: function(Battel) {



        var hero_dialog = $("#dialg_box[type='hero'] .hero-profile");




        if (hero_dialog.length > 0) {
            hero_dialog.replaceWith(army.middle_content(game.CurrentHero));
        }

        for (var iii in Battel.ItemPrize) {

            Matrial.givePlayer(Battel.ItemPrize[iii].Item, Battel.ItemPrize[iii].amount);

        }
        game.DPlayer.Player.honor = Number(game.DPlayer.Player.honor) + Number(Battel.Player.Honor);


        if (Number(Battel.Battel.task) === game.BaseData.BattelTasks.BATTEL_TASK_DOMINATE) {
            game.City.getCityBarray();
        }

        if (Number(Battel['Battel']['task']) === game['BaseData']['BattelTasks']['BATTEL_TASK_CHALLANGE']) {
            if (Battel['Battel']['id_player'] == game['DPlayer']['Player']['id_player']) {
                alert_box['systemChatMessage']('النتيجة ' + (Battel['sideWin'] == game['BaseData']['BattelSides']['SideAttack'] ? 'فوز' : 'خسارة'));
                game['ArenaChallange']['Arena']['Arena']['lastAttackTime'] = Math['floor'](Date['now']() / 0x3e8);
            }
            game['ArenaChallange']['getFightList']()['done'](function() {
                game['ArenaChallange']['ArenaField']();
            });
        }


    }
};

Battel.checkJoinReq = function(x_coord, y_coord) {

    var unit = WorldUnit.getWorldUnit(x_coord, y_coord);


    for (var iii in game.World.UnitTypeData[unit.ut].JoinReq) {

        if (Matrial.getPlayerAmount(game.World.UnitTypeData[unit.ut].JoinReq[iii].Item) < game.World.UnitTypeData[unit.ut].JoinReq[iii].amount) {
            return false;
        }

    }



    return true;

};



Battel.afterJoin = function(x_coord, y_coord) {

    var unit = WorldUnit.getWorldUnit(x_coord, y_coord);



    for (var iii in game.World.UnitTypeData[unit.ut].JoinReq) {

        Matrial.takeFrom(game.World.UnitTypeData[unit.ut].JoinReq[iii].Item, game.World.UnitTypeData[unit.ut].JoinReq[iii].amount);

    }
    return true;

};

Battel.isAttackable = function(idHero, type) {


    if (WorldUnit.isArmyCapital(type)) {
        return Battel.heroArmiesAre(idHero, game.World.UnitTypeData[type].ArmyReq);
    }


    return true;
};

Battel.heroArmiesAre = function(idHero, armyType) {

    var hero = getHeroById(idHero);

    armyType = Number(armyType);

    if (Number(hero.Army.f_1_type) > 0 && Number(hero.Army.f_1_type) !== armyType)
        return false;
    if (Number(hero.Army.f_2_type) > 0 && Number(hero.Army.f_2_type) !== armyType)
        return false;
    if (Number(hero.Army.f_3_type) > 0 && Number(hero.Army.f_3_type) !== armyType)
        return false;

    if (Number(hero.Army.b_1_type) > 0 && Number(hero.Army.b_1_type) !== armyType)
        return false;
    if (Number(hero.Army.b_2_type) > 0 && Number(hero.Army.b_2_type) !== armyType)
        return false;
    if (Number(hero.Army.b_3_type) > 0 && Number(hero.Army.b_3_type) !== armyType)
        return false;


    return true;
};
var guild_Detail;

function showInVitedMembers() {

    $.ajax({

        url: `${API_URL}/api/AGuild/getGuildInvReq`,
        data: {
            token: game.Config.OuthToken,
            server: game.Config.idServer

        },
        type: 'GET',
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);


            var json_data = JSON.parse(data);
            game.Guild.Requests = json_data.GuildReq;
            game.Guild.Invetaions = json_data.GuildInv;
            var total_inv_list = "";
            var total_req_list = "";

            for (var index in game.Guild.Invetaions) {

                var Inv = game.Guild.Invetaions[index];
                total_inv_list += ` <li data-id-player="${Inv.id_player}" data-player-name="${Inv.name}"> 
                                    <div class="pull-L">
                                        <img src="${game.BaseData.HeroAvatar[Inv.avatar]}">
                                    </div>
                                    <h1 class="pull-L">${Inv.name}</h1>
                                    <div class="select-button">
                                        <button class="show-player-profile full-btn full-btn-1x ellipsis pull-R" data-id-player="${Inv.id_player}">${Translate.Button.MenuList.View[UserLag.language]}</button>
                                        <button class="full-btn full-btn-1x pull-L cansel-inv-action ellipsis" ${parseInt(game.DPlayer.GuildData.rank) < 4 ? "disabled" : ""}>${Translate.Button.General.Cancel[UserLag.language]}</button>
                                        
                                    </div>
                                </li>`;

            }
            $("#AFTER-AJAX-invited-mem").html(total_inv_list);
            $("#AFTER-AJAX-invited-mem").niceScroll(SCROLL_BAR_PROP);




            for (var index in game.Guild.Requests) {

                var Req = game.Guild.Requests[index];
                total_req_list += ` <li data-id-player="${Req.id_player}" data-player-name="${Req.name}"> 
                                    <div class="pull-L">
                                        <img src="${game.BaseData.HeroAvatar[Req.avatar]}">
                                    </div>
                                    <h1 class="pull-L">${Req.name}</h1>
                                    <div class="select-button">
                                        <button class="show-player-profile full-btn  full-btn-1x  full-btn-1x pull-R" data-id-player="${Req.id_player}">${Translate.Button.MenuList.View[UserLag.language]}</button>
                
                                        
                                        <button class="full-btn full-btn-1x pull-L select-req-action ellipsis" ${parseInt(game.DPlayer.GuildData.rank) < Guild.RANK_DATA.MENSTER ? "disabled" : ""}>اختيار</button>
                                        
                                        <div class="drop-down-li">
                                            ${parseInt(game.DPlayer.GuildData.rank) >= Guild.RANK_DATA.MENSTER ? `<div class="accept-guild-req">قبول</div>` : ""}
                                            ${parseInt(game.DPlayer.GuildData.rank) >= Guild.RANK_DATA.DEPUTY ? ` <div class="cansel-guild-req">الغاء</div>` : ""}
                                        </div>
                                    </div>
                                </li>`;

            }

            $("#AFTER-AJAX-join-req-mem").html(total_req_list);
            $("#AFTER-AJAX-join-req-mem").niceScroll(SCROLL_BAR_PROP);



        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

}

$(document).on("click", ".select-req-action , .guild-mem-action-for_admins", function() {

    $(".drop-down-li").hide(function() {
        $(this).removeClass("active");
    });

    if (!$(this).next(".drop-down-li").hasClass("active")) {

        $(this).next(".drop-down-li").slideDown(function() {
            $(this).addClass("active");
        });

    } else {

        $(this).next(".drop-down-li").hide(function() {
            $(this).removeClass("active");
        });


    }

});



/*
 *   accept guild reqest buy guild admin 
 */
$(document).on("click", ".accept-guild-req", function() {

    var id_player = $(this).parents("li").attr("data-id-player");
    var self_ = $(this).parents("li");

    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/AGuildInvReq/acceptGuildReq`,
        data: {
            idPlayerToAccept: id_player,
            token: game.Config.OuthToken,
            server: game.Config.idServer

        },
        type: 'POST',
        beforeSend: function(xhr) {},
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);
            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {

                alert_box.succesMessage("تم اضافة الملك بنجاح");
                self_.remove();

                Guild.getGuildData().done(function() {
                    $("#dialg_box .left-nav li[head_title='g_relation']").click();
                });

            } else if (JsonObject.state == "error_0") {
                alert_box.failMessage("اللاعب منضم فى حلف بالفعل");
            } else if (JsonObject.state == "error_1") {
                alert_box.failMessage("لست منضم فى أى حلف");
            } else if (JsonObject.state == "error_2") {
                alert_box.failMessage("رتبتك فى الحلف لا تسمح");
            } else if (JsonObject.state == "error_3") {
                alert_box.failMessage("طلب الانضمام ليس لهذا الحلف");
            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });
});
/*
 *   cansel guild reqest buy guild member 
 */
$(document).on("click", ".cansel-guild-req", function() {

    var id_player = $(this).parents("li").attr("data-id-player");
    var self_ = $(this).parents("li");

    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/AGuildInvReq/rejectGuildJoinReq`,
        data: {
            idPlayerToAccept: id_player,
            token: game.Config.OuthToken,
            server: game.Config.idServer

        },
        type: 'POST',
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);
            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {

                alert_box.succesMessage("تم الغاء الطلب بنجاح");
                self_.remove();
                Guild.getGuildData().done(function() {
                    $("#dialg_box .left-nav li[head_title='g_relation']").click();
                });


            } else if (JsonObject.state == "error_0") {
                alert_box.failMessage("اللاعب منضم فى حلف بالفعل");
            } else if (JsonObject.state == "error_1") {
                alert_box.failMessage("لست منضم فى أى حلف");
            } else if (JsonObject.state == "error_2") {
                alert_box.failMessage("رتبتك فى الحلف لا تسمح");
            } else if (JsonObject.state == "error_3") {
                alert_box.failMessage("طلب الانضمام ليس لهذا الحلف");
            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });
});


/*
 *   cansel guild inv buy guild admin 
 */
$(document).on("click", ".cansel-inv-action", function() {

    var id_player = $(this).parents("li").attr("data-id-player");
    var self_ = $(this).parents("li");

    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/AGuildInvReq/cancelGuildInv`,
        data: {
            idPlayerToInvite: id_player,
            token: game.Config.OuthToken,
            server: game.Config.idServer

        },
        type: 'POST',
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var jsonObject = JSON.parse(data);

            if (jsonObject.state === "ok") {

                alert_box.succesMessage("تم الغاء الطلب بنجاح");
                self_.remove();
                showInVitedMembers();

            } else if (jsonObject.state == "error_0")
                alert_box.failMessage("لست عضو فى أى حلف");
            else if (jsonObject.state == "error_1")
                alert_box.failMessage("رتبتك فى الحلف لا تسمح");

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });
});


/*
 * 
 * if  the user have now guild he can show all list of guilds
 * this button to show   the all list 
 * 
 */
$(document).on("click", "#show_avail_guild", function() {


    var content = menu_bar.dialogBoxcontent_Ranks(true);
    var dialog_box = menu_bar.dialogBox(Translate.Title.MenuList.Ranking[UserLag.language], NavBar.Ranking, content, 0);
    if ($("#dialg_box").length > 0) {
        $("#dialg_box").animate({
            top: "-800px"
        }, 200, "linear", function() {
            $(this).remove();
            $("body").append(dialog_box);
            menu_bar.getContentForRanks(game.Rank.RankFor.Guild, 0);
            $("#dialg_box").attr("type", "messages");
            $("#dialg_box").animate({
                top: "125"
            }, 200);

        });
    } else {
        $("body").append(dialog_box);
        menu_bar.getContentForRanks(game.Rank.RankFor.Guild, 0);
        $("#dialg_box").attr("type", "messages");
        $("#dialg_box").animate({
            top: "125"
        }, 200);

    }

    $("#select_from").remove();
});



/*
 * 
 * @type type
 *   when  one result is clicked in  ranks
 *   
 *   
 */
$(document).on("click", ".show-guild-prev", function() {

    var id_guild = $(this).attr("data-id-guild");


    $.ajax({

        url: "api/guild.php",
        data: {

            GET_GUILD_DETAIL: true,
            id_guild: id_guild,
            id_player: ID_PLAYER,
            token: TOKEN

        },

        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (isJson(data)) {
                var json_data = JSON.parse(data);
            } else {
                alert(data);
                return;
            }

            var over_layer = `  <div id="over_lay">
                                    <div id="select_from">
                                        <div class="head_bar">
                                            <img src="images/style/head_bar.png" class="banner">
                                            <div class="title">${Translate.Button.Chat.League[UserLag.language]}</div>
                                            <img class="close close_use_menu" src="images/btns/close_b.png">
                                        </div>
                                        <p style="clear: both"></p>
                                        <div id="rank-review">
                                            <div class="upper" style="height: 185px;">
                                                <div class="table flex">
                                                    <div class="left">
                                                        <img src="images/style/bottom-${json_data.slog_btm}.png" style="position: absolute">
                                                        <img src="images/style/central-${json_data.slog_cnt}.png" style="position: absolute">
                                                        <img src="images/style/top-${json_data.slog_top}.png" style="position: absolute">
                                                    </div>
                                                    <div class="right">
                                                        <div class="t-r">
                                                            <label>${json_data.p_name}</label>
                                                            <label>: المدير</label>
                                                        </div>
                                                        <div class="t-r">
                                                            <label>${getArabicNumbers(json_data.rank_g)}</label>
                                                            <label>: تصنيف</label>
                                                        </div>
                                                        <div class="t-r">
                                                            <label>${getArabicNumbers(json_data.mem_num)}</label>
                                                            <label>: الاعضاء</label>
                                                        </div>
                                                        <div class="t-r">
                                                            <label>${getArabicNumbers(json_data.lvl)}</label>
                                                            <label>: مستوى</label>
                                                        </div>
                                                        <div class="t-r">
                                                            <label>${getArabicNumbers(json_data.prestige)}</label>
                                                            <label>: برستيج</label>
                                                        </div>
                                                        <div class="t-r">
                                                            <label>${getArabicNumbers(json_data.honor)}</label>
                                                            <label>: شرف</label>
                                                        </div>
                                                    </div>
                                                </div>
                                                <table>
                                                    <tbody>

                                                        <tr>
                                                            <td colspan="3" style="text-align: center; line-height: 34px;">
                                                                <h1 style="background-image: url(&quot;images/background/profile_name.png&quot;);
                                                                    background-size: 75% 100%;
                                                                    background-repeat: no-repeat;
                                                                    background-position: center;"> ${json_data.name}</h1>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                            <div class="down">
                                                <div class="th ellipsis">${Translate.Title.TH.Intro[UserLag.language]}</div>
                                                <p>
                                                    ${json_data.word || "لا توجد مقدمة"}
                                                </p>
                                                ${!game.DPlayer.GuildData || !game.DPlayer.GuildData.id_guild ? `<div id="send-guild-req" >
                                                                                    <button class="full-btn full-btn-2x" data-id-guild="${json_data.id_guild}">ارسال دعوة انضمام</button>
                                                                                </div>` : ""}
                                            </div>
                                        </div>
                                    </div>
                                </div>`;

            $("body").append(over_layer);
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }


    });

});



var Guild = {

    dialogBox: function(title, nav_bar, content) {

        var nav_list = "";
        nav_bar.forEach(function(one, index) {
            nav_list += ` <li head_title = "${one["title"]}" class="${index === 0 ? "selected" : ""}" >
                               ${one[("title_" + UserLag.language)]}
                           </li>`;
        });

        var nav_bar_list = ` `;


        return `
            <div id='dialg_box' class='guild guild_dialog_box'>
                <div class="head_bar">
                    <img src="images/style/head_bar.png">
                    <div class="title">${title}</div>
                </div>
                ${nav_bar_list}
                <div class="nav_bar">
                    <div class="left-nav">
                         <ul>${nav_list}</ul>
                    </div>
                    <div class="right-nav">
                        <div class="nav_icon">
                            <img  class ="close_dialog" src="images/btns/close_b.png">
                            <div class="full-btn full-btn-1x ellipsis" id="guild_lead">
                                ${Translate.Button.MenuList.LeagueManagement[UserLag.language]}
                            </div>
                            <div class="drop-list">
                                <ul>
                                    ${Number(game.DPlayer.GuildData.rank) >= Guild.RANK_DATA.DEPUTY ? `<li id="chang-g-word"> تعديل المقدمة</li>` : ""}
                                    ${Number(game.DPlayer.GuildData.rank) >= Guild.RANK_DATA.DEPUTY ? `<li id="change-g-F_E-list">الاصدقاء والاعداء</li>` : ""}
                                    ${Number(game.DPlayer.GuildData.rank) >= Guild.RANK_DATA.SUPERVISOR ? ` <li id="invite-g">دعوة ملك</li>` : ""}
                                    ${Number(game.DPlayer.GuildData.rank) >= Guild.RANK_DATA.SUPERVISOR ? ` <li id="send-g-msg"> ارسال رسالة</li>` : ""}
                                    ${Number(game.DPlayer.GuildData.rank) >= Guild.RANK_DATA.MENSTER ? ` <li id="change-g-slog"> تغير الشعار</li>` : ""}
                                    ${Number(game.DPlayer.GuildData.rank) >= Guild.RANK_DATA.SENIOR_MEM ? ` <li id="resignation-g"> استقالة</li>` : ""}
                                    <li id="leave-g">
                                        الخروج
                                    </li>
                                    ${Number(game.DPlayer.GuildData.rank) === Guild.RANK_DATA.LEADER ? ` <li id="destroy-g">تفكيك</li>` : ""}

                                </ul>
                            </div>
                            
                        </div>
                    </div>
                </div>
                ${content}
            </div>`;
    },

    guild_click: function() {
        Guild.getGuildData();
        if (!game.DPlayer.GuildData || !game.DPlayer.GuildData.id_guild) {

            var box = ` <div id="select_from">
                            <div class="head_bar">
                                <img src="images/style/head_bar.png" class="banner">
                                <div class="title">${Translate.Button.General.Use[UserLag.language]}</div>
                                <img class="close close_use_menu" id="closeGuildSelFrom" src="images/btns/close_b.png">
                            </div>
                            <p style="clear: both"></p>
                            <div class="container">
                                <div id="two_buttons">
                                    <button class="full-btn full-btn-3x pull-R" id="show_avail_guild"> اعرض الحلف المتاح</button>
                                    <button class="full-btn full-btn-3x pull-L" id="creat_guild"> انشاء حلف </button>
                                </div>
                                <div id="sent_to">
                                    <div class="th">
                                        <div class="td_2 ellipsis">${Translate.Title.TH.PendingLeagueApplication[UserLag.language]}</div>
                                        <div class="td_1 ellipsis">${Translate.Button.General.Action[UserLag.language]}</div>
                                    </div>
                                    <div class="tr" id="A-A-guild_req-list">
                                        <div class="td_1 ellipsis"></div>
                                        <div class="td_2 ellipsis"></div>
                                    </div>
                                </div>
                                <div id="sent_from">
                                    <div class="th">
                                        <div class="td_2 ellipsis">${Translate.Title.TH.PendingLeagueInvitation[UserLag.language]}</div>
                                        <div class="td_1 ellipsis">${Translate.Button.General.Action[UserLag.language]}</div>

                                    </div>
                                    
                                    <div id="A-A-guild_inv-list">
                                        <div class="tr" rank="2">
                                            <div class="td_1 ellipsis"></div>
                                            <div class="td_2 ellipsis"></div>
                                        </div>
                                        <div class="tr" rank="2">
                                            <div class="td_1 ellipsis"></div>
                                            <div class="td_2 ellipsis"></div>
                                        </div>
                                        <div class="tr" rank="2">
                                            <div class="td_1 ellipsis"></div>
                                            <div class="td_2 ellipsis"></div>
                                        </div>
                                        <div class="tr" rank="2">
                                            <div class="td_1 ellipsis"></div>
                                            <div class="td_2 ellipsis"></div>
                                        </div>
                                        <div class="tr" rank="2">
                                            <div class="td_1 ellipsis"></div>
                                            <div class="td_2 ellipsis"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>`;
            this.unJoinedPlayer();
            $("body").append(box);

        } else {


            var content = Guild.content_forGuild_data();
            var dialog_box = Guild.dialogBox(Translate.Button.Chat.League[UserLag.language], NavBar.League, content);

            dialogBoxShow(dialog_box);


        }

    },

    unJoinedPlayer: function() {

        $.ajax({

            url: "api/guild.php",
            data: {

                GET_UNJOINED_PLAYER_DATA: true,
                id_player: ID_PLAYER,
                token: TOKEN

            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            error: function(jqXHR, textStatus, errorThrown) {

                console.log(errorThrown);

            },
            success: function(data, textStatus, jqXHR) {

                if (isJson(data)) {
                    var json_data = JSON.parse(data);
                } else {
                    alert(data);
                    return;
                }


                console.log(json_data)

                if (json_data.guild_req.length > 0) {

                    var guild = `<div class="td_1" style="width: 70%;">${json_data.guild_req[0].name}</div>
                                <div class="td_2" style="width: 30%;">
                                    <button  class="full-btn full-btn-1x ellipsis" style="width: 80%; margin: auto" id="cansel-guild_req" data-id-guild="${json_data.guild_req[0].id_guild}">${Translate.Button.General.Cancel[UserLag.language]}</button>
                                </div>`;
                    $("#A-A-guild_req-list").html(guild);


                }
                if (json_data.guild_inv.length > 0) {

                    var guilds = "";
                    for (var iii = 0; iii < 5; iii++) {

                        if (json_data.guild_inv[iii]) {
                            guilds += `  <div class="tr" data-id_guild="${json_data.guild_inv[iii].id_guild}">
                                            <div class="td_1" style="width: 50%;">${json_data.guild_inv[iii].name}</div>
                                            <div class="td_2" style="width: 48%; margin-right: 2%">
                                                <button  class="full-btn full-btn-1x pull-R ellipsis" style="width: 30%;" id="cansel-guild_inv" data-id-guild="${json_data.guild_inv[iii].id_guild}">الغاء</button>
                                                <button  class="full-btn full-btn-1x ellipsis" style="width: 30%; display: inline-block; " class="accept-guild-inv" data-id-guild="${json_data.guild_inv[iii].id_guild}" >قبول</button>
                                                <button  class="full-btn full-btn-1x pull-R show-guild-prev ellipsis" style="width: 30%; margin-right:3%" >${Translate.Button.MenuList.View[UserLag.language]}</button>
                                            </div>
                                        </div>`;
                        } else {


                            guilds += `<div class="tr">
                                            <div class="td_1"></div>
                                            <div class="td_2"></div>
                                        </div>`;

                        }

                    }

                    $("#A-A-guild_inv-list").html(guilds);

                }
            }

        });

    },

    create: function() {

        if ($("#guild-name").val() === "") {
            alert_box.confirmMessage(" لا يمكن ان يكون اسم الحلف خالى");
            return;
        } else if (player.guild_data !== false) {
            return;
        } else if ($("#guild-name").val().length < 5) {

            alert_box.confirmMessage("اسم الحلف اقل من 5 حروف");
            return;

        } else if ($("#guild-name").val().length > 20) {

            alert_box.confirmMessage("يجب ان لا يتعدى اسم الحلف عن 20 حرف");
            return;

        } else {
            var idCity = game.CurrentCity.City.id_city;
            $.ajax({
                url: `${API_URL}/api/AGuild/create`,
                data: {
                    guildName: $("#guild-name").val(),
                    slogBottom: $(".guild_slogan img:first").attr("data-cur_image"),
                    slogTop: $(".guild_slogan img:last").attr("data-cur_image"),
                    slogMiddle: $(".guild_slogan img:nth-child(2)").attr("data-cur_image"),
                    idCity: idCity,
                    token: game.Config.OuthToken,
                    server: game.Config.idServer
                },
                type: 'POST',
                success: function(data, textStatus, jqXHR) {

                    if (!game.LBase.isJson(data))
                        return game.LBase.Error(data);

                    var JsonObject = JSON.parse(data);

                    if (JsonObject.state === "ok") {

                        $(".close-alert_container").trigger("click");


                        Player_profile.getPlayerGuildData();
                        Guild.getGuildData();
                        Player_profile.refresh_player_data();
                        alert_box.succesMessage(`تم انشاء حلف ${JsonObject.GuildData.GuildData.name} بنجاح`);

                    } else if (JsonObject.state == "error_0")
                        return alert_box.confirmMessage("لا يوجد إسم للحلف");
                    else if (JsonObject.state == "error_1")
                        return alert_box.confirmMessage("يوجد حلف يحمل نفس الأسم");
                    else if (JsonObject.state == "error_2")
                        return alert_box.confirmMessage("أنت بالفعل على قوة حلف أخر");
                    else if (JsonObject.state == "error_3")
                        return alert_box.confirmMessage("لا يوجد لديك موارد كافية لإنشاء حلف");
                    else if (JsonObject.state == "error_4")
                        return alert_box.confirmMessage("حدث خطاء ما اثناء إنشاء حلف");
                    else {

                        alert(data);

                    }

                },
                error: function(jqXHR, textStatus, errorThrown) {

                }
            });

        }

    },
    getGuildData: function() {



        return $.ajax({
            url: `${API_URL}/api/AGuild/getGuildData`,
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'GET',
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state == "ok") {
                    game.Guild.GuildData = JsonObject.Guild.GuildData;
                    game.Guild.LeaderName = JsonObject.Guild.leaderName;
                    game.Guild.Allay = JsonObject.Guild.Allay;
                    game.Guild.prizeShare = JsonObject.Guild.prizeShare;
                }


            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });
    },
    content_forGuild_data: function() {


        this.getGuildData();

        var all_allaies = "";
        var allaies_count = 0;

        for (var iii = 0; iii < game.Guild.Allay.length; iii++) {



            if (Number(game.Guild.Allay[iii]["state"]) === 2) {
                all_allaies += `<div class="tr" data-id_guild="${game.Guild.Allay[iii]["id_guild"]}">
                                <div class="td friend">${game.Guild.Allay[iii]["name"]}</div>
                                <div class="td">
                                    <button class="full-btn full-btn-1x show-guild-prev ellipsis">${Translate.Button.MenuList.View[UserLag.language]} </button>
                                 </div>
                            </div>`;
                allaies_count++;
            }
        }

        for (var iii = 0; iii < 13 - allaies_count; iii++) {
            all_allaies += `<div class="tr">
                                    <div class="td"></div>
                                    <div class="td"></div>
                                </div>`;
        }


        var all_enemy = "";
        var enemy_count = 0;

        for (var iii = 0; iii < game.Guild.Allay.length; iii++) {



            if (Number(game.Guild.Allay[iii]["state"]) === 1) {
                all_enemy += `<div class="tr" data-id_guild="${game.Guild.Allay[iii]["id_guild"]}">
                                <div class="td enemy">${game.Guild.Allay[iii]["name"]}</div>
                                <div class="td">
                                    <button class="full-btn full-btn-1x show-guild-prev ellipsis">${Translate.Button.MenuList.View[UserLag.language]} </button>
                                 </div>
                            </div>`;
                enemy_count++;
            }
        }
        for (var iii = 0; iii < 13 - enemy_count; iii++) {
            all_enemy += `<div class="tr">
                                </div>`;
        }


        var content = ` <div class="box_content for_guild" id="guild-guild_data">
                            <div class="left-content">
                                <div class="upper">
                                    <div class="table">
                                        <div class="t-row">
                                            <div class="t-d">
                                                <img src="images/style/bottom-${game.Guild.GuildData.slog_btm}.png" style="position: absolute">
                                                <img src="images/style/central-${game.Guild.GuildData.slog_cnt}.png" style=" position: absolute">
                                                <img src="images/style/top-${game.Guild.GuildData.slog_top}.png" style="position: absolute">
                                            </div>
                                        </div>
                                        <div class="t-row">
                                            <div class="t-r">
                                                <div class="t-d"> :مدير</div>
                                                <div class="t-d">${game.Guild.LeaderName}</div>
                                            </div>
                                            <div class="t-r">
                                                <div class="t-d"> : الاعضاء</div>
                                                <div class="t-d">${game.Guild.GuildData.mem_num}</div>
                                            </div>
                                            <div class="t-r">
                                                <div class="t-d"> : مستوى</div>
                                                <div class="t-d">${game.Guild.GuildData.lvl}</div>
                                            </div>
                                            <div class="t-r">
                                                <div class="t-d"> : برستيج</div>
                                                <div class="t-d">${game.Guild.GuildData.prestige}</div>
                                            </div>
                                            <div class="t-r">
                                                <div class="t-d"> : شرف</div>
                                                <div class="t-d">${game.Guild.GuildData.honor}</div>
                                            </div>
                                        </div>
                                        <p style="clear: both"></p>
                                        <div class="t-row">
                                            <h1>
                                                ${game.Guild.GuildData.name}
                                            </h1>
                                        </div>
                                    </div>
                                </div>
                                <div class="down">
                                    <div class="th ellipsis"><div class="td_1 ellipsis">${Translate.Title.TH.Intro[UserLag.language]}</div></div>
                                    <p>
                                       ${game.Guild.GuildData.word || "لا توجد مقدمة"}   
                                    </p>
                                </div>
                            </div>
                            <div class="right-content">
                                <div id="leftofright" class="pull-L">
                                    <div id="guild_domain">
                                        <img src="images/world/smallMap.jpg"/>
                                    </div>
                                </div>
                                <div id="rightofright" class="pull-R">

                                        <div class="th">
                                            <div class="td ellipsis" id="show_allay">${Translate.Title.TH.Friendly[UserLag.language]}</div>
                                            <div class="td ellipsis" id="show_enemy">${Translate.Title.TH.Hostile[UserLag.language]}</div>
                                        </div>
                                        <div id="guild_allaies">${all_allaies}</div>
                                        <div id="guild_enemy" style="display: none">${all_enemy}</div>
                                  
                                </div>
                            </div>
                        </div>`;

        return content;
    },

    getGuildMemeber: function(offset) {

        if (!offset) {
            offset = 0;
        }
        $.ajax({
            url: "api/guild.php",
            data: {
                get_guild_member: true,
                id_guild: player.guild_data.id_guild,
                id_player: ID_PLAYER,
                offset: offset,
                token: TOKEN
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (isJson(data)) {
                    var guild_data = JSON.parse(data);
                } else {
                    alert(data);
                    return;
                }
                if (guild_data.length < 1) {
                    return;
                }
                var all_member = "";
                for (var iii = 0; iii < guild_data.length; iii++) {


                    all_member += ` <div class="tr" data-offset="${offset + iii}" 
                                        data-id-member="${guild_data[iii].id_player}" 
                                        data-member-rank="${guild_data[iii].rank}"
                                        data-prize-share="${guild_data[iii].prize_share}">
                    
                                        <div class="td_1 ellipsis" style="width : 17%">${guild_data[iii].name}</div>
                                        <div class="td_2 ellipsis" style="width : 12%">${guild_ranks[guild_data[iii].rank].ar_title}</div>
                                        <div class="td_3 ellipsis" style="width : 14%">${guild_data[iii].prize_share}%</div>
                                        <div class="td_4 ellipsis" style="width : 13%">${game.BaseData.Promotion[guild_data[iii].porm].Title}</div>
                                        <div class="td_5 ellipsis" style="width : 16%"> ${getArabicNumbers(guild_data[iii].prestige)}</div>

                                        <div class="td_6 ellipsis" style="width : 12%">${Number(guild_data[iii].online) === 1 ? "<span style='color:#34740e'>متصل الان</span>" : lastSeen(guild_data[iii].last_seen)}</div>
                                        <div class="td_7 ellipsis" style="width : 16%">
                                            <button class="full-btn full-btn-1x pull-L show-player-profile ellipsis" data-id-player=${guild_data[iii].id_player}>${Translate.Button.MenuList.View[UserLag.language]} </button>
                                            <button class="full-btn full-btn-1x pull-R guild-mem-action-for_admins ellipsis" ${parseInt(game.DPlayer.GuildData.rank) < 2 ? "disabled" : ""}>${Translate.Button.General.Action[UserLag.language]}</button>
                                            <div class="drop-down-li">
                    
                                                ${parseInt(game.DPlayer.GuildData.rank) > parseInt(guild_data[iii].rank) && parseInt(guild_data[iii].rank) > 0 ? `<div id="isolate-guild-member">عزل من المنصب</div>` : ""}
                                                
                                                ${parseInt(game.DPlayer.GuildData.rank) >= 5 &&
                            parseInt(guild_data[iii].rank) < 6 &&
                            parseInt(ID_PLAYER) !== parseInt(guild_data[iii].id_player) ?
                            `<div id="promote-guild-member">ترقية    &nbsp;&nbsp;&#8618;</div>` : ""}
                                                
                                                ${parseInt(game.DPlayer.GuildData.rank) > parseInt(guild_data[iii].rank) ? `<div id="trade-guild-position">تبادل المناصب</div>` : ""}
                                                ${parseInt(game.DPlayer.GuildData.rank) >= Number(Guild.RANK_DATA.LEADER) ? `<div class="mem-prize-percent">نسبة الجوائز</div>` : ""}
                                                ${parseInt(game.DPlayer.GuildData.rank) >= 4 && parseInt(guild_data[iii].rank) === 0 ? ` <div id="fire-guild-mamber">${Translate.Button.Hero.Dismiss[UserLag.language]}</div>` : ""}
                                                ${parseInt(game.DPlayer.GuildData.rank) >= 1 && parseInt(guild_data[iii].id_player) === parseInt(ID_PLAYER) && parseInt(game.DPlayer.GuildData.rank) !== 6 ? ` <div id="stepdown-guild-mamber">تنحى من المنصب</div>` : ""}
                                                ${parseInt(guild_data[iii].id_player) === parseInt(ID_PLAYER) ? ` <div id="get-out-guild">خروج</div>` : ""}
                                                
                                                
                                            </div>
                                        </div>
                                    </div>`;
                }

                for (var iii = 0; iii < 10 - guild_data.length; iii++) {
                    all_member += ` <div class="tr" >

                                    </div>`;
                }

                $("#AFTER-AJAX-allMember").html(all_member);

                /*show invited list*/


            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });
    },
    content_forRelation: function() {

        var guild_data;
        var content = ` <div class="box_content for_guild" id="guild-g_relation">
                            <div class="left-content">
                                <div class="upper" id="join-req-list">
                                    <div class="th"><div class="td_1 ellipsis">${Translate.Title.TH.PendingApplicationApproval[UserLag.language]}</div></div>
                                    <div  class="search_res" style="display: block;">
                                        <ul id="AFTER-AJAX-join-req-mem">

                                        </ul>
                                    </div>
                                </div>
                                <div class="down" id="invited-list">
                                    <div class="th">
                                        <div class="td_1 ellipsis">${Translate.Title.TH.Invite[UserLag.language]}</div>
                                    </div>
                                    <div  class="search_res" style="display: block;">
                                        <ul id="AFTER-AJAX-invited-mem"> 

                                        </ul>
                                    </div>

                                </div>
                            </div>
                            <div class="right-content">
                                <div class="left-content full">  

                                    <div class="th">
                                        <div class="td_1 ellipsis" style="width : 17%">${Translate.Title.TH.Member[UserLag.language]}</div>
                                        <div class="td_2 ellipsis" style="width : 12%">${Translate.Title.TH.Post[UserLag.language]}</div>
                                        <div class="td_2 ellipsis" style="width : 14%">${Translate.Title.TH.PrizeShare[UserLag.language]}</div>
                                        <div class="td_3 ellipsis" style="width : 13%">${Translate.Title.TH.Ranking[UserLag.language]}</div>
                                        <div class="td_5 ellipsis" style="width : 16%">${Translate.Title.TH.Prestige[UserLag.language]}</div>
                                        <div class="td_6 ellipsis" style="width : 12%">${Translate.Title.TH.LastSeen[UserLag.language]}</div>
                                        <div class="td_7 ellipsis" style="width : 16%">${Translate.Button.General.Action[UserLag.language]}</div>
                                    </div>
                                    <div id="AFTER-AJAX-allMember"></div>
                                </div>  

                            </div>
                            <div class="right-content-footer" >  
                                <div class="buttons">  
                                    <ul>  
                                        <li>  
                                            <div class="full-btn full-btn-2x">  
                                                ${Translate.Button.MenuList.ViewLeagueRank[UserLag.language]}  
                                            </div>  
                                        </li> 
                                        <li>
                                            <div class="nav_icon flex" id="navigate-member-guild-list">
                                                <button data-move="most-left" class="left move_g_page most-left-btn pull-L"></button>
                                                <button data-move="left"  class="left move_g_page left-btn pull-L"></button>
                                                <h1> 1/${Math.ceil(game.Guild.GuildData.mem_num / 10)}</h1>
                                                <button data-move="most-right"  class="right move_g_page pull-R most-right-btn"></button>
                                                <button data-move="right"  class="right move_g_page pull-R right-btn"></button>
                                            </div>
                                        </li>

                                        <li id="nav_input" class="flex">  
                                            <input type="text" class="input">
                                            <div class="full-btn full-btn-1x ellipsis">  
                                                ${Translate.Button.General.GoTo[UserLag.language]}   
                                            </div>
                                        </li>

                                        <li id="search_select" style=" width: 85px;">  
                                            <select>
                                                <option selected="">الاسم</option>
                                            </select>
                                        </li>
                                        <li id="nav_search" class="flex"> 
                                            <input type="text" class="input">
                                            <div class="full-btn full-btn-1x ellipsis">  
                                                ${Translate.Button.General.Search[UserLag.language]}
                                            </div>
                                        </li>

                                    </ul>  
                                </div>  

                            </div> 
                        </div>`;

        $(".for_guild").replaceWith(content);
        showInVitedMembers();
        this.getGuildMemeber(0);
    },

    content_forUpgrade: function() {

        var guild_data;
        $.ajax({
            url: "api/guild.php",
            data: {
                get_guild_res: true,
                id_guild: player.guild_data.id_guild,
                id_player: ID_PLAYER,
                token: TOKEN
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {
                if (isJson(data)) {
                    var guild_data = JSON.parse(data);
                } else {
                    alert(data);
                    return;
                }

                var content = `  <div class="box_content for_guild up_guild">
                            <div class="left-content">
                                <div class="upper">
                                    <div class="banner-red">تطوير الحلف</div>
                                    
                                    <div class="guild-banner">
                                        <div id="guild-lvl">${getArabicNumbers(guild_data.lvl)}</div>
                                        <img src="images/style/bottom-${game.Guild.GuildData.slog_btm}.png">
                                        <img src="images/style/central-${game.Guild.GuildData.slog_cnt}.png" >
                                        <img src="images/style/top-${game.Guild.GuildData.slog_top}.png">
                                    </div>
                                </div>
                                <button class="full-btn  full-btn-2x" id="upgrade_guild" ${Guild.isUpgradable(guild_data) ? "" : "disabled"}>
                                    ${Translate.Button.General.Upgrade[UserLag.language]}
                                </button>

                            </div>
                            <div class="right-content">
                                <div class="left pull-L">
                                    <table border="1">
                                        <td colspan="6" class="th ellipsis">
                                            ${guild_data.lvl < 10 ? "المواد المطلوبة لتطوير الحلف" : "لا يمكنك تطوير الحلف بالموارد مرة اخرى"}
                                        </td>
                                        <tr>
                                            <td>
                                                <img src="images/style/food.png"/>
                                            </td>
                                            <td class="${guild_data.food >= guild_data.lvl * 1250000 ? 'enough' : 'not_enough'}">
                                                ${guild_data.lvl < 10 ? getArabicNumbers(guild_data.lvl * 1250000) : "----"}
                                            </td>
                                            <td>
                                                <img src="images/style/stone.png"/>
                                            </td>
                                            <td class="${guild_data.stone >= guild_data.lvl * 1250000 ? 'enough' : 'not_enough'}">
                                                ${guild_data.lvl < 10 ? getArabicNumbers(guild_data.lvl * 1250000) : "----"}
                                            </td>
                                            <td>
                                                <img src="images/style/coin.png"/>
                                            </td>
                                            <td class="${guild_data.coin >= guild_data.lvl * 1000000 ? 'enough' : 'not_enough'}">
                                                ${guild_data.lvl < 10 ? getArabicNumbers(guild_data.lvl * 1000000) : "----"}
                                            </td>
                                        </tr>
                                        <tr>
                                           <td>
                                                <img src="images/style/wood.png"/>
                                            </td>
                                            <td class="${guild_data.wood >= guild_data.lvl * 1250000 ? 'enough' : 'not_enough'}">
                                                ${guild_data.lvl < 10 ? getArabicNumbers(guild_data.lvl * 1250000) : "----"}
                                            </td>
                                            <td>
                                                <img src="images/style/iron.png"/>
                                            </td>
                                            <td class="${guild_data.metal >= guild_data.lvl * 1250000 ? 'enough' : 'not_enough'}">
                                                ${guild_data.lvl < 10 ? getArabicNumbers(guild_data.lvl * 1250000) : "----"}
                                            </td>
                                            
                                        </tr>
                                    </table>
                                    <div class="up_with_mat">
                                        <button class="full-btn pull-L" id="up_with_mat">
                                            <img src="images/icons/pluse.png">
                                            ${Translate.Button.General.Use[UserLag.language]}
                                        </button>
                                        <h1 class="pull-R">
                                           (استعمال احد شعارات الحلف لتطوير الحلف) 
                                        </h1>
                                    </div>
                                </div>
                                <div class="right pull-R ">
                                    <h1 class="header-2 th">
                                        المستوى الحالى
                                    </h1>
                                    <div>
                                        <p>
                                            عدد اعضاء الحلف الحالى هم ${getArabicNumbers(guild_data.mem_num)} عضو
                                            سعة الحلف الاجمالية ${getArabicNumbers(guild_data.lvl * 10)} عضو 
                                            وسعة استيعاب الموارد هى ${getArabicNumbers(guild_data.lvl * 1000000)}
                                        </p>
                                    </div>
                                </div>

                            </div>
                            <div class="right-content-footer" >  
                                <div class="left pull-L">
                                   <div class="table" id="guild-res-table">

                                        <div class="td"  style="width: 13.4%;"></div>
                                        <div  class="td" style="width: 73px;" data-resource="wood" data-count="${guild_data.wood}">
                                            ${getArabicNumbers(guild_data.wood)}
                                        </div>


                                        <div  class="td" style="width: 73px;" data-resource="stone" data-count="${guild_data.stone}">
                                            ${getArabicNumbers(guild_data.stone)}
                                        </div> 

                                        <div  class="td" style="width: 73px;" data-resource="metal" data-count="${guild_data.metal}">
                                            ${getArabicNumbers(guild_data.metal)}
                                        </div>

                                        <div  class="td" style="width: 73px;"  data-resource="food" data-count="${guild_data.food}">
                                            ${getArabicNumbers(guild_data.food)}
                                        </div>

                                        <div  class="td" style="width: 73px;" >
                                            ----
                                        </div> 
                                        <div  class="td" style="width: 73px; margin-top: 10px;">
                                            <img src="images/style/coin.png" style="margin-bottom: -26px;"/>
                                            <div  data-resource="coin" data-count="${guild_data.coin}" >${getArabicNumbers(guild_data.coin)}</div>
                                        </div> 
                                         
                                    </div>
                                     <ol id="input-guild-donate">
                                         <li>
                                            <input type="text" value="0" class="only_num input"  min="0" data-resource="wood" max="${Math.floor(game.CurrentCity.City.wood)}" min="0" step="${Math.floor(game.CurrentCity.City.wood)}"/>
                                         </li>
                                         <li>
                                             <input type="text" value="0" class="only_num input"  min="0" data-resource="stone" max="${Math.floor(game.CurrentCity.City.stone)}" step="${Math.floor(game.CurrentCity.City.stone)}"/>
                                         </li>
                                         <li>
                                             <input type="text" value="0" class="only_num input"  min="0" data-resource="metal" max="${Math.floor(game.CurrentCity.City.metal)}" step="${Math.floor(game.CurrentCity.City.metal)}"/>
                                         </li>
                                         <li>
                                             <input type="text" value="0" class="only_num input"  min="0" data-resource="food" max="${Math.floor(game.CurrentCity.City.food)}" step="${Math.floor(game.CurrentCity.City.food)}"/>
                                         </li>
                                         <li>
                                             <input type="text" value="0" class="only_num input" style="margin-left: 82px;"  min="0"  data-resource="coin" max="${Math.floor(game.CurrentCity.City.coin)}" step="${Math.floor(game.CurrentCity.City.coin)}"/>
                                         </li>
                                     </ol>
                                </div>
                                <div class="right pull-R">
                                    <button class="full-btn full-btn-3x" id="guild-donate">
                                        ${Translate.Button.MenuList.Deposite[UserLag.language]}
                                    </button>
                                </div>
                            </div> 
                        </div>`;

                $(".for_guild").replaceWith(content);
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });


    },

    isUpgradable(guild_data) {

        if (parseInt(game.DPlayer.GuildData.rank) < 4) {

            return false;

        } else if (guild_data.food < guild_data.lvl * 1250000) {

            return false;

        } else if (guild_data.wood < guild_data.lvl * 1250000) {

            return false;

        } else if (guild_data.metal < guild_data.lvl * 1250000) {

            return false;

        } else if (guild_data.stone < guild_data.lvl * 1250000) {

            return false;

        } else if (guild_data.coin < guild_data.lvl * 1000000) {

            return false;

        }

        return true;


    }




};

$(document).on("PlayerReady", "html", function() {
    Guild.getGuildData();
});


const guild_ranks = {
    "0": {
        "ar_title": "عضو عادى"
    },
    "1": {
        "ar_title": "عضو رسمى"
    },
    "2": {
        "ar_title": "عضو كبير"
    },
    "3": {
        "ar_title": "المستشار"
    },
    "4": {
        "ar_title": "الوزير"
    },
    "5": {
        "ar_title": "نائب المدير"
    },
    "6": {
        "ar_title": " المدير"
    }

};
Guild.RANK_DATA = {
    NORMAL_MEM: 0,
    SENIOR_MEM: 1,
    OLD_MEM: 2,
    SUPERVISOR: 3,
    MENSTER: 4,
    DEPUTY: 5,
    LEADER: 6

};

/*
 * 
 * GUILD MATRIAL DONAtE
 * 
 */

$(document).on("click", "#guild-donate", function() {

    var food = parseInt($('#input-guild-donate input[data-resource="food"]').val()) || 0;
    var wood = parseInt($('#input-guild-donate input[data-resource="wood"]').val()) || 0;
    var stone = parseInt($('#input-guild-donate input[data-resource="stone"]').val()) || 0;
    var metal = parseInt($('#input-guild-donate input[data-resource="metal"]').val()) || 0;
    var coin = parseInt($('#input-guild-donate input[data-resource="coin"]').val()) || 0;

    if (food + wood + stone + metal + coin < 10000) {

        alert_box.confirmMessage("لا يمكنك التبرع باقل من 10 الاف  مورد");
        return;

    }
    var idCity = game.CurrentCity.City.id_city;

    $.ajax({

        url: `${API_URL}/api/AGuild/donateRes`,
        data: {
            idCity: idCity,
            food: food,
            wood: wood,
            stone: stone,
            metal: metal,
            coin: coin,
            token: game.Config.OuthToken,
            server: game.Config.idServer

        },
        type: 'POST',
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {

                game.City.getCity(idCity).City = JsonObject.CityRes;
                game.Guild.GuildData = JsonObject.GuildData.GuildData;
                game.Guild.Allay = JsonObject.GuildData.Allay;
                game.Guild.LeaderName = JsonObject.GuildData.leaderName;
                game.Guild.prizeShare = JsonObject.GuildData.prizeShare;

                /* zero the inputs*/
                $('#input-guild-donate input').val("0");

                city_profile.refresh_resource_view();
                city_profile.refresh_army_view();
                /*refresh the view*/
                resourcesRefresh();

                /*  refresh  the data in page*/
                Guild.content_forUpgrade();

            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

});


$(document).on("click", "#creat_guild", function() {

    var box = `  <div id="alert_container" class="bg-general" style=" position:fixed; width: 560px; 
                        z-index:1000;left: 50%;margin-left: -280px; top: 150px; 
                        height:318px"> 
                    <div id="alert_head">    
                        <div>        
                            <img src="images/panner/king_name.png">    
                        </div>       
                        <div id="alert-title">
                             انشاء حلف
                        </div>            
                        <img src="images/btns/close_b.png" class="img-sml close-alert_container">       
                    </div>
                    <div id="alert_box" class="guild_creat" >        
                        <div class="row-one">
                            <div class="pull-L left">
                                <div class="guild_slogan" >
                                    <img src="images/style/bottom-1.png" data-place="bottom" data-cur_image="1">
                                    <img src="images/style/central-1.png" data-place="middle" data-cur_image="1">
                                    <img src="images/style/top-1.png" data-place="top" data-cur_image="1">
                                        
                                </div>
                            </div>
                            <div class="pull-R right">
                                <div class="nav_icon">
                                    <div class="pull-L loop-guild-slogan left-btn" data-direction="left" data-place="top"></div>
                                    <h1>1/21</h1>
                                    <div class="pull-R loop-guild-slogan right-btn" data-direction="right" data-place="top"></div>
                                </div>
                                <div class="nav_icon">
                                    <div class="pull-L loop-guild-slogan left-btn" data-direction="left"  data-place="middle"></div>
                                    <h1>1/4</h1>
                                    <div class="pull-R loop-guild-slogan right-btn"  data-direction="right"  data-place="middle"></div>

                                </div>
                                <div class="nav_icon">
                                    <div class="pull-L loop-guild-slogan left-btn" data-direction="left"  data-place="bottom"></div>
                                    <h1>1/5</h1>
                                    <div class="pull-R loop-guild-slogan right-btn" data-direction="right" data-place="bottom"></div>

                                </div>
                            </div>
                        </div>  
                        <div class="row-two bg-btn-blu" style="background-size: 105% 123%;
                                            background-position: center;
                                            background-repeat: no-repeat;
                                            background-position-y: 0px;">
                            <input type="text" class="input" placeholder="اسم الحلف" id="guild-name"/>
                        </div>
                        <div class="row-three">        
                            <div class="confim-btn">            
                                <button id="conf_creat_guild" class="full-btn full-btn-2x  enter"  >تاكيد وانشاء</button>    

                            </div>    
                        </div>
                    </div>    
                </div>`;

    $("body").append(box);
    $("#select_from").remove();
});


/*
 * 
 * player   change the slogan
 * 
 */

$(document).on("click", ".loop-guild-slogan", function() {

    var direction = $(this).data("direction");
    var place = $(this).data("place");
    var counter;
    if (direction === "right") {

        if (place === "top") {

            if (parseInt($(".guild_slogan img:last").attr("data-cur_image")) < 21) {

                var next_img = `images/style/top-${parseInt($(".guild_slogan img:last").attr("data-cur_image")) + 1}.png`;
                counter = parseInt($(".guild_slogan img:last").attr("data-cur_image")) + 1;

            } else {

                var next_img = `images/style/top-21.png`;
                counter = 21;

            }

            $(".guild_slogan img:last").attr("src", next_img);
            $(".guild_slogan img:last").attr("data-cur_image", counter);
            $(".guild_creat .nav_icon:first h1").html(getArabicNumbers(counter) + "/" + getArabicNumbers(21));

        } else if (place === "bottom") {


            if (parseInt($(".guild_slogan img:first").attr("data-cur_image")) < 5) {

                var next_img = `images/style/bottom-${parseInt($(".guild_slogan img:first").attr("data-cur_image")) + 1}.png`;
                counter = parseInt($(".guild_slogan img:first").attr("data-cur_image")) + 1;

            } else {

                var next_img = `images/style/bottom-5.png`;
                counter = 5;

            }

            $(".guild_slogan img:first").attr("src", next_img);
            $(".guild_slogan img:first").attr("data-cur_image", counter);
            $(".guild_creat .nav_icon:nth-child(3) h1").html(getArabicNumbers(counter) + "/" + getArabicNumbers(5));


        } else if (place === "middle") {


            if (parseInt($(".guild_slogan img:nth-child(2)").attr("data-cur_image")) < 4) {

                var next_img = `images/style/central-${parseInt($(".guild_slogan img:nth-child(2)").attr("data-cur_image")) + 1}.png`;
                counter = parseInt($(".guild_slogan img:nth-child(2)").attr("data-cur_image")) + 1;

            } else {

                var next_img = `images/style/central-4.png`;
                counter = 4;

            }

            $(".guild_slogan img:nth-child(2)").attr("src", next_img);
            $(".guild_slogan img:nth-child(2)").attr("data-cur_image", counter);
            $(".guild_creat .nav_icon:nth-child(2) h1").html(getArabicNumbers(counter) + "/" + getArabicNumbers(4));

        }


    } else {


        if (place === "top") {

            if (parseInt($(".guild_slogan img:last").attr("data-cur_image")) > 1) {

                var next_img = `images/style/top-${parseInt($(".guild_slogan img:last").attr("data-cur_image")) - 1}.png`;
                counter = parseInt($(".guild_slogan img:last").attr("data-cur_image")) - 1;

            } else {

                var next_img = `images/style/top-1.png`;
                counter = 1;

            }

            $(".guild_slogan img:last").attr("src", next_img);
            $(".guild_slogan img:last").attr("data-cur_image", counter);
            $(".guild_creat .nav_icon:first h1").html(getArabicNumbers(counter) + "/" + getArabicNumbers(21));

        } else if (place === "bottom") {


            if (parseInt($(".guild_slogan img:first").attr("data-cur_image")) > 1) {

                var next_img = `images/style/bottom-${parseInt($(".guild_slogan img:first").attr("data-cur_image")) - 1}.png`;
                counter = parseInt($(".guild_slogan img:first").attr("data-cur_image")) - 1;

            } else {

                var next_img = `images/style/bottom-1.png`;
                counter = 1;

            }

            $(".guild_slogan img:first").attr("src", next_img);
            $(".guild_slogan img:first").attr("data-cur_image", counter);
            $(".guild_creat .nav_icon:nth-child(3) h1").html(getArabicNumbers(counter) + "/" + getArabicNumbers(5));


        } else if (place === "middle") {


            if (parseInt($(".guild_slogan img:nth-child(2)").attr("data-cur_image")) > 1) {

                var next_img = `images/style/central-${parseInt($(".guild_slogan img:nth-child(2)").attr("data-cur_image")) - 1}.png`;
                counter = parseInt($(".guild_slogan img:nth-child(2)").attr("data-cur_image")) - 1;

            } else {

                var next_img = `images/style/central-1.png`;
                counter = 1;

            }

            $(".guild_slogan img:nth-child(2)").attr("src", next_img);
            $(".guild_slogan img:nth-child(2)").attr("data-cur_image", counter);
            $(".guild_creat .nav_icon:nth-child(2) h1").html(getArabicNumbers(counter) + "/" + getArabicNumbers(4));

        }



    }




});



/*____________________________________________________________________________*/
$(document).on("click", "#show_enemy", function() {
    $("#guild_enemy").show();
    $("#guild_allaies").hide();
    $("#show_enemy").addClass("selected");
    $("#show_allay").removeClass("selected");
});

$(document).on("click", "#show_allay", function() {
    $("#guild_enemy").hide();
    $("#guild_allaies").show();
    $("#show_allay").addClass("selected");
    $("#show_enemy").removeClass("selected");
});



/*                              تطوير الحلف  بالشعارات*/

$(document).on("click", "#up_with_mat", function() {
    BoxOfMatrialToUse(
        ["union_slogan", "union_declar", "union_era"],
        "upgrade_guild",
        1
    );
});


$(document).on("click", ".use_to_up_guild", function() {
    var matrial_name = $(this).attr("matrial_name");
    var use_for = $(this).attr("use_for");
    var amount = $(this).attr("amount");
    var title = `تأكيد استعمال ${getArabicNumbers(amount)} ${game.BaseData.Items[matrial_name].name} من  صندوق المواد الخاص`;
    var content = alert_box.confirmUse_single(use_for, matrial_name, title);
    var alert = alert_box.alert(Translate.Button.Building.Confirm[UserLag.language], content);

    $("body").append(alert);
});






// when player click his guild_name

$("#player_guild").click(function() {
    $(".menu-list").each(function() {
        if ($(this).data("show") === "union") {
            $(this).trigger("click");
        }
    });
});




/*   show guild leading list  */
$(document).on("click", "#guild_lead", function() {

    $(this).next(".drop-list").slideToggle();

});





/*   CHANGE GUILD WORD   */
$(document).on("click", "#chang-g-word", function() {

    var current_guild = `<div id="over_lay">
                            <div id="select_from">
                                <div class="head_bar">
                                    <img src="images/style/head_bar.png" class="banner">
                                    <div class="title">المقدمة</div>
                                    <img class="close close_use_menu" src="images/btns/close_b.png">
                                </div>
                                <p style="clear: both"></p>
                                <div id="rank-review">
                                    <div class="upper">
                                        <div class="upper" style="height: 185px;">
                                            <div class="table flex">
                                                <div class="left">
                                                    <img src="images/style/bottom-${game.Guild.GuildData.slog_btm}.png" style="position: absolute">
                                                    <img src="images/style/central-${game.Guild.GuildData.slog_cnt}.png" style="position: absolute">
                                                    <img src="images/style/top-${game.Guild.GuildData.slog_top}.png" style="position: absolute">
                                                </div>
                                                <div class="right">
                                                    <div class="t-r">
                                                        <label>${game.Guild.GuildData.p_name}</label>
                                                        <label>: المدير</label>
                                                    </div>
                                                    <div class="t-r">
                                                        <label>${getArabicNumbers(game.Guild.GuildData.rank_g)}</label>
                                                        <label>: تصنيف</label>
                                                    </div>
                                                    <div class="t-r">
                                                        <label>${getArabicNumbers(game.Guild.GuildData.mem_num)}</label>
                                                        <label>: الاعضاء</label>
                                                    </div>
                                                    <div class="t-r">
                                                        <label>${getArabicNumbers(game.Guild.GuildData.lvl)}</label>
                                                        <label>: مستوى</label>
                                                    </div>
                                                    <div class="t-r">
                                                        <label>${getArabicNumbers(game.Guild.GuildData.prestige)}</label>
                                                        <label>: برستيج</label>
                                                    </div>
                                                    <div class="t-r">
                                                        <label>${getArabicNumbers(game.Guild.GuildData.honor)}</label>
                                                        <label>: شرف</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <table>
                                                <tbody>

                                                    <tr>
                                                        <td colspan="3" style="text-align: center; line-height: 34px;">
                                                            <h1 style="background-image: url(&quot;images/background/profile_name.png&quot;);
                                                                background-size: 75% 100%;
                                                                background-repeat: no-repeat;
                                                                background-position: center;"> ${game.Guild.GuildData.name}</h1>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="down">
                                        <div class="th ellipsis">${Translate.Title.TH.Intro[UserLag.language]}</div>
                                        <p>
                                            <textarea value="${game.Guild.GuildData.word}" class="input">${game.Guild.GuildData.word}</textarea>
                                            <button class="full-btn full-btn-2x " id="save-g-intro" > تعديل</button>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>`;


    $("body").append(current_guild);


});


/*      MDIFY   THE INTODUCTION FOR  GUILD    */
$(document).on("click", "#save-g-intro", function() {

    var self_ = $(this);
    var new_intro = $(this).prev("textarea").val();

    if (new_intro.length === 0) {
        alert_box.failMessage("مقدمة غير مسموح بها ");
        return;

    }
    if (Number(game.DPlayer.GuildData.rank) < 6) {
        alert_box.failMessage("غير مسموح بتغير المقدمة  الا بواسطة المدير");
        return;
    }
    if (new_intro === game.Guild.GuildData.word) {
        alert_box.confirmMessage("لم يتم تغير المقدمة");
        return;
    }

    $.ajax({

        url: `${API_URL}/api/AGuild/modifyGuildWord`,

        data: {
            newWord: new_intro,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {

                game.Guild.GuildData = JsonObject.GuildData.GuildData;
                game.Guild.Allay = JsonObject.GuildData.Allay;
                game.Guild.LeaderName = JsonObject.GuildData.leaderName;
                game.Guild.prizeShare = JsonObject.GuildData.prizeShare;
                self_.parents("p").html(new_intro);
                game.Guild.GuildData.word = new_intro;
                alert_box.succesMessage("تم تعديل المقدمة بنجاح");
            } else if (JsonObject.state == "error_0") {
                alert_box.failMessage("لست عضواً بهذا الحلف");
            } else if (JsonObject.state == "error_1") {
                alert_box.failMessage("لا يمكن تعديل المقدمة إلا بواسطة قائد الحلف");
            } else if (JsonObject.state == "error_2") {
                alert_box.failMessage("لا يمكن أن تكون المقدمة أكثر من 512 حرف");
            }
        }

    });

});

$(document).on("click", "#change-g-F_E-list", function() {

    var content = alert_box.alert_content_Guild_FE_list();
    var box = `   <div id="over_lay_alert">   
                            <div id="guild-alert-box">    
                                <div id="alert_head">          
                                    <div>               
                                        <img src="images/panner/king_name.png">       
                                    </div>       
                                    <div id="alert-title">الاصدقاء و الاعداء        
                                    </div>           
                                    <img src="images/btns/close_b.png" class="img-sml close-alert">  
                                </div>  
                                   ${content}
                            </div>
                        </div>`;
    $("body").append(box);

});

$(document).on("keyup", "#GuildEneFriInput", function() {

    var search_val = $(this).val();

    if (search_val === "") {

        $("#g-search_result ul").html("");
        $("#g-search_result").hide();
        return;
    }


    $.ajax({

        url: "api/guild.php",
        data: {

            GET_GUILD_AUTO_COMPLETE: true,
            search_value: search_val,
            id_player: ID_PLAYER,
            id_guild: game.DPlayer.Player.id_guild,
            token: TOKEN

        },
        type: 'GET',

        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            var json_data = JSON.parse(data);

            var list = "";

            for (var iii = 0; iii < json_data.length; iii++) {

                list += `   <li class="SearchGuildUnitRes" data-id-guild="${json_data[iii].id_guild}" data-g-name = "${json_data[iii].name}"> 
                                <div class="pull-L image">
                                    <img src="images/style/bottom-${json_data[iii].slog_btm}.png">
                                    <img src="images/style/central-${json_data[iii].slog_cnt}.png">
                                    <img src="images/style/top-${json_data[iii].slog_top}.png" >
                                </div>
                                <h1 class="pull-L">${json_data[iii].name}</h1>
                                <h2 class="pull-L">(${getArabicNumbers(json_data[iii].lvl)})</h2>
                            </li>`;

            }

            if (json_data.length) {

                $("#g-search_result").show();
                $("#g-search_result ul").html(list);

            } else {

                $("#g-search_result").hide();
                $("#g-search_result ul").html("");

            }
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });
});


$(document).on("click", "#g-search_result .SearchGuildUnitRes", function() {

    var id_guild = parseInt($(this).attr("data-id-guild"));
    var guild_name = $(this).attr("data-g-name");

    $(".F_E-list .row-1 input").val(guild_name);
    $(".F_E-list .row-1 input").attr("data-id-guild", id_guild);
    $(".F_E-list .row-1 input").attr("data-g-name", guild_name);


    $("#g-search_result").hide();
    $("#g-search_result ul").html("");

});


$(document)['on']('click', '#submit-guild-relation', function() {
    var GuildRel = $('.F_E-list input[name=guild_relation]:checked')['val']();
    var idGuild = parseInt($('.F_E-list .row-1 input')['attr']('data-id-guild'));
    if (!idGuild) {
        alert_box.confirmMessage('عليك اختيار الحلف اولا');
        return;
    } else if (!GuildRel['length']) {
        alert_box.confirmMessage('اختار العلاقة بين الحلفين');
        return;
    }
    $.ajax({
        'url': API_URL + '/api/AGuild/changeGuildRelation',
        'data': {
            'idGuild': idGuild,
            'relation': GuildRel,
            'token': game.Config.OuthToken,
            'server': game.Config.idServer
        },
        'type': 'POST',
        'success': function(data, _0x5b5eee, _0x5af2f1) {
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);
            var JsonData = JSON.parse(data);
            if (JsonData.state == 'ok') {
                $('.close-alert').click();
                alert_box.succesMessage('تم اضافة العلاقة بين الحلفين بنجاح');
                Guild.getGuildData().done(function() {
                    if ($('.left-nav .selected')['attr']('head_title') === 'guild_data') {
                        $('.left-nav .selected').click();
                        game.World.Map.RefreshWorld();
                    }
                });
            } else if (JsonData['state'] == 'error_0')
                alert_box['failMessage']('لست عضو فى الحلف');
            else if (JsonData['state'] == 'error_1')
                alert_box['failMessage']('رتيتك فى الحلف لا تسمح');
            else if (JsonData['state'] == 'error_2')
                alert_box['failMessage']('نوع العلاقة غير صالحة')
            else
                alert(data);

        },
        'error': function(_0xf6addd, _0x324ef9, _0x45d39a) {}
    });
});


/*
 * 
 *        GUILD INVITE PLAYER 
 */

$(document).on("click", "#invite-g", function() {

    var content = alert_box.alert_content_Guild_Invite();
    var box = `   <div id="over_lay_alert">   
                            <div id="guild-alert-box">    
                                <div id="alert_head">          
                                    <div>               
                                        <img src="images/panner/king_name.png">       
                                    </div>       
                                    <div id="alert-title">دعوة املك
                                    </div>           
                                    <img src="images/btns/close_b.png" class="img-sml close-alert">  
                                </div>  
                                   ${content}
                            </div>
                        </div>`;
    $("body").append(box);

});


$(document).on("keyup", "#search_by_name_forGuild", function() {

    var segmant = $(this).val();

    if ($.trim(segmant) !== "") {

        searchByName(segmant, true);

    } else {
        $("#search_result ul").empty();
        $("#search_result ").hide();
    }


});


$(document).on("click", "#submit-guild-invite", function() {

    var id_player = parseInt($("#search_by_name_forGuild").attr("id_player"));

    if (!id_player) {

        alert_box.confirmMessage("يجب عليك اختيار ملك");
        return;

    }


    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/AGuildInvReq/sendGuildJoinInv`,
        data: {
            idPlayerToInvite: id_player,
            token: game.Config.OuthToken
        },
        type: 'POST',
        beforeSend: function(xhr) {},
        success: function(data, textStatus, jqXHR) {
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state == "ok") {
                $(".close-alert").click();
                if ($("#guild-g_relation").length > 0) {
                    showInVitedMembers();
                }
                alert_box.succesMessage('تم ارسال الدعوة بنجح');
                Guild.getGuildData();
            } else if (JsonObject.state == "error_0")
                alert_box.failMessage("اللاعب منضم فى حلف بالفعل");
            else if (JsonObject.state == "error_1")
                alert_box.failMessage("لست عضو فى أى حلف");
            else if (JsonObject.state == "error_3")
                alert_box.failMessage("رتبتك فى الحلف لا تسمح");


        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

});


/*  change  guild  slogan*/
$(document).on("click", "#change-g-slog", function() {


    if (!game.Guild.GuildData) {
        alert_box.confirmMessage("لا يمكن عرض هذا العنصر");
        return;
    }

    $("#alert_container").remove();

    var new_slogan_co = `<div id="alert_container" class="bg-general" style=" position:fixed; width: 560px; 
                                z-index:1000;left: 50%;margin-left: -280px; top: 150px; height: auto;
                                "> 
                            <div id="alert_head">    
                                <div>        
                                    <img src="images/panner/king_name.png">    
                                </div>       
                                <div id="alert-title">
                                    تعديل شعار
                                </div>            
                                <img src="images/btns/close_b.png" class="img-sml close-alert_container">       
                            </div>
                            <div id="alert_box" class="guild_creat">        
                                <div class="row-one">
                                    <div class="pull-L left">
                                        <div class="guild_slogan">
                                            <img src="images/style/bottom-${game.Guild.GuildData.slog_btm}.png" data-place="bottom" data-cur_image="1">
                                            <img src="images/style/central-${game.Guild.GuildData.slog_cnt}.png" data-place="middle" data-cur_image="1">
                                            <img src="images/style/top-${game.Guild.GuildData.slog_top}.png" data-place="top" data-cur_image="1">

                                        </div>
                                    </div>
                                    <div class="pull-R right">
                                        <div class="nav_icon">
                                            <div class="pull-L loop-guild-slogan left-btn" data-direction="left" data-place="top"></div>
                                            <h1>${getArabicNumbers(game.Guild.GuildData.slog_top)}/21</h1>
                                            <div class="pull-R loop-guild-slogan right-btn" data-direction="right" data-place="top"></div>
                                        </div>
                                        <div class="nav_icon">
                                            <div class="pull-L loop-guild-slogan left-btn" data-direction="left" data-place="middle"></div>
                                            <h1>${getArabicNumbers(game.Guild.GuildData.slog_cnt)}/4</h1>
                                            <div class="pull-R loop-guild-slogan right-btn" data-direction="right" data-place="middle"></div>

                                        </div>
                                        <div class="nav_icon">
                                            <div class="pull-L loop-guild-slogan left-btn" data-direction="left" data-place="bottom"></div>
                                            <h1>${getArabicNumbers(game.Guild.GuildData.slog_top)}/5</h1>
                                            <div class="pull-R loop-guild-slogan right-btn" data-direction="right" data-place="bottom"></div>

                                        </div>
                                    </div>
                                </div>  
                                <div class="row-two bg-btn-blu" style="background-size: 105% 123%;
                                                    background-position: center;
                                                    background-repeat: no-repeat;
                                                    background-position-y: 0px;">
                                <input class="input" data-pastable="true" value="${game.Guild.GuildData.name}" id="newGuildNameInput">
                                </div>
                                <div class="row-three">        
                                    <div class="confim-btn">            
                                        <button  class="full-btn full-btn-2x  enter" id="updateGuildSlog"> تعديل الشعار</button>    

                                    </div>    
                                </div>
                            </div>    
                        </div>`;
    $("body").append(new_slogan_co);

});


/*
 * send join reqest for guild
 */
$(document).on("click", "#send-guild-req button", function() {

    var id_guild = parseInt($(this).attr("data-id-guild"));

    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/AGuildInvReq/sendGuildRequest`,
        data: {
            idGuild: id_guild,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {

                alert_box.succesMessage("تم ارسال الدعوة الى المسؤلين للانضمام للحلف");
                $(".close_use_menu").click();
            } else if (JsonObject.state == "error_0")
                alert_box.failMessage("لست منضم فى أى حلف");



        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

});


/*
 *  player cansel his own invetation  
 * 
 */

function canselGuildInvetation(id_player, id_guild) {

    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/AGuildInvReq/rejectGuildInv`,
        data: {
            idGuild: id_guild,
            token: game.Config.OuthToken
        },
        type: 'POST',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {

                alert_box.succesMessage("تم الغاء  دعوة الانضمام بنجاح");
                $(".close_use_menu").click();
                Guild.getGuildData();
            }


        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

}


/*
 *  player cansel his own invetation  
 * 
 */

function canselGuildJoinRequest(id_player, id_guild) {

    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/AGuildInvReq/cancelGuildRequest`,
        data: {
            idGuild: id_guild,
            server: game.Config.idServer,
            token: game.Config.OuthToken
        },
        type: 'POST',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {

                alert_box.succesMessage("تم الغاء طلب الانضمام بنجاح");
            }


        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

}


$(document).on("click", "#cansel-guild_inv", function() {

    var id_guild = parseInt($(this).attr("data-id-guild"));
    var id_player = parseInt(game.DPlayer.Player.id_player);

    canselGuildInvetation(id_player, id_guild);
    $(this).parents(".tr").html("");

});


$(document).on("click", "#cansel-guild_req", function() {

    var id_guild = parseInt($(this).attr("data-id-guild"));
    var id_player = parseInt(game.DPlayer.Player.id_player);

    canselGuildJoinRequest(id_player, id_guild);
    $(this).parents(".tr").html("");
    $(".close_use_menu").click();
});



/*
 * 
 * accept guild invetation
 * 
 */
$(document).on("click", ".accept-guild-inv", function() {

    var id_guild = parseInt($(this).attr("data-id-guild"));

    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/AGuildInvReq/acceptGuildInv`,
        data: {
            idGuild: id_guild,
            token: game.Config.OuthToken
        },
        type: 'POST',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {

                Player_profile.getPlayerGuildData();

                Guild.getGuildData();
                $("#select_from").remove();
                alert_box.succesMessage("تم انضمامك للحلف واصبحت عضو فيه");
                Player_profile.refresh_player_data();
            }
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

});

/*________________________________ACTIONS MADE PY GUILD ADMINS ____________________*/


$(document).on("click", "#isolate-guild-member", function() {

    var rank_member = parseInt($(this).parents(".tr").attr("data-member-rank"));
    var id_member = parseInt($(this).parents(".tr").attr("data-id-member"));

    if (rank_member < parseInt(game.DPlayer.GuildData.rank)) {

        $.ajax({

            url: `${API_URL}/api/AGuildMember/removeFromPosition`,
            data: {

                idMember: id_member,
                offset: 0,
                token: game.Config.OuthToken,
                server: game.Config.idServer

            },
            type: 'POST',
            beforeSend: function(xhr) {},
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    if ($("#guild-g_relation").length > 0) {
                        var offset = Number($("#AFTER-AJAX-allMember .tr:first-child").attr("data-offset")) || 0;
                        Guild.getGuildMemeber(offset);

                    }
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });


    } else {

        alert_box.confirmMessage("لا يمكنك عزل هذا العضو حيث ان رتبته اعلى منك");
        return;

    }

});


/*                  ترقية عضو داخل الحلف*/
$(document).on("click", "#promote-guild-member", function() {


    $(".promote-guild-member").remove();
    var adder = `<ul class="drop-down-li promote-guild-member" style="display: block;">

                        ${game.DPlayer.GuildData.rank > 5 ? `<div data-promrote-to="5"> نائب مدير</div>` : ""}
                        <div data-promrote-to="4">وزير</div>
                        <div data-promrote-to="3">مستشار</div>
                        <div data-promrote-to="2">عضو كبير</div>
                        <div data-promrote-to="1">عضو رسمى</div>
                </ul>`;

    $(adder).insertAfter($(this));

});

$(document).on("click", ".promote-guild-member div", function() {

    var id_member = parseInt($(this).parents(".drop-down-li").parents(".tr").attr("data-id-member")) || 0;
    var promotion = $(this).attr("data-promrote-to");

    if (parseInt(ID_PLAYER) === parseInt(id_member)) {

        alert_box.confirmMessage("لا يمكنك ترقية نفسك  يا حج :D");
        return;

    } else if (parseInt(game.DPlayer.GuildData.rank < 5)) {

        alert_box.confirmMessage("انت فى منصب  لا يسمح لك بترقية الاخرين");
        return;

    } else {

        $.ajax({

            url: `${API_URL}/api/AGuildMember/promotMember`,
            data: {
                idMember: id_member,
                offset: 0,
                newRank: promotion,
                token: game.Config.OuthToken,
                server: game.Config.idServer

            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {


                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    if ($("#guild-g_relation").length > 0) {

                        var offset = Number($("#AFTER-AJAX-allMember .tr:first-child").attr("data-offset")) || 0;
                        Guild.getGuildMemeber(offset);

                    }

                } else if (JsonObject.state === "error_6") {

                    alert_box.confirmMessage(`يوجد عدد كافى من ${guild_ranks[promotion].ar_title} لتتطوير هذا العضو عليك عزل ${guild_ranks[promotion].ar_title} اخر`);

                } else if (JsonObject.state === "error_3") {

                    alert_box.confirmMessage("انت لا تملك المنصب المناسب لترقة هذا العضو");

                } else {

                    alert(data)

                }

            },
            beforeSend: function(xhr) {

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    }



});


/*                             تبادل المناصب                                 */
$(document).on("click", "#trade-guild-position", function() {

    var rank_member = parseInt($(this).parents(".tr").attr("data-member-rank"));
    var id_member = parseInt($(this).parents(".tr").attr("data-id-member"));

    if (parseInt(game.DPlayer.GuildData.rank) === Guild.RANK_DATA.LEADER) {




        if (!confirm("تاكيد نقل منصب المدير الى شخص اخر بالحلف")) {

            alert_box.confirmMessage("تم الغاء الطلب");
            return;

        }

    }

    if (rank_member >= parseInt(game.DPlayer.GuildData.rank)) {


        alert_box.confirmMessage("لا يمكنك تبادل مناصب اعلى او فى نفس مستوى منصبك");
        return;

    } else if (id_member === parseInt(game.DPlayer.Player.id_player)) {

        alert_box.confirmMessage("لا يمكنك تبادل مناصب مع نفسك");
        return;

    } else {

        $.ajax({

            url: `${API_URL}/api/AGuildMember/tradePosition`,
            data: {
                idMember: id_member,
                offset: 0,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    //Guild.content_forRelation();
                    var offset = Number($("#AFTER-AJAX-allMember .tr:first-child").attr("data-offset")) || 0;
                    Guild.getGuildMemeber(offset);

                } else if (JsonObject.state === "error_3") {

                    alert_box.confirmMessage("لا يمكنك تبادل مناصب اعلى او فى نفس مستوى منصبك");

                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    }

});
$(document).on("click", ".mem-prize-percent", function() {

    var rank_member = parseInt($(this).parents(".tr").attr("data-member-rank"));
    var id_member = parseInt($(this).parents(".tr").attr("data-id-member"));
    var prize_share = parseInt($(this).parents(".tr").attr("data-prize-share"));

    if (Number(game.DPlayer.GuildData.rank) < Guild.RANK_DATA.LEADER) {

        alert_box.confirmMessage("لا يمكن الا للمدير بتعديل نسب الجوائز للاعب")

    }

    var content = `
                تاكيد تعديل نسبة الجوائز للاعب </br>
                <input id="modfie-prize-share-input" type="text" class="only_num input" value="${prize_share}" 
                    max="${Math.max(100 - Number(game.Guild.GuildData.total_prize_share) + prize_share, 0)}" 
                    min="0" step="1"/>`;

    alert_box.confirmDialog(content, function() {

        var newVal = Number($("#modfie-prize-share-input").val());
        if (newVal > Math.max(100 - Number(game.Guild.GuildData.total_prize_share) + prize_share, 0) ||
            newVal < 0) {
            alert_box.failMessage("نسبة الجوائز غير مسموح بيها");
            return;
        }
        $.ajax({
            url: `${API_URL}/api/AGuildMember/modifyPrizeShare`,
            data: {
                idMember: id_member,
                offset: 0,
                newPrizeShare: newVal,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (isJson(data)) {

                    var jsonData = JSON.parse(data);

                    if (jsonData.state === "ok") {

                        var offset = Number($("#AFTER-AJAX-allMember .tr:first-child").attr("data-offset")) || 0;
                        Guild.getGuildMemeber(offset);

                    } else if (jsonData.state === "error_1") {
                        alert_box.failMessage("هذا اللاعب غير موجود بالحلف الحالى");
                    } else if (jsonData.state === "error_4") {
                        alert_box.failMessage("النسبة الجديدة غير مسموح بها");
                    } else if (jsonData.state === "error_5") {
                        alert_box.failMessage("لا توجد نسب كافية لهذا اللاعب");
                    }


                } else {
                    alert(data);
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    });




});

/*                     طرد لاعب  */
$(document).on("click", "#fire-guild-mamber", function() {

    var id_member = parseInt($(this).parents(".tr").attr("data-id-member"));
    var rank_member = parseInt($(this).parents(".tr").attr("data-member-rank"));

    if (!id_member) {

        return;

    }

    alert_box.confirmDialog("تاكيد طرد اللاعب ", function() {

        if (rank_member === 0) {

            $.ajax({

                url: `${API_URL}/api/AGuildMember/fireMember`,
                data: {
                    idMember: id_member,
                    offset: 0,
                    token: game.Config.OuthToken,
                    server: game.Config.idServer
                },
                type: 'POST',
                success: function(data, textStatus, jqXHR) {

                    if (!game.LBase.isJson(data))
                        return game.LBase.Error(data);

                    var JsonObject = JSON.parse(data);

                    if (JsonObject.state === "ok") {

                        var offset = Number($("#AFTER-AJAX-allMember .tr:first-child").attr("data-offset")) || 0;
                        Guild.getGuildMemeber(offset);
                        alert_box.succesMessage("تم حذف العضو بنجاح");

                    } else if (data === "error_0") {

                        alert_box.confirmMessage("انت لست فى منصب يسمح لك ذالك");

                    }

                },
                error: function(jqXHR, textStatus, errorThrown) {

                }

            });


        } else {

            alert_box.confirmMessage("لا يمكنك طرد عضو موجود بمنصب");

        }


    });

});


/*                                                 خروج من الحلف*/
$(document).on("click", '#get-out-guild , #leave-g', function() {


    if (parseInt(game.DPlayer.GuildData.rank) > 0) {

        alert_box.confirmMessage("لا يمكنك الخروج من الحلف عليك التخلى عن منصبك اولا ");
        return;

    }

    alert_box.confirmDialog("تاكيد الخروج من الحلف", function() {

        $.ajax({

            url: `${API_URL}/api/AGuild/quitFromGuild`,
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    $(".close_dialog").click();
                    Player_profile.getPlayerGuildData();
                    Player_profile.getPlayerBaseData();
                    $("#player_guild span").html("");
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    });

});

$(document).on("click", "#stepdown-guild-mamber , #resignation-g", function() {

    if (parseInt(game.DPlayer.GuildData.rank) === Guild.RANK_DATA.LEADER) {

        alert_box.confirmMessage("عليك التنازل  لاحد اعضاء الحلف بمنصب المدير");
        return;

    }

    alert_box.confirmDialog("تاكيد الاستقالة من الحلف ( ستصبح عضو عادى تاخل الحلف)", function() {

        $.ajax({

            url: `${API_URL}/api/AGuild/resignFromPosition`,
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    Player_profile.getPlayerGuildData();
                    var offset = Number($("#AFTER-AJAX-allMember .tr:first-child").attr("data-offset")) || 0;
                    Guild.getGuildMemeber(offset);

                }
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    });

});


/*                                   distroy guild                             */
$(document).on("click", "#destroy-g", function() {

    if (Number(game.DPlayer.GuildData.rank) !== Guild.RANK_DATA.LEADER) {

        alert_box.confirmMessage("يجب انت تكون مدير الحلف   لتتمكن من تفكيك الحلف");
        return;

    }

    alert_box.confirmDialog("تاكيد تفكيك الحلف , اذا تم تاكيد تفكيك الحلف سيتم طرد جميع الاعضاء ولن تتمكن من  ارجاع الحلف ثانية", function() {

        $.ajax({

            url: `${API_URL}/api/AGuild/disbandGuild`,
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    Player_profile.getPlayerGuildData();
                    alert_box.succesMessage("تم تفكيك الحلف بنجاح");
                    $(".close_dialog").click();

                } else {
                    alert(data);
                }


            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    });

});



/*  upgrade guild page*/

$(document).on("click", "#upgrade_guild", function() {

    if (game.DPlayer.GuildData.rank < Guild.RANK_DATA.MENSTER) {

        alert_box.confirmMessage("منصبك  لا يسمح لك بتتطوير الحلف");
        return;

    }

    $.ajax({

        url: `${API_URL}/api/AGuild/upgradeUsingRes`,
        data: {
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {


            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {
                alert_box.succesMessage("تم تطوير الحلف");
                Guild.getGuildData();
                $(".left-nav .selected").click();
            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

});

$(document).on("click", "#navigate-member-guild-list .move_g_page", function() {

    var move_direction = $(this).attr("data-move");
    var last_offset = $("#guild-g_relation .left-content .tr:last-child").attr("data-offset");
    var first_offset = $("#guild-g_relation .left-content .tr:first-child").attr("data-offset");
    if (move_direction === "right") {
        if (Number(last_offset) === Number(game.Guild.GuildData.mem_num) - 1 || !last_offset) {
            return;
        } else {
            Guild.getGuildMemeber(Number(last_offset) + 1);
        }
    } else if (move_direction === "left") {
        if (Number(first_offset) === 0) {
            return;
        } else {
            Guild.getGuildMemeber(Number(first_offset) - 10);
        }
    } else if (move_direction === 'most-right') {
        Guild.getGuildMemeber(Math.floor(game.Guild.GuildData.mem_num - game.Guild.GuildData.mem_num % 10));
    } else {
        Guild.getGuildMemeber(0);
    }

});

//<img class="close close_use_menu" id="closeGuildSelFrom" src="images/btns/close_b.png" onclick="">
$(document).on("click", "#closeGuildSelFrom", function() {
    $('#select_from').remove();
});
//<button id="conf_creat_guild" class="full-btn full-btn-2x  enter" onclick="Guild.create()" >تاكيد وانشاء</button> 
$(document).on("click", "#conf_creat_guild", function() {
    Guild.create();
});

//<button  class="full-btn full-btn-2x  enter" id="updateGuildSlog" onclick="BoxOfMatrialToUse(['family_slogan'], 'change_g_slog')"> تعديل الشعار</button>
$(document).on("click", "#updateGuildSlog", function() {
    BoxOfMatrialToUse(['family_slogan'], 'change_g_slog');
});
var MSG_NUM;


function refreshMsg() {

    $.ajax({
        url: "api/message.php",
        data: {
            MSG_NUMBERS: true,
            id_player: ID_PLAYER,
            token: TOKEN
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            MSG_NUM = JSON.parse(data);

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

}

refreshMsg();

function getReports(offset) {

    if (offset === undefined) {
        offset = 0;
    }

    return $.ajax({
        url: "api/battelReport.php",
        data: {
            get_report: true,
            offset: offset,
            id_player: ID_PLAYER,
            token: TOKEN
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (isJson(data)) {
                var reports = JSON.parse(data);
            } else {
                alert(data);
            }

            if (reports) {

                var header = "";
                for (var iii = 0; iii < 10; iii++) {
                    if (reports[iii]) {
                        header += `<div class="tr  ${parseInt(reports[iii].seen) === 0 ? "not-seen" : ""}" id_report="${reports[iii]["id_report"]}"  id_msg="${reports[iii]["id_report"]}" 
                                            table="report_player" db_offset="${parseInt(offset)+iii}" data-x-coord="${reports[iii].x}" 
                                             data-y-coord="${reports[iii].y}" data-time-stamp="${reports[iii].time_stamp}" data-report-for="${reports[iii].type}"
                                            data-seen="${reports[iii].seen}">
                                            <div class="td_1">
                                                <input name="msg_sel" id="check_${iii}" class="msg-action" type="checkbox" style="display:none">
                                                <label for="check_${iii}" class="checker"></label>
                                            </div>
                                            <div class="td_3">${getReportTitle(reports[iii]["t"] , reports[iii]["lvl"] , reports[iii]["x"] , reports[iii]["y"])}</div>
                                            <div class="td_5">${reports[iii]["time_stamp"]}</div>
                                            <div class="td_6"><div class="full-btn full-btn-3x show_battel_report">${Translate.Button.MenuList.View[UserLag.language]}</div></div>
                                        </div>`;
                    } else {
                        header += `<div class="tr"></div>`;
                    }
                }
                var output = `<div class="box_content for_msg for_Br ">
                                        <div class="left-content full">
                                            <div class="th">
                                            <div class="td_1 ellipsis">${Translate.Title.TH.Select[UserLag.language]}</div>
                                            <div class="td_3 ellipsis subject">${Translate.Title.TH.Subject[UserLag.language]}</div>
                                            <div class="td_5 ellipsis">${Translate.Title.TH.TimeOfreceipt[UserLag.language]}</div>
                                            <div class="td_6 ellipsis">${Translate.Button.General.Action[UserLag.language]}</div>
                                        </div>
                                            ${header}
                                        </div>
                                        ${message.footer("report_player" , offset)}
                                    </div>`;
                $(".box_content").replaceWith(output);


            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });
}

function getSpyReports(offset) {

    if (offset === undefined) {

        offset = 0;

    }
    return $.ajax({


        url: "api/battelReport.php",
        data: {
            get_spy_report: true,
            offset: offset,
            id_player: ID_PLAYER,
            token: TOKEN
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (isJson(data)) {
                var reports = JSON.parse(data);
            } else {
                alert(data);
            }

            if (reports) {

                var header = "";
                for (var iii = 0; iii < 10; iii++) {
                    if (reports[iii]) {
                        var seen = "";
                        if (Number(reports[iii].id_player) === Number(game.DPlayer.Player.id_player)) {
                            seen = Number(reports[iii].seen) === 0 ? "not-seen" : "";
                        }
                        header += `<div class="tr  ${seen}" id_report="${reports[iii]["id_report"]}"  id_msg="${reports[iii]["id_report"]}" 
                                            table="spy_report" db_offset="${parseInt(offset)+iii}" data-x-coord="${reports[iii].x}" 
                                            data-y-coord="${reports[iii].y}" data-time-stamp="${reports[iii].time_stamp}" 
                                            data-id-player = "${reports[iii].id_player}"
                                            data-report-for="${reports[iii].type}"  data-spy-for="${reports[iii].spy_for}" data-seen="${reports[iii].seen}">
                                            <div class="td_1">
                                                <input name="msg_sel" id="check_${iii}" class="msg-action" type="checkbox" style="display:none">
                                                <label for="check_${iii}" class="checker"></label>
                                            </div>
                                            <div class="td_3">${getSpyReportTitle(reports[iii]["t"] , reports[iii]["l"] , reports[iii]["x"] , reports[iii]["y"])}</div>
                                            <div class="td_5">${reports[iii]["time_stamp"]}</div>
                                            <div class="td_6"><div class="full-btn full-btn-3x show_spy_report" data-id-victim=${Number(reports[iii].victim)}>${Translate.Button.MenuList.View[UserLag.language]}</div></div>
                                        </div>`;
                    } else {
                        header += `<div class="tr"></div>`;
                    }
                }
                var output = `<div class="box_content for_msg for_Br  for_SR">
                                        <div class="left-content full">
                                            <div class="th">
                                                <div class="td_1 ellipsis">${Translate.Title.TH.Select[UserLag.language]}</div>
                                                <div class="td_3 ellipsis subject">${Translate.Title.TH.Subject[UserLag.language]}</div>
                                                <div class="td_5 ellipsis">${Translate.Title.TH.TimeOfreceipt[UserLag.language]}</div>
                                                <div class="td_6 ellipsis">${Translate.Button.General.Action[UserLag.language]}</div>
                                            </div>
                                            ${header}
                                        </div>
                                        ${message.footer("spy_report" , offset)}
                                    </div>`;
                $(".box_content").replaceWith(output);


            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });
}

var message = {

    dialogBoxContent_battelReport: function(offset) {
        if (offset === undefined) {

            offset = 0;

        }
        getReports(offset);

    },
    dialogBoxContent_spyReport: function(offset) {
        if (offset === undefined) {

            offset = 0;

        }
        getSpyReports(offset);

    },
    dialogBoxcontent_msgIncome: function(offset) {
        if (offset === undefined) {

            offset = 0;

        }


        var output = ` <div class="box_content for_msg">
                            <div class="left-content full">
                                <div class="th">
                                    <div class="td_1 ellipsis">${Translate.Title.TH.Select[UserLag.language]}</div>
                                    <div class="td_2 ellipsis">${Translate.Title.TH.Sender[UserLag.language]}</div>
                                    <div class="td_3 ellipsis subject">${Translate.Title.TH.Subject[UserLag.language]}</div>
                                    <div class="td_5 ellipsis">${Translate.Title.TH.TimeOfreceipt[UserLag.language]}</div>
                                    <div class="td_6 ellipsis">${Translate.Button.General.Action[UserLag.language]}</div>
                            </div>
                        `;
        $.ajax({

            url: "api/message.php",
            data: {
                get_msg_income: true,
                offset: offset,
                id_player: ID_PLAYER,
                token: TOKEN
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {
                console.log(data)
                var json_data = JSON.parse(data);


                for (var iii = 0; iii < 10; iii++) {

                    if (json_data[iii]) {
                        output += `<div class="tr ${parseInt(json_data[iii].seen) === 0 ? "not-seen" : "seen"} ${parseInt(json_data[iii].from_) === 1 ? "sys-msg" : ""} ${parseInt(json_data[iii].from_) === 2 ? "g-msg" : ""}"
                                            data-seen="${json_data[iii].seen}" id_msg="${json_data[iii].id_msg}" table="msg_income" db_offset="${parseInt(offset)+iii}">
                                        <div class="td_1">
                                            <input name="msg_sel" id="check_${iii}" class="msg-action" type="checkbox" style="display:none">
                                            <label for="check_${iii}" class="checker"></label>
                                           
                                        </div>
                                        <div class="td_2">${json_data[iii].name}</div>
                                        <div class="td_3">${json_data[iii].head}</div>
                                        <div class="td_5">${json_data[iii].time_stamp}</div>
                                        <div class="td_6">
                                            <div class="full-btn full-btn-3x  show_msg_income ">${Translate.Button.MenuList.View[UserLag.language]}</div>
                                        </div>
                                    </div>`;
                    } else {
                        output += `<div class="tr"></div>`;
                    }
                }
                output += `

                            </div>
                            ${message.footer("msg_income" , offset)}
                        </div>`;

                $(".box_content").replaceWith(output);




            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });





    },

    incomeMsgShow: function(id_msg, offset_parent) {

        var msg_data;
        $.ajax({
            url: "api/message.php",
            data: {
                get_income_msg_in_detail: true,
                id_message: id_msg,
                id_player: ID_PLAYER,
                token: TOKEN
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                msg_data = JSON.parse(data);
                var single_meassage = `  <div class="box_content for_msg" id="msg_income_detail">
                                            <div class="left-content full">
                                                <div class="upper">
                                                    <ol>
                                                        <li>
                                                             <span>: المرسل </span><span> ${msg_data[0].name}</span> 
                                                        </li>
                                                        <li>
                                                              <span>  : الموضوع  </span><span style="width: 256px;">${msg_data[0].head}</span>
                                                        </li>
                                                        <li>
                                                             <span> : التاريخ</span><span>${msg_data[0].time_stamp}</span>
                                                        </li>
                                                    </ol>
                                                </div>
                                                <div class="msg_body">
                                                    <p class ="selectable">
                                                        ${extractUrl(msg_data[0].body)}
                                                    </p>
                                                </div>

                                            </div>
                                            <div class="right-content-footer" rank_for="players">  
                                                <div class="buttons">  
                                                    <ul>  
                                                        <li id="back_to_msg" style=" float: right; width: 85px; margin-right: 50px;">  
                                                            <button class="full-btn full-btn-3x full" id="back_msg"  data-parent-offset="${offset_parent}" data-msg-for="msg_income">
                                                                عودة
                                                            </button>
                                                        </li>
                                                        <li  style=" float: right; width: 85px; margin-right: 10px;">  
                                                           ${parseInt(msg_data[0].from_) === 1 ? "" : ` <button class="full-btn full-btn-3x full" id="msg-reply" data-id-player="${msg_data[0].id_from}" data-player-name="${msg_data[0].name}" data-msg-head="${msg_data[0].head}">  رد </button>`}
                                                        </li>

                                                    </ul>  
                                                </div>  
                                            </div> 
                                        </div>`;
                $(".box_content").replaceWith(single_meassage);
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    },
    dialogBoxcontent_msgDiff: function(offset) {
        if (offset === undefined) {

            offset = 0;

        }

        var output = ` <div class="box_content for_msg ">
                            <div class="left-content full">
                                <div class="th">
                                    <div class="td_1 ellipsis">${Translate.Title.TH.Select[UserLag.language]}</div>
                                    <div class="td_2 ellipsis">${Translate.Title.TH.Sender[UserLag.language]}</div>
                                    <div class="td_3 ellipsis subject">${Translate.Title.TH.Subject[UserLag.language]}</div>
                                    <div class="td_5 ellipsis">${Translate.Title.TH.TimeOfreceipt[UserLag.language]}</div>
                                    <div class="td_6 ellipsis">${Translate.Button.General.Action[UserLag.language]}</div>
                                </div>`;
        $.ajax({

            url: "api/message.php",
            data: {
                get_msg_diff: true,
                offset: offset || 0,
                id_player: ID_PLAYER,
                token: TOKEN
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                var json_data = JSON.parse(data);

                for (var iii = 0; iii < 10; iii++) {

                    if (json_data[iii]) {
                        output += `<div class="tr ${parseInt(json_data[iii].seen) === 0 ? "not-seen" : "seen"}"
                                            data-seen="${json_data[iii].seen}" id_msg="${json_data[iii].id_msg}" data-seen="${json_data[iii].seen}"
                                            table="msg_diff" db_offset="${parseInt(offset)+iii}">
                                        <div class="td_1">
                                            <input name="msg_sel" id="check_${iii}" class="msg-action" type="checkbox" style="display:none">
                                            <label for="check_${iii}" class="checker"></label>
                                        </div>
                                        <div class="td_2">النظام</div>
                                        <div class="td_3">${json_data[iii].head}</div>
                                        <div class="td_5">${json_data[iii].time_stamp}</div>
                                        <div class="td_6"><div class="full-btn full-btn-3x  show_msg_income ">${Translate.Button.MenuList.View[UserLag.language]}</div></div>
                                    </div>`;
                    } else {
                        output += `<div class="tr"></div>`;
                    }
                }
                output += `

                                </div>
                                ${message.footer("msg_diff" , offset)}
                            </div>`;
                $(".box_content").replaceWith(output);

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });





    },
    diffMsgShow: function(id_msg, offset_parent) {
        var msg_data;
        $.ajax({
            url: "api/message.php",
            data: {
                get_diff_msg_in_detail: true,
                id_message: id_msg,
                id_player: ID_PLAYER,
                token: TOKEN
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                msg_data = JSON.parse(data);
                var single_meassage = `  <div id="msg_diff_detail" class="box_content for_msg">
                                            <div class="left-content full">
                                                <div class="upper">
                                                    <ol>
                                                        <li>

                                                        </li>
                                                        <li>
                                                              <span>  : الموضوع  </span><span>${msg_data[0].head}</span>
                                                        </li>
                                                        <li>
                                                             <span> : التاريخ</span><span>${msg_data[0].time_stamp}</span>
                                                        </li>
                                                    </ol>
                                                </div>
                                                <div class="msg_body">
                                                    <p>
                                                        ${msg_data[0].body}
                                                    </p>
                                                </div>

                                            </div>
                                            <div class="right-content-footer" rank_for="players">  
                                                <div class="buttons">  
                                                    <ul>  
                                                        <li id="back_to_msg" style=" float: right; width: 85px; margin-right: 50px;">  
                                                            <button class="full-btn full-btn-3x full" id="back_msg"  data-parent-offset="${offset_parent}" data-msg-for="msg_diff">
                                                                عودة
                                                            </button>
                                                        </li>
                                                        <li style=" float: right; width: 85px; margin-right: 10px;">  
                                                             <button class="full-btn full-btn-3x full" id="msg-reply" data-id-player="${msg_data[0].id_from}" data-player-name="${msg_data[0].name}" data-msg-head="${msg_data[0].head}">  رد </button>
                                                        </li>

                                                    </ul>  
                                                </div>  
                                            </div> 
                                        </div>`;
                $(".box_content").replaceWith(single_meassage);
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });



    },
    dialogBoxcontent_msgOutcome: function(offset) {

        if (offset === undefined) {

            offset = 0;

        }
        var output = ` <div class="box_content for_msg ">
                            <div class="left-content full">
                                <div class="th">
                                    <div class="td_1 ellipsis">${Translate.Title.TH.Select[UserLag.language]}</div>
                                    <div class="td_2 ellipsis">${Translate.Title.TH.Recipient[UserLag.language]}</div>
                                    <div class="td_3 ellipsis subject">${Translate.Title.TH.Subject[UserLag.language]}</div>
                                    <div class="td_5 ellipsis">${Translate.Title.TH.TimeOfreceipt[UserLag.language]}</div>
                                    <div class="td_6 ellipsis">${Translate.Button.General.Action[UserLag.language]}</div>
                                </div>`;
        $.ajax({

            url: "api/message.php",
            data: {
                get_msg_outcome: true,
                offset: offset || 0,
                id_player: ID_PLAYER,
                token: TOKEN
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                var json_data = JSON.parse(data);
                if (json_data.length > 0) {
                    for (var iii = 0; iii < 10; iii++) {

                        if (json_data[iii]) {
                            output += `<div class="tr" id_msg="${json_data[iii].id_msg}" data-seen="${json_data[iii].seen}" table="msg_out" db_offset="${parseInt(offset)+iii}">
                                        <div class="td_1">
                                            <input name="msg_sel" id="check_${iii}" class="msg-action" type="checkbox" style="display:none">
                                            <label for="check_${iii}" class="checker"></label>
                                        </div>
                                        <div class="td_2">${json_data[iii].name}</div>
                                        <div class="td_3">${json_data[iii].head}</div>
                                        <div class="td_5">${json_data[iii].time_stamp}</div>
                                        <div class="td_6"><div class="full-btn full-btn-3x  show_msg_income ">${Translate.Button.MenuList.View[UserLag.language]}</div></div>
                                    </div>`;
                        } else {
                            output += `<div class="tr"></div>`;
                        }
                    }
                    output += `

                               </div>
                               ${message.footer("msg_out" , offset)}
                           </div>`;
                    $(".box_content").replaceWith(output);
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });





    },

    outcomeMsgShow: function(id_msg, offset_parent) {
        var msg_data;
        $.ajax({
            url: "api/message.php",
            data: {
                get_out_msg_in_detail: true,
                id_message: id_msg,
                id_player: ID_PLAYER,
                token: TOKEN
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                msg_data = JSON.parse(data);
                var single_meassage = `  <div class="box_content for_msg">
                                            <div class="left-content full">
                                                <div class="upper">
                                                    <ol>
                                                        <li>
                                                             <span>: المرسل </span><span> ${msg_data[0].name}</span> 
                                                        </li>
                                                        <li>
                                                              <span>  : الموضوع  </span><span>${msg_data[0].head}</span>
                                                        </li>
                                                        <li>
                                                             <span> : التاريخ</span><span>${msg_data[0].time_stamp}</span>
                                                        </li>
                                                    </ol>
                                                </div>
                                                <div class="msg_body">
                                                    <p class ="selectable">
                                                        ${extractUrl(msg_data[0].body)}
                                                    </p>
                                                </div>

                                            </div>
                                            <div class="right-content-footer" rank_for="players">  
                                                <div class="buttons">  
                                                    <ul>  
                                                        <li id="back_to_msg" style=" float: right; width: 85px; margin-right: 50px;">  
                                                            <button class="full-btn full-btn-3x full" id="back_msg"  data-parent-offset="${offset_parent}" data-msg-for="msg_out">
                                                                عودة
                                                            </button>
                                                        </li>
                                                        <li  style=" float: right; width: 85px; margin-right: 10px;">  
                                                            <button class="full-btn full-btn-3x full" id="msg-reply" data-id-player="${msg_data[0].id_from}" data-player-name="${msg_data[0].name}" data-msg-head="${msg_data[0].head}">  رد </button>
                                                        </li>

                                                    </ul>  
                                                </div>  
                                            </div> 
                                        </div>`;

                $(".box_content").replaceWith(single_meassage);
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });



    },
    /*
     *  
     *  
     */
    dialogBoxcontent_msgWrite: function(to, subject) {
        var msg_data;

        var single_meassage = `  <div class="box_content for_msg">
                                    <div class="left-content full">
                                        <div class="upper">
                                            <ol>
                                                <li>
                                                     <span>: المرسل </span><span> ${player.name}</span> 
                                                </li>
                                                <li>
                                                      <span>  : الموضوع  </span><input type="text" class="input" value="${subject|| ''}" style=" width: 76% ;" id="subject_to_mail"/>
                                                </li>
                                                <li>
                                                    <span> : المستقبل</span>
                                                    <input type="text" class="input" value="${to? to.name : ''}" style=" width: 59%;" ${to ? (to.id === null ? "" : `id_player="${to.id}"` )  : ""} id="${to ? (to.id === null ? "" : "search_by_name" )  : "search_by_name"}" />
                                                </li>
                                            </ol>
                                            ${to ? ""   : ` <div id="search_result" class="search_res">
                                                                <ul>

                                                                </ul>
                                                            </div>`}
                                        </div>
                                        <div class="msg_body">
                                            
                                            <textarea class ="selectable"></textarea>
                                           
                                        </div>

                                    </div>
                                    <div class="right-content-footer" rank_for="players">  
                                        <div class="buttons">  
                                            <ul>  
                                                <li id="back_to_msg" style=" float: right; width: 85px; margin-right: 50px;">  
                                                    <button class="full-btn full-btn-3x full" id="get-out-of-msgout">
                                                        عودة
                                                    </button>
                                                </li>
                                                <li  style=" float: right; width: 85px; margin-right: 10px;">  
                                                    <button class="full-btn full-btn-3x full" id="${to ? (to.id === null ? "send_mail_to_guild" : "send_mail_to" ) : "send_mail_to"}">
                                                        ارسال
                                                    </button>
                                                </li>

                                            </ul>  
                                        </div>  
                                    </div> 
                                </div>`;
        return single_meassage;
    },
    footer: function(table, offset) {

        var footer = `   <div class="right-content-footer" msg_for="${table}">  
                            <div class="buttons">  
                                <ul style="overflow: auto; height: 100%;">  
                                    <li>  
                                        <div class="full-btn full-btn-3x" id="select_msg_all">  
                                            ${Translate.Button.MenuList.ToggelAll[UserLag.language]}   
                                        </div>  
                                    </li> 
                                    

                                    <li id="nav_input">  
                                        <div class="full-btn full-btn-3x full" id="del_selected">  
                                            ${Translate.Button.MenuList.DeleteSelected[UserLag.language]}   
                                        </div> 
                                    </li>

                                    <li id="delete-all">  
                                        <button class="full-btn full-btn-3x full">  
                                            ${Translate.Button.MenuList.DeleteAll[UserLag.language]}   
                                        </button> 
                                    </li>
                                    ${
                                    table !== undefined ? 
                                        `<li>
                                            <div id="move_msg_left" msg_type="${table}"  class="left pull-L move_msg left-btn"> </div>
                                            <h1 class="pull-L" id="msg-navigator"> <span>${getArabicNumbers(parseInt(offset)/10+1)}</span>/${getArabicNumbers(Math.ceil(MSG_NUM[table]/10) || 0)}</h1>
                                            <div id="move_msg_right" msg_type="${table}" class="right pull-R move_msg right-btn" ></div>
                                        </li>` : ""
                                    
                                    }
                                </ul>  
                            </div>  

                        </div> `;
        return footer;
    }
};





$(document).on("click", ".show_msg_income", function() {

    var id_msg = $(this).parents(".tr").attr("id_msg");
    var table = $(this).parents(".tr").attr("table");
    var seen = $(this).parents(".tr").attr("data-seen");
    var offset = $(".for_msg  .tr:first").attr("db_offset");
    if (table === "msg_diff") {
        message.diffMsgShow(id_msg, offset);
        if (Number(seen) === 0) {
            PLAYER_NOTIF.msg_diff--;
        }
    } else if (table === "msg_income") {
        message.incomeMsgShow(id_msg, offset);
        if (Number(seen) === 0) {
            PLAYER_NOTIF.msg_in--;
        }
    } else if (table === "msg_out") {
        message.outcomeMsgShow(id_msg, offset);
    }
    Fixed.refreshPlayerNotif();
});


/*                     SELECT ALL MESSAGEES             */
$(document).on("click", "#select_msg_all", function() {

    $(".msg-action").prop("checked", true);

});

$(document).on("click", "#del_selected", function() {

    var total_msg = {
        table: null,
        id_msgs: []
    };

    $(".msg-action").each(function() {

        if ($(this).prop("checked") === true) {
            var id_msg = $(this).parents(".tr").attr("id_msg");
            var table = $(this).parents(".tr").attr("table");

            total_msg.id_msgs.push(id_msg);
            total_msg.table = table;
        }

    });

    if (total_msg.id_msgs.length < 1) {
        return;
    }

    $.ajax({

        url: "api/message.php",
        data: {
            delete_msg: true,
            msgs: JSON.stringify(total_msg),
            id_player: ID_PLAYER,
            token: TOKEN
        },
        type: 'POST',
        beforeSend: function(xhr) {},
        success: function(data, textStatus, jqXHR) {

            if (parseInt(data) > 0) {

                if (total_msg.table === "msg_income") {
                    message.dialogBoxcontent_msgIncome();
                } else if (total_msg.table === "msg_diff") {
                    message.dialogBoxcontent_msgDiff();
                } else if (total_msg.table === "msg_out") {
                    message.dialogBoxcontent_msgOutcome();
                } else if (total_msg.table === "report_player") {
                    message.dialogBoxContent_battelReport();
                } else if (total_msg.table === "report_player") {
                    message.dialogBoxContent_spyReport();
                }
                Player_profile.refreshPlayerNotif();
            }
        },
        error: function(jqXHR, textStatus, errorThrown) {
            alert(errorThrown);
        }

    });

});


$(document).on("click", "#delete-all button", function() {

    var total_msg = {
        table: null,
        id_msgs: []
    };
    total_msg.table = $(".right-content-footer").attr("msg_for")

    alert_box.confirmDialog("تأكيد حذف جميع الرسائل!..", function() {
        $.ajax({

            url: "api/message.php",
            data: {
                DELETE_ALL_UNREAD: true,
                msgs: JSON.stringify(total_msg),
                id_player: ID_PLAYER,
                token: TOKEN
            },
            type: 'POST',
            beforeSend: function(xhr) {},
            success: function(data, textStatus, jqXHR) {



                if (total_msg.table === "msg_income") {
                    message.dialogBoxcontent_msgIncome();
                } else if (total_msg.table === "msg_diff") {
                    message.dialogBoxcontent_msgDiff();
                } else if (total_msg.table === "msg_out") {
                    message.dialogBoxcontent_msgOutcome();
                } else if (total_msg.table === "report_player") {
                    message.dialogBoxContent_battelReport();
                } else if (total_msg.table === "report_player") {
                    message.dialogBoxContent_spyReport();
                }

                Player_profile.refreshPlayerNotif();


            },
            error: function(jqXHR, textStatus, errorThrown) {
                alert(errorThrown);
            }

        });
    });

});


function searchByName(segmant, condtion) {


    if (condtion === undefined) {

        var data_send = {
            search_by_name: true,
            name: segmant,
            id_player: ID_PLAYER,
            token: TOKEN
        };

    } else {

        var data_send = {
            search_by_name: true,
            name: segmant,
            id_guild_no: false,
            id_guild: game.DPlayer.Player.id_guild,
            id_player: ID_PLAYER,
            token: TOKEN

        };

    }

    $.ajax({

        url: "api/player.php",
        data: data_send,
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            var json_data = JSON.parse(data);
            var total = "";
            for (var iii = 0; iii < json_data.length; iii++) {
                if (json_data[iii]) {
                    total += ` <li id_player="${json_data[iii].id_player}" data-player-name="${json_data[iii].name}"> 
                                        <div class="pull-L">
                                            <img src="${game.BaseData.HeroAvatar[json_data[iii].avatar]}"/>
                                        </div>
                                        <h1 class="pull-L">${json_data[iii].name}</h1>
                                        <h2 class="pull-L">(${game.BaseData.Promotion[json_data[iii].porm].Title})</h2>
                                    </li>`;
                }
            }
            $("#search_result ").show();
            $("#search_result ul").html(total);
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

}



$(document).on("keyup", "#search_by_name", function() {

    var segmant = $(this).val();

    if ($.trim(segmant) !== "") {

        searchByName(segmant);

    } else {
        $("#search_result ul").empty();
        $("#search_result ").hide();
    }


});


$(document).on("click", "#search_result ul li", function() {

    var id_player = $(this).attr("id_player");
    var p_name = $(this).attr("data-player-name");
    $("#search_by_name").attr("id_player", id_player);
    $("#search_by_name").val(p_name);
    $("#search_by_name_forGuild").attr("id_player", id_player);
    $("#SearchByNameForTeam").attr("data-id-player", id_player);
    $("#search_by_name_forGuild").val(p_name);
    $("#search_result").hide();

});


$(document).on("click", "#send_mail_to", function() {

    var id_to = $("#search_by_name").attr("id_player");
    var subject = $("#subject_to_mail").val();
    var body = $(".msg_body textarea").val();


    if (!id_to) {
        alert_box.confirmMessage("لا يوجد لاعب بهذا الاسم الرجاء التاكد من اسم اللاعب");
        return;
    } else if ($.trim(subject) === "") {
        alert_box.confirmMessage("يجب ان تكون الرسالة بعنوان اكتب اسم موضوع الرسالة");
        return;
    } else if ($.trim(body) === "") {
        alert_box.confirmMessage("لا يمكنك ارسال رسالة فارغة");
        return;
    } else {

        $.ajax({

            url: "api/message.php",
            data: {
                send_mail_to: true,
                id_to: id_to,
                id_from: ID_PLAYER,
                body: body,
                subject: subject,
                token: TOKEN
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (data === 'done') {
                    $("#search_by_name").val("");
                    $("#subject_to_mail").val("");
                    $(".msg_body textarea").val("");

                } else {
                    alert(data);
                }


            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });


    }

});



$(document).on("click", ".move_msg", function() {

    var msg_for = $(this).parents(".right-content-footer").attr("msg_for");

    var offset = 0;
    if ($(this).attr("id") === "move_msg_left") {

        offset = $(".for_msg .left-content .tr:first").attr("db_offset") - 10 >= 0 ? $(".for_msg .left-content .tr:first").attr("db_offset") - 10 : 0;

    } else if ($(this).attr("id") === "move_msg_right") {

        offset = parseInt($(".for_msg .left-content .tr:last").attr("db_offset")) + 1 || 0;

    }




    switch (msg_for) {

        case "msg_income":

            message.dialogBoxcontent_msgIncome(parseInt(offset));

            break;
        case "report_player":

            message.dialogBoxContent_battelReport(parseInt(offset));

            break;
        case "msg_diff":

            message.dialogBoxcontent_msgDiff(parseInt(offset));

            break;

        case "msg_out":

            message.dialogBoxcontent_msgOutcome(parseInt(offset));

            break;

        case "spy_report":

            message.dialogBoxContent_spyReport(parseInt(offset));

            break;


    }


});






$(document).on("click", ".show-player-profile", function() {

    var id_player = $(this).attr("data-id-player");
    showPlayerProfile(id_player);

});


/*
 * 
 * @param {type} id_player
 * @returns {undefined}
 */
function showPlayerProfile(id_player) {

    $.ajax({

        url: "api/player.php",
        data: {

            GET_PLAYER_DETAIL: true,
            id_player: id_player

        },
        type: 'GET',
        beforeSend: function(xhr) {
            var player_review = `<div id="over_lay">
                                    <div id="select_from">
                                        <div class="head_bar">
                                            <img src="images/style/head_bar.png" class="banner">
                                            <div class="title">ملف الملك</div>
                                            <img class="close close_use_menu" src="images/btns/close_b.png">
                                        </div>
                                        <p style="clear: both"></p>
                                        <div id="rank-review" class="player-review">
                                            <div class="upper">
                                                <div class="left pull-L">
                                                    <div class="player-avatar">
                                                        <img src="${game.BaseData.HeroAvatar[1]}" id="A-A-P-image"/>
                                                    </div>

                                                </div>
                                                <div class="right pull-R">
                                                    <div class="th ellipsis">
                                                        ${Translate.Title.TH.League[UserLag.language]}
                                                    </div>
                                                    <div class="trow bg-btn-blu" id="A-A-P-guild">
                                                       ----
                                                    </div>
                                                    <div class="th ellipsis">
                                                        ${Translate.Title.TH.NobleRank[UserLag.language]}
                                                    </div>
                                                    <div class="trow bg-btn-blu" id="A-A-P-promotion">
                                                       ----
                                                    </div>
                                                    <div class="th ellipsis">
                                                        ${Translate.Title.TH.Ranking[UserLag.language]}
                                                    </div>
                                                    <div class="trow bg-btn-blu" id="A-A-P-rank">
                                                       ----
                                                    </div>
                                                </div>
                                                <p style="clear: both"></p>
                                                <h1 class="player-name" id="A-A-P-name">-----</h1>
                                            </div>
                                            <div class="down">
                                                <div class="th ellipsis">${Translate.Title.TH.Info[UserLag.language]}</div>
                                                <div class="li" style="margin-top: 15px;">
                                                    <div class="li-d pull-L bg-btn-blu">
                                                        <div class="image pull-L">
                                                            <img src="images/icons/prestige.png"/>
                                                        </div>
                                                        <div class="title pull-R  " id="A-A-P-prestige">
                                                           ------
                                                        </div>
                                                    </div>
                                                    <div class="li-d pull-R bg-btn-blu">
                                                        <div class="image pull-L">
                                                            <img src="images/icons/honor.png"/>
                                                        </div>
                                                        <div class="title pull-R " id="A-A-P-honor">
                                                            ----
                                                        </div>
                                                    </div>


                                                </div>
                                                <div class="li" style="margin-top: 5px; width: 125px; margin: auto">
                                                     <div class="li-d pull-L bg-btn-blu">
                                                        <div class="image pull-L">
                                                            <img src="images/icons/stat_login.png"/>
                                                        </div>
                                                        <div class="title pull-R  ">
                                                            ${Translate.Button.General.Soon[UserLag.language]}
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="li buttons" style="margin-top: 15px; width: 95%">
                                                     <div class="li-d pull-L bg-btn-red">
                                                        <div class="image pull-L">
                                                            <img src="images/icons/message.png"/>
                                                        </div>
                                                        <div class="title pull-R  ">
                                                            مراسلة
                                                        </div>
                                                    </div>
                                                     <div class="li-d pull-L bg-btn-red">
                                                        <div class="image pull-L">
                                                            <img src="images/icons/chat.png"/>
                                                        </div>
                                                        <div class="title pull-R  ">
                                                            شات
                                                        </div>
                                                    </div>
                                                     <div class="li-d pull-L bg-btn-red">
                                                        <div class="image pull-L">
                                                            <img src="images/icons/friend.png"/>
                                                        </div>
                                                        <div class="title pull-R  ">
                                                            صديق
                                                        </div>
                                                    </div>

                                                </div>

                                                <span style="clear: both"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>`;

            $("body").append(player_review);
        },
        success: function(data, textStatus, jqXHR) {

            var json_data = JSON.parse(data);

            $("#A-A-P-image").attr("src", game.BaseData.HeroAvatar[json_data.avatar]);
            $("#A-A-P-guild").html(json_data.guild || "----");
            $("#A-A-P-promotion").html(game.BaseData.Promotion[json_data.porm].Title);
            $("#A-A-P-rank").html(getArabicNumbers(json_data.rank));
            $("#A-A-P-name").html(json_data.name);
            $("#A-A-P-prestige").html(getArabicNumbers(json_data.prestige));
            $("#A-A-P-honor").html(getArabicNumbers(json_data.honor));

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });




}


$(document).on("click", "#send-g-msg", function() {


    var dialog_box = menu_bar.dialogBox(
        Translate.Title.MenuList.Mail[UserLag.language],
        NavBar.Mail,
        message.dialogBoxcontent_msgWrite({
            name: Translate.Button.Chat.League[UserLag.language],
            id: null
        }),
        0);

    dialogBoxShow(dialog_box, function() {
        $("#dialg_box").attr("type", "messages");
    });



});

$(document).on("click", "#send_mail_to_guild", function() {


    var subject = $("#subject_to_mail").val();
    var body = $(".msg_body textarea").val();


    if ($.trim(subject) === "") {
        alert_box.confirmMessage("يجب ان تكون الرسالة بعنوان اكتب اسم موضوع الرسالة");
        return;
    } else if ($.trim(body) === "") {
        alert_box.confirmMessage("لا يمكنك ارسال رسالة فارغة");
        return;
    } else {

        $.ajax({

            url: "api/message.php",
            data: {
                SEND_GUILD_MAIL: true,
                id_from: ID_PLAYER,
                body: body,
                subject: subject,
                token: TOKEN
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {
                alert_box.succesMessage("تم ارسال الرسالة بنجاح");
                $("#search_by_name").val("");
                $("#subject_to_mail").val("");
                $(".msg_body textarea").val("");
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    }

});


/*<button class="full-btn full" id="back_msg_income"  data-parent-offset="${offset_parent}">*/

$(document).on("click", "#back_msg", function() {


    var back_offset = $(this).attr("data-parent-offset");
    var msg_for = $(this).attr("data-msg-for");


    switch (msg_for) {

        case "msg_income":

            message.dialogBoxcontent_msgIncome(parseInt(back_offset));

            break;
        case "battel_report":

            message.dialogBoxContent_battelReport(parseInt(back_offset));

            break;
        case "msg_diff":

            message.dialogBoxcontent_msgDiff(parseInt(back_offset));

            break;

        case "msg_out":

            message.dialogBoxcontent_msgOutcome(parseInt(back_offset));

            break;

        case "spy_report":

            message.dialogBoxContent_spyReport(parseInt(back_offset));

            break;



    }
    $("#dialg_box  .nicescroll-rails").remove();
});

$(document).on("click", "#get-out-of-msgout", function() {

    $(".nav_bar .left-nav li:first").click();

});

$(document).on("click", ".show_battel_report", function() {

    var id_report = $(this).parents(".tr").attr("id_report");
    var parent_offset = $(".for_msg .tr:first").attr("db_offset");
    var seen = $(this).parents(".tr").attr("data-seen");

    var data_obj = {

        time_stamp: $(this).parents(".tr").attr("data-time-stamp"),
        x_coord: $(this).parents(".tr").attr("data-x-coord"),
        y_coord: $(this).parents(".tr").attr("data-y-coord"),
        id_report: id_report

    };


    $.ajax({
        url: "api/battelReport.php",
        data: {
            report_detail: true,
            id_report: id_report,
            id_player: ID_PLAYER,
            token: TOKEN
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {
            if (Number(seen) === 0) {
                PLAYER_NOTIF.msg_report--;
                Fixed.refreshPlayerNotif();

            }
            if (isJson(data)) {
                $(".box_content").replaceWith(getReportContent(JSON.parse(data), data_obj, parent_offset));
                $("#battel-detail").niceScroll(SCROLL_BAR_PROP);
            } else {
                alert(data);
            }


        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });
});



message.contentForSpyReport = function(json_data, data_obj, parent_offset) {

    if (Number(data_obj.seen) === 0) {
        PLAYER_NOTIF.spy_report--;
        Fixed.refreshPlayerNotif();
    }
    if (json_data.side === "victim") {

        return `<div id="spy-report" class="box_content for_msg" >
                    <div class="left-content full">
                        <div id="city-spy-report" class="spy-report">
                            <div class="paragraph">${json_data.content}</div>
                        </div>
                    </div>
                    <div class="right-content-footer" rank_for="players">  
                        <div class="buttons">  
                            <ul>  
                                <li id="back_to_msg" style=" float: right; width: 85px; margin-right: 50px;">  
                                    <button class="full-btn full-btn-3x full" id="back_msg" data-parent-offset="${parent_offset}" data-msg-for="spy_report">
                                        عودة
                                    </button>
                                </li>
                                <li style=" float: right; width: 85px; margin-right: 10px;">  

                                </li>

                            </ul>  
                        </div>  
                    </div> 
                <div>`;
    }


    return `<div id="spy-report" class="box_content for_msg" >
                <div class="left-content full">
                    
                    <div id="city-spy-report" class="spy-report">
                        
                        <div class="report">
                            <div id="city-resource">
                                <div class="title banner-red">
                                    موارد  المدينة
                                </div>
                                <hr style="width: 70%"/>
                                <ul>
                                    <li>
                                        <img src="images/style/food.png"/>
                                        <label>${json_data.food_res}</label>
                                    </li>
                                    <li>
                                        <img src="images/style/wood.png"/>
                                        <label>${json_data.wood_res}</label>
                                    </li>
                                    <li>
                                        <img src="images/style/stone.png"/>
                                        <label>${json_data.stone_res}</label>
                                    </li>
                                    <li>
                                        <img src="images/style/iron.png"/>
                                        <label>${json_data.metal_res}</label>
                                    </li>
                                    <li>
                                        <img src="images/style/coin.png"/>
                                        <label>${json_data.coin_res}</label>
                                    </li>
                                </ul>
                            </div>
                            <hr style="width: 80%; margin-top: 10px; margin-bottom: 5px;"/>
                            <div id="spy-report-city-floor">
                                <div id="hill">
                                    <div class="building-unit" style="left: 320px; top: 131px;">
                                        <img class="building" src="images/city/palace.png" style="width: 90px;">
                                        <div class="lvl">${json_data.palace.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 162px; top: 151px;">
                                        <img class="building" src="${BuildingConstData[json_data.hill_1.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.hill_1.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 122px; top: 163px;">
                                        <img class="building" src="${BuildingConstData[json_data.hill_2.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.hill_2.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 208px; top: 156px;">
                                        <img class="building" src="${BuildingConstData[json_data.hill_3.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.hill_3.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 177px; top: 168px;">
                                        <img class="building" src="${BuildingConstData[json_data.hill_4.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.hill_4.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 146px; top: 177px;">
                                        <img class="building" src="${BuildingConstData[json_data.hill_5.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.hill_5.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 251px; top: 165px;">
                                        <img class="building" src="${BuildingConstData[json_data.hill_6.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.hill_6.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 222px; top: 178px;">
                                        <img class="building" src="${BuildingConstData[json_data.hill_7.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.hill_7.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 191px; top: 188px;">
                                        <img class="building" src="${BuildingConstData[json_data.hill_8.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.hill_8.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 160px; top: 198px;">
                                        <img class="building" src="${BuildingConstData[json_data.hill_9.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.hill_9.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 265px; top: 184px;">
                                        <img class="building" src="${BuildingConstData[json_data.hill_10.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.hill_10.split("-")[1]}</div>
                                    </div>

                                    <div class="building-unit" style="left: 203px; top: 209px;">
                                        <img class="building" src="${BuildingConstData[json_data.hill_11.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.hill_11.split("-")[1]}</div>
                                    </div>

                                    <div class="building-unit" style="left: 233px; top: 197px;">
                                        <img class="building" src="${BuildingConstData[json_data.hill_12.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.hill_12.split("-")[1]}</div>
                                    </div>
                                </div>
                                <div id="under-wall">
                                    <div class="building-unit" style="left: 199px; top: 25px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_wall_1.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_wall_1.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 168px; top: 65px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_wall_2.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_wall_2.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 169px; top: 40px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_wall_3.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_wall_3.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 229px; top: 88px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_wall_4.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_wall_4.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 263px; top: 75px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_wall_5.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_wall_5.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 199px; top: 51px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_wall_6.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_wall_6.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 230px; top: 40px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_wall_7.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_wall_7.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 139px; top: 51px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_wall_8.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_wall_8.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 259px; top: 52px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_wall_9.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_wall_9.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 293px; top: 63px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_wall_10.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_wall_10.split("-")[1]}</div>
                                    </div>

                                    <div class="building-unit" style="left: 226px; top: 64px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_wall_11.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_wall_11.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 199px; top: 77px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_wall_12.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_wall_12.split("-")[1]}</div>
                                    </div>
                                </div>
                                <div id="under-palace">
                                    <div class="building-unit" style="left: 456px; top: 216px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_palace_1.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_palace_1.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 425px; top: 202px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_palace_2.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_palace_2.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 484px; top: 202px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_palace_3.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_palace_3.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 361px; top: 177px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_palace_4.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_palace_4.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 393px; top: 165px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_palace_5.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_palace_5.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 458px; top: 188px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_palace_6.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_palace_6.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 484px; top: 176px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_palace_7.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_palace_7.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 513px; top: 189px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_palace_8.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_palace_8.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 453px; top: 163px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_palace_9.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_palace_9.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 422px; top: 152px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_palace_10.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_palace_10.split("-")[1]}</div>
                                    </div>

                                    <div class="building-unit" style="left: 426px; top: 175px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_palace_11.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_palace_11.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 395px; top: 188px;">
                                        <img class="building" src="${BuildingConstData[json_data.under_palace_12.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.under_palace_12.split("-")[1]}</div>
                                    </div>
                                </div>
                                <div id="light-house">
                                   
                                     <div class="building-unit" style="left: 546px; top: 120px;">
                                        <img class="building" src="${BuildingConstData[json_data.light_house_1.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.light_house_1.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 514px; top: 134px;">
                                        <img class="building" src="${BuildingConstData[json_data.light_house_2.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.light_house_2.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 547px; top: 148px;">
                                        <img class="building" src="${BuildingConstData[json_data.light_house_3.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.light_house_3.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 548px; top: 174px;">
                                        <img class="building" src="${BuildingConstData[json_data.light_house_4.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.light_house_4.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 535px; top: 100px;">
                                        <img class="building" src="${BuildingConstData[json_data.light_house_5.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.light_house_5.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 484px; top: 147px;">
                                        <img class="building" src="${BuildingConstData[json_data.light_house_6.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.light_house_6.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 510px; top: 111px;">
                                        <img class="building" src="${BuildingConstData[json_data.light_house_7.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.light_house_7.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 483px; top: 122px;">
                                        <img class="building" src="${BuildingConstData[json_data.light_house_8.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.light_house_8.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 455px; top: 133px;">
                                        <img class="building" src="${BuildingConstData[json_data.light_house_9.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.light_house_9.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 517px; top: 160px;">
                                        <img class="building" src="${BuildingConstData[json_data.light_house_10.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.light_house_10.split("-")[1]}</div>
                                    </div>
                                </div>
                                <div id="around-wood">
                                    <div class="building-unit" style="left: 185px; top: 107px;">
                                        <img class="building" src="${BuildingConstData[json_data.around_wood_1.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.around_wood_1.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 156px; top: 94px;">
                                        <img class="building" src="${BuildingConstData[json_data.around_wood_2.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.around_wood_2.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 287px; top: 134px;">
                                        <img class="building" src="${BuildingConstData[json_data.around_wood_3.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.around_wood_3.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 323px; top: 122px;">
                                        <img class="building" src="${BuildingConstData[json_data.above_palace_1.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.above_palace_1.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 359px; top: 108px;">
                                        <img class="building" src="${BuildingConstData[json_data.above_palace_2.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.above_palace_2.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 388px; top: 97px;">
                                        <img class="building" src="${BuildingConstData[json_data.above_palace_3.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.above_palace_3.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 359px; top: 83px;">
                                        <img class="building" src="${BuildingConstData[json_data.above_palace_4.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.above_palace_4.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 332px; top: 94px;">
                                        <img class="building" src="${BuildingConstData[json_data.above_palace_5.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.above_palace_5.split("-")[1]}</div>
                                    </div>
                                    <div class="building-unit" style="left: 146px; top: 120px;">
                                        <img class="building" src="${BuildingConstData[json_data.above_palace_6.split("-")[0]].image}" style="width: 50px">
                                        <div class="lvl">${json_data.above_palace_6.split("-")[1]}</div>
                                    </div>
                                </div>
                            </div>
                            <hr style="width: 90%; margin-top: 10px; margin-bottom: 5px;"/>
                            <div class="title banner-red" style="width: 40%; margin: auto">
                                قوات المدينة
                            </div>
                            <div class="city-army">
                                <ul>
                                    <li>
                                        <div class="wrapper">
                                            <img src="images/tech/soldier01.jpg"/>
                                            <div class="amount stroke ${Fixed.getArmyAmountColor(json_data.army_a)}">${json_data.army_a}</div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <img src="images/tech/soldier02.jpg"/>
                                            <div class="amount stroke ${Fixed.getArmyAmountColor(json_data.army_b)}">${json_data.army_b}</div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <img src="images/tech/soldier03.jpg"/>
                                            <div class="amount stroke ${Fixed.getArmyAmountColor(json_data.army_c)}">${json_data.army_c}</div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <img src="images/tech/soldier04.jpg"/>
                                            <div class="amount stroke ${Fixed.getArmyAmountColor(json_data.army_d)}">${json_data.army_d}</div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <img src="images/tech/soldier05.jpg"/>
                                            <div class="amount stroke ${Fixed.getArmyAmountColor(json_data.army_e)}">${json_data.army_e}</div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <img src="images/tech/soldier06.jpg"/>
                                            <div class="amount stroke ${Fixed.getArmyAmountColor(json_data.army_f)}">${json_data.army_f}</div>
                                        </div>
                                    </li>
                                </ul>
                            </div>
                            
                            
                            <div class="desc">
                                يمكن ان تحتوى هذه التقارير على  استخبارات خاطئة بسبب  ضعف الجواسيس لديك
                            </div>
                        </div>
                    </div>

                </div>
                <div class="right-content-footer" rank_for="players">  
                    <div class="buttons">  
                        <ul>  
                            <li id="back_to_msg" style=" float: right; width: 85px; margin-right: 50px;">  
                                <button class="full-btn full-btn-3x full" id="back_msg" data-parent-offset="${parent_offset}" data-msg-for="spy_report">
                                    عودة
                                </button>
                            </li>
                            <li style=" float: right; width: 85px; margin-right: 10px;">  

                            </li>

                        </ul>  
                    </div>  
                </div> 
            </div>`;

};


message.contentForSpyReportBarray = function(json_data, data_obj, parent_offset) {

    return `<div id="spy-report" class="box_content for_msg" >
                <div class="left-content full">
                    
                    <div id="city-spy-report" class="spy-report">
                        
                        <div class="report">
                            
                            <hr style="width: 80%; margin-top: 10px; margin-bottom: 5px;"/>
                            <div class="title banner-red" style="width: 40%; margin: auto">
                                قوات البرية
                            </div>
                            <div class="city-army">
                                <ul>
                                    <li>
                                        <div class="wrapper">
                                            <img src="images/tech/soldier01.jpg"/>
                                            <div class="amount stroke ${Fixed.getArmyAmountColor(json_data.army_a*3)}">${json_data.army_a*3}</div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <img src="images/tech/soldier02.jpg"/>
                                            <div class="amount stroke ${Fixed.getArmyAmountColor(json_data.army_b*3)}">${json_data.army_b*3}</div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <img src="images/tech/soldier03.jpg"/>
                                            <div class="amount stroke ${Fixed.getArmyAmountColor(json_data.army_c*3)}">${json_data.army_c*3}</div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <img src="images/tech/soldier04.jpg"/>
                                            <div class="amount stroke ${Fixed.getArmyAmountColor(json_data.army_d*3)}">${json_data.army_d*3}</div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <img src="images/tech/soldier05.jpg"/>
                                            <div class="amount stroke ${Fixed.getArmyAmountColor(json_data.army_e*3)}">${json_data.army_e*3}</div>
                                        </div>
                                    </li>
                                    <li>
                                        <div class="wrapper">
                                            <img src="images/tech/soldier06.jpg"/>
                                            <div class="amount stroke ${Fixed.getArmyAmountColor(json_data.army_f*3)}">${json_data.army_f*3}</div>
                                        </div>
                                    </li>
                                </ul>
                            </div>
                            
                            
                            <div class="desc">
                                يمكن ان تحتوى هذه التقارير على  استخبارات خاطئة بسبب  ضعف الجواسيس لديك
                            </div>
                        </div>
                    </div>

                </div>
                <div class="right-content-footer" rank_for="players">  
                    <div class="buttons">  
                        <ul>  
                            <li id="back_to_msg" style=" float: right; width: 85px; margin-right: 50px;">  
                                <button class="full-btn full-btn-3x full" id="back_msg" data-parent-offset="${parent_offset}" data-msg-for="spy_report">
                                    عودة
                                </button>
                            </li>
                            <li style=" float: right; width: 85px; margin-right: 10px;">  

                            </li>

                        </ul>  
                    </div>  
                </div> 
            </div>`;

};

$(document).on("click", ".show_spy_report", function() {

    var id_report = $(this).parents(".tr").attr("id_report");
    var seen = $(this).parents(".tr").attr("data-seen");
    var id_player = $(this).parents(".tr").attr("data-id-player");
    var parent_offset = $(".for_msg .tr:first").attr("db_offset");
    var id_victim = $(this).attr("data-id-victim");

    if (Number(seen) === 0) {
        PLAYER_NOTIF.spy_report--;
        Fixed.refreshPlayerNotif();
    }

    var data_obj = {

        time_stamp: $(this).parents(".tr").attr("data-time-stamp"),
        x_coord: $(this).parents(".tr").attr("data-x-coord"),
        y_coord: $(this).parents(".tr").attr("data-y-coord"),
        spy_for: $(this).parents(".tr").attr("data-spy-for"),
        id_victim: id_victim,
        seen: seen,
        id_player: id_player

    };


    $.ajax({
        url: "api/battelReport.php",
        data: {
            spy_report_detail: true,
            id_report: id_report,
            id_player: ID_PLAYER,
            spy_for: data_obj.spy_for,
            id_victim: id_victim,
            token: TOKEN
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {
            if (isJson(data)) {
                if (data_obj.spy_for === "barrary") {

                    $(".box_content").replaceWith(message.contentForSpyReportBarray(JSON.parse(data), data_obj, parent_offset));
                    $("#spy-report .spy-report .report").niceScroll(SCROLL_BAR_PROP);

                } else if (data_obj.spy_for === "city") {

                    $(".box_content").replaceWith(message.contentForSpyReport(JSON.parse(data), data_obj, parent_offset));
                    $("#spy-report .spy-report .report").niceScroll(SCROLL_BAR_PROP);

                }

            } else {
                alert(data);
            }


        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });
});


/**
 * 
 * @param {int} id_player
 * @param {array} heros
 * @param {int} side_win
 * @returns {Boolean}  true if winner 
 */
function checkWinner(id_player, heros, side_win) {

    for (var jjj = 0; jjj < heros.length; jjj++) {

        if (parseInt(heros[jjj].id_player) === parseInt(id_player) &&
            parseInt(heros[jjj].side) === parseInt(side_win)) {

            return true;

        }

    }
    return false;


}


//الملك ${detail.general_data.p_name} انشئ ${parseInt(detail.general_data.task) === 0 ? "غزو" : "استيلاء"} الى جبل [ ${getArabicNumbers(data_obj.y_coord)} , ${getArabicNumbers(data_obj.x_coord)} ]
function getReportContent(detail, data_obj, offset) {
    console.log(detail);
    console.log(data_obj);

    var cont = `<div class="box_content for_msg for_Br " id="battel-report-msg">
                    <div class="left-content full">
                        <div id="battel_r_upper">
                            <div class="header">
                                <div class="pull-R th" style="direction: rtl;">
                                   انشئ الملك ${detail.general_data.p_name} ${parseInt(detail.general_data.task) === 0 ? "غزو" : "استيلاء"} الى   [ ${getArabicNumbers(data_obj.y_coord)} , ${getArabicNumbers(data_obj.x_coord)} ] م ${(detail.general_data.lvl)} 
                                </div>
                                <div class="pull-L th">
                                    ${data_obj.time_stamp}
                                </div>
                            </div>
                            <p style="clear: both"></p>
                            <div class="result-icon">
                                ${checkWinner(game.DPlayer.Player.id_player , detail.heros , detail.general_data.side_win) ? "<div class='win'>فوز</div> " : "<div class='def'>هزيمة</div>"}
                            </div>
                            <div class="battel-desc">
                                
                            </div>
                            <div class="resource-row">
                                <ul>
                                    <li><img ondragstart="return false;" src="images/style/food.png"><span> ${checkWinner(game.DPlayer.Player.id_player , detail.heros , detail.general_data.side_win) ? "+" : "-"}  ${detail.prize.resource.food} </span></li>
                                    <li><img ondragstart="return false;" src="images/style/wood.png"><span> ${checkWinner(game.DPlayer.Player.id_player , detail.heros , detail.general_data.side_win) ? "+" : "-"}  ${detail.prize.resource.wood}</span></li>
                                    <li><img ondragstart="return false;" src="images/style/stone.png"><span>${checkWinner(game.DPlayer.Player.id_player , detail.heros , detail.general_data.side_win) ? "+" : "-"}  ${detail.prize.resource.stone} </span></li>
                                    <li><img ondragstart="return false;" src="images/style/iron.png"><span> ${checkWinner(game.DPlayer.Player.id_player , detail.heros , detail.general_data.side_win) ? "+" : "-"}  ${detail.prize.resource.metal} </span></li>
                                    <li><img ondragstart="return false;" src="images/style/coin.png"><span> ${checkWinner(game.DPlayer.Player.id_player , detail.heros , detail.general_data.side_win) ? "+" : "-"}  ${detail.prize.resource.coin} </span></li>
                                </ul>
                            </div>
                            <div class="prize-row flex">
                                <ul>`;
    for (var iii in detail.prize.matrial) {

        cont += `<li>
                                            <img src="${Matrial.image(detail.prize.matrial[iii].prize)}">
                                            <div class="amount stroke">${detail.prize.matrial[iii].amount}</div>
                                        </li>`;

    }


    cont += `</ul>
                                    <p>جولات: ${getArabicNumbers(detail.general_data.round_num)}, شرف: ${getArabicNumbers(detail.prize.honor ||0)}</p>
                                </div>
                            </div>`;


    cont += `<div id="battel-detail">
                            <div class="your_side">
                                <ul>`;
    for (var jjj = 0; jjj < detail.heros.length; jjj++) {
        if (Number(detail.heros[jjj]["side"]) === 1) {
            var tr_1 = "";
            var tr_2 = "";
            for (var iii = 1; iii <= 3; iii++) {
                var f_pre = "f_" + iii + "_pre";
                var f_post = "f_" + iii + "_post";
                var f_type = "f_" + iii + "_type";

                if (detail["heros"][jjj][f_pre] !== "0") {
                    tr_1 += ` <li>
                                                             ${army_icon[detail["heros"][jjj][f_type]]}
                                                            <div class="pre-amount stroke">${getArabicNumbers(detail["heros"][jjj][f_pre])}</div>
                                                            <div class="post-amount">${getArabicNumbers(detail["heros"][jjj][f_post])}</div>
                                                        </li>`;
                }
            }
            for (var kkk = 1; kkk <= 3; kkk++) {

                var b_pre = "b_" + kkk + "_pre";
                var b_post = "b_" + kkk + "_post";
                var b_type = "b_" + kkk + "_type";
                if (detail["heros"][jjj][b_pre] !== "0") {
                    tr_2 += ` <li>
                                                             ${army_icon[detail["heros"][jjj][b_type]]}
                                                            <div class="pre-amount stroke">${getArabicNumbers(detail["heros"][jjj][b_pre])}</div>
                                                            <div class="post-amount">${getArabicNumbers(detail["heros"][jjj][b_post])}</div>
                                                        </li>`;
                }
            }
            cont += `<li>
                                                    <div class="hero">
                                                        <div class="name">
                                                            ${detail.heros[jjj].h_name ? detail.heros[jjj].h_name : "بطل النظام"}
                                                        </div>
                                                        ${
                                                        Number(detail.heros[jjj].id_player)  === Number(ID_PLAYER) ?
                                                        `<div class="image">
                                                            <img src="${game.BaseData.HeroAvatar[detail.heros[jjj].avatar] || "images/icons/hero/eq-bg.png"}" />
                                                            <div class="xp stroke">+${getArabicNumbers(detail["heros"][jjj]["xp"])}</div>
                                                        </div>`: ""
            
                                                        }
                                                    </div>
                                                    <div class="army">
                                                        <ol>
                                                        ${tr_1}
                                                        ${tr_2}
                                                        </ol>
                                                    </div>
                                                </li>`;
            console
        }
    }
    cont += `</ul>
                            </div>
                            <div class="enemy_side">
                                <ul>`;
    for (var jjj = 0; jjj < detail.heros.length; jjj++) {
        if (Number(detail.heros[jjj]["side"]) === 0) {
            var tr_1 = "";
            var tr_2 = "";
            for (var iii = 1; iii <= 3; iii++) {
                var f_pre = "f_" + iii + "_pre";
                var f_post = "f_" + iii + "_post";
                var f_type = "f_" + iii + "_type";

                if (detail["heros"][jjj][f_pre] !== "0") {
                    tr_1 += ` <li>
                                                             ${army_icon[detail["heros"][jjj][f_type]]}
                                                            <div class="pre-amount stroke">${getArabicNumbers(detail["heros"][jjj][f_pre])}</div>
                                                            <div class="post-amount">${getArabicNumbers(detail["heros"][jjj][f_post])}</div>
                                                        </li>`;
                }
            }
            for (var kkk = 1; kkk <= 3; kkk++) {

                var b_pre = "b_" + kkk + "_pre";
                var b_post = "b_" + kkk + "_post";
                var b_type = "b_" + kkk + "_type";
                if (detail["heros"][jjj][b_pre] !== "0") {
                    tr_2 += ` <li>
                                                            ${army_icon[detail["heros"][jjj][b_type]]}
                                                            <div class="pre-amount stroke">${getArabicNumbers(detail["heros"][jjj][b_pre])}</div>
                                                            <div class="post-amount">${getArabicNumbers(detail["heros"][jjj][b_post])}</div>
                                                        </li>`;
                }
            }
            cont += `<li>
                                                    <div class="hero">
                                                        <div class="name">
                                                            ${detail.heros[jjj].h_name ? detail.heros[jjj].h_name : "بطل النظام"}
                                                        </div>
                                                        ${
                                                            Number(detail.heros[jjj].id_player)  === Number(ID_PLAYER) ?
                                                            `<div class="image">
                                                                <img src="${game.BaseData.HeroAvatar[detail.heros[jjj].avatar] || "images/icons/hero/eq-bg.png"}"/>
                                                                <div class="xp stroke">+${getArabicNumbers(detail["heros"][jjj]["xp"])}</div>
                                                            </div>`: ""
            
                                                        }
                                                    </div>
                                                    <div class="army">
                                                        <ol>
                                                        ${tr_1}
                                                        ${tr_2}
                                                        </ol>
                                                    </div>
                                                </li>`;
        }
    }
    cont += ` </ul>
                            </div>
                        </div>
                    </div>
                    <div class="right-content-footer" rank_for="players">  
                        <div class="buttons">  
                            <ul>  
                                <li  style=" float: right; width: 85px; margin-right: 50px;">  
                                    <button class="full-btn full-btn-3x full" id="back_msg" data-parent-offset="${offset}" data-msg-for="battel_report">
                                        عودة
                                    </button>
                                </li>
                                <li  style=" float: right; width: 120px; margin-right: 10px;">  
                                    <button class="full-btn full-btn-3x full" id="show-battel-animated">
                                        <a   href="battel.php?report=${detail.encId}&server=${SERVER_ID}" target="_blank">استعراض المعارك</a>
                                    </button>
                                </li>

                            </ul>  
                        </div>  
                    </div>
                </div>`;
    return cont;
}

$(document).on("click", "#show-battel-animated", function() {

    //alert_box.confirmMessage("هذة الخاصية غير متاحة الان");

});

/*<button class="full-btn full" id="msg-reply" data-id-player="${msg_data[0].id_from}" data-player-name="${msg_data[0].name}">  رد </button>*/

$(document).on("click", "#msg-reply", function() {

    var id_player = $(this).attr("data-id-player");
    var player_name = $(this).attr("data-player-name");
    var subject = "رد " + $(this).attr("data-msg-head");

    $(".for_msg").replaceWith(message.dialogBoxcontent_msgWrite({
        name: player_name,
        id: id_player
    }, subject));


});
var QuestGrowth = {};
var QuestTrade = {};
var QuestDaily = {};
var ALL_AVAIL_QUEST = {};
var QUESTS_LIST = {};
var Quest = {};
const QUEST_PACKAGE_NAME = {
    promotion: "الترقية",
    infrastructure: "البنية الاساسية",
    cityPlanning: "تخطيط المدينة",
    cityManagement: "ترتيب المدينة",
    resourceProduction: "انتاج الموارد",
    civilTechnology: "التكنولوجيا المدنية",
    militaryStudy: "الدراسات العسكرية",
    cityDefence: "تحصين المدينة",
    cityHero: "ابطال المدينة",
    religion: "المعتقدات الدينية",
    warPreparation: "التجهيزات الحربية",
    dailyQuest: "مهام يومية",
    system_quest: "مهام النظام",
    expMap: "خريطة التوسعة",
    armyPacks: "حزم الاسرى",
    mnawratQuest: "جوائز المناورات",
    rebelCity: "المدينة المتمردة",
    macedonHero: "البطل المقدونى",
    lionEquip: "معدات الاسد",
    loyEquip: "معدات الولاء",
    miliEquip: "معدات حربية",
    brightEquip: "معدات ضوئية",
    fearlessEquip: "معدات جسارة"

};

const RESOURCE_AR_NAME = {
    coin: "سسترسس",
    food: "غذاء",
    wood: "خشب",
    stone: "حجارة",
    metal: "حديد",
    population: "سكان"
};


var PLAYER_QUEST_DONE = {};
















Quest = {

    dialogBoxcontent_qusets: function(section, package) {
        if (!section)
            section = "QuestGrowth";

        if (!package)
            package = "promotion";


        var counter = 0;

        var quest = this.completeQuestModel(ALL_AVAIL_QUEST[section][package][0]);

        var input = `<div class="box_content for_quest">
                        <div class="left-content">
                            <div class="top-left" id="quest_pack" data-id-section="${section}">
                                ${this.getPackageList(ALL_AVAIL_QUEST[section])}
                            </div>
                            <div class="bottom-left" id="sub_quest">
                                ${this.getQuestInPackageList(section, package)}
                            </div>
                        </div>
                        <div class="right-content" >
                            <div id="quest-page">
                                ${quest}
                            </div>
                            <div class="right-content-footer" rank_for="players">  
                                <div class="buttons">  
                                    <ul style=" margin-top: 8px;">  
                                        <li  style=" float: none; width: 100px; margin: auto;">  
                                            <button data-id-quest="${ALL_AVAIL_QUEST[section][package][0]}" class="full-btn full-btn-3x full" ${this.checkComplete(ALL_AVAIL_QUEST[section][package][0]) ? "" : "disabled='disabled'"}  id="accept_quest">
                                                ${Translate.Button.MenuList.AcceptReward[UserLag.language]}
                                            </button>
                                        </li>
                                    </ul>  
                                </div>  
                            </div>
                        </div>
                    </div>`;
        return input;
    },

    changeContent: function(section, package, quest) {

        var temp = null;
        var idQuest = null;
        if (!package) {
            for (var iii in ALL_AVAIL_QUEST[section]) {

                temp = temp === null ? iii : temp;

                if (this.checkForPackagePrize(ALL_AVAIL_QUEST[section][iii], ALL_AVAIL_QUEST[section])) {
                    package = iii;
                    break;
                }
            }
        }

        if (!package) {
            package = temp;
        }
        temp = null;
        if (!quest) {
            for (var iii in ALL_AVAIL_QUEST[section][package]) {

                temp = temp === null ? ALL_AVAIL_QUEST[section][package][iii] : temp;

                if (this.checkComplete(ALL_AVAIL_QUEST[section][package][iii])) {
                    quest = ALL_AVAIL_QUEST[section][package][iii];
                    break;
                }

            }
        }

        if (!quest) {
            quest = temp;
        }

        $("#quest_pack").attr("data-id-section", section);
        $("#quest_pack").html(this.getPackageList(ALL_AVAIL_QUEST[section], package));
        $("#quest-page").html(this.completeQuestModel(quest));
        $("#sub_quest").html(this.getQuestInPackageList(section, package, quest));
        $("#accept_quest").attr("data-id-quest", quest);

        this.checkComplete(quest) ? $("#accept_quest").removeAttr("disabled") : $("#accept_quest").attr("disabled", "disabled");
        $("#accept_quest").attr("data-id-quest", quest);

    },

    getPackageList: function(section, quest_pack) {

        var Qpackages = "";
        var packaCount = 0;

        for (var package in section) {

            if (Quest.getQuestNumberInBackage(section[package]) > 0) {
                packaCount++;

                if (!QUEST_PACKAGE_NAME[package]) {
                    console.error(package);
                }

                Qpackages += `  <div class="tr ellipsis ${ quest_pack === package ? "selected" : ""}" data-id-package="${package}">
                                    <span>${QUEST_PACKAGE_NAME[package]}</span>
                                   ${this.checkForPackagePrize(package, section) ? `<span class="right_mark"><lable class="img" src="images/btns/done.png" class="img-sml"></lable></span>` : `<span class="right_mark"></span>`}
                                </div>`;
            }

        }

        if (packaCount < 9) {

            for (var iii = 0; iii < 9 - packaCount; iii++) {
                Qpackages += `<div class="tr"></div>
                              `;
            }

        }
        return Qpackages;
    },
    getQuestInPackageList: function(section, package, questId) {
        var Qpackages = "";
        var packaCount = 0;

        for (var idQuest in ALL_AVAIL_QUEST[section][package]) {
            if (Quest.isShowYes(ALL_AVAIL_QUEST[section][package][idQuest]) && Number(PLAYER_QUEST_DONE[ALL_AVAIL_QUEST[section][package][idQuest]]) === 0) {

                packaCount++;
                Qpackages += `  <div class="tr ellipsis ${ questId === ALL_AVAIL_QUEST[section][package][idQuest] ? "selected" : ""}"  data-id-quest="${ALL_AVAIL_QUEST[section][package][idQuest]}" data-id-section="${section}" data-id-package="${package}">
                                    <span>${QUESTS_LIST[ALL_AVAIL_QUEST[section][package][idQuest]].title}</span>
                                    ${this.checkComplete(ALL_AVAIL_QUEST[section][package][idQuest]) ? `<span class="right_mark"><lable class="img" src="images/btns/done.png" class="img-sml"></lable></span>` : `<span class="right_mark"></span>`}
                                </div>`;
            }


        }
        if (packaCount < 5) {

            for (var iii = 0; iii < 5 - packaCount; iii++) {
                Qpackages += `<div class="tr"></div>
                              `;
            }

        }
        return Qpackages;
    },
    getQuestNumberInBackage(package) {

        var num = 0;

        for (var idQuest in package) {

            if (Quest.isShowYes(package[idQuest]) && Number(PLAYER_QUEST_DONE[package[idQuest]]) === 0) {
                num++;
            }

        }
        return num;
    },
    isShowYes: function(idQuest) {
        var quest = QUESTS_LIST[idQuest];

        if (!quest) {
            console.error(idQuest + "=== not found");
            return false;
        }
        var show = true;
        for (var iii in quest.showCond) {
            if (quest.showCond[iii].type === "quest") {
                show = (Number(PLAYER_QUEST_DONE[quest.showCond[iii].id_quest]) >= 1);
            }
        }
        return show;
    },
    listOfNeed: function(idQuest) {

        var done = true;
        if (!QUESTS_LIST[idQuest])
            return {
                list: "",
                done: done
            };

        var list_of_need = QUESTS_LIST[idQuest].ListOfNeed;



        var list = ``;

        for (var jjj = 0; jjj < list_of_need.length; jjj++) {

            var unit_list = list_of_need[jjj];

            if (unit_list.type === "promotion") {
                console.log(list_of_need[jjj])
                list += `<li>
                            <span> تصنيف النبيل ${game.BaseData.Promotion[list_of_need[jjj].promotion].Title}</span>
                            <span class=" state ${game.DPlayer.Player.porm >= list_of_need[jjj].promotion ? 'done">(تم)' : 'required">(لم يتم)'}</span>
                        </li>`;

                done = game.DPlayer.Player.porm < list_of_need[jjj].promotion ? false : done;

            } else if (unit_list.type === "item") {

                done = Matrial.getPlayerAmount(unit_list.item) >= unit_list.amount ? done : false;

                list += `<li class="${Matrial.getPlayerAmount(unit_list.item) >= unit_list.amount ? 'done_all' : '' }">
                            <span> لديك ${(unit_list.amount)} ${Matrial.getMatrialName(unit_list.item)}</span>
                            <span class=" state ${Matrial.getPlayerAmount(unit_list.item) >= unit_list.amount ? 'done">(تم)' : 'required">(لم يتم)' }</span>
                            <span>تمتلك (${Matrial.getPlayerAmount(unit_list.item)}) وحدة</span>
                        </li>`;

            } else if (unit_list.type === 'building') {

                list += `  <li class="done_all">
                                <span> ${BuildingConstData[unit_list.buildingType].title} مستوى ${unit_list.lvl}</span>
                                <span class=" state ${Max_of.buildingTypeLvl(unit_list.buildingType) >= unit_list.lvl ? 'done">(تم)' : 'required">(لم يتم)'}</span>
                            </li>`;
                done = Max_of.buildingTypeLvl(unit_list.buildingType) >= unit_list.lvl ? done : false;

            } else if (unit_list.type === 'prestige') {

                /*   prestige of player */
                list += `<li class="done_all">
                        <span>نقاط البرستيج ${unit_list.amount}</span>
                        <span class=" state ${game.DPlayer.Player.prestige >= unit_list.amount ? 'done">(تم)' : 'required">(لم يتم)'}</span>
                    </li>`;
                done = game.DPlayer.Player.prestige >= unit_list.amount ? done : false;

            } else if (unit_list.type === 'resource') {
                /*   prestige of player */
                list += `<li class="done_all">
                        <span>  ${RESOURCE_AR_NAME[unit_list.resourceType]} ${unit_list.amount}</span>
                        <span class=" state ${game.CurrentCity.City[unit_list.resourceType] >= unit_list.amount ? 'done">(تم)' : 'required">(لم يتم)'}</span>
                    </li>`;
                done = game.CurrentCity.City[unit_list.resourceType] >= unit_list.amount ? done : false;


            } else if (unit_list.type === "population") {

                list += `<li class="done_all">
                        <span>  عدد السكان وصل الى  ${unit_list.amount}</span>
                        <span class=" state ${game.CurrentCity.City.pop >= unit_list.amount ? 'done">(تم)' : 'required">(لم يتم)'}</span>
                    </li>`;
                done = game.CurrentCity.City.pop >= unit_list.amount ? done : false;

            } else if (unit_list.type === "playerState") {

                list += `<li class="done_all">
                        <span>تفعيل ${game.BaseData.PlayerStateData[unit_list.stateFor].title} </span>
                        <span class=" state ${game.DPlayer.PlayerState[unit_list.stateFor] >= $.now() / 1000 ? 'done">(تم)' : 'required">(لم يتم)'}</span>
                    </li>`;
                done = game.DPlayer.PlayerState[unit_list.stateFor] >= $.now() / 1000 ? done : false;

            }

        }
        return list;

    },

    completeQuestModel: function(idQuest) {

        var title = "-----------";
        var header = "-----------";
        var listOfNeed = "-----------";
        var desc = "-----------";
        var reword = "-----------";

        if (QUESTS_LIST[idQuest]) {
            title = QUESTS_LIST[idQuest].title;
            header = QUESTS_LIST[idQuest].header;
            desc = QUESTS_LIST[idQuest].desc;
            listOfNeed = this.listOfNeed(idQuest);
            reword = this.rewordToString(idQuest);
        }

        var quest = `<div class="quest">
                        <div class="quest-header banner-red">
                            ${title}
                        </div>
                        <div class="quest-desc">
                            <p>
                                ${header}
                            </p>
                        </div>
                        <hr/>
                        <div class="quset-req">
                            <ol>
                                ${listOfNeed}

                            </ol>
                        </div>
                        <hr/>
                        <div class="quest-expl">
                            <div class="quest-expl-head ">
                                <img src="images/icons/quest.png">
                                <span>
                                    شرح المهمة
                                </span>
                            </div>
                            <p>
                                ${desc}
                            </p>
                        </div>
                        <hr/>
                        <div class="quest-reward">
                            <div class="quest-expl-head ">
                                <img src="images/style/matrial-box.png">
                                <span>
                                     مكافأة المهام
                                </span>
                            </div>
                            <p>
                                ${reword}
                            </p>
                        </div>
                    </div>
                `;
        return quest;
    },

    checkComplete: function(idQuest) {

        var done = true;
        if (!QUESTS_LIST[idQuest])
            return false;

        if (Number(PLAYER_QUEST_DONE[idQuest]) !== 0) {
            return false;
        }

        var list_of_need = QUESTS_LIST[idQuest].ListOfNeed;
        var list = ``;

        for (var jjj = 0; jjj < list_of_need.length; jjj++) {

            var unit_list = list_of_need[jjj];
            if (unit_list.type === "promotion") {
                done = game.DPlayer.Player.porm < unit_list.promotion ? false : done;
            } else if (unit_list.type === "item") {

                done = Matrial.getPlayerAmount(unit_list.item) >= unit_list.amount ? done : false;

            } else if (unit_list.type === 'building') {

                done = Max_of.buildingTypeLvl(unit_list.buildingType) >= unit_list.lvl ? done : false;

            } else if (unit_list.type === 'prestige') {

                done = game.DPlayer.Player.prestige >= unit_list.amount ? done : false;

            } else if (unit_list.type === 'resource') {
                /*   prestige of player */

                done = game.CurrentCity.City[unit_list.resourceType] >= unit_list.amount ? done : false;


            } else if (unit_list.type === "population") {

                done = game.CurrentCity.City.pop >= unit_list.amount ? done : false;

            } else if (unit_list.type === "playerState") {

                if (game.DPlayer.PlayerState)
                    done = game.DPlayer.PlayerState[unit_list.stateFor] >= $.now() / 1000 ? done : false;

            }

        }

        return done;
    },

    checkForPackagePrize: function(package, Quest) {

        for (var iii in Quest[package]) {
            /*  make sure quest has prize  and quest is not done*/
            if (this.checkComplete(Quest[package][iii])) {
                return true;
            }
        }
        return false;
    },

    getCompletedSections: function(sec) {
        var completeCount = 0;
        for (var backage in sec) {
            for (var quest in sec[backage]) {
                completeCount = Quest.checkComplete(sec[backage][quest]) && Quest.isShowYes(sec[backage][quest]) ? completeCount + 1 : completeCount;
            }
        }
        return completeCount;
    },
    refrehQuestNotif: function() {

        var c_1 = Quest.getCompletedSections(ALL_AVAIL_QUEST.QuestGrowth);
        var c_2 = Quest.getCompletedSections(ALL_AVAIL_QUEST.QuestDaily);
        var c_3 = Quest.getCompletedSections(ALL_AVAIL_QUEST.QuestTrade);

        $("#Quests-ready-notif").html(c_1 + c_2 + c_3);
        $("#Quest-growth-notif").html(c_1 || '');
        $("#Quest-daily-notif").html(c_2 || '');
        $("#Quest-trade-notif").html(c_3 || '');

    },
    givePrize: function(reward) {

        for (var iii in reward) {

            if (reward[iii].type === "item") {

                Matrial.givePlayer(reward[iii].item, reward[iii].amount)

            } else if (reward[iii].type === "prestige") {

                game.DPlayer.Player.prestige = Number(game.DPlayer.Player.prestige) +
                    Number(reward[iii].amount);
                Player_profile.refresh_view();
                Player_profile.refresh_player_data();

            } else if (reward[iii].type === "resource") {

                game.CurrentCity.City[reward[iii].resourceType] =
                    Number(game.CurrentCity.City[reward[iii].resourceType]) +
                    Number(reward[iii].amount);
                city_profile.refresh_resource_view();


            } else if (reward[iii].type === "population") {

                game.CurrentCity.City.pop = Number(game.CurrentCity.City.pop) + reward[iii].amount;
                city_profile.refresh_resource_view();

            } else if (reward[iii].type === "equip") {

                game.Equip.getPlayerEquip();

            } else if (reward[iii].type === "jop") {

                Jop.addLabor(reward[iii].jop_for, reward[iii].amount);
                city_profile.refresh_resource_view();

            } else if (reward[iii].type === "promotion") {

                Player_profile.refresh_player_data();


            }


        }

    },
    takeNeeds: function(listOfNeed) {

        for (var jjj = 0; jjj < listOfNeed.length; jjj++) {

            var unit_list = listOfNeed[jjj];
            if (unit_list.type === "item") {

                Matrial.takeFrom(unit_list.item, unit_list.amount);

            } else if (unit_list.type === 'resource') {
                game.CurrentCity.City[unit_list.resourceType] -= Number(unit_list.amount);

            }



        }
    },
    isPackageAvailable: function(Package) {
        var counter = 0;
        for (var one in Package) {
            if (Package[one].DB_name && Number(PLAYER_QUEST[Package[one].DB_name]) === 0) {
                return true;
            }
        }

        return false;
    },

    rewordToString: function(idQuest) {

        if (!QUESTS_LIST[idQuest])
            return "";
        var questPrize = QUESTS_LIST[idQuest].Reword;


        return this.prizeArrayToString(questPrize);
    },

    prizeArrayToString: function(questPrize) {


        var prizeString = "";
        for (var iii in questPrize) {

            if (questPrize[iii].type === "item") {

                prizeString += ` ${questPrize[iii].amount} * ${Matrial.getMatrialName(questPrize[iii].item)}, `;

            } else if (questPrize[iii].type === "prestige") {

                prizeString += ` ${questPrize[iii].amount} * بريستيج, `;

            } else if (questPrize[iii].type === "resource") {

                prizeString += ` ${questPrize[iii].amount} * ${RESOURCE_AR_NAME[questPrize[iii].resourceType]}, `;

            } else if (questPrize[iii].type === "population") {

                prizeString += ` ${questPrize[iii].amount} * سكان, `;

            } else if (questPrize[iii].type === "equip") {

                prizeString += ` ${questPrize[iii].amount} * ${Equipment.getName(questPrize[iii].equip, questPrize[iii].part)}, `;

            } else if (questPrize[iii].type === "jop") {

                prizeString += ` ${questPrize[iii].amount} * ${CITY_JOP_REQ[questPrize[iii].jop_for.toUpperCase()].ar_title}, `;

            } else if (questPrize[iii].type === "promotion") {

                prizeString += ` ${game.BaseData.Promotion[Math.min(Number(game.DPlayer.Player.porm) + 1, 29)].Title} `;

            } else {
                console.log(questPrize)
                prizeString += "ERROR_NOT_FOUND";
            }
        }

        return prizeString.replace(/, +$/g, '');
    },

};



Quest.getPlayerQuestState = function() {

    return $.ajax({
        url: `${API_URL}/api/APlayerQuest/getPlayerQuest`,
        data: {
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'GET',
        success: function(data, textStatus, jqXHR) {
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);
            for (var iii in JsonObject) {
                PLAYER_QUEST_DONE[JsonObject[iii].id_quest] = JsonObject[iii].done
            }
        }
    });

};








$(document).on("PlayerReady", "html", function() {
    $.getJSON(`${API_URL}/js${game.Config.JsVersion}/json/questBase.json`, function(questList) {
        console.log(questList)
        QUESTS_LIST = questList;
        QuestGrowth.promotion = [
            "prom_1", "prom_2", "prom_3", "prom_4",
            "prom_5", "prom_6", "prom_7", "prom_8",
            "prom_9", "prom_10", "prom_11", "prom_12",
            "prom_13", "prom_14", "prom_15", "prom_16",
            "prom_17", "prom_18", "prom_19", "prom_20",
            "prom_21", "prom_22", "prom_23", "prom_24",
            "prom_25", "prom_26", "prom_27", "prom_28",
            "prom_29"
        ];

        QuestGrowth.infrastructure = [
            "cottage_1", "cottage_2", "cottage_3", "cottage_4", "cottage_5",
            "store_1", "store_2", "store_3", "store_4", "store_5",
            "palace_2", "palace_3", "palace_4", "palace_5"
        ];

        QuestGrowth.cityPlanning = [
            "pop_1", "pop_2", "pop_3", "pop_4"
        ];

        QuestGrowth.cityManagement = [
            "jop_1", "jop_2"
        ];

        QuestGrowth.resourceProduction = [
            "farm_2", "wood_2"
        ];

        QuestGrowth.civilTechnology = [
            "uni_1", "uni_2", "uni_3", "uni_4", "uni_5"
        ];

        QuestGrowth.militaryStudy = [
            "acad_1", "acad_2", "acad_3", "acad_4", "acad_5"
        ];

        QuestGrowth.cityDefence = [
            "wall_1", "wall_2", "wall_3", "wall_4", "wall_5"
        ];

        QuestGrowth.cityHero = [
            "theat_1", "theat_2", "theat_3", "theat_4", "theat_5"
        ];

        QuestGrowth.religion = [
            "worship_1", "worship_2", "worship_3", "worship_4", "worship_5"
        ];

        QuestGrowth.warPreparation = [
            "barracks_1", "barracks_2", "barracks_3", "barracks_4", "barracks_5",
            "stabl_1", "stabl_2", "stabl_3", "stabl_4", "stabl_5",
            "workshop_1", "workshop_2", "workshop_3", "workshop_4", "workshop_5"
        ];


        QuestDaily.dailyQuest = [
            "lucky", "t_map", "repel_trumpet", "copper_medal"
        ];

        QuestTrade.expMap = ["exp_map"];

        QuestTrade.armyPacks = [
            "army_s_1",
            "army_s_3",
            "army_m_1",
            "army_m_3",
            "army_l_1",
            "army_l_3"
        ];

        QuestTrade.mnawratQuest = [
            "m1_x20",
            "m2_x20",
            "m3_x20",
            "mr_x10",
            "mr_x2",
            "mr_x4",
            "mr_x300",
            "mb_x1"
        ];
        QuestTrade.rebelCity = [
            "pres_20k",
            "pres_80k",
            "union_era",
            "free_help",
            "motiv_60",
            "helper_chng"
        ];
        QuestTrade.macedonHero = [
            "pres_5k",
            "pres_50k",
            "pres_100k",
            "pres_400k",
            "pres_500k"
        ];
        QuestTrade.loyEquip = [
            "loy_boot",
            "loy_shield",
            "loy_helmet",
            "loy_armor",
            "loy_sword"
        ];

        QuestTrade.lionEquip = [
            "lion_boot",
            "lion_shield",
            "lion_helmet",
            "lion_armor",
            "lion_sword"
        ];
        QuestTrade.fearlessEquip = [
            "fearless_boot",
            "fearless_shield",
            "fearless_helmet",
            "fearless_armor",
            "fearless_sword"
        ];
        QuestTrade.miliEquip = [
            "mili_boot",
            "mili_shield",
            "mili_helmet",
            "mili_armor",
            "mili_sword"
        ];
        QuestTrade.brightEquip = [
            "bright_boot",
            "bright_shield",
            "bright_helmet",
            "bright_armor",
            "bright_sword"
        ];


        ALL_AVAIL_QUEST = {

            QuestTrade: QuestTrade,
            QuestDaily: QuestDaily,
            QuestGrowth: QuestGrowth

        };

        $.getJSON(`${API_URL}/js${game.Config.JsVersion}/json/quest/${UserLag.language}.json`, function(QL) {
            for (var iii in QUESTS_LIST) {

                if (QL[iii]) {
                    QUESTS_LIST[iii].title = QL[iii].title;
                    QUESTS_LIST[iii].header = QL[iii].header;
                    QUESTS_LIST[iii].desc = QL[iii].desc;
                }


            }
        });

        Quest.getPlayerQuestState().done(function() {
            Fixed.refreshPlayerNotif();
        });


    });
});



$(document).on("click", "#sub_quest .tr", function() {

    var section = $(this).data("id-section");
    var package = $(this).data("id-package");
    var idQuest = $(this).data("id-quest");

    console.log(section, package, idQuest)

    Quest.changeContent(section, package, idQuest);

});



$(document).on("click", "#quest_pack .tr", function() {


    var sectionId = $("#quest_pack").attr("data-id-section");
    var package = $(this).attr("data-id-package");

    Quest.changeContent(sectionId, package);

});


$(document).on("click", "#accept_quest", function() {

    var idQuest = $(this).attr("data-id-quest");

    if (!Quest.checkComplete(idQuest)) {
        alert_box.confirmMessage("تأكد من تحقق شروط المهمة");
        return;
    }
    var idCity = game.CurrentCity.City.id_city;

    $.ajax({

        url: `${API_URL}/api/APlayerQuest/acceptQuest`,
        data: {
            idCity: idCity,
            idQuest: idQuest,
            token: game.Config.OuthToken,
            server: game.Config.idServer

        },
        type: 'POST',
        beforeSend: function(xhr) {
            waitCursor();
            $("#accept_quest").attr("disabled", "disabled");
        },
        success: function(data, textStatus, jqXHR) {
            unwaitCursor();
            $("#accept_quest").removeAttr("disabled");
            if (isJson(data)) { /*           هنا  بقى مهمة الترقية لما تتم بنجاح**/

                var jsonData = JSON.parse(data);
                if (jsonData.state === "ok") {


                    alert_box.succesMessage(Quest.prizeArrayToString(QUESTS_LIST[idQuest].Reword));
                    PLAYER_QUEST_DONE[idQuest] = 1;
                    $("#dialg_box .nav_bar .left-nav .selected").click();
                    Quest.givePrize(QUESTS_LIST[idQuest].Reword);

                } else if (jsonData.state === "error_1") {

                    alert_box.failMessage("لا توجد هذة المهمة فى الوقت الحالى ");

                } else if (jsonData.state === "error_2") {

                    alert_box.failMessage("لا يمكنك قبول المهمة مرتين فى يوم واحد");

                } else if (jsonData.state === "error_3") {

                    alert_box.failMessage("لم يتم التحقق من شروط المهمة");

                } else if (jsonData.state === "error_4") {
                    alert_box.failMessage("شروط المهمة غير مكتملة");
                }



            } else {

                alert(data);

            }
            Quest.refrehQuestNotif();
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });



});

function isUpgradingNow(place) {
    for (var obj in game.TimedTask.TaskList.Building) {

        if (Number(game.TimedTask.TaskList.Building[obj].id_city) === Number(game.CurrentCity.City.id_city)) {
            if (game.TimedTask.TaskList.Building[obj].place === place) {
                return game.TimedTask.TaskList.Building[obj];
            }
        }

    }
    return false;
}





$("#UPDOWN-chat img").click(function() {

    if ($(this).hasClass("smalled")) {

        $(this).css("transform", "rotateZ(180deg)");
        $("#chat-box").css("bottom", "0px");
        $(this).removeClass("smalled");

    } else {

        $(this).css("transform", "rotateZ(0deg)");
        $("#chat-box").css("bottom", "-220px");
        $(this).addClass("smalled");
    }
    // Crafty.audio.play("close_sound");
});
$("#p-provile-slider img").click(function() {

    if ($(this).hasClass("smalled")) {

        $(this).css("transform", "rotateZ(-90deg)");
        $("#player-profile").css("left", "0px");
        $("#luck-wheel-btn").css("left", "310px");
        $(this).removeClass("smalled");

    } else {

        $(this).css("transform", "rotateZ(90deg)");
        $("#player-profile").css("left", "-380px");
        $("#luck-wheel-btn").css("left", "-75px");
        $(this).addClass("smalled");
    }
    //Crafty.audio.play("close_sound");
});

$("#city-profile-slider img").click(function() {

    if ($(this).hasClass("smalled")) {

        $(this).css("transform", "rotateZ(90deg)");
        $("#city-profile").css("right", "4px");
        $(this).removeClass("smalled");

    } else {

        $(this).css("transform", "rotateZ(-90deg)");
        $("#city-profile").css("right", "-425px");
        $(this).addClass("smalled");
    }
    // Crafty.audio.play("close_sound");
});


/**
 * Element.requestFullScreen() polyfill
 * @author Chris Ferdinandi
 * @license MIT
 */
if (!Element.prototype.requestFullscreen) {
    Element.prototype.requestFullscreen = Element.prototype.mozRequestFullscreen || Element.prototype.webkitRequestFullscreen || Element.prototype.msRequestFullscreen;
}

/**
 * document.exitFullScreen() polyfill
 * @author Chris Ferdinandi
 * @license MIT
 */
if (!document.exitFullscreen) {
    document.exitFullscreen = document.mozExitFullscreen || document.webkitExitFullscreen || document.msExitFullscreen;
}

/**
 * document.fullscreenElement polyfill
 * Adapted from https://shaka-player-demo.appspot.com/docs/api/lib_polyfill_fullscreen.js.html
 * @author Chris Ferdinandi
 * @license MIT
 */
if (!document.fullscreenElement) {

    Object.defineProperty(document, 'fullscreenElement', {
        get: function() {
            return document.mozFullScreenElement || document.msFullscreenElement || document.webkitFullscreenElement;
        }
    });

    Object.defineProperty(document, 'fullscreenEnabled', {
        get: function() {
            return document.mozFullScreenEnabled || document.msFullscreenEnabled || document.webkitFullscreenEnabled;
        }
    });
}




document.getElementById('ToggelFullSrc').addEventListener('click', function() {
    return;
    if (document.fullscreenElement) {
        document.exitFullscreen().then(function() {
            Crafty.viewport.height = $(document).height();
            Crafty.viewport.width = $(document).width();
            Crafty.viewport.reload();
        });
        if (isMobile) {
            $('body').css("zoom", "0.5");

        }
    } else {
        document.documentElement.requestFullscreen().then(function() {
            Crafty.viewport.height = $(document).height();
            Crafty.viewport.width = $(document).width();
            Crafty.viewport.reload();
        });
        if (isMobile) {
            /*$("body").css("zoom" , "0.5");
             $("#cr-stage *").css("zoom" , "1");*/
            //$('#cr-stage').css("zoom" , "1");
            //alert_box.confirmMessage($('#cr-stage').css("zoom"));
        }

    }


    Crafty.viewport.height = $(document).height();
    Crafty.viewport.width = $(document).width();

    Crafty.viewport.reload();
});

$(document).on("click", "#ToggelSound", function() {
    if ($(this).attr("data-state") === "on") {
        $(this).attr("data-state", "off");
        // Crafty.audio.mute();
        $(this).css({
            "background-image": "url(images/btns/withBg/buttonSoundOptions.png)"
        });
    } else {
        $(this).attr("data-state", "on");
        //Crafty.audio.unmute();
        $(this).css({
            "background-image": "url(images/btns/withBg/sound_on_off.png)"
        });

    }

});


$(document).on("click", "#player_rank", function() {


    $(".menu-list").each(function() {
        if ($(this).data("show") === "ranks") {
            $(this).trigger("click");
        }
    });


});


/*
 * show player editable data
 * 
 */
$(document).on("click", ".avatar-name h1 , .avatar-img img", function() {

    showEditablePlayerProfile();

});



function showEditablePlayerProfile() {
    var id_player = parseInt(game.DPlayer.Player.id_player);

    if (!id_player) {
        return;
    }

    $.ajax({

        url: "api/player.php",
        data: {

            GET_PLAYER_DETAIL: true,
            id_player: id_player

        },
        type: 'GET',
        beforeSend: function(xhr) {
            var player_review = `<div id="over_lay">
                                    <div id="select_from">
                                        <div class="head_bar">
                                            <img src="images/style/head_bar.png" class="banner">
                                            <div class="title">ملف الملك</div>
                                            <img class="close close_use_menu" src="images/btns/close_b.png">
                                        </div>
                                        <p style="clear: both"></p>
                                        <div id="rank-review" class="player-review">
                                            <div class="upper">
                                                <div class="left pull-L">
                                                    <div class="player-avatar">
                                                        <div id="change-avatar-left" class="left-btn pull-L" style="margin-left: 5px;margin-top: 13px;"></div>
                                                        <img src="${game.BaseData.HeroAvatar[1]}" id="A-A-P-image" data-index="${1}"/>
                                                        <div id="change-avatar-right" class="right-btn pull-R" style="margin-right: 5px;margin-top: 13px;"></div>
                                                        
                                                    </div>
                                                    <div id="confirm-player-new-img">
                                                        <img src="images/btns/done.png" class="img-sml"  >
                                                    </div>

                                                </div>
                                                <div class="right pull-R">
                                                    <div class="th ellipsis">
                                                        ${Translate.Title.TH.League[UserLag.language]}
                                                    </div>
                                                    <div class="trow bg-btn-blu" id="A-A-P-guild">
                                                       ----
                                                    </div>
                                                    <div class="th ellipsis">
                                                        ${Translate.Title.TH.NobleRank[UserLag.language]}
                                                    </div>
                                                    <div class="trow bg-btn-blu" id="A-A-P-promotion">
                                                       ----
                                                    </div>
                                                    <div class="th ellipsis">
                                                        ${Translate.Title.TH.Ranking[UserLag.language]}
                                                    </div>
                                                    <div class="trow bg-btn-blu" id="A-A-P-rank">
                                                       ----
                                                    </div>
                                                </div>
                                                <p style="clear: both"></p>
                                                <h1 class="player-name" id="A-A-P-name">----- 
                                                   
                                                </h1>
                                            </div>
                                            <div class="down">
                                                <div class="th ellipsis">${Translate.Title.TH.Info[UserLag.language]}</div>
                                                <div class="li" style="margin-top: 15px;">
                                                    <div class="li-d pull-L bg-btn-blu">
                                                        <div class="image pull-L">
                                                            <img src="images/icons/prestige.png"/>
                                                        </div>
                                                        <div class="title pull-R  " id="A-A-P-prestige">
                                                           ------
                                                        </div>
                                                    </div>
                                                    <div class="li-d pull-R bg-btn-blu">
                                                        <div class="image pull-L">
                                                            <img src="images/icons/honor.png"/>
                                                        </div>
                                                        <div class="title pull-R " id="A-A-P-honor">
                                                            ----
                                                        </div>
                                                    </div>


                                                </div>
                                                <div class="li" style="margin-top: 5px; width: 125px; margin: auto">
                                                     <div id="change-player-password" class="li-d pull-L bg-btn-blu">
                                                        <div class="image pull-L">
                                                            <img src="images/icons/stat_login.png"/>
                                                        </div>
                                                        <div class="title pull-R  ">
                                                            تغير كلمة المرور
                                                        </div>
                                                    </div>

                                                </div>
                                                <div class="li buttons" style="margin-top: 15px; width: 95%">
                                                     <div class="li-d pull-L bg-btn-red">
                                                        <div class="image pull-L">
                                                            <img src="images/icons/message.png"/>
                                                        </div>
                                                        <div class="title pull-R  ">
                                                            مراسلة
                                                        </div>
                                                    </div>
                                                     <div class="li-d pull-L bg-btn-red">
                                                        <div class="image pull-L">
                                                            <img src="images/icons/chat.png"/>
                                                        </div>
                                                        <div class="title pull-R selectable">${game.Config.RechCode}</div>
                                                    </div>
                                                     <div class="li-d pull-L bg-btn-red">
                                                        <div class="image pull-L">
                                                            <img src="images/icons/friend.png"/>
                                                        </div>
                                                        <div class="title pull-R  ">
                                                            صديق
                                                        </div>
                                                    </div>

                                                </div>

                                                <span style="clear: both"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>`;

            $("body").append(player_review);
        },
        success: function(data, textStatus, jqXHR) {

            var json_data = JSON.parse(data);

            $("#A-A-P-image").attr("src", game.BaseData.HeroAvatar[json_data.avatar]);
            $("#A-A-P-image").attr("data-index", json_data.avatar);
            $("#A-A-P-guild").html(json_data.guild || "----");
            $("#A-A-P-promotion").html(game.BaseData.Promotion[json_data.porm].Title);
            $("#A-A-P-rank").html(getArabicNumbers(json_data.rank));
            $("#A-A-P-name").html(json_data.name + ' <img src="images/btns/edit.png" class="img-sml" style="vertical-align: middle; margin-left: 15px" id="edit-player-name-btn">');
            $("#A-A-P-prestige").html(getArabicNumbers(json_data.prestige));
            $("#A-A-P-honor").html(getArabicNumbers(json_data.honor));

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });




}

$(document).on("click", "#edit-player-name-btn", function() {

    $("#A-A-P-name").html(`<input type="text" class="input" id="playe-new-name" style="text-align: center" value="${game.DPlayer.Player.name}" data-pastable="true"/>
                            <img src="images/btns/done.png" class="img-sml" style="margin-left: 15px" id="save-player-name-btn">`);


});


$(document).on("click", "#save-player-name-btn", function() {

    var matrial = ["change_name"];
    BoxOfMatrialToUse(matrial, "change_player_name");

});


/*
 * change player Avatar
 */

$(document).on("click", "#change-avatar-left", function() {

    var image_index = parseInt($("#A-A-P-image").attr("data-index"));

    if (game.BaseData.HeroAvatar[image_index - 1]) {

        $("#A-A-P-image").attr("src", game.BaseData.HeroAvatar[--image_index]);
        $("#A-A-P-image").attr("data-index", image_index);

    } else {

        $("#A-A-P-image").attr("src", game.BaseData.HeroAvatar[game.BaseData.HeroAvatar.length - 1]);
        $("#A-A-P-image").attr("data-index", game.BaseData.HeroAvatar.length - 1);

    }

});


$(document).on("click", "#change-avatar-right", function() {

    var image_index = parseInt($("#A-A-P-image").attr("data-index"));

    if (game.BaseData.HeroAvatar[image_index + 1]) {

        $("#A-A-P-image").attr("src", game.BaseData.HeroAvatar[++image_index]);
        $("#A-A-P-image").attr("data-index", image_index);

    } else {

        $("#A-A-P-image").attr("src", game.BaseData.HeroAvatar[0]);
        $("#A-A-P-image").attr("data-index", 0);

    }

});


/*   save new avatar  */

$(document).on("click", "#confirm-player-new-img", function() {

    var image_index = parseInt($("#A-A-P-image").attr("data-index"));

    if (image_index === parseInt(game.DPlayer.Player.avatar)) {

        alert_box.confirmMessage("لتغير الصورة الشخصية عليك اختيار صورة اخرى");
        return;

    } else {


        $.ajax({

            url: "api/player.php",
            data: {

                CHANGE_PLAYER_AVATAR: true,
                image_index: image_index,
                id_player: ID_PLAYER,
                token: TOKEN

            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (data === "done") {

                    $(".avatar-img img").attr("src", game.BaseData.HeroAvatar[image_index]);

                }
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    }



});



/*
 * 
 * city profile add btns
 * 
 */
$(document).on("click", "#increase-city-loy", function() {

    var matrial = ["a_play"];
    BoxOfMatrialToUse(matrial, "increase-city-util");


});


$(document).on("click", "#increase-city-pop", function() {

    var matrial = ["prot_pop"];
    BoxOfMatrialToUse(matrial, "increase-city-util");

});


$(document).on("click", "#increase-city-coin", function() {

    var matrial = ["coin_1", "coin_7"];
    BoxOfMatrialToUse(matrial, "increase-city-util");

});


$(document).on("click", "#increase-city-food", function() {

    var matrial = ["wheat_1", "wheat_7"];
    BoxOfMatrialToUse(matrial, "increase-city-util");

});


$(document).on("click", "#increase-city-stone", function() {

    var matrial = ["stone_1", "stone_7"];
    BoxOfMatrialToUse(matrial, "increase-city-util");

});


$(document).on("click", "#increase-city-wood", function() {

    var matrial = ["wood_1", "wood_7"];
    BoxOfMatrialToUse(matrial, "increase-city-util");

});


$(document).on("click", "#increase-city-metal", function() {

    var matrial = ["metal_1", "metal_7"];
    BoxOfMatrialToUse(matrial, "increase-city-util");

});



/**______________________________WORLD chat ________________________________________*/





$(document).on("click", "#chat-to", function() {


    var chat_to = $(this).attr("data-chat-to");

    if (chat_to === "world") {

        $(this).attr("data-chat-to", "guild");
        $(this).html(`<img src="images/icons/chat/guild.png"/>
                        <label>${Translate.Button.Chat.League[UserLag.language]}</label>`);
    } else {

        $(this).attr("data-chat-to", "world");
        $(this).html(`<img src="images/icons/chat/world.png"/><label>${Translate.Button.Chat.World[UserLag.language]}</label>`);

    }

});



$(document).on("click", ".msg-from .name", function() {

    //showPlayerProfile($(this).parents(".msg-unit").attr("data-id-player"));
    var id_player = $(this).parent(".msg-from").parent(".msg-unit").attr('data-id-player');
    var name = $(this).parent(".msg-from").parent(".msg-unit").attr('data-name');
    var avatar = $(this).parent(".msg-from").parent(".msg-unit").attr('data-avatar');
    var user_group = $(this).parent(".msg-from").parent(".msg-unit").attr('data-user-group');
    var id_msg = $(this).parent(".msg-from").parent(".msg-unit").attr('data-id-msg');

    var pann_div = ``;
    if (game.DPlayer.Player.user_group > 0) {

        pann_div = `<div id="clear-world-chat-msg"> ازالة الرسالة</div>
                    <div id="chat-forbide">كتم شات</div>`;

    }

    var list = `<div class="drop-down-li  "  data-id-player="${id_player}" data-name="${name}" data-avatar="${avatar}" data-id-msg="${id_msg}">
                    <button></button>
                    <lable class="user-group-${user_group}">${name}</lable>
                    <div class="private-chat">انشاء دردشة خاصة</div>
                    <div class="show-player-from-chat">الملف الشخصى للملك</div>
                    <div>اضافة صديق</div>
                    ${pann_div}
                </div>`;

    $("#drop-down-list-wrapper").html(list);
});


$(document).on("click", "#chat-icons ul li", function() {

    $("#chat-icons ul li").removeClass("active");
    $(this).addClass("active");
    var data_show = $(this).attr("data-show");
    if (data_show === "anounce") {

        $("#msg-area .guild_msg").hide();
        $("#msg-area .world_chat").hide();

    } else if (data_show === "world") {

        $("#msg-area .guild_msg").show();
        $("#msg-area .world_chat").show();
        $("#msg-area .announce").show();


    } else if (data_show === "guild") {

        $("#msg-area .world_chat").hide();
        $("#msg-area .announce").hide();

    } else if (data_show === "private") {



    }

});

$(document).on("click", "#expand-chat .expand", function() {

    var width = $("#chat-area").attr("data-width");

    if (width === "x") {

        $("#chat-area").css({
            height: 350
        });
        $("#chat-area").attr("data-width", "xx");

    } else if (width === "xx") {

        $("#chat-area").css({
            height: 580
        });
        $("#chat-area").attr("data-width", "xxx");
    } else {

        $("#chat-area").css({
            height: 160
        });
        $("#chat-area").attr("data-width", "x");

    }

    $("#msg-area").getNiceScroll(0).resize();

});


$(document).on("click", ".show-player-from-chat", function() {

    showPlayerProfile($(this).parents(".drop-down-li").attr("data-id-player"));

});


$(document).on("click", ".private-chat", function() {

    var id_player = $(this).parents(".drop-down-li").attr("data-id-player");
    var avatar = $(this).parents(".drop-down-li").attr("data-avatar");
    var name = $(this).parents(".drop-down-li").attr("data-name");
    creatChatRoom(id_player, name, avatar);

});


/*
 *    PRIVATE CHATE with player
 */

function creatChatRoom(id_player_with, name, avatar) {
    var found = false;

    $(".chat-room").each(function() {

        if (parseInt($(this).attr("data-id-player")) === parseInt(id_player_with)) {


            found = true;

        }

    });



    if (found === false) {

        chatRoomTemplate(id_player_with, name, avatar);

        $("#active-chat-rooms ul").append(`<li class="unit-chat-icon pull-R" 
                                            data-id-player = "${id_player_with}" 
                                            data-name= "${name}"
                                            data-avatar= "${avatar}"
                                            style="background-image: url(${game.BaseData.HeroAvatar[avatar]})"></li>
                                        `);


    }

}

function chatRoomTemplate(id_player_with, name, avatar, visable) {

    var style = "";
    if (visable === false) {

        style = "style='display: none'";

    }
    var id = Math.random() * 1000000;

    var chat_room = `<div class="chat-room" ${style} data-id-player="${id_player_with}">
                            <div class="head_bar">
                                <img src="images/panner/king_name.png" class="banner">
                                <div class="title">${name}</div>
                                <div class="window-icon">
                                    <img  src="images/btns/close_b.png" class="close-chat-room">
                                    <img  src="images/btns/close_b.png" class="minmize-chat-room">
                                </div>
                            </div>
                            <p style="clear: both"></p>
                            <div class="container">
                                <div class="upper">
                                    <div class="body">
                                        <div id="SMB-${id_player_with}" class="scrollable-msg-body">
                                          
                                        </div>
                                    </div>
                                    <div class="recieve-avatar">
                                        <div class="image">
                                            <img src="${game.BaseData.HeroAvatar[avatar]}"/>
                                        </div>
                                        <div class="name">
                                            ${name}
                                        </div>
                                        <div class="btns">
                                            <button class="full-btn show-player-profile" data-id-player="${id_player_with}">${Translate.Button.MenuList.View[UserLag.language]}</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="bottom">
                                    <div class="msg-input">
                                        <textarea class="private-chat-input" ></textarea>
                                    </div>
                                    <div class="your-avatar">
                                        <div class="image">
                                            <img src="images/hero/faceA1.jpg"/>
                                        </div>
                                    </div>
                                    <div class="btns">
                                        <button class="full-btn pull-R">تصغير</button>
                                        <button class="full-btn pull-R send-private-msg"  data-id-player="${id_player_with}">ارسال</button>
                                        <button class="full-btn pull-L">غلق</button>
                                    </div>
                                </div>
                            </div>
                        </div>`;

    $("body").append(chat_room);
    $("#SMB-" + id_player_with).niceScroll(SCROLL_BAR_PROP);
    $(".chat-room").each(function() {

        if (parseInt($(this).attr("data-id-player")) === parseInt(id_player_with)) {

            $(this).draggable();

            return;

        }

    });

}

/*
 * 
 *  when chat icon is clicked 
 */
$(document).on("click", "#active-chat-rooms ul li", function() {

    var id_player = parseInt($(this).attr("data-id-player"));
    var found = false;

    $(".chat-room").each(function() {

        if (parseInt($(this).attr("data-id-player")) === id_player) {

            found = true;
            if ($(this).css("display") === "none") {
                $(this).show();
                $(this).animate({
                    top: "130px",
                    left: "50%",
                    height: "400px",
                    width: "600px"
                }, "slow", function() {});

            } else {

                $(this).animate({
                    top: "500px",
                    left: "60%",
                    height: "0px",
                    width: "0px"
                }, "slow", function() {

                    $(this).hide();

                });

            }

        }

    });

    if (found === false) {

        chatRoomTemplate(id_player, $(this).attr("data-name"), $(this).attr("data-avatar"))

    } else {

        $(".chat-room").each(function() {

            if (parseInt($(this).attr("data-id-player")) === parseInt(id_player)) {

                $(this).css({
                    top: "150px",
                    left: "50%",
                    "margin-left": "-300px"
                })
                return;

            }

        });

    }


});



$(document).on("click", ".close-chat-room", function() {

    var id_player = parseInt($(this).parents(".chat-room").attr("data-id-player"));

    $("#active-chat-rooms ul li").each(function() {

        if (parseInt($(this).attr("data-id-player")) === id_player) {

            $(this).remove();

        }

    });
    $(this).parents(".chat-room").remove();

});

/* minimize chat*/
$(document).on("click", ".minmize-chat-room", function() {

    $(this).parents(".chat-room").animate({
        top: "500px",
        left: "60%",
        height: "0px",
        width: "0px"
    }, "slow", function() {

        $(this).hide();

    });

});


/*
 *   TRIGGER CLICK  WHEN enter is preesed in private chat input 
 */
$(document).on("keydown", ".private-chat-input", function(e) {

    if (e.keyCode === 13) {
        e.preventDefault();

        $(this).parents(".bottom").children(".btns").children(".send-private-msg").click();


    }

});

/*  SEND message*/
$(document).on("click", ".send-private-msg", function() {

    var id_player = parseInt($(this).attr("data-id-player"));

    var msg = $(this).parents(".bottom").children(".msg-input").children(".private-chat-input").val();

    $(this).parents(".bottom").children(".msg-input").children(".private-chat-input").val("");


    var json_obj = {
        url: "Chat/sendPrivate",
        data: {
            idPlayerTo: id_player,
            chat_msg: msg
        }

    };

    ws.send(JSON.stringify(json_obj));


});



function showPrivateChatNotif(id_player_with, name, avatar) {

    var found = false;

    $("#active-chat-rooms ul li").each(function() {

        if (parseInt($(this).attr("data-id-player")) === parseInt(id_player_with)) {


            found = true;

        }

    });

    if (found === false) {

        $("#active-chat-rooms ul").append(`<li class="unit-chat-icon pull-R" 
                                            data-id-player = "${id_player_with}" 
                                            data-nam = "${name}" data-avatar="${avatar}"
                                            style="background-image: url(${game.BaseData.HeroAvatar[avatar]})"></li>
                                        `);
        chatRoomTemplate(id_player_with, name, avatar, false);

    }


}


$(document).on("click", "#clear-world-chat-msg", function() {

    var id_msg = $(this).parent(".drop-down-li").attr("data-id-msg");
    var id_player = $(this).parent(".drop-down-li").attr("data-id-player");
    var player_name = $(this).parent(".drop-down-li").attr("data-name");

    var msg = $.trim($(`#msg-area .msg-unit[data-id-msg=${id_msg}]`).children(".msg-body").children("p").html());

    ws.send(
        JSON.stringify({
            url: "Chat/delete",
            data: {
                msg: msg,
                id_msg: id_msg,
                p_name_delete_for: player_name
            }
        })
    );

});



$(document).on("click", "#chat-forbide", function() {




    var id_msg = $(this).parent(".drop-down-li").attr("data-id-msg");
    var id_player = $(this).parent(".drop-down-li").attr("data-id-player");
    var player_name = $(this).parent(".drop-down-li").attr("data-name");

    var msg = $.trim($(`#msg-area .msg-unit[data-id-msg=${id_msg}]`).children(".msg-body").children("p").html());

    var alert_box_content = `
                            ادخل مدة الحظر 
                            <br/>
                            <br/>
                            <input type="text" placeholder="ادخل مدة الحظر بالثوانى" class="chat-forbid-duration only_num input" min="0"  max="99999999"/>
                        `;

    alert_box.confirmDialog(alert_box_content, function() {

        var duration_val = Number($('#alert_box .chat-forbid-duration').val()) || 3600;


        $.ajax({
            url: `${NODE_URL}/api/APlayer/chatPann`,
            type: 'POST',
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer,
                duration: duration_val,
                playerToPan: id_player
            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok")
                    alert_box.succesMessage("تم حظر اللاعب بنجاح");
                else if (JsonObject.state === "error_1")
                    alert_box.failMessage("لست مشرفا");
                else if (JsonObject.state === "error_2")
                    alert_box.failMessage("لا يمكنك حظر مشرف اعلى منك فى الرتبة");
                else if (JsonObject.state === "error_3")
                    alert_box.failMessage("لا تمتلك الرتبة المطلوبة");
            }
        });

    });



});





$(document).on("click", "#chat-box .drop-down-li button", function() {
    $("#chat-box .drop-down-li").fadeOut(250, function() {
        $(this).remove();
    });
});

Fixed = {};

Fixed.refresePlayerStateList = function() {
    if (!game.DPlayer.PlayerState)
        return;
    $("#player_stat_bar ul").html("");
    for (var key in game.DPlayer.PlayerState) {
        if (key !== "id_player") {

            if (parseInt(game.DPlayer.PlayerState[key]) > Date.now() / 1000) {

                var list_i = `<li>
                                 <img src="${game.BaseData.PlayerStateData[key].image}"/>
                                 <div class="duration stroke">${changeTimeFormat(game.DPlayer.PlayerState[key] - (Date.now() / 1000))}</div>
                             </li> `;
                $("#player_stat_bar ul").append(list_i);
            }

        }

    }

    if (player.chat_panne > Date.now() / 1000) {
        var list_i = `<li>
                        <img src="${game.BaseData.PlayerStateData.silance.image}"/>
                        <div class="duration stroke">${changeTimeFormat(playergame.DPlayer.Player.chat_panne - (Date.now() / 1000))}</div>
                    </li> `;
        $("#player_stat_bar ul").append(list_i);


    }

};

Fixed.getArmyAmountColor = function(amount) {
    return amount >= 1e5 ? "army-over-100k" : (amount >= 1e4 ? "army-over-10k" : (amount >= 1e3 ? "army-over-1k" : ""))
};





Fixed.refeshColorArmyHeroTrans = function() {
    army.rightTrade(game.NextHero);
    Hero.refreshCurrentHeroArmy().done(function() {
        army.refreshArmy_leftTrade();
    });

};

Fixed.refreshPlayerNotif = function() {
    var green_msg = Number(PLAYER_NOTIF.msg_diff) + Number(PLAYER_NOTIF.msg_in);
    $("#green-msg-notif").html(green_msg > 0 ? green_msg : "");
    var red_msg = Number(PLAYER_NOTIF.msg_report) + Number(PLAYER_NOTIF.spy_report);
    $("#red-msg-notif").html(red_msg > 0 ? red_msg : "");
    var green_report = Number(PLAYER_NOTIF.hero_in_battel) + Number(PLAYER_NOTIF.hero_back) + Number(PLAYER_NOTIF.spy_task);
    $("#hero-not-in-city").html(green_report > 0 ? green_report : "");
    $("#hero-attacking").html(PLAYER_NOTIF.battel_number > 0 ? PLAYER_NOTIF.battel_number : "");

    Quest.refrehQuestNotif();
};

$(document).on("PlayerReady", "html", function() {

    Player_profile.getPlayerStateData().done(function(data) {
        Fixed.refreshPlayerNotif();
    });

});
var MATIAL_FOR_LUCK_WHEEL = [];

var LuckWheel = {};

for (var iii = 0; iii < 20; iii++) {
    MATIAL_FOR_LUCK_WHEEL.push({
        Prize: "motiv_60",
        amount: 0
    });
}

LuckWheel.holes = function() {

    return `<ul>
                <li class="cell corner" style="left: 50%; margin-top: 13px; margin-left: -32px;
                    background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[0]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[0]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[0]["amount"]}</h1>
                </li>
                <li class="cell" style="left: 313px; top: 30.5px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[1]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[1]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[1]["amount"]}</h1>
                </li>
                <li class="cell" style="left: 375px; top: 62.5px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[2]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[2]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[2]["amount"]}</h1>
                </li>
                <li class="cell" style="left: 425px; top: 112.5px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[3]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[3]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[3]["amount"]}</h1>
                </li>
                <li class="cell" style="right: 32px; top: 175.8px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[4]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[4]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[4]["amount"]}</h1>
                </li>
                <li class="cell corner" style="right: 13px; top: 237.5px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[5]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[5]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[5]["amount"]}</h1>
                </li>
                <li class="cell" style="right:32px; top: 312px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[6]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[6]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[6]["amount"]}</h1>
                </li>
                <li class="cell" style="left:425px; top: 375.5px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[7]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[7]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[7]["amount"]}</h1>
                </li>
                <li class="cell" style="left: 375.5px; top: 425px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[8]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[8]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[8]["amount"]}</h1>
                </li>
                <li class="cell" style="left: 313.5px; top: 457.2px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[9]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[9]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[9]["amount"]}</h1>
                </li>
                <li class="cell corner" style="left: 50%;bottom: 13.5px; margin-left: -32px ;background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[10]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[10]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[10]["amount"]}</h1>
                </li>

                <li class="cell" style="right: 313.5px; top: 457.2px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[11]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[11]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[11]["amount"]}</h1>
                </li>
                <li class="cell" style="right: 375.5px; top: 425px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[12]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[12]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[12]["amount"]}</h1>
                </li>
                <li class="cell" style="right:425px; top: 375.5px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[13]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[13]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[13]["amount"]}</h1>
                </li>
                <li class="cell" style="left:32px; top: 312px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[14]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[14]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[14]["amount"]}</h1>
                </li>
                <li class="cell corner" style="left: 13px; top: 237.5px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[15]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[15]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[15]["amount"]}</h1>
                </li>


                <li class="cell" style="left: 31.5px; top: 175.7px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[16]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[16]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[16]["amount"]}</h1>
                </li>
                <li class="cell" style="right: 425.5px; top: 112.5px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[17]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[17]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[17]["amount"]}</h1>
                </li>
                <li class="cell" style="right: 375px; top: 62.5px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[18]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[18]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[18]["amount"]}</h1>
                </li>
                <li class="cell" style="right: 313.5px; top: 30.5px; background-image: url(${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[19]["Prize"]].image})"
                    data-matrial-name="${MATIAL_FOR_LUCK_WHEEL[19]["Prize"]}">
                    <div class="left-gate pull-L"></div>
                    <div class="right-gate pull-R"></div>
                    <div class="pulse"></div>
                    <h1>${MATIAL_FOR_LUCK_WHEEL[19]["amount"]}</h1>
                </li>



            </ul>`;

};


LuckWheel.show = function() {



    var content = `  <div id="luck-wheel-over-lay">
                        <div id="luck-wheel" data-gate-open="false">
                            <div class="holes">
                                ${this.holes()}
                            </div>
                            <div class="control">
                                <button id="hide-luck-wheel"></button>
                                <div class="title font-2">
                                       خطبة تحفيزية 
                                </div>
                                <h1 id="playeLuckTitle"> دولاب الحظ:${Matrial.getPlayerAmount("luck_play")} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; كمية الذهب: ${game.DPlayer.Player.gold}</h1>

                                <div class="image-frame">
                                    <img src="images/items/item001.jpg"/>
                                </div>
                                <div class="input-number">
                                    <input class="only_num input"  type="text" max="${Matrial.getPlayerAmount("luck_play") + Math.floor(game.DPlayer.Player.gold / 5)}" step="1" min="0" value="1"/>
                                </div>
                                <div id="start-wheel">
                                    <button class="font-2">
                                        بدء 
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>`;

    $("body").append(content);
    $("#luck-wheel").animate({
        top: "80px"
    }, 150, "linear", function() {
        $(this).animate({
            top: "100px"
        }, 100, "linear");
    });
};


/*
 * 
 * hide luck wheel
 * 
 */
LuckWheel.hide = function() {

    $("#luck-wheel").animate({
        top: "70px"
    }, 200, "linear", function() {
        $(this).animate({
            top: "60%"
        }, 180, "linear", function() {
            $("#luck-wheel-btn").animate({
                bottom: "213px"
            }, 180, "linear");
            $(this).animate({
                top: "100%"
            }, 100, "linear", function() {
                $("#luck-wheel-over-lay").remove();
            });
        });
    });

};


/*
 * 
 *LucLuckWheel open gates 
 * 
 */
LuckWheel.openGates = function(call_back) {

    $('#luck-wheel').attr("data-gate-open", "true");

    $('#luck-wheel .cell .left-gate').animate({
        'background-position-x': '-32px'
    }, 500, 'linear');

    $.when.apply($, [$('#luck-wheel .cell .right-gate').animate({
        'background-position-x': '32px'
    }, 500, 'linear')]).then(function() {
        // all complete
        $('#luck-wheel ul li h1').show();
        call_back();
    });

};

/*
 * 
 *LucLuckWheel open gates 
 * 
 */
LuckWheel.closeGates = function() {

    $('#luck-wheel').attr("data-gate-open", "false");
    $('#luck-wheel .cell .left-gate').animate({
        'background-position-x': '0px'
    }, 500, 'linear');
    $('#luck-wheel .cell .right-gate').animate({
        'background-position-x': '0px'
    }, 500, 'linear', function() {
        $('#luck-wheel ul li h1').hide();
    });


};

$(document).on("click", "#hide-luck-wheel", function() {

    LuckWheel.hide();

});


$("#luck-wheel-btn").click(function() {
    $(this).animate({
        bottom: '180px'
    }, 250, 'linear', function() {
        LuckWheel.show();
    });

});


LuckWheel.playLuck = function() {

    return $.ajax({
        url: `${API_URL}/api/APlayer/playLuckWheel`,
        type: 'POST',
        data: {
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

};

LuckWheel.spinWheel = function() {

    LuckWheel.playLuck().done(function(data) {

        if (isJson(data)) {
            var jsonData = JSON.parse(data);
        } else {
            alert(data);
            return;
        }


        MATIAL_FOR_LUCK_WHEEL = jsonData.Prize;
        $("#luck-wheel .holes").html(LuckWheel.holes());
        LuckWheel.openGates(function() {

            var all_pulses = $("#luck-wheel ul li .pulse");
            var cell = jsonData.winIndex;
            var element_to = $("#luck-wheel .control .image-frame img");
            var title_to = $("#luck-wheel .control .title");

            Matrial.takeFrom("luck_play", 1);
            Matrial.givePlayer(MATIAL_FOR_LUCK_WHEEL[jsonData.winIndex].Prize, MATIAL_FOR_LUCK_WHEEL[jsonData.winIndex].amount);
            $("#playeLuckTitle").replaceWith(`<h1 id="playeLuckTitle"> دولاب الحظ:${Matrial.getPlayerAmount("luck_play")} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; كمية الذهب: ${game.DPlayer.Player.gold}</h1>`)

            for (var iii = 0; iii <= 20 + cell; iii++) {

                LuckWheel.sequanceTimer(iii, all_pulses[iii % 20], 20 + cell, element_to, title_to);

            }

        });


    });


};

$(document).on("click", "#start-wheel", function() {


    if (Number(Matrial.getPlayerAmount("luck_play")) < 1) {

        alert_box.confirmDialog("لا يوجد لديك  عدد كافى من دولاب الحظ يمكنك شراء دولاب الحظ من مول المواد", function() {

            $('#hide-luck-wheel').click();
            setTimeout(function() {
                $(".menu-list[data-show='matrial']").click();
                $("#dialg_box .left-nav li[head_title='mall-box']").click();
            }, 500);

        });
        return;

    }



    $(this).prop("disabled", true);


    if ($("#luck-wheel").attr("data-gate-open") === "false") {

        LuckWheel.spinWheel();

    } else if ($("#luck-wheel").attr("data-gate-open") === "true") {

        $(".pulse").css({
            "-webkit-animation": "",
            animation: "",
            opacity: 0
        });
        LuckWheel.closeGates();
        LuckWheel.spinWheel();


    }



});

LuckWheel.sequanceTimer = function(index, element, last, element_to, title_to) {

    setTimeout(function() {
        if (index === last) {
            $(element).css({
                "-webkit-animation": "pulse 1s infinite linear",
                animation: "pulse 1s infinite linear",
                opacity: 1
            });

            var message = `لقد تحصلت على ${MATIAL_FOR_LUCK_WHEEL[last - 20].amount} &times; ${game.BaseData.Items[MATIAL_FOR_LUCK_WHEEL[last - 20].Prize].name} من دولاب الحظ`;
            alert_box.systemChatMessage(message);
            /*  u  disable the button*/
            $("#start-wheel").prop("disabled", false);

        } else {
            $(element).css({
                opacity: 1
            }).animate({
                opacity: 0
            }, 1500, "linear");
        }


        var bg = $(element).parent("li").css('background-image');
        bg = bg.replace('url(', '').replace(')', '').replace(/\"/gi, "");
        $(element_to).attr("src", bg);
        $(title_to).html(game.BaseData.Items[$(element).parent("li").attr("data-matrial-name")].name);

    }, ((300 - Math.floor(200 * Math.exp(-(Math.pow((index - 20) / 20, 2))))) * index));

}; /* global game.CurrentCity.City, BUILDING_TYPS, city_building */
var MY_MARKET_OFFERS_LIST = [];
var MY_MARKET_TRADING_LIST = [];
var MARKET_DEAL_LIST;
var MARKET_TRANSPORTED_RESOURCE = {
    "in": [],
    "out": []
};
const DATA_RESOURCES = {

    food: {
        icon: "images/style/food.png",
        title: "غذاء"
    },
    wood: {
        icon: "images/style/wood.png",
        title: "اخشاب"
    },
    stone: {
        icon: "images/style/stone.png",
        title: "حجارة"
    },
    metal: {
        icon: "images/style/iron.png",
        title: "حديد"
    }

};

var Market = {

    dialogBoxContent: function(resource) {

        if (!resource) {
            resource = "food";
        }

        var box_content = ` <div class="box_content for_building_box for_market">
                            <div class="left-content ">
                                <div class="auction-list">
                                    <div class="th font-2">
                                        <div class="td_1">العرض</div>
                                        <div class="td_2">الكمية</div>
                                        <div class="td_3">السعر</div>
                                    </div>
                                    <div class="buy" id="buy-list-deals">
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                    </div>
                                    <div id="auction-buy-btn">
                                        <button class="full-btn full-btn-3x">${Translate.Button.MenuList.Buy[UserLag.language]}</button>
                                    </div>
                                    <div class="sell" id="sell-list-deals">
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                        <div class="tr"></div>
                                    </div>
                                    <div id="auction-sell-btn">
                                        <button class="full-btn full-btn-3x">${Translate.Button.Building.Sell[UserLag.language]}</button>
                                    </div>
                                </div>
                                <div class="resource-list">
                                    <ul>
                                        <li ${resource === "food" ? 'class="selected"' : ""} data-resoure-name="food">
                                            <img src="images/style/food.png"/>
                                            <h2>غذاء</h2>
                                        </li>
                                        <li ${resource === "wood" ? 'class="selected"' : ""} data-resoure-name="wood">
                                            <img src="images/style/wood.png" />
                                            <h2>اخشاب</h2>
                                        </li>
                                        <li ${resource === "stone" ? 'class="selected"' : ""} data-resoure-name="stone">
                                            <img src="images/style/stone.png"/>
                                            <h2>صخور</h2>
                                        </li>
                                        <li ${resource === "metal" ? 'class="selected"' : ""} data-resoure-name="metal">
                                            <img src="images/style/iron.png"/>
                                            <h2>حديد</h2>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div class="right-content">
                                <div class="inner_nav" id="market-inner-nav">
                                    <div class="nav-title" data-inner-nav="market-my-offers">
                                         عروضى
                                    </div>
                                    <div class="nav-title" data-inner-nav="market-status-offer">
                                       وصول الطلبات
                                    </div>
                                    <div class="nav-title selected" data-inner-nav="marke-make-offers">
                                        انشاء عرض
                                    </div>
                                </div>
                                ${this.innerNav_creatOffer(resource)}
                            </div>
                        </div>`;
        this.dealsList(resource);
        return box_content;
    },

    getMarketMaxTransNum: function() {

        return game.City.getCity().BuildingLvl[cityHasType(BUILDING_TYPS.MARKET)] * 100000;

    },

    innerNav_creatOffer: function(offer_for) {


        var content = ` <div id="under-inner-nav" data-for="creat-offer">
                            <div class="u-have">
                                <div class="resource">
                                    <span class="res">${DATA_RESOURCES[offer_for].title}</span>: <span class="amount">${Math.floor(game.CurrentCity.City[offer_for])}</span>
                                </div>
                                <div class="coin">
                                    <span class="res">سسترسس</span>: <span class="amount">${Math.floor(game.CurrentCity.City.coin)}</span>
                                </div>
                            </div>
                            <div class="sell-or-buy">
                                <div class="sell">
                                    <input id="trigger_1" type="radio" name="sell_or_buy" checked="" value="sell">
                                    <label for="trigger_1" class="checker"></label>
                                    <span> بيع</span>
                                </div>
                                <div class="buy">
                                    <input id="trigger_2" type="radio" name="sell_or_buy"  value="buy">
                                    <label for="trigger_2" class="checker"></label>
                                    <span> ${Translate.Button.MenuList.Buy[UserLag.language]}</span>
                                </div>
                            </div>

                            <div class="quantity">
                                <label>الكمية:</label>
                                <input type="text"  step="${Math.min(Math.floor(game.CurrentCity.City[offer_for]), 2e8)}" class="only_num input" min="0" max="${Math.min(Math.floor(game.CurrentCity.City[offer_for]), 2e8)}"/>
                                <button class="full-btn full-btn-3x" id="maximum-limit-deal">${Translate.Button.Building.Maximize[UserLag.language]}</button>
                            </div>
                            <div class="unite-price">
                                <label>سعر الوحدة:</label>
                                <input type="text" fraction="true"  step="0.01" class="only_num input" min="0" max="1000" value="${MARKET_DEAL_LIST ? MARKET_DEAL_LIST.sellOffers[0] ? MARKET_DEAL_LIST.sellOffers[0].unit_price : 0 : 0}"/>
                            </div>

                            <div id="trans-fees">
                                <span>رسوم الصفقة:</span> <span class="amount">0</span> سسترسس
                            </div>
                            <div id="trans-total-price">
                                <span>السعر الكلى:</span> <span class="amount">0</span> سسترسس
                            </div>

                            <div id="confirm-deal">
                                سيتم خصم 0.75% من السعر الكلى للصفقة 
                                <button class="full-btn full-btn-3x">${Translate.Button.Building.Confirm[UserLag.language]}</button>
                            </div>
                        </div>`;
        return content;

    },

    innerNav_myOffers: function() {

        var content = `<div id="under-inner-nav">
                            <div class="th">
                                <div class="td_1 ellipsis">${Translate.Title.TH.Resources[UserLag.language]}</div>
                                <div class="td_2 ellipsis">${Translate.Title.TH.Quantity[UserLag.language]}</div>
                                <div class="td_3 ellipsis">${Translate.Title.TH.UnitePrice[UserLag.language]}</div>
                                <div class="td_4 ellipsis">${Translate.Title.TH.Done[UserLag.language]}</div>
                                <div class="td_5 ellipsis">${Translate.Title.TH.Resource[UserLag.language]}</div>
                                <div class="td_6 ellipsis">${Translate.Title.TH.Cancel[UserLag.language]}</div>
                            </div>
                            <div id="my-offers-full-list" >
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                            </div>   
                        </div>`;

        $.ajax({
            url: `https://${WS_HOST}:${WS_PORT}/api/ACityMarket/getCityOffers`,
            data: {
                idCity: game.CurrentCity.City.id_city,
                token: TOKEN
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (isJson(data)) {

                    var json_data = JSON.parse(data);
                    MY_MARKET_OFFERS_LIST = json_data;
                } else {

                    alert(data);
                    console.log(data);
                    return;

                }

                var list = "";
                var counter = 0;
                for (var index = 0; index < 10; index++) {
                    if (json_data[index]) {
                        list += `<div class="tr" data-id-deal="${json_data[index].id_deal}">
                                <div class="td_1">${DATA_RESOURCES[json_data[index].resource].title}</div>
                                <div class="td_2">${json_data[index].amount}</div>
                                <div class="td_3">${parseFloat(json_data[index].unit_price)}</div>
                                <div class="td_4">${json_data[index].done}</div>
                                <div class="td_5">${json_data[index].deal === "sell" ? "بيع" : Translate.Button.MenuList.Buy[UserLag.language]}</div>
                                <div class="td_6">
                                    <button class="full-btn  full-btn-3x cansel-market-deal">الغاء</button>
                                </div>
                            </div>`;
                    } else {
                        list += `<div class="tr"></div>`;
                    }
                }

                $("#my-offers-full-list").html(list);

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

        return content;
    },
    innerNav_TradingStatus: function() {

        var content = `<div id="under-inner-nav">
                            <div class="th">
                                <div class="td_1 ellipsis">${Translate.Title.TH.Resource[UserLag.language]}</div>
                                <div class="td_2 ellipsis">${Translate.Title.TH.Quantity[UserLag.language]}</div>
                                <div class="td_3 ellipsis">${Translate.Title.TH.UnitePrice[UserLag.language]}</div>
                                <div class="td_4 ellipsis">${Translate.Title.TH.TotalPrice[UserLag.language]}</div>
                                <div class="td_5 ellipsis">${Translate.Title.TH.ArrivalTime[UserLag.language]}</div>
                                <div class="td_6 ellipsis">${Translate.Title.TH.Cancel[UserLag.language]}</div>
                            </div>
                            <div id="my-comming-offers" >
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                                <div class="tr"></div>
                            </div>   
                        </div>`;

        $.ajax({
            url: `https://${WS_HOST}:${WS_PORT}/api/ACityMarket/getCityOffersTrans`,
            data: {
                idCity: game.CurrentCity.City.id_city,
                token: TOKEN
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (isJson(data)) {

                    var json_data = JSON.parse(data);
                    MY_MARKET_TRADING_LIST = json_data;

                } else {

                    alert(data);
                    console.log(data);
                    return;

                }

                var list = "";
                var counter = 0;
                for (var index = 0; index < 10; index++) {
                    if (json_data[index]) {
                        list += `<div class="tr" data-id-deal="${json_data[index].id_deal}">
                                <div class="td_1">${DATA_RESOURCES[json_data[index].resource].title}</div>
                                <div class="td_2">${json_data[index].amount}</div>
                                <div class="td_3">${parseFloat(json_data[index].unit_price)}</div>
                                <div class="td_4">${Math.floor(json_data[index].unit_price * json_data[index].amount)}</div>
                                <div class="td_5 time_counter rtl" time-end="${json_data[index].time_arrive}">${changeTimeFormat(json_data[index].time_arrive - $.now() / 1000)}</div>
                                <div class="td_6">
                                    <button class="acce-arrving-dael acce-small-btn"></button>
                                </div>
                            </div>`;
                        //                                                <h1 class="time_counter building_counter rtl" time-end="${json_data.time_end}">

                    } else {
                        list += `<div class="tr"></div>`;
                    }
                }

                $("#my-comming-offers").html(list);

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

        return content;
    },

    dealsList: function(dealFor) {

        $.ajax({

            url: `https://${WS_HOST}:${WS_PORT}/api/ACityMarket/getOffersList`,
            data: {
                offerFor: dealFor,
                token: TOKEN
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (isJson(data)) {
                    var json_data = JSON.parse(data);
                    MARKET_DEAL_LIST = json_data;
                } else {
                    alert(data);
                    return;
                }

                var buy_list = "";
                var sell_list = "";

                for (var iii = 0; iii < 5; iii++) {
                    if (json_data.buyOffers[iii]) {

                        buy_list += `<div class="tr">
                                    <div class="td_1">${Translate.Button.MenuList.Buy[UserLag.language]}</div>
                                    <div class="td_2">${json_data.buyOffers[iii].amount - json_data.buyOffers[iii].done}</div>
                                    <div class="td_3">${parseFloat(json_data.buyOffers[iii].unit_price)}</div>
                                </div>`;


                    } else {
                        buy_list += `<div class="tr"></div>`;
                    }

                    if (json_data.sellOffers[iii]) {

                        sell_list += `<div class="tr">
                                    <div class="td_1">بيع</div>
                                    <div class="td_2">${json_data.sellOffers[iii].amount - json_data.sellOffers[iii].done}</div>
                                    <div class="td_3">${parseFloat(json_data.sellOffers[iii].unit_price)}</div>
                                </div>`;

                    } else {
                        sell_list += `<div class="tr"></div>`;
                    }


                }

                $("#buy-list-deals").html(buy_list);
                $("#sell-list-deals").html(sell_list);

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });


    },

    transportResources: function() {

        var content = `<div class="box_content for_building_box for_market">
                            <div class="left-content ">
                                <div class="rightOfLeft" id="resource-input-list">
                                    <ul>
                                        <li>
                                            <div class="resource">
                                                <img src="images/style/food.png"/>
                                                <span>${Math.floor(game.CurrentCity.City.food)}</span>
                                            </div>
                                            <div class="input-warpper">
                                                <input data-resource="food" 
                                                    type="text" class="only_num input" min="0"
                                                    step="${Math.min(Math.floor(game.CurrentCity.City.food), Market.getMarketMaxTransNum())}"   
                                                    max="${Math.min(Math.floor(game.CurrentCity.City.food), Market.getMarketMaxTransNum())}" value="0"/>
                                                <div class="number-arrow-wrapper pull-L">
                                                    <label class="number-arrow up"></label>
                                                    <label class="number-arrow down"></label>
                                                </div>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="resource">
                                                <img src="images/style/wood.png"/>
                                                <span>${Math.floor(game.CurrentCity.City.wood)}</span>
                                            </div>
                                            <div class="input-warpper">
                                                <input data-resource="wood" 
                                                    type="text" class="only_num input" min="0"
                                                    step="${Math.min(Math.floor(game.CurrentCity.City.wood), Market.getMarketMaxTransNum())}"   
                                                    max="${Math.min(Math.floor(game.CurrentCity.City.wood), Market.getMarketMaxTransNum())}" value="0"/>
                                                <div class="number-arrow-wrapper pull-L">
                                                    <label class="number-arrow up"></label>
                                                    <label class="number-arrow down"></label>
                                                </div>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="resource">
                                                <img src="images/style/stone.png"/>
                                                <span>${Math.floor(game.CurrentCity.City.stone)}</span>
                                            </div>
                                            <div class="input-warpper">
                                               <input data-resource="stone" 
                                                    type="text" class="only_num input" min="0"
                                                    step="${Math.min(Math.floor(game.CurrentCity.City.stone), Market.getMarketMaxTransNum())}"   
                                                    max="${Math.min(Math.floor(game.CurrentCity.City.stone), Market.getMarketMaxTransNum())}" value="0"/>
                                                <div class="number-arrow-wrapper pull-L">
                                                    <label class="number-arrow up"></label>
                                                    <label class="number-arrow down"></label>
                                                </div>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="resource">
                                                <img src="images/style/iron.png"/>
                                                <span>${Math.floor(game.CurrentCity.City.metal)}</span>
                                            </div>
                                            <div class="input-warpper">
                                                <input data-resource="metal" 
                                                    type="text" class="only_num input" min="0"
                                                    step="${Math.min(Math.floor(game.CurrentCity.City.metal), Market.getMarketMaxTransNum())}"   
                                                    max="${Math.min(Math.floor(game.CurrentCity.City.metal), Market.getMarketMaxTransNum())}" value="0"/>
                                                <div class="number-arrow-wrapper pull-L">
                                                    <label class="number-arrow up"></label>
                                                    <label class="number-arrow down"></label>
                                                </div>
                                            </div>
                                        </li>
                                        <li>
                                            <div class="resource">
                                                <img src="images/style/coin.png"/>
                                                <span>${Math.floor(game.CurrentCity.City.coin)}</span>
                                            </div>
                                            <div class="input-warpper">
                                                <input data-resource="coin" 
                                                    type="text" class="only_num input" min="0"
                                                    step="${Math.min(Math.floor(game.CurrentCity.City.coin), Market.getMarketMaxTransNum())}"   
                                                    max="${Math.min(Math.floor(game.CurrentCity.City.coin), Market.getMarketMaxTransNum())}" value="0"/>
                                                <div class="number-arrow-wrapper pull-L">
                                                    <label class="number-arrow up"></label>
                                                    <label class="number-arrow down"></label>
                                                </div>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                                <div class="leftOfLeft">
                                    <div id="transport-distin">
                                        <label> جهة الوصول: </label>
                                        <span> x = </span>
                                        <input data-coord="x" class="only_num input" type="text" max='499' min="0">
                                        <span> y = </span>
                                        <input data-coord="y"  class="only_num input" type="text" max='499' min="0"/>
                                    </div>
                                    <div class="my-city-distin">
                                        <label>المدينة</label>
                                        <div class="select-input" id="select-city-trans-dis">
                                            <div class="value ellipsis"></div>
                                        </div>
                                        <div id="select_city_trans" class="select_option" >
                                            <ol></ol>
                                        </div>
                                    </div>
                                    <p>
                                        يتم الان نقل 0 من 20 عملية نقل بواسطة النقالين
                                        (يستطيع كل ناقل  حمل مقدار 20000 من الموارد)

                                    </p>
                                    <div class="transit-time">
                                        الوقت المقدر للوصول: <span>0</span>
                                    </div>


                                    <div id="statrt-transport-res">
                                        <button class="full-btn  full-btn-3x">${Translate.Button.Building.TransportResources[UserLag.language]}</button>
                                    </div>

                                </div>

                            </div>
                            <div class="right-content">
                                <div class="inner_nav" id="transport-res-inner-nav">
                                    <div class="nav-title selected" data-in-out="out">
                                         الموارد المرسلة
                                    </div>
                                    <div class="nav-title" data-in-out="in">
                                        الموارد القادمة
                                    </div>
                                </div>
                                <div id="under-inner-nav">
                                </div>
                            </div>
                        </div>`;
        this.transportedResourcesList("out");
        return content;
    },
    /*
     *   state  the state of transport
     *   in or out
     */

    TransList: {
        "in": [],
        "out": [],
        "back": []
    },
    TransListHt: function(inOrOut) {
        var List = '';
        var Trans = {};
        for (var ii in this.TransList[inOrOut]) {

            Trans = this.TransList[inOrOut][ii];

            List += `<li class="unit-trans-table" data-id-trans="${Trans.id_trans}">
                    <div class="row">
                        <div class="td">
                            <img src="images/style/food.png"/>
                            <span>${Trans.food}</span>
                        </div>
                        <div class="td">
                            <img src="images/style/wood.png"/>
                            <span>${Trans.wood}</span>
                        </div>
                        <div class="td">
                            <img src="images/style/stone.png"/>
                            <span>${Trans.stone}</span>
                        </div>
                    </div>
                    <div class="row">
                         <div class="td">
                             <img src="images/style/iron.png"/>
                            <span>${Trans.metal}</span>
                        </div>
                        <div class="td">
                            <img src="images/style/coin.png"/>
                            <span>${Trans.coin}</span>
                        </div>
                        <div class="td">
                            <img src="images/style/wait.png"/>
                            <span class="rtl time_counter inner_market_nav" time-end="${Trans.time_arrive}">${changeTimeFormat(Trans.time_arrive - Date.now() / 1000)}</span>
                        </div>
                    </div>
                    <div class="footer">
                        <label class="name-city">${Trans.CityNameFrom} &nbsp;&nbsp;[ ${Trans.xCoordFrom} ,  ${Trans.yCoordFrom}] </label>
                        <label class="arrow"><img src="images/arrow/go-right.png"/></label>
                        <label class="name-city">[ ${Trans.xCoordTo} ,  ${Trans.yCoordTo}] </label>
                        <button data-id-trans=${Trans.id_trans} 
                            class="speed-up speed-up-btn acce-transport-deal"
                            ${Trans.acce != 0 ? 'disabled="disabled"' : ""}><span>تسريع</span></button>
                    </div>
                </li>`;
        }


        return `<ul>${List}</ul>`;

    },
    transportedResourcesList: function(in_or_out) {

        $.ajax({

            url: `${API_URL}/api/ACityMarketTrans/getCityTransportResource`,
            data: {
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'GET',
            beforeSend: function(xhr) {


            },
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);


                var JsonData = JSON.parse(data);
                Market.TransList.in = [];
                Market.TransList.out = [];
                for (var iii in JsonData) {
                    if (JsonData[iii].id_city_to == game.CurrentCity.City.id_city)
                        Market.TransList.in.push(JsonData[iii]);
                    if (JsonData[iii].id_city_from == game.CurrentCity.City.id_city)
                        Market.TransList.out.push(JsonData[iii]);
                }


                $("#under-inner-nav").html(Market.TransListHt(in_or_out));
                $("#under-inner-nav").niceScroll(SCROLL_BAR_PROP);
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    }




};



/*  When player select a  resource*/
$(document).on("click", ".resource-list ul li", function() {

    $(".resource-list ul .selected").removeClass("selected");
    $(this).addClass("selected");

    var resource_name = $(this).attr("data-resoure-name");
    var resource_title = $(this).children('h2').html();
    Market.dealsList(resource_name);
    if ($("#under-inner-nav").attr("data-for") === 'creat-offer') {
        $("#under-inner-nav").replaceWith(Market.innerNav_creatOffer(resource_name));
    }


});

$(document).on("change", '.sell-or-buy input[name="sell_or_buy"]', function() {

    var resource = $(".resource-list ul .selected").attr("data-resoure-name");
    var sell_or_buy = $('.sell-or-buy input[name="sell_or_buy"]:checked').val();
    var unit_price = $("#under-inner-nav .unite-price input").val();

    if (sell_or_buy === 'sell') {

        unit_price <= 0 ? MARKET_DEAL_LIST.sellOffers[0].unit_price : unit_price;

        $("#under-inner-nav .quantity input").attr("max", Math.min(Math.ceil(Math.min(Math.floor(game.CurrentCity.City[resource]), game.CurrentCity.City.coin * 100 / (unit_price * 0.75))), 2e8));
        $("#under-inner-nav .quantity input").attr("step", Math.min(Math.ceil(Math.min(Math.floor(game.CurrentCity.City[resource]), game.CurrentCity.City.coin * 100 / (unit_price * 0.75))), 2e8));


    } else if (sell_or_buy === 'buy') {

        unit_price <= 0 ? MARKET_DEAL_LIST.buyOffers[0].unit_price : unit_price;
        $("#under-inner-nav .quantity input").attr("max", Math.min(Math.ceil(game.CurrentCity.City.coin / unit_price), 2e8));
        $("#under-inner-nav .quantity input").attr("step", Math.min(Math.ceil(game.CurrentCity.City.coin / unit_price), 2e8));

    }

    $("#under-inner-nav .unite-price input").val(unit_price);

});


/* make adeal*/
$(document).on('click', "#confirm-deal button", function() {

    var sell_or_buy = $('.sell-or-buy input[name="sell_or_buy"]:checked').val();
    var quantity = $("#under-inner-nav .quantity input").val();
    var unit_price = $("#under-inner-nav .unite-price input").val();
    var resource = $(".resource-list ul .selected").attr("data-resoure-name");
    var fees = unit_price * quantity * 0.75 / 100;
    var self = $(this);

    if (Number(game.City.getCity().BuildingLvl.market) <= MY_MARKET_OFFERS_LIST.length) {
        alert_box.confirmMessage("مستوى السوق لا يسمح باضافة عروض اخرى يمكنك  الغاء احد عروضك لانشاء  هذا العرض");
        return;
    }


    if (Number(quantity) <= 0 || isNaN(quantity)) {

        alert_box.confirmMessage("عليك ادخال الكمية المراد ");
        return;
    } else if (Number(unit_price) <= 0 || isNaN(unit_price)) {

        alert_box.confirmMessage("عليك ادخال السعر المطلوب  ");
        return;

    } else if (!resource) {

        alert_box.confirmMessage("اختر نوع المورد المطلوب");
        return;

    }




    if (sell_or_buy === "sell") {


        if (Number(quantity) > game.CurrentCity.City[resource]) {

            alert_box.confirmMessage("لا يمكنك بيع  كمية مواد لا تملكها ");
            return;

        } else if (Number(game.CurrentCity.City.coin) < fees) {

            alert_box.confirmMessage("لا يوجد لديك سسترسس كافى لدفع الرسوم");
            return;

        }

        $.ajax({

            url: `https://${WS_HOST}:${WS_PORT}/api/ACityMarket/proposeSellOffer`,
            data: {
                idCity: Number(game.CurrentCity.City.id_city),
                unitPrice: Number(unit_price),
                ResType: resource,
                amount: quantity,
                token: TOKEN

            },
            type: 'POST',
            beforeSend: function(xhr) {
                game.CurrentCity.City[resource] -= quantity;
                game.CurrentCity.City.coin = fees;
                self.attr("disabled", "disabled");
                waitCursor();
            },
            success: function(data, textStatus, jqXHR) {
                unwaitCursor();
                self.removeAttr("disabled");

                if (isJson(data)) {
                    var json_data = JSON.parse(data);
                } else {
                    alert(data);
                }
                if (json_data.state === "ok") {


                    MY_MARKET_OFFERS_LIST = json_data.cityOffers;
                    game.CurrentCity.City = json_data.cityRes;

                    PLAYER_NOTIF.msg_diff = Number(PLAYER_NOTIF.msg_diff) + Number(json_data.msg_num);

                    city_profile.refresh_resource_view();
                    Fixed.refreshPlayerNotif();
                    /*refresh views */
                    $("#under-inner-nav .u-have .resource .amount").html(Math.floor(game.CurrentCity.City[resource]));
                    $("#under-inner-nav .u-have .coin .amount").html(Math.floor(game.CurrentCity.City.coin));
                    $("#under-inner-nav .quantity input").val(0);
                    $('#trans-fees .amount').html(0);
                    $('#trans-total-price .amount').html(0);
                    $("#dialg_box .box_content  .left-content .resource-list ul .selected").click();
                    alert_box.succesMessage("تمت الصفقة بنجاح");


                    if ($.isArray(json_data.buyers) && json_data.buyers.length > 0) {
                        /* ws.send(JSON.stringify({
                             url: "WS_Market/buyerDealDone",
                             data: {
                                 traders: json_data.buyers,
                                 idPlayer: ID_PLAYER,
                                 token: TOKEN
                             }
                         }));*/
                    }


                } else {

                    alert(data);
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });



    } else if (sell_or_buy === "buy") {

        if (Number(game.CurrentCity.City.coin) < Number(fees) + unit_price * quantity) {
            alert_box.confirmMessage("عذرا  ليس لديك  سسترسس كافى!");
            return;
        }

        $.ajax({

            url: `https://${WS_HOST}:${WS_PORT}/api/ACityMarket/proposeBuyOffer`,
            data: {
                idCity: Number(game.CurrentCity.City.id_city),
                unitPrice: Number(unit_price),
                ResType: resource,
                amount: quantity,
                token: TOKEN


            },
            type: 'POST',
            beforeSend: function(xhr) {

                game.CurrentCity.City.coin -= Number(fees) + unit_price * quantity;

                self.attr("disabled", "disabled");
                waitCursor();
            },
            success: function(data, textStatus, jqXHR) {
                unwaitCursor();
                self.removeAttr("disabled");
                if (isJson(data)) {
                    var json_data = JSON.parse(data);
                } else {
                    alert(data);
                    return;
                }

                if (json_data.state === "ok") {

                    MY_MARKET_OFFERS_LIST = json_data.cityOffers;
                    game.CurrentCity.City = json_data.cityRes;
                    PLAYER_NOTIF.msg_diff = Number(PLAYER_NOTIF.msg_diff) + Number(json_data.msg_num);
                    city_profile.refresh_resource_view();
                    Fixed.refreshPlayerNotif();
                    /*refresh views */
                    $("#under-inner-nav .u-have .resource .amount").html(Math.floor(game.CurrentCity.City[resource]));
                    $("#under-inner-nav .u-have .coin .amount").html(Math.floor(game.CurrentCity.City.coin));
                    $("#under-inner-nav .quantity input").val(0);
                    $('#trans-fees .amount').html(0);
                    $('#trans-total-price .amount').html(0);
                    $("#dialg_box .box_content  .left-content .resource-list ul .selected").click();
                    alert_box.succesMessage("تمت الصفقة بنجاح");


                    if ($.isArray(json_data.seller) && json_data.seller.length > 0) {
                        /*  ws.send(JSON.stringify({
                              url: "WS_Market/sellerDealDone",
                              data: {
                                  traders: json_data.seller,
                                  idPlayer: ID_PLAYER,
                                  token: TOKEN
                              }

                          }));*/
                    }


                } else {

                    alert_box.confirmMessage("حدث خطاء  اثناء عمل العرض");
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });


    }


});

/*   WHEN  INPUT CHANG*/
$(document).on("keyup  change", "#under-inner-nav .quantity input", function() {

    var unit_price = Number($("#under-inner-nav .unite-price input").val());
    if (!unit_price) {

        return;

    }

    $("#trans-fees .amount").html(Math.ceil($(this).val() * unit_price * 0.75 / 100));
    $("#trans-total-price .amount").html(Math.ceil($(this).val() * unit_price));



});
/*   WHEN  INPUT CHANG*/
$(document).on("keyup  change", "#under-inner-nav .unite-price  input", function() {

    var quantity = Number($("#under-inner-nav .quantity input").val());
    if (!quantity) {

        return;

    }

    $("#trans-fees .amount").html(Math.round($(this).val() * quantity * 0.75 / 100));
    $("#trans-total-price .amount").html(Math.round($(this).val() * quantity));



});


/*    maximum  limit click */
$(document).on('click', "#maximum-limit-deal", function() {

    var sell_or_buy = $('.sell-or-buy input[name="sell_or_buy"]:checked').val();
    var resource = $(".resource-list ul .selected").attr("data-resoure-name");
    var unit_price = $("#under-inner-nav .unite-price input").val();



    if (!unit_price) {

        alert_box.confirmMessage("عليك اختيار السعر المطلوب");
        return;

    }

    if (sell_or_buy === 'sell') {

        $("#under-inner-nav .quantity input").val(Math.min(Math.ceil(Math.min(Math.floor(game.CurrentCity.City[resource]), game.CurrentCity.City.coin * 100 / (unit_price * 0.75))), 2e8));

    } else if (sell_or_buy === 'buy') {

        $("#under-inner-nav .quantity input").val(Math.min(Math.ceil(game.CurrentCity.City.coin / unit_price), 2e8));

    }

    $("#under-inner-nav .unite-price input").trigger("keyup");
});




/*   market inner nav bar   */
$(document).on("click", "#market-inner-nav .nav-title", function() {

    $(this).parent("#market-inner-nav").children(".selected").removeClass("selected");
    $(this).addClass("selected");

    var nav_for = $(this).attr("data-inner-nav");

    if (nav_for === "market-my-offers") {

        $("#under-inner-nav").replaceWith(Market.innerNav_myOffers());

    } else if (nav_for === "market-status-offer") {

        $("#under-inner-nav").replaceWith(Market.innerNav_TradingStatus());

    } else if (nav_for === "marke-make-offers") {

        $("#under-inner-nav").replaceWith(Market.innerNav_creatOffer($(".for_market .resource-list ul .selected").attr("data-resoure-name")));

    }

});



/*    cancsel deal */

$(document).on("click", ".cansel-market-deal", function() {

    var id_deal = $(this).parents(".tr").attr("data-id-deal");
    var self_ = $(this).parents(".tr");


    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/ACityMarket/cancelMyOffer`,
        data: {
            idOffer: id_deal,
            idCity: game.CurrentCity.City.id_city,
            token: TOKEN
        },
        type: 'POST',
        beforeSend: function(xhr) {
            self_.attr("disabled", "disabled");
            waitCursor();
        },
        success: function(data, textStatus, jqXHR) {
            self_.removeAttr("disabled");
            unwaitCursor();
            if (isJson(data)) {
                var json_data = JSON.parse(data);
            } else {
                alert(data);
                return;
            }
            if (json_data.state === "ok") {
                self_.remove();
                $('#my-offers-full-list').append('<div class="tr"></div>');

                game.CurrentCity.City = json_data.cityRes;
                MY_MARKET_OFFERS_LIST = json_data.cityOffers;

                city_profile.refresh_resource_view();
                alert_box.succesMessage("تم الغاء العرض بنجاح");
                $("#dialg_box .box_content  .left-content .resource-list ul .selected").click();

            } else {
                alert_box.confirmMessage("لا يمكنك حذف هذا العرض");
                $("#market-inner-nav .selected").trigger("click");

            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

});


/*  accelete market deal */

/*
 *   in this case the acceleration will be full 
 */
$(document).on("click", ".acce-arrving-dael", function() {

    var id_deal = Number($(this).parents(".tr").attr("data-id-deal"));
    var self_ = $(this).parents(".tr");



    var matrial = ["shopping_car"];
    BoxOfMatrialToUse(matrial, "acce-arriving-deal", 1, id_deal);


});



/*    
 * 
 * 
 *    NAV BAR TITLE   city Transport content
 * **/


$(document).on("click", "#select-city-trans-dis", function() {

    var list = ``;
    for (var index in FAVORIT_LIST) {

        list += `<li data-index="${index}" data-x-coord="${FAVORIT_LIST[index].x_coord}" data-y-coord="${FAVORIT_LIST[index].y_coord}">
                    ${FAVORIT_LIST[index].title} [${FAVORIT_LIST[index].x_coord} , ${FAVORIT_LIST[index].y_coord}]
                </li>`;

    }

    $("#select_city_trans ol").html(list);

    $("#select_city_trans").toggle();

});


$(document).on('click', "#select_city_trans ol li", function() {

    var index = $(this).attr("data-index");
    var x_coord = $(this).attr("data-x-coord");
    var y_coord = $(this).attr("data-y-coord");
    var title = $(this).html();

    $("#select-city-trans-dis .value").html(title);
    $("#select_city_trans").hide();
    $("#transport-distin input[data-coord='x']").val(x_coord);
    $("#transport-distin input[data-coord='y']").val(y_coord);

});


$(document).on('change keyup', "#resource-input-list ul li .only_num", function() {

    var value = Math.floor($(this).val());
    var resource = $(this).attr("data-resource");

    var total_in = 0;
    $("#resource-input-list ul li .input-warpper input").each(function() {
        total_in += Math.floor($(this).val());
    });



    var remain = Math.floor(Math.max(Market.getMarketMaxTransNum() - total_in, 0));

    $("#resource-input-list ul li .input-warpper input").each(function() {
        $(this).attr("max", Math.min(Math.floor(game.CurrentCity.City[$(this).attr("data-resource")]), remain));
        $(this).attr("step", Math.min(Math.floor(game.CurrentCity.City[$(this).attr("data-resource")]), remain));
    });



    $(this).parent(".input-warpper").prev(".resource").children("span").html(Math.max(0, (Math.floor(game.CurrentCity.City[resource]) - value)));

});



$(document).on('change keyup', "#transport-distin  .only_num", function() {

    var x_coord = Number($("#transport-distin .only_num[data-coord=x]").val()) || 0;
    var y_coord = Number($("#transport-distin .only_num[data-coord=y]").val()) || 0;


    if (x_coord + y_coord > 0) {

        $("#dialg_box .for_market .leftOfLeft .transit-time span")
            .html(changeTimeFormat(Math.ceil((Math.sqrt(Math.pow((game.CurrentCity.City.x - x_coord), 2) + Math.pow((game.CurrentCity.City.y - y_coord), 2)))) * 20));

    } else {
        $("#dialg_box .for_market .leftOfLeft .transit-time span")
            .html(0);
    }
});


$(document).on("click", "#transport-res-inner-nav .nav-title", function() {

    $("#transport-res-inner-nav .nav-title").removeClass("selected");
    $(this).addClass("selected");

    Market.transportedResourcesList($(this).attr("data-in-out"));


});


$(document).on("click", "#statrt-transport-res button", function() {

    var xCoord = $("#transport-distin input[data-coord='x']").val();
    var yCoord = $("#transport-distin input[data-coord='y']").val();

    if (!xCoord || !yCoord)
        return alert_box.failMessage("هذة الاحداثيات غير صحيحة تأكد من الاحداثيات");



    var Unit = WorldUnit.getWorldUnit(xCoord, yCoord);

    if (!Unit.idCity)
        return alert_box.failMessage("هذة الاحداثيات ليست إحداثيات مدينة");

    var total_resource = 0;
    var resource_to_send = {
        food: 0,
        wood: 0,
        stone: 0,
        metal: 0,
        coin: 0
    };
    $("#resource-input-list ul li .input-warpper input").each(function() {
        resource_to_send[$(this).attr("data-resource")] = Number($(this).val());
        total_resource += Number($(this).val());
    });



    if (total_resource <= 0) {
        alert_box.failMessage("يجب عليك ادخال  الموارد المراد ارسالها");
        return;
    } else if (total_resource > Market.getMarketMaxTransNum()) {
        alert_box.confirmMessage("لا يستطيع الناقلون نقل كمية اكبر من استيعاب السوق لها");
        return;
    }

    if (Number(game.CurrentCity.City.food) < resource_to_send.food || resource_to_send.food < 0) {
        alert_box.failMessage("لا يوجد غذاء كافى ");
        return;
    } else if (Number(game.CurrentCity.City.wood) < resource_to_send.wood || resource_to_send.wood < 0) {
        alert_box.failMessage("لا يوجد اخشاب كافى ");
        return;
    } else if (Number(game.CurrentCity.City.stone) < resource_to_send.stone || resource_to_send.stone < 0) {
        alert_box.failMessage("لا يوجد حجارة كافى ");
        return;
    } else if (Number(game.CurrentCity.City.metal) < resource_to_send.metal || resource_to_send.metal < 0) {
        alert_box.failMessage("لا يوجد حديد كافى ");
        return;
    } else if (Number(game.CurrentCity.City.coin) < resource_to_send.coin || resource_to_send.coin < 0) {
        alert_box.failMessage("لا يوجد عملات كافى ");
        return;
    }
    var self = $(this);

    $.ajax({

        url: `${API_URL}/api/ACityMarketTrans/transportResource`,
        data: {
            food: resource_to_send.food,
            wood: resource_to_send.wood,
            stone: resource_to_send.stone,
            metal: resource_to_send.metal,
            coin: resource_to_send.coin,
            idCityFrom: game.CurrentCity.City.id_city,
            idCityTo: Unit.idCity,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {
            self.prop("disabled", true);
            self.attr("disabled", "disabled");
            waitCursor();
        },
        success: function(data, textStatus, jqXHR) {

            self.prop("disabled", false);
            self.removeAttr("disabled");
            unwaitCursor();
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);



            var JsonData = JSON.parse(data);

            if (JsonData.state == "error_0")
                return alert_box.failMessage("كمية المواد غير صحيحة");
            if (JsonData.state == "error_1")
                return alert_box.confirmMessage("لا يمكنك ارسال بعثات اخرى خارج المدينة جميع النقالين بالخارج");
            if (JsonData.state == "error_2")
                return alert_box.confirmMessage("لا يستطيع السوق نقل هذة الكمية");
            if (JsonData.state == "error_3")
                return alert_box.confirmMessage("لا توجد موارد كافية فى المدينة");

            Market.transportedResourcesList("out");

            game.CurrentCity.City.food = Number(JsonData.cityRes.food);
            game.CurrentCity.City.wood = Number(JsonData.cityRes.wood);
            game.CurrentCity.City.stone = Number(JsonData.cityRes.stone);
            game.CurrentCity.City.metal = Number(JsonData.cityRes.metal);
            game.CurrentCity.City.coin = Number(JsonData.cityRes.coin);
            city_profile.refresh_resource_view();

            alert_box.succesMessage("تم ارسال النقالين بنجاح");


        },
        error: function(jqXHR, textStatus, errorThrown) {


        }

    });



});




$(document).on("click", "#auction-buy-btn button", function() {

    $("#under-inner-nav .sell-or-buy .buy input").prop("checked", true);
    $("#under-inner-nav .unite-price input").val(MARKET_DEAL_LIST.buyOffers[0] ? MARKET_DEAL_LIST.buyOffers[0].unit_price : 0);

});

$(document).on("click", "#auction-sell-btn button", function() {

    $("#under-inner-nav .sell-or-buy .sell input").prop("checked", true);
    $("#under-inner-nav .unite-price input").val(MARKET_DEAL_LIST.sellOffers[0] ? MARKET_DEAL_LIST.sellOffers[0].unit_price : 0);

});


$(document).on("click", ".acce-transport-deal", function() {

    var id_trans = $(this).attr("data-id-trans");
    var self = $(this);
    if (!id_trans) {
        alert_box.failMessage("حدث خطاء");
    }
    if (Matrial.getPlayerAmount("shopping_car") < 1) {
        alert_box.confirmMessage("لا يوجد لديك عربات تسوق للقيام بالعملية");
        return;
    }

    alert_box.confirmDialog("تاكيد استعمال 1 عربة تسوق لتسريع  عملية النقل", function() {

        $.ajax({
            url: `${API_URL}/api/ACityMarketTrans/speedUpTransport`,
            data: {
                idTrans: id_trans,
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {
                self.attr("disabled", "disabled");
                waitCursor();
            },
            success: function(data, textStatus, jqXHR) {
                unwaitCursor();
                self.removeAttr("disabled");

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonData = JSON.parse(data);

                if (JsonData.state == "error_0")
                    return alert_box.failMessage("لقد تم نقل هذه النقله");
                if (JsonData.state == "error_1")
                    return alert_box.failMessage("لقد تم تسريع هذه النقله");
                if (JsonData.state == "error_2")
                    return alert_box.failMessage("لا توجد عربات نقل كافية لتسريع هذه الدفعة");

                $("#transport-res-inner-nav .selected").click();
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    });

});
/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
Palace = {

    isExpanable: function() {


        if (Number(game.City.getCity().BuildingLvl.palace) < (Number(game.CurrentCity.City.lvl) + 1) * 4) {
            return false;
        } else if (Matrial.getPlayerAmount("expan_plan") < Math.pow(2, game.CurrentCity.City.lvl)) {
            return false;
        } else if (Number(game.CurrentCity.City.food) < (Number(game.CurrentCity.City.lvl) + 1) * 3000) {
            return false;
        } else if (Number(game.CurrentCity.City.wood) < (Number(game.CurrentCity.City.lvl) + 1) * 3000) {
            return false;
        } else if (Number(game.CurrentCity.City.stone) < (Number(game.CurrentCity.City.lvl) + 1) * 3000) {
            return false;
        } else if (Number(game.CurrentCity.City.coin) < (Number(game.CurrentCity.City.lvl) + 1) * 3000) {
            return false;
        } else if (Number(game.CurrentCity.City.metal) < (Number(game.CurrentCity.City.lvl) + 1) * 3000) {
            return false;
        } else {
            return true;
        }
    }
};

Palace.getBarrayEffect = function() {

    var food_bar_effect = 0;
    var wood_bar_effect = 0;
    var stone_bar_effect = 0;
    var metal_bar_effect = 0;



    for (var index in game.CurrentCity.Barray) {

        var Unit = WorldUnit.getWorldUnit(game.CurrentCity.Barray[index].x_coord, game.CurrentCity.Barray[index].y_coord);

        if (WorldUnit.isRiver(Unit.ut)) {
            food_bar_effect += 0.03 * Unit.l;
        } else if (WorldUnit.isWood(Unit.ut)) {
            wood_bar_effect += 0.03 * Unit.l;
        } else if (WorldUnit.isDesert(Unit.ut)) {
            stone_bar_effect += 0.03 * Unit.l;
        } else if (WorldUnit.isMountain(Unit.ut)) {
            metal_bar_effect += 0.03 * Unit.l;
        }
    }

    return {
        food: food_bar_effect,
        wood: wood_bar_effect,
        stone: stone_bar_effect,
        metal: metal_bar_effect
    };

};

Palace.getTotalProduction = function() {
    var city_console = game.Hero.getHero(game.CurrentCity.City.console);

    var console_effect = 0;
    if (city_console) {
        console_effect = (Number(city_console.Hero.point_a) + Number(city_console.Hero.point_a_plus)) / 200;
        console_effect = city_console.Medal.medal_ceasro > $.now() / 1000 ? console_effect : console_effect * 1.25;
    }

    var food_effective = Math.min(Math.floor(game.City.getCity().Jop.food * game.City.getCity().Jop.food_rate / 100), game.CurrentCity.City.pop) * 10;
    var wood_effective = Math.min(Math.floor(game.City.getCity().Jop.wood * game.City.getCity().Jop.wood_rate / 100), game.CurrentCity.City.pop, game.CurrentCity.City.pop - food_effective) * 10;
    var stone_effective = Math.min(Math.floor(game.City.getCity().Jop.stone * game.City.getCity().Jop.stone_rate / 100), game.CurrentCity.City.pop, Math.max(game.CurrentCity.City.pop - food_effective - wood_effective, 0)) * 10;
    var metal_effective = Math.min(Math.floor(game.City.getCity().Jop.metal * game.City.getCity().Jop.metal_rate / 100), game.CurrentCity.City.pop, Math.max(game.CurrentCity.City.pop - food_effective - wood_effective - stone_effective, 0)) * 10;


    var BarrayEffect = Palace.getBarrayEffect();


    return {
        food: food_effective + food_effective * console_effect + BarrayEffect.food * food_effective + game.DPlayer.PlayerEdu.farming * 0.1 * food_effective,
        wood: wood_effective + wood_effective * console_effect + BarrayEffect.wood * wood_effective + game.DPlayer.PlayerEdu.wooding * 0.1 * wood_effective,
        stone: stone_effective + stone_effective * console_effect + BarrayEffect.stone * stone_effective + game.DPlayer.PlayerEdu.stoning * 0.1 * stone_effective,
        metal: metal_effective + metal_effective * console_effect + BarrayEffect.metal * metal_effective + game.DPlayer.PlayerEdu.mining * 0.1 * metal_effective
    };

};


Palace.productionReport = function() {

    var food_effective = Math.min(Math.floor(game.City.getCity().Jop.food * game.City.getCity().Jop.food_rate / 100), game.CurrentCity.City.pop);
    var wood_effective = Math.min(Math.floor(game.City.getCity().Jop.wood * game.City.getCity().Jop.wood_rate / 100), game.CurrentCity.City.pop, game.CurrentCity.City.pop - food_effective);
    var stone_effective = Math.min(Math.floor(game.City.getCity().Jop.stone * game.City.getCity().Jop.stone_rate / 100), game.CurrentCity.City.pop, Math.max(game.CurrentCity.City.pop - food_effective - wood_effective, 0));
    var metal_effective = Math.min(Math.floor(game.City.getCity().Jop.metal * game.City.getCity().Jop.metal_rate / 100), game.CurrentCity.City.pop, Math.max(game.CurrentCity.City.pop - food_effective - wood_effective - stone_effective, 0));

    var console_effect = 0;
    var city_console = game.Hero.getHero(game.CurrentCity.City.console);
    if (city_console) {
        console_effect = (Number(city_console.Hero.point_a) + Number(city_console.Hero.point_a_plus)) / 200;
        console_effect = city_console.Medal.medal_ceasro > $.now() / 1000 ? console_effect : console_effect * 1.25;
    }



    var BarrayEffect = Palace.getBarrayEffect();

    var totalProduction = Palace.getTotalProduction();

    var left_content = `<div class="left-content full production-report"  style="background: url(images/icons/bg_patern.png);">
                            <div class="th">
                                <div class="td_1 ellipsis">${Translate.General.Iron[UserLag.language]}</div>
                                <div class="td_2 ellipsis">${Translate.General.Stone[UserLag.language]}</div>
                                <div class="td_3 ellipsis subject">${Translate.General.Lumber[UserLag.language]}</div>
                                <div class="td_5 ellipsis">${Translate.General.Crops[UserLag.language]}</div>
                                <div class="td_6 ellipsis"></div>
                                <div class="td_6 ellipsis"></div>
                            </div>
                            <div id="scroll-production-report" class="scroll">
                                <div class="tr">
                                    <div class="td_1">${game.City.getCity().Jop.metal*10}</div>
                                    <div class="td_2">${game.City.getCity().Jop.stone*10}</div>
                                    <div class="td_3">${game.City.getCity().Jop.wood*10}</div>
                                    <div class="td_5">${game.City.getCity().Jop.food*10}</div>
                                    <div class="td_6" style="width: 32%; font-size: 14px"> القدرة الانتاجية من المواد</div>
                                </div>
                                <div class="tr">
                                    <div class="td_1">${game.City.getCity().Jop.metal}</div>
                                    <div class="td_2">${game.City.getCity().Jop.stone}</div>
                                    <div class="td_3">${game.City.getCity().Jop.wood}</div>
                                    <div class="td_5">${game.City.getCity().Jop.food}</div>
                                    <div class="td_6" style="width: 32%; font-size: 14px">الوظائف المتاحة</div>
                                </div>
                                <div class="tr">
                                    <div class="td_1">${game.City.getCity().Jop.metal - metal_effective}</div>
                                    <div class="td_2">${game.City.getCity().Jop.stone - stone_effective}</div>
                                    <div class="td_3">${game.City.getCity().Jop.wood  - wood_effective}</div>
                                    <div class="td_5">${game.City.getCity().Jop.food  - food_effective}</div>
                                    <div class="td_6" style="width: 32%; font-size: 14px"> عدد المطلوب من العمال</div>
                                </div>
                                <div class="tr">
                                    <div class="td_1">${metal_effective}</div>
                                    <div class="td_2">${stone_effective}</div>
                                    <div class="td_3">${wood_effective}</div>
                                    <div class="td_5">${food_effective}</div>
                                    <div class="td_6" style="width: 32%; font-size: 14px"> عدد العاملين</div>
                                </div>
                                <div class="tr">
                                    <div class="td_1"><input id="metal-rate-input" type="text" class="only_num input" style="width: 60%; height: 69%; margin-top: 6px;" max="100" min="0" step="1" value="${game.City.getCity().Jop.metal_rate}"/></div>
                                    <div class="td_2"><input id="stone-rate-input" type="text" class="only_num input" style="width: 60%; height: 69%; margin-top: 6px;" max="100" min="0" step="1" value="${game.City.getCity().Jop.stone_rate}"/></div>
                                    <div class="td_3"><input id="wood-rate-input" type="text" class="only_num input" style="width: 60%; height: 69%; margin-top: 6px;" max="100" min="0" step="1" value="${game.City.getCity().Jop.wood_rate}"/></div>
                                    <div class="td_5"><input id="food-rate-input" type="text" class="only_num input" style="width: 60%; height: 69%; margin-top: 6px;" max="100" min="0" step="1" value="${game.City.getCity().Jop.food_rate}"/></div>
                                    <div class="td_6" style="width: 32%; font-size: 14px"> <button id="change-city-pro-rate" class="full-btn-3x">تعديل النسب</button></div>
                                </div>

                                <div class="tr green">
                                    <div class="td_1">${metal_effective*10}</div>
                                    <div class="td_2">${stone_effective*10}</div>
                                    <div class="td_3">${wood_effective*10}</div>
                                    <div class="td_5">${food_effective*10}</div>
                                    <div class="td_6" style="width: 32%; font-size: 14px">الانتاج الاساسى</div>
                                </div>

                                <div class="tr">
                                    <div class="td_1">${Math.floor(metal_effective*console_effect*10)}</div>
                                    <div class="td_2">${Math.floor(stone_effective*console_effect*10)}</div>
                                    <div class="td_3">${Math.floor(wood_effective*console_effect*10)}</div>
                                    <div class="td_5">${Math.floor(food_effective*console_effect*10)}</div>
                                    <div class="td_6" style="width: 32%; font-size: 14px"> دعم الابطال</div>
                                </div>

                                <div class="tr">
                                    <div class="td_1">${Math.floor(game.DPlayer.PlayerEdu.mining*0.1*metal_effective*10)}</div>
                                    <div class="td_2">${Math.floor(game.DPlayer.PlayerEdu.stoning*0.1*stone_effective*10)}</div>
                                    <div class="td_3">${Math.floor(game.DPlayer.PlayerEdu.wooding*0.1*wood_effective*10)}</div>
                                    <div class="td_5">${Math.floor(game.DPlayer.PlayerEdu.farming*0.1*food_effective*10)}</div>
                                    <div class="td_6" style="width: 32%; font-size: 14px"> دعم الدراسات</div>
                                </div>
                                <div class="tr">
                                    <div class="td_1">${Math.floor(metal_effective*BarrayEffect.metal*10)}</div>
                                    <div class="td_2">${Math.floor(stone_effective*BarrayEffect.stone*10)}</div>
                                    <div class="td_3">${Math.floor(wood_effective*BarrayEffect.wood*10)}</div>
                                    <div class="td_5">${Math.floor(food_effective*BarrayEffect.food*10)}</div>
                                    <div class="td_6" style="width: 32%; font-size: 14px"> دعم البرارى</div>
                                </div>
                                <div class="tr">
                                    <div class="td_1">${Math.floor(metal_effective*BarrayEffect.metal*10)}</div>
                                    <div class="td_2">${Math.floor(stone_effective*BarrayEffect.stone*10)}</div>
                                    <div class="td_3">${Math.floor(wood_effective*BarrayEffect.wood*10)}</div>
                                    <div class="td_5">${Math.floor(food_effective*BarrayEffect.food*10)}</div>
                                    <div class="td_6" style="width: 32%; font-size: 14px"> دعم البرارى</div>
                                </div>
                                <div class="tr">
                                    <div class="td_1">${Math.floor(metal_effective*10* (game.DPlayer.PlayerState.metal > $.now()/1000 ? 0.25 : 0))}</div>
                                    <div class="td_2">${Math.floor(stone_effective*10* (game.DPlayer.PlayerState.stone > $.now()/1000 ? 0.25 : 0))}</div>
                                    <div class="td_3">${Math.floor(wood_effective*10 * (game.DPlayer.PlayerState.wood > $.now()/1000 ? 0.25 : 0))}</div>
                                    <div class="td_5">${Math.floor(food_effective*10 * (game.DPlayer.PlayerState.food > $.now()/1000 ? 0.25 : 0))}</div>
                                    <div class="td_6" style="width: 32%; font-size: 14px">مواد زيادة الانتاج</div>
                                </div>
                                <div class="tr">
                                    <div class="td_1">${game.CurrentCity.City.metal_out}</div>
                                    <div class="td_2">${game.CurrentCity.City.stone_out}</div>
                                    <div class="td_3">${game.CurrentCity.City.wood_out}</div>
                                    <div class="td_5 red">-${game.CurrentCity.City.food_out}</div>
                                    <div class="td_6" style="width: 32%; font-size: 14px">الاستهلاك</div>
                                </div>
                                <div class="tr">
                                    <div class="td_1">${game.CurrentCity.City.metal_in - game.CurrentCity.City.metal_out}</div>
                                    <div class="td_2">${game.CurrentCity.City.stone_in - game.CurrentCity.City.stone_out}</div>
                                    <div class="td_3">${game.CurrentCity.City.wood_in  - game.CurrentCity.City.wood_out}</div>
                                    <div class="td_5">${game.CurrentCity.City.food_in  - game.CurrentCity.City.food_out}</div>
                                    <div class="td_6" style="width: 32%; font-size: 14px">الناتج الاجمالى</div>
                                </div>
                            </div>
                        </div>`;


    return left_content;
};

Palace.cityGarrison = function(offset, id_hero) {

    if (!offset)
        offset = 0;

    var heroList = '';

    var Garrison = game.City.getCity().Garrison;

    for (var iii = 0 + offset; iii < 7 + offset; iii++) {

        if (Garrison[iii]) {

            heroList += `<li class="tr ${Number(id_hero) === Number(Garrison[iii].id_hero) ?  "selected" : ""}" data-offset="${iii}" data-id-hero="${Garrison[iii].id_hero}">
                            <div class="td_1" style="width: 24%; margin-left: 2%;">
                                <div class="image">
                                    <div class="wrapper">
                                        <div class="hero-avatar" style="background-image: url(${game.BaseData.HeroAvatar[Garrison[iii].avatar]})">
                                        </div>
                                    </div>
                                </div>
                                <div class="name ellipsis">
                                    (${Garrison[iii].HeroName})
                                </div>
                            </div>
                            <div class="td_2" style="width: 24%;">${Garrison[iii].LordName}</div>
                            <div class="td_3" style="width: 24%;">
                                <div class="hero-lvl">
                                    ${Garrison[iii].lvl}
                                </div>
                            </div>
                            <div class="td_5" style="width: 24%;">
                                <button class="full-btn-3x remove-hero-city-garrison" data-hero-name="${Garrison[iii].HeroName}" data-id-hero="${Garrison[iii].id_hero}" style="width: 50%;float: left">ازالة البطل</button>
                                    <button class="full-btn-3x show-hero-detailed-review" data-id-hero="${Garrison[iii].id_hero}"  style="width: 45%; float: right"> عرض</button>
                            </div>
                        </li>`;

        } else {
            heroList += `<li class="tr"></li>`;
        }

    }

    var content = ` <div class="left-content ">
                        <h1> قائمة البرارى</h1>
                    <p>
                        من هنا تسطيع عرض البرارى المملوكة<br>
                        <br>
                        <br>

                    </p>
                    <h1>ملحوظة:</h1>
                    <p>
                          لا يمكنك امتلاك اكثر من 10 برارى
                    </p>
                    </div>
                    <div class="right-content">
                        <div class="th">
                            <div class="td_1 ellipsis" style="width: 24%; margin-left: 2%;">${Translate.Title.TH.Hero[UserLag.language]}</div>
                            <div class="td_2 ellipsis" style="width: 24%;">${Translate.Title.TH.Lord[UserLag.language]}</div>
                            <div class="td_3 ellipsis" style="width: 24%;">${Translate.Title.TH.Lvl[UserLag.language]}</div>
                            <div class="td_5 ellipsis" style="width: 24%;">${Translate.Button.General.Action[UserLag.language]}</div>
                        </div>
                        <ol id="city-garrison-list">
                            ${heroList}
                        </ol>
                        <div id="city-garrison-footer" class="right-content-footer">
                            <div class="right">
                                <div class="wrapper" id="change-garrison-order">
                                    <button data-direction="up" class="order-up pull-R"></button>
                                    <button data-direction="down" class="order-down pull-L"></button>
                                </div>
                            </div>
                            <div class="middle">
                                <div class="wrapper">
                                    <button class="GO_L_1" data-direction="dec"></button>
                                    <label>${Math.floor(offset/7) + 1}/${Math.floor((Garrison.length - 1)/7) + 1}</label>
                                    <button class="GO_R_1" data-direction="inc"></button>
                                </div>
                            </div>
                            <div class="left">
                                <button id="add-city-garrison" class="full-btn-3x">${Translate.Button.Building.AddHero[UserLag.language]}</button>
                            </div>
                        </div>
                    </div>`;

    return content;
};

Palace.cityGarrisonHeros = [];

Palace.getCityGarison = function() {

    return game.City.getCityGarrison();

};




$(document).on("click", ".acce-building-from-palace", function() {

    var idTask = $(this).attr("data-id-task");

    var matrial_to_use = [
        "archit_a",
        "archit_b",
        "archit_c",
        "archit_d"
    ];

    BoxOfMatrialToUse(matrial_to_use, "building_acce", 1, idTask);

});



$(document).on("click", "#change-city-taxs", function() {

    var new_val = Number($("#city-name-val").val());

    if (typeof new_val !== "number" || new_val > 100) {

        alert_box.failMessage("لا يمكن ان تكون قيمة الضرائب اكثر من 100%");
        return;

    }

    var idCity = game.CurrentCity.City.id_city;
    $.ajax({

        url: `${API_URL}/api/ACityPalace/updateTaxs`,
        data: {
            idCity: idCity,
            newTaxRate: new_val,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },

        type: 'POST',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {


            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);


            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {

                game.City.getCity(idCity).City = JsonObject.City;
                city_profile.refresh_resource_view();
                alert_box.succesMessage("تم تعديل قيمة الضرائب بنجاح");
                $("#dialg_box .left-nav ul .selected").click();

            } else {


                alert(data);

            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

});

$(document).on("click", "#change-city-name", function() {

    var new_name = $("#city-name-val").val();

    if (new_name.length < 1) {
        alert_box.failMessage("لا يجب ان تكون اسم المدينة خالية");
        return;
    }

    var idCity = game.CurrentCity.City.id_city;
    $.ajax({

        url: `${API_URL}/api/ACityPalace/updateName`,
        data: {
            NewName: new_name,
            idCity: game.CurrentCity.City.id_city,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);


            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {

                game.City.getCity(idCity).City = JsonObject.City;
                alert_box.succesMessage("تم تعديل اسم الدينة بنجاح");
                $("#city-data .name").html(new_name);
            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

});



$(document).on("click", "#expan-city button", function() {

    alert_box.confirmDialog("تاكيد توسيع المدينة", function() {

        if (!Palace.isExpanable() || game.CurrentCity.City.lvl > 2) {
            alert_box.failMessage("لا يمكن توسيع المدينة");
            return;
        }

        var idCity = game.CurrentCity.City.id_city;
        $.ajax({

            url: `${API_URL}/api/ACityPalace/expandCity`,
            data: {
                idCity: game.CurrentCity.City.id_city,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);


                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    Matrial.takeFrom("expan_plan", Math.pow(2, game.CurrentCity.City.lvl));
                    game.City.getCity(idCity).City = JsonObject.City;
                    fillCityWithBuilding();

                    $(".nav_bar .left-nav ul li").each(function() {

                        if ($(this).attr("head_title") === "expantion") {
                            $(this).trigger("click");
                        }

                    });

                    alert_box.succesMessage("تم توسيع المدينة بنجاح");


                } else {

                    alert(data);

                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });



    });

});

$(document).on("click", "#bar_list .abandon", function() {

    var list_ = $(this).parents("li");
    var x_coord = list_.attr("data-x-coord");
    var y_coord = list_.attr("data-y-coord");
    var unite_type = list_.attr("data-unit-type");
    var unit_for = null;

    if (WorldUnit.isDesert(unite_type)) {
        unit_for = "stone";
    } else if (WorldUnit.isRiver(unite_type)) {
        unit_for = "food";
    } else if (WorldUnit.isWood(unite_type)) {
        unit_for = "wood";
    } else if (WorldUnit.isMountain(unite_type)) {
        unit_for = "metal";
    }


    if (unit_for === null) {
        alert_box.failMessage("in valid barray");
        return;
    }

    alert_box.confirmDialog("تاكيد تخلى عن البرارى", function() {

        var idCity = game.CurrentCity.City.id_city;

        $.ajax({
            url: `${API_URL}/api/ACityPalace/barryAbandon`,
            data: {
                xCoord: x_coord,
                yCoord: y_coord,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {

                if (isJson(data)) {

                    var json_data = JSON.parse(data);

                } else {
                    console.log(data);
                    alert(data);
                    return;
                }

                alert_box.succesMessage("تم التخلى عن البرية بنجاح");
                list_.remove();
                game.City.getCityBase(idCity);
                game.City.getCityBarray(idCity).done(function() {
                    $("#dialg_box .left-nav ul .selected").click();
                });

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    });


});



/*     chanege garrio  list*/
$(document).on("click", "#city-garrison-footer .middle .wrapper button", function() {

    var direction = $(this).data("direction");


    if (direction === "inc") {

        var lastOffset = Number($("#city-garrison-list .tr:last-child").data("offset"));
        if (isNaN(lastOffset))
            return;

        if (Number(lastOffset) >= game.City.getCity().Garrison.length - 1)
            return;

        $("#palace_content").html(Palace.cityGarrison(lastOffset + 1));

    } else if (direction === 'dec') {

        var firstOffset = Number($("#city-garrison-list .tr:first-child").data("offset"));
        if (isNaN(firstOffset))
            return;

        if (Number(firstOffset) <= 0)
            return;

        $("#palace_content").html(Palace.cityGarrison(firstOffset - 7));

    }

});
game.Building.Palace.HeroGarrisonList = function() {
    var heroList = "";
    var counter = 0;

    var idCity = Number(game.CurrentCity.City.id_city);

    for (var jjj in game.DPlayer.Heros) {

        var HeroIn = game.DPlayer.Heros[jjj];
        var alreadyInGarr = false;
        if (Number(game.DPlayer.Heros[jjj].Hero.id_city) !== idCity)
            continue;
        for (var iii in game.CurrentCity.Garrison) {
            if (game.CurrentCity.Garrison[iii].id_hero === HeroIn.Hero.id_hero)
                alreadyInGarr = true;
        }
        if (alreadyInGarr)
            continue;

        if (Hero.readyForBattel(game.DPlayer.Heros[jjj])) {
            counter++;
            heroList += `<li class="tr">
                            <div class="td_1" style="width: 25%">
                                <div class="wrapper">
                                    <div class="image" style="background-image: url(${game.BaseData.HeroAvatar[game.DPlayer.Heros[jjj].Hero.avatar]})">

                                    </div>
                                </div>
                            </div>
                            <div class="td_2" style="width: 30%">
                                <div class="name" style="width: 100%">(${game.DPlayer.Heros[jjj].Hero.name})</div>
                            </div>
                            <div class="td_3" style="width: 20%">
                                <div class="lvl"> ${game.DPlayer.Heros[jjj].Hero.lvl}</div>
                            </div>
                            <div class="td_4" style="width: 25%">
                                <button class="full-btn-3x add-city-hero-garrison" data-id-hero="${game.DPlayer.Heros[jjj].Hero.id_hero}">اضافة</button>
                            </div>
                        </li>`;

        }

    }

    var loopEnd = Math.max(0, 10 - counter);

    for (var iii = 0; iii < loopEnd; iii++) {

        heroList += "<li class='tr'></li>"

    }
    return heroList;


};


$(document).on("click", "#add-city-garrison", function() {


    var heroList = game.Building.Palace.HeroGarrisonList();



    var overLay = ` <div id="over_lay" class="select_over_lay">
                        <div id="select_from">
                            <div class="head_bar">
                                <img src="images/style/head_bar.png" class="banner">
                                <div class="title">قائمة الابطال</div>
                                <img class="close close_select_menu" src="images/btns/close_b.png">
                            </div>
                            <p style="clear: both"></p>
                            <div id="hero-select-list">
                                <ol>
                                    ${heroList}
                                </ol>
                            </div>
                        </div>
                    </div>`;


    $("body").append(overLay);
    $("#hero-select-list ol").niceScroll(SCROLL_BAR_PROP);

});


/*   add hero to city Garrison   */
$(document).on("click", "#hero-select-list .add-city-hero-garrison", function(e) {

    e.stopPropagation();
    var id_hero = $(this).data("id-hero");

    if (!id_hero)
        return;

    var self = $(this);

    for (var iii in game.City.getCity().Garrison) {
        if (Number(id_hero) === game.City.getCity().Garrison[iii].id_hero) {

            alert_box.failMessage("لا يمكنك اضافة هذا البطل </br>   ( هذا االبطل موجود بحراسة المدينة  بالفعل )");
            self.parents(".tr").remove();
            $("#hero-select-list ol").append("<li class='tr'></li>");
            return;

        }

    }

    var idCity = game.CurrentCity.City.id_city;

    alert_box.confirmDialog(" تأكيد اضافة البطل الى حراسة المدينة", function() {


        $.ajax({
            url: `${API_URL}/api/ACityPalace/addCityGarrison`,
            data: {
                idHero: id_hero,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {
                self.attr("disabled", "disabled");

                waitCursor();
            },
            success: function(data, textStatus, jqXHR) {
                unwaitCursor();

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);


                if (JsonObject.state === "ok") {

                    self.parents(".tr").remove();
                    $("#hero-select-list ol").append("<li class='tr'></li>");
                    alert_box.succesMessage("تم اضافة البطل بنجاح");
                    game.City.getCity(idCity).Garrison = JsonObject.Garrison;
                    $("#palace_content").html(Palace.cityGarrison($("#city-garrison-list .tr:first-child").data("offset")));
                    $("#hero-select-list ol").html(game.Building.Palace.HeroGarrisonList());

                } else {

                    self.removeAttr("disabled");
                    alert_box.failMessage(" لا يمكن اضافة البطل");

                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });


    });

});





/*   remove hero from garrison  */
$(document).on("click", ".remove-hero-city-garrison", function(e) {

    e.stopPropagation();

    var id_hero = $(this).data("id-hero");
    var h_name = $(this).data("hero-name");
    var self = $(this);
    var idCity = game.CurrentCity.City.id_city;
    alert_box.confirmDialog(`تأكيد سحب البطل ${h_name} من حراسة المدينة (${game.CurrentCity.City.name})`, function() {

        $.ajax({
            url: `${API_URL}/api/ACityPalace/removeHeroFromGarrison`,
            data: {
                idHero: id_hero,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            beforeSend: function(xhr) {
                self.attr("disabled", "disabled");
                waitCursor();
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {
                unwaitCursor();

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);


                if (JsonObject.state === "ok") {

                    alert_box.succesMessage("تم سحب البطل بنجاح");
                    game.City.getCity(idCity).Garrison = JsonObject.Garrison;
                    game.Hero.getHero(id_hero).Hero = JsonObject.Hero;
                    $("#palace_content").html(Palace.cityGarrison($("#city-garrison-list .tr:first-child").data("offset")));
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    });


});



/* select from current city garrison */
$(document).on("click", "#city-garrison-list .tr", function(e) {
    e.stopPropagation();
    if ($(this).data("id-hero") !== undefined) {

        $("#city-garrison-list .selected").removeClass("selected");
        $(this).addClass("selected");

    }

});




/*    change cityGarison- order*/
$(document).on("click", "#city-garrison-footer button", function() {

    var id_hero = Number($("#city-garrison-list .selected").data("id-hero"));

    var self = $(this);
    var offset = Number($("#city-garrison-list .selected").data("offset"));
    var direction = $(this).data("direction");

    var id_to_change = null;
    if (direction === "up") {

        if (offset === 0)
            return;

        var temp = game.City.getCity().Garrison[offset - 1];
        id_to_change = temp.id_hero;
        game.City.getCity().Garrison[offset - 1] = game.City.getCity().Garrison[offset];
        game.City.getCity().Garrison[offset] = temp;

    } else if (direction === "down") {

        if (offset === game.City.getCity().Garrison.length)
            return;

        var temp = game.City.getCity().Garrison[offset + 1];
        id_to_change = temp.id_hero;
        game.City.getCity().Garrison[offset + 1] = game.City.getCity().Garrison[offset];
        game.City.getCity().Garrison[offset] = temp;


    }

    $("#palace_content").html(Palace.cityGarrison($("#city-garrison-list .tr:first-child").data("offset"), id_hero));

    if (id_to_change === null)
        return;

    $.ajax({
        url: `${API_URL}/api/ACityPalace/reordCityGarrison`,
        data: {
            idHero: id_hero,
            Direction: direction,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {
            waitCursor();
            $("#city-garrison-footer button").attr("disabled", "disabled");
        },
        success: function(data, textStatus, jqXHR) {
            unwaitCursor();
            $("#city-garrison-footer button").removeAttr("disabled");


            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {

                Palace.getCityGarison().done(function() {
                    $("#palace_content").html(Palace.cityGarrison($("#city-garrison-list .tr:first-child").data("offset"), id_hero));
                    $("#city-garrison-footer button").removeAttr("disabled");
                });
            }
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

});
SPY = {

    onCity: function(x_coord, y_coord, id_player) {



    },
    sendSpy: function(x_coord, y_coord) {

        var idCity = game.CurrentCity.City.id_city;
        if (isNaN(game.CurrentCity.City.spies)) {
            alert_box.failMessage("لا يوجد عدد كافى من الجواسيس");
            return;
        }
        var msg = `تاكيد ارسال جواسيس الى <br/> [${x_coord} , ${y_coord}]`;
        var container = `<div class="spy-wrapper">
                                <div class="pull-L">
                                    <img src="images/items/item027.jpg" class="image">
                                </div>
                                <div class="pull-R">
                                    <div class="right pull-R">
                                        <input type="text" id="number-to-use" class="input only_num" step="${game.CurrentCity.City.spies}" max="${game.CurrentCity.City.spies}" min="0">
                                    </div>
                                    <div class="left pull-L">
                                        <div>استعمال</div>
                                        <div class="possess">
                                            تمتلك  ${game.CurrentCity.City.spies}
                                        </div>
                                    </div>
                                </div>
                            </div>`;
        alert_box.confirmWithInput(msg, container, function() {

            var number_to_use = $("#number-to-use").val();
            if (!number_to_use || Number(number_to_use) <= 0) {
                alert_box.failMessage("عدد الجواسيس غير كافى للقيام بعملية التجسس");
                return;
            } else if (Number(number_to_use) > Number(game.CurrentCity.City.spies) || isNaN(game.CurrentCity.City.spies)) {
                alert_box.failMessage("لا يوجد عدد كافى من الجواسيس");
                return;
            } else {
                $.ajax({
                    url: `${API_URL}/api/ASpy/start`,
                    data: {
                        xCoord: x_coord,
                        yCoord: y_coord,
                        spyNum: number_to_use,
                        idCity: idCity,
                        token: game.Config.OuthToken,
                        server: game.Config.idServer
                    },
                    type: 'POST',
                    beforeSend: function(xhr) {

                    },
                    success: function(data, textStatus, jqXHR) {

                        if (!game.LBase.isJson(data))
                            return game.LBase.Error(data);
                        var JsonObject = JSON.parse(data);

                        if (JsonObject.state === "ok") {

                            game.City.getCity(idCity).City = JsonObject.City;
                            PLAYER_NOTIF.spy_task = Number(PLAYER_NOTIF.spy_task) + 1;
                            Fixed.refreshPlayerNotif();
                            city_profile.refresh_army_view();
                            alert_box.succesMessage("تم ارسال الجواسيس بنجاح");
                            $(".close_RB img").trigger("click");
                        }



                    },
                    error: function(jqXHR, textStatus, errorThrown) {

                    }
                });
            }

        });
    }



};
$("#WorldCity").click(function() {

    afterChangeView();

    if ($(this).attr("data-view") === "world") {


        game.GE.WorldScene.scene.start("City");


        if (!$.isEmptyObject(Animation.currentUnitArrow.arrow)) {
            Animation.currentUnitArrow.arrow.destroy();
            delete(Animation.currentUnitArrow.arrow);
        }

        $(this).attr("data-view", "city");
        $(this).html(Translate.Button.Chat.World[UserLag.language]);
        $("#hide-show").hide();
        //Crafty.audio.stop("bird_sound");
        $("#smallMap-icon").fadeOut();
        $(".nav-to-city").fadeOut();
        setTimeout(function() {
            var iii = 0;
            for (iii; iii < 500 * 500; iii++) {
                delete game.worldAllUnits[iii].entite;
                delete game.worldAllUnits[iii].floor;
                delete game.worldAllUnits[iii].CityFlagEntite;
                delete game.worldAllUnits[iii].UnitFire;
            }
        });

    } else if ($(this).data("view") === "city") {
        if (!game.World.Map.CityFound)
            game.World.Map.getWorldCity().done(function() {
                game.GE.CityScene.scene.start("World");
            });
        else
            game.GE.CityScene.scene.start("World");

        $(this).attr("data-view", "world");
        $(this).html("المدينة");
        $("#hide-show").show();

        $("#smallMap-icon").fadeIn();
        $(".nav-to-city").fadeIn();
        setTimeout(function() {
            game.World.Map.RefreshWorld();
        }, 1000);
    }

});




$(document).on("click", "#player-city-list ul li", function() {

    afterChangeView();

    var index = Number($(this).attr("data-index"));
    var id_city = Number($(this).attr("data-id-city"));

    $("#player-city-list ul .selected").removeClass("selected");
    $(this).addClass("selected");

    var view = $("#WorldCity").attr("data-view");


    game.City.getCityHero(id_city);
    game.City.getCityBarray(id_city);
    game.City.getCityHeroArmy(id_city);
    game.City.getCityHeroEquip(id_city);
    game.City.getCityHeroMedal(id_city);
    game.City.getCityGarrison(id_city);
    game.TimedTask.getCityBuildingTasks(id_city);
    game.TimedTask.getCityJopTasks(id_city);
    game.TimedTask.getCityStudyTasks(id_city);

    city_profile.refresh_resource_view();
    city_profile.refresh_hero_view();
    city_profile.refresh_army_view();
    game.TimedTask.refreshListView();
    game.City.refreshBtnList();

    game.CurrentCity = game.City.getCity(id_city);

    game.City.getCityBuilding().done(function(data) {

        if (view === "city") {
            fillCityWithBuilding();
        }

        game.City.getCityBase();


    });



    $("#city-data .name").html(game.CurrentCity.City.name);
    $("#city-data .coords").html(`[ ${game.CurrentCity.City.y} , ${game.CurrentCity.City.x} ]`);




    if (view === "world") {

        $("#x_coord-input input").val(game.CurrentCity.City.x);
        $("#y_coord-input input").val(game.CurrentCity.City.y);
        $("#nav-btn button").click();

    }

});



$(document).on("click", ".nav-to-city", function() {

    var xCoord = $(this).attr("data-x-coord");
    var yCoord = $(this).attr("data-y-coord");

    $("#x_coord-input input").val(xCoord);
    $("#y_coord-input input").val(yCoord);
    $("#nav-btn button").click();

});


$(document).on("click", ".copy-coord", function() {
    var coord = `[${$(this).attr("data-x-coord")},${$(this).attr("data-y-coord")}]`;
    var inputVal = $("#input-chat input").val();
    $("#input-chat input").val(inputVal + " " + coord);
    $("#input-chat input").focus();
});



function afterChangeView() {
    $(".close_dialog").click();
    $(".close_select_menu").click();
}



$(document).on("click", "#chat-box", function(e) {
    e.stopPropagation();
});


$("#nav-btn .full-btn").click(function() {

    var x_coord = parseInt($("#x_coord-input input").val()) || 0;
    var y_coord = parseInt($("#y_coord-input input").val()) || 0;
    const cam = game.GE.WorldScene.cameras.main;
    const x = game.World.Map.posX(Number(x_coord), Number(y_coord)) + 64;
    const y = game.World.Map.posY(Number(x_coord), Number(y_coord)) + 128;
    const Dist = Phaser.Math.Distance.Between(cam.scrollX, cam.scrollY, x, y);

    if ($("#FastNav").is(':checked')) {

        game.GE.WorldScene.cameras.main.scrollX = game.World.Map.posX(Number(x_coord), Number(y_coord)) - Math.floor(MAX_SCREEN_WIDTH / 2 - 128);
        game.GE.WorldScene.cameras.main.scrollY = game.World.Map.posY(Number(x_coord), Number(y_coord)) - Math.floor(MAX_SCREEN_HEIGHT / 2 - 128);


        Animation.currentUnitArrow.put(x_coord, y_coord);
        game.World.Map.Scroll(true);

        game.GE.WorldScene.time.delayedCall(500, function() {
            game.World.Map.clear();
            game.World.Map.clear();
            game.World.MapBattel.AddBattels();
            game.World.Map.RefreshWorld();
        });

    } else {
        cam.pan(x, y, Math.max(Dist / 2, 1500), "Sine.easeInOut", false, function(camera, progress, x, y) {
            game.World.Map.Scroll(true);
            game.World.Map.clear();
        });

        Animation.currentUnitArrow.put(x_coord, y_coord);


    }


});
Animation = {};
Animation.ProductioRats = [];
Animation.ProductionTweens = [];
Animation.PluseProFontStyle = {
    fixedHeight: 20,
    fontStyle: "bold",
    fontSize: 14,
    stroke: '#000000',
    strokeThickness: 3,
    color: "#a7e328"
};
Animation.MinusProFontStyle = {
    fixedHeight: 20,
    fontStyle: "bold",
    fontSize: 14,
    stroke: '#000000',
    strokeThickness: 3,
    color: "#a7e328"
};
Animation.cityProductionRate = function() {

    Animation.ProductioRats.forEach(function(OneRate) {
        OneRate.destroy();
    });
    Animation.ProductionTweens.forEach(function(OneTween) {
        OneTween.remove();
    });
    Animation.ProductioRats = [];
    Animation.ProductionTweens = [];

    /* resource  in city animation*/
    const coin_in_ratio = parseFloat(Math.round(((game.CurrentCity.City.coin_in - game.CurrentCity.City.coin_out) / (30 * 60)) * 100) / 100);
    Animation.ProductioRats.push(game.GE.CityScene.add.text(
        BuildingOnFloor.palace.x + 0.6 * X_GRID,
        BuildingOnFloor.palace.y + 1.85 * Y_GRID,
        coin_in_ratio >= 0 ? "+" + coin_in_ratio : '-' + coin_in_ratio,
        coin_in_ratio >= 0 ? Animation.PluseProFontStyle : Animation.MinusProFontStyle).setDepth(1000).setOrigin(0, 0));

    const food_in_ratio = parseFloat(Math.round(((game.CurrentCity.City.food_in - game.CurrentCity.City.food_out) / (30 * 60)) * 100) / 100);
    Animation.ProductioRats.push(game.GE.CityScene.add.text(
        BuildingOnFloor.farm.x + 0.6 * X_GRID,
        BuildingOnFloor.farm.y + 1.85 * Y_GRID,
        food_in_ratio >= 0 ? "+" + food_in_ratio : '-' + food_in_ratio,
        food_in_ratio >= 0 ? Animation.PluseProFontStyle : Animation.MinusProFontStyle).setDepth(1000).setOrigin(0, 0));

    var wood_in_ratio = parseFloat(Math.round(((game.CurrentCity.City.wood_in - game.CurrentCity.City.wood_out) / (30 * 60)) * 100) / 100);
    Animation.ProductioRats.push(game.GE.CityScene.add.text(
        BuildingOnFloor.wood.x + 0.6 * X_GRID,
        BuildingOnFloor.wood.y + 1.85 * Y_GRID,
        wood_in_ratio >= 0 ? "+" + wood_in_ratio : '-' + wood_in_ratio,
        wood_in_ratio >= 0 ? Animation.PluseProFontStyle : Animation.MinusProFontStyle).setDepth(1000).setOrigin(0, 0));


    var stone_in_ratio = parseFloat(Math.round((game.CurrentCity.City.stone_in / (30 * 60)) * 100) / 100);
    Animation.ProductioRats.push(game.GE.CityScene.add.text(
        BuildingOnFloor.stone.x + 0.6 * X_GRID,
        BuildingOnFloor.stone.y + 1.85 * Y_GRID,
        stone_in_ratio >= 0 ? "+" + stone_in_ratio : '-' + stone_in_ratio,
        stone_in_ratio >= 0 ? Animation.PluseProFontStyle : Animation.MinusProFontStyle).setDepth(1000).setOrigin(0, 0));

    var metal_in_ratio = parseFloat(Math.round((game.CurrentCity.City.metal_in / (30 * 60)) * 100) / 100);
    Animation.ProductioRats.push(game.GE.CityScene.add.text(
        BuildingOnFloor.mine.x + 1.6 * X_GRID,
        BuildingOnFloor.mine.y + 2.25 * Y_GRID,
        metal_in_ratio >= 0 ? "+" + metal_in_ratio : '-' + metal_in_ratio,
        metal_in_ratio >= 0 ? Animation.PluseProFontStyle : Animation.MinusProFontStyle).setDepth(1000).setOrigin(0, 0));



    Animation.ProductioRats.forEach(function(El, Ind) {
        Animation.ProductionTweens.push(game.GE.CityScene.tweens.add({
            targets: El,
            y: "-=50",
            alpha: 0.2,
            ease: 'Linear',
            repeat: -1,
            duration: 3000
        }));
    });
    return;

};

Animation.FarmAnimation = function() {

    game.GE.CityScene.add.sprite(1895, 1083, "FarmLabor").setDepth(100).play("FarmLabor.A");
    game.GE.CityScene.add.sprite(1804, 1129, "FarmLabor").setDepth(100).playAfterDelay("FarmLabor.A", 500);
    game.GE.CityScene.add.sprite(1777, 1059, "FarmLabor").setDepth(100).playAfterDelay("FarmLabor.A", 250);


    var CarryOne = game.GE.CityScene.add.sprite(1929, 1086, "FarmLabor").setDepth(100).playAfterDelay("FarmLaborCarryR.A", 250).setDepth(1);
    var CarryTwo = game.GE.CityScene.add.sprite(2071, 1013, "FarmLabor").setDepth(100).playAfterDelay("FarmLaborCarryR.A", 250).setFlipX(true).setDepth(1);
    var CarryThree = game.GE.CityScene.add.sprite(2100, 1000, "FarmLabor").setDepth(100).playAfterDelay("FarmLaborCarryR.A", 250).setFlipX(true).setDepth(1);
    var CarryFour = game.GE.CityScene.add.sprite(2050, 1030, "FarmLabor").setDepth(100).playAfterDelay("FarmLaborCarryR.A", 250).setFlipX(true).setDepth(1);
    game.GE.CityScene.tweens.add({
        targets: CarryOne,
        x: 2071,
        y: 1013,
        ease: 'Linear', // 'Cubic', 'Elastic', 'Bounce', 'Back'
        repeat: -1,
        duration: 15000,
        yoyo: true,
        onYoyo: function() {
            CarryOne.play("noCarryWorkerD.A").setFlipX(true);
        },
        onRepeat: function() {
            CarryOne.play("FarmLaborCarryR.A").setFlipX(false);
        }
    });
    game.GE.CityScene.tweens.add({
        targets: CarryTwo,
        x: 1450,
        y: 664,
        ease: 'Linear', // 'Cubic', 'Elastic', 'Bounce', 'Back'
        repeat: -1,
        duration: 45000,
        yoyo: true,
        onYoyo: function() {
            CarryTwo.play("noCarryWorkerD.A").setFlipX(false);
        },
        onRepeat: function() {
            CarryTwo.play("FarmLaborCarryR.A").setFlipX(true);
        }
    });
    game.GE.CityScene.tweens.add({
        targets: CarryThree,
        x: 1431,
        y: 678,
        ease: 'Linear', // 'Cubic', 'Elastic', 'Bounce', 'Back'
        repeat: -1,
        duration: 45000,
        yoyo: true,
        delay: 15000,
        onYoyo: function() {
            CarryThree.play("noCarryWorkerD.A").setFlipX(false);
        },
        onRepeat: function() {
            CarryThree.play("FarmLaborCarryR.A").setFlipX(true);
        }
    });
    game.GE.CityScene.tweens.add({
        targets: CarryFour,
        x: 1410,
        y: 683,
        ease: 'Linear', // 'Cubic', 'Elastic', 'Bounce', 'Back'
        repeat: -1,
        duration: 45000,
        yoyo: true,
        delay: 30000,
        onYoyo: function() {
            CarryFour.play("noCarryWorkerD.A").setFlipX(false);
        },
        onRepeat: function() {
            CarryFour.play("FarmLaborCarryR.A").setFlipX(true);
        }
    });
};


Animation.StoneAnimation = function() {

    game.GE.CityScene.add.sprite(1523, 442, "StoneLabor").setDepth(100).playAfterDelay("StoneLabor.A", 250).setDepth(100).setScale(1.2, 1.2);
    game.GE.CityScene.add.sprite(1642, 453, "StoneLabor").setDepth(100).playAfterDelay("StoneLabor.A", 0).setDepth(100).setScale(1.2, 1.2);
    game.GE.CityScene.add.sprite(1731, 461, "StoneLabor").setDepth(100).playAfterDelay("StoneLabor.A", 150).setDepth(100).setFlipX(true).setScale(1.2, 1.2);
    game.GE.CityScene.add.sprite(1630, 525, "StoneLabor").setDepth(100).playAfterDelay("StoneLabor.A", 100).setDepth(100).setFlipX(true).setScale(1.2, 1.2);

    var CarryOne = game.GE.CityScene.add.sprite(1563, 537, "FarmLabor").setDepth(150).playAfterDelay("StoneLaborCarryL.A", 250).setDepth(1);
    var CarryTwo = game.GE.CityScene.add.sprite(1508, 503, "FarmLabor").setDepth(150).playAfterDelay("StoneLaborCarryL.A", 250).setDepth(1);

    game.GE.CityScene.tweens.add({
        targets: CarryOne,
        x: 1395,
        y: 645,
        ease: 'Linear', // 'Cubic', 'Elastic', 'Bounce', 'Back'
        repeat: -1,
        duration: 15000,
        yoyo: true,
        onYoyo: function() {
            CarryOne.play("noCarryWorkerR.A");
        },
        onRepeat: function() {
            CarryOne.play("StoneLaborCarryL.A").setFlipX(false);
        }
    });
    game.GE.CityScene.tweens.add({
        targets: CarryTwo,
        x: 1312,
        y: 609,
        ease: 'Linear', // 'Cubic', 'Elastic', 'Bounce', 'Back'
        repeat: -1,
        duration: 15000,
        yoyo: true,
        delay: 10000,
        onYoyo: function() {
            CarryTwo.play("noCarryWorkerR.A");
        },
        onRepeat: function() {
            CarryTwo.play("StoneLaborCarryL.A").setFlipX(false);
        }
    });

};



Animation.IronAnimation = function() {


    game.GE.CityScene.add.sprite(1319, 279, "IronLabor").playAfterDelay("IronLabor.A", 0).setFlipX(true).setDepth(100);
    game.GE.CityScene.add.sprite(1173, 326, "IronLabor").playAfterDelay("IronLabor.A", 100).setFlipX(true).setDepth(100);
    game.GE.CityScene.add.sprite(1061, 317, "IronLabor").playAfterDelay("IronLabor.A", 200).setDepth(100);

};


Animation.WoodAnimation = function() {


    game.GE.CityScene.add.sprite(437, 477, "WoodLabor").playAfterDelay("WoodLabor.A", 0).setFlipX(true).setDepth(100);
    game.GE.CityScene.add.sprite(399, 550, "WoodLabor").playAfterDelay("WoodLabor.A", 100).setFlipX(true).setDepth(100);
    game.GE.CityScene.add.sprite(303, 563, "WoodLabor").playAfterDelay("WoodLabor.A", 200).setDepth(100);

    game.GE.CityScene.add.sprite(348, 547, "WoodTool").playAfterDelay("WoodTool.A", 200).setDepth(100);
    game.GE.CityScene.add.sprite(470, 549, "WoodTool").playAfterDelay("WoodTool.A", 100).setFlipX(true).setDepth(100);


};

Animation.FixedCityAnimation = function() {

    Animation.FarmAnimation();
    Animation.StoneAnimation();
    Animation.IronAnimation();
    Animation.WoodAnimation();

    game.GE.CityScene.add.sprite(1412, 445, "Horse").playAfterDelay("Horse.A", 0).setFlipX(true).setDepth(100);
    game.GE.CityScene.add.sprite(1420, 455, "Horse").playAfterDelay("Horse.A", 100).setFlipX(true).setDepth(100);
    game.GE.CityScene.add.sprite(1430, 458, "Horse").playAfterDelay("Horse.A", 150).setDepth(100);


    game.GE.CityScene.add.sprite(1285, 716, "Fountain").playAfterDelay("Fountain.A", 150).setDepth(100);
    game.GE.CityScene.add.sprite(1235, 680, "Fountain").playAfterDelay("Fountain.A", 150).setDepth(100);


    var Woman1 = game.GE.CityScene.add.sprite(1696, 555, "Woman").playAfterDelay("WomanFace.A", 150).setDepth(100);
    game.GE.CityScene.tweens.add({
        targets: Woman1,
        x: 1178,
        y: 790,
        ease: 'Linear', // 'Cubic', 'Elastic', 'Bounce', 'Back'
        repeat: -1,
        duration: 45000,
        yoyo: true,
        onYoyo: function() {
            Woman1.play("WomanBack.A");
        },
        onRepeat: function() {
            Woman1.play("WomanFace.A");
        }
    });

    return;

    Crafty.cityClouds = [];
    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 150,
        y: 100,
        vx: 14,
        z: 5000,
        __offsetX: -150
    }));
    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: -100,
        y: 250,
        vx: 10,
        z: 5000,
        __offsetX: -100
    }));
    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 180,
        y: 350,
        vx: 10,
        z: 5000,
        __offsetX: -180
    }));
    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 360,
        y: 600,
        vx: 14,
        z: 5000,
        __offsetX: -360
    }));
    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 660,
        y: 750,
        vx: 14,
        z: 5000,
        __offsetX: -660
    }));
    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 160,
        y: 900,
        vx: 14,
        z: 5000,
        __offsetX: -160
    }));

    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 540,
        y: 250,
        vx: 14,
        z: 5000,
        __offsetX: -540
    }));
    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 110,
        y: 750,
        vx: 14,
        z: 5000,
        __offsetX: -110
    }));
    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 160,
        y: 900,
        vx: 14,
        z: 5000,
        __offsetX: -160
    }));

    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 1800,
        y: 750,
        vx: 14,
        z: 5000,
        __offsetX: -1800
    }));
    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 1250,
        y: 900,
        vx: 14,
        z: 5000,
        __offsetX: -1250
    }));

    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 1500,
        y: 430,
        vx: 14,
        z: 5000,
        __offsetX: -1500
    }));

    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 830,
        y: 360,
        vx: 14,
        z: 5000,
        __offsetX: -830
    }));
    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 1140,
        y: 540,
        vx: 10,
        z: 5000,
        __offsetX: -1140
    }));
    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 850,
        y: 350,
        vx: 10,
        z: 5000,
        __offsetX: -850
    }));

    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 980,
        y: 250,
        vx: 14,
        z: 5000,
        __offsetX: -980
    }));
    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 1480,
        y: 750,
        vx: 14,
        z: 5000,
        __offsetX: -1480
    }));
    Crafty.cityClouds.push(Crafty.e('2D, DOM, cloud ,Motion , city_ani').attr({
        x: 1600,
        y: 900,
        vx: 14,
        z: 5000,
        __offsetX: -1600
    }));

};


//setTimeout(function (){Animation.FixedCityAnimation();} , 3000)
/*var CLOUD_RESET_TIMER = setInterval(function () {
 for (var cloud in Crafty.cityClouds) {
 
 if (Crafty.cityClouds[cloud]._x > 2500) {
 Crafty.cityClouds[cloud].x = Crafty.cityClouds[cloud].__offsetX;
 }
 
 }
 }, 40 * 1000);*/



function building_hammer_animate(BuildingPlace) {

    if (!isUpgradingNow(BuildingPlace))
        return;

    var x = BuildingOnFloor[BuildingPlace].x;
    var y = BuildingOnFloor[BuildingPlace].y;
    var x_1 = x - 25;
    var x_2 = x + 20;
    var y_1 = y - 10;
    var y_2 = y;
    if (BuildingOnFloor[BuildingPlace].BuildingAni) {
        for (var ii in BuildingOnFloor[BuildingPlace].BuildingAni) {
            BuildingOnFloor[BuildingPlace].BuildingAni[ii].destroy();
            delete BuildingOnFloor[BuildingPlace].BuildingAni[ii];
        }
    }
    BuildingOnFloor[BuildingPlace].BuildingAni = [];

    if (BuildingPlace === "palace") {
        x_1 = x + 25;
        x_2 = x + 80;
        y_1 = y + 5;
        y_2 = y;
        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.image(x + 55, y + 55, "UpgradingPalaceSupD").setOrigin(0, 0).setDepth(3));
        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.image(x + 55, y + 55, "UpgradingPalaceSupU").setOrigin(0, 0).setDepth(1));
        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.sprite(x + 165, y + 120, "UpgradingLaborR").play("UpgradingLaborR.A", Math.random() * 500).setOrigin(0, 0).setDepth(5));
        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.sprite(x + 200, y + 100, "UpgradingLaborR").play("UpgradingLaborR.A", Math.random() * 500).setOrigin(0, 0).setDepth(5));
        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.sprite(x + 70, y + 120, "UpgradingLaborL").play("UpgradingLaborL.A", Math.random() * 500).setOrigin(0, 0).setDepth(5));

    } else if (BuildingPlace === "wall") {
        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.sprite(1.5 * X_GRID, 3.25 * Y_GRID, "UpgradingHammer").play("UpgradingHammer.A", Math.random() * 500).setOrigin(0, 0).setDepth(10));
        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.sprite(0.5 * X_GRID, 4.25 * Y_GRID, "UpgradingHammer").play("UpgradingHammer.A", Math.random() * 500).setOrigin(0, 0).setDepth(10));
        x_2 = 3.5 * X_GRID;
        y_2 = 1.25 * Y_GRID;
    } else if (BuildingPlace === "farm") {
        x_1 = x + 0.5 * X_GRID;
        x_2 = x + X_GRID;
        y_1 = y + Y_GRID;
        y_2 = y + 0.5 * Y_GRID;
    } else if (BuildingPlace === "mine") {
        x_1 = x - 25 + X_GRID;
        x_2 = x + 20 + X_GRID;
        y_1 = y - 10 + Y_GRID;
        y_2 = y + Y_GRID;
    } else if (BuildingPlace === "stone") {
        x_1 = x - 25 + 0.5 * X_GRID;
        x_2 = x + 20 + 0.5 * X_GRID;
        y_1 = y - 10 + 0.5 * Y_GRID;
        y_2 = y + 0.5 * Y_GRID;
    } else if (BuildingPlace == "wood") {

    } else {

        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.sprite(x, y + 60, "UpgradingLaborL").play("UpgradingLaborL.A", Math.random() * 500).setOrigin(0, 0).setDepth(5));
        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.sprite(x + 45, y + 80, "UpgradingLaborL").play("UpgradingLaborL.A", Math.random() * 500).setOrigin(0, 0).setDepth(5));
        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.sprite(x + 120, y + 60, "UpgradingLaborR").play("UpgradingLaborR.A", Math.random() * 500).setOrigin(0, 0).setDepth(5));
        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.sprite(x + 80, y + 80, "UpgradingLaborR").play("UpgradingLaborR.A", Math.random() * 500).setOrigin(0, 0).setDepth(5));
        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.image(x, y, "UpgradingSupportsD").setOrigin(0, 0).setDepth(4));
        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.image(x, y, "UpgradingSupportsU").setOrigin(0, 0).setDepth(3));


    }

    if (BuildingPlace !== "wall") {
        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.sprite(x_1, y_1, "UpgradingHammer").play("UpgradingHammer.A", Math.random() * 500).setFlipX(true).setOrigin(0, 0).setDepth(10));
        BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.sprite(x_1, y_1, "UpgradingHammer").play("UpgradingHammer.A", Math.random() * 500).setFlipX(true).setOrigin(0, 0).setDepth(10));
    }


    BuildingOnFloor[BuildingPlace].BuildingAni.push(game.GE.CityScene.add.sprite(x_2, y_2, "UpgradingHammer").play("UpgradingHammer.A", Math.random() * 500).setOrigin(0, 0).setDepth(10));


    return;


}

function fire_attack_animation() {
    return;
    Crafty.e('2D, Canvas, fire_start, SpriteAnimation, worldEnt')
        .reel("walking", 650, [
            [0, 0],
            [1, 0],
            [2, 0],
            [3, 0],
            [4, 0],
            [5, 0],
            [6, 0],
            [7, 0],
            [0, 1],
            [1, 1],
            [2, 1],
            [3, 1],
            [4, 1],
            [5, 1],
            [6, 1],
            [7, 1],
            [0, 2],
            [1, 2],
            [2, 2],
            [3, 2],
            [4, 2],
            [5, 2],
            [6, 2],
            [7, 2]
        ])
        .animate("walking", -1)
        .attr({
            x: 800 + 100,
            y: 600 + 50,
            z: 50
        });


}
var WORLD_NUIT_ON_FIRE = [];


Animation.fireWorldUnit = function(xCoord, yCoord) {


    var Unit = WorldUnit.getWorldUnit(xCoord, yCoord);

    if (!Unit.s)
        return;

    if (!Unit.entite || $.isEmptyObject(Unit.entite)) {
        return;
    }

    if (Unit.UnitFire && Unit.UnitFire.length > 0)
        return;
    Unit.UnitFire = [];

    const x = game.World.Map.posX(xCoord, yCoord);
    const y = game.World.Map.posY(xCoord, yCoord);
    const z = game.World.Map.posZ(xCoord, yCoord);
    const lvl = Unit.l;
    const type = Unit.ut;
    const Scene = game.GE.WorldScene;

    if (WorldUnit.isRiver(type))
        return;
    if (Unit.entite.data.get("HasFire"))
        return;


    if (WorldUnit.isBarrary(type) && lvl < 4 || WorldUnit.isGangStar(type)) {
        Unit.UnitFire[0] = Scene.add.sprite(x + 52, y + 24, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
    } else if (WorldUnit.isBarrary(type)) {

        Unit.UnitFire[0] = Scene.add.sprite(x + 32, y + 16, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[1] = Scene.add.sprite(x + 72, y + 16, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[2] = Scene.add.sprite(x + 52, y + 42, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");

    } else if (WorldUnit.isCityLv1(type)) {

        Unit.UnitFire[0] = Scene.add.sprite(x + 42, y + 12, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[1] = Scene.add.sprite(x + 75, y + 20, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[2] = Scene.add.sprite(x + 12, y + 20, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[3] = Scene.add.sprite(x + 46, y + 42, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");

    } else if (WorldUnit.isCityLv2(type)) {

        Unit.UnitFire[0] = Scene.add.sprite(x + 42, y, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[1] = Scene.add.sprite(x + 80, y + 16, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[2] = Scene.add.sprite(x + 12, y + 12, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[3] = Scene.add.sprite(x + 52, y + 30, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");

    } else if (WorldUnit.isCityLv3(type)) {

        Unit.UnitFire[0] = Scene.add.sprite(x + 48, y - 10, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[1] = Scene.add.sprite(x + 88, y + 12, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[2] = Scene.add.sprite(x + 8, y + 8, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[3] = Scene.add.sprite(x + 60, y + 32, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");

    } else if (WorldUnit.isSeaCity(type)) {

        Unit.UnitFire[0] = Scene.add.sprite(x + 240, y + 70, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[1] = Scene.add.sprite(x + 150, y + 75, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[2] = Scene.add.sprite(x + 275, y + 150, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[3] = Scene.add.sprite(x + 175, y + 190, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[4] = Scene.add.sprite(x + 60, y + 175, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[5] = Scene.add.sprite(x + 175, y + 260, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");

    } else {

        Unit.UnitFire[0] = Scene.add.sprite(x + 42, y, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[1] = Scene.add.sprite(x + 80, y + 16, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[2] = Scene.add.sprite(x + 12, y + 12, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
        Unit.UnitFire[3] = Scene.add.sprite(x + 52, y + 30, "WorldUnitFire").setDepth(z).setOrigin(0, 0).play("WorldUnitFire.Ani");
    }

    Unit.entite.data.set("HasFire", true);

};


game.Animation.cityFlagProp = {

};
Animation.WorldFire = function() {
    game.GE.WorldScene.children.list.forEach(function(El) {
        if (!El.data)
            return;

        const xCoord = El.data.get("xCoord");
        const yCoord = El.data.get("yCoord");
        const Unit = WorldUnit.getWorldUnit(xCoord, yCoord);
        Animation.fireWorldUnit(xCoord, yCoord);

    });
};

Animation.cityFlag = function() {

    game.GE.WorldScene.children.list.forEach(function(El) {
        if (!El.data)
            return;

        const xCoord = El.data.get("xCoord");
        const yCoord = El.data.get("yCoord");
        const Unit = WorldUnit.getWorldUnit(xCoord, yCoord);

        if (Unit.CityFlagEntite)
            return;
        if (!WorldUnit.isCity(Unit.ut))
            return;
        const x = game.World.Map.posX(xCoord, yCoord);
        const y = game.World.Map.posY(xCoord, yCoord);
        const z = game.World.Map.posZ(xCoord, yCoord);
        const lvl = Unit.l;
        let FramName = "CityFlag.Nut";
        if (Unit.idPlayer == game.DPlayer.Player.id_player)
            FramName = "CityFlag.Min";
        else if (!Unit.idGuild || !game.Guild.GuildData)
            FramName = "CityFlag.Nut";
        else if (Unit.idGuild == game.DPlayer.Player.id_guild)
            FramName = "CityFlag.All";
        else {
            for (var jjj in game.Guild.Allay) {
                if (Number(game.Guild.Allay[jjj].idGuild) === Number(Unit.idGuild)) {

                    if (Number(game.Guild.Allay[jjj].state) === 1) {
                        FramName = "CityFlag.Ene";

                    } else if (Number(game.Guild.Allay[jjj].state) === 2) {
                        FramName = "CityFlag.Fri";
                    }
                }
            }
        }

        let Pos = {
            x: 0,
            y: 0
        };
        if (Number(Unit.ut) === WUT_CITY_LVL_0)
            Pos = {
                x: x + 36,
                y: y + 50,
                z: z + 10
            };
        else if (Number(Unit.ut) === WUT_CITY_LVL_1)
            Pos = {
                x: x + 36,
                y: y + 50,
                z: z + 10
            };
        else if (Number(Unit.ut) === WUT_CITY_LVL_2)
            Pos = {
                x: x + 36,
                y: y + 50,
                z: z + 10
            };
        else if (Number(Unit.ut) === WUT_CITY_LVL_3)
            Pos = {
                x: x + 30,
                y: y + 45,
                z: z + 10
            };

        Unit.CityFlagEntite = game.GE.WorldScene.add.sprite(Pos.x, Pos.y, 'flagOverCity').setOrigin(0, 0).play(FramName).setDepth(Pos.z);


    });


};


Animation.cityColonizerFlag = function() {
    return;
    Crafty("WorldUnit").each(function(index) {

        var world_unit = WorldUnit.getWorldUnit(this.coord_x, this.coord_y);

        if (!$.isEmptyObject(world_unit.CityColonizerFlagEntite)) {
            return;
        }
        if (!WorldUnit.isCity(world_unit.ut) || !world_unit.CityColonized) {
            return;
        }

        console.log(world_unit);
        var x = game.World.Map.posX(this.coord_x, this.coord_y);
        var y = game.World.Map.posY(this.coord_x, this.coord_y);
        var z = game.World.Map.posZ(this.coord_x, this.coord_y);

        var lvl = world_unit.l;






        var flag_array = [
            [0, 0],
            [0, 1],
            [0, 2],
            [0, 3],
            [0, 4],
            [0, 5]
        ];

        if (world_unit.ColonizerIdPlayer === game.DPlayer.Player.id_player) {
            flag_array = [
                [3, 0],
                [3, 1],
                [3, 2],
                [3, 3],
                [3, 4],
                [3, 5]
            ];
        } else if (!game.Guild.GuildData || !world_unit.ColonizerIdGuild) {

            flag_array = [
                [0, 0],
                [0, 1],
                [0, 2],
                [0, 3],
                [0, 4],
                [0, 5]
            ];

        } else if (Number(game.DPlayer.Player.id_guild) === Number(world_unit.ColonizerIdGuild)) {
            flag_array = [
                [2, 0],
                [2, 1],
                [2, 2],
                [2, 3],
                [2, 4],
                [2, 5]
            ];
        } else {
            for (var jjj in game.Guild.Allay) {
                if (Number(game.Guild.Allay[jjj].idGuild) === Number(world_unit.ColonizerIdGuild)) {

                    if (Number(game.Guild.Allay[jjj].state) === 1) {
                        flag_array = [
                            [4, 0],
                            [4, 1],
                            [4, 2],
                            [4, 3],
                            [4, 4],
                            [4, 5]
                        ];

                    } else if (Number(game.Guild.Allay[jjj].state) === 2) {
                        flag_array = [
                            [1, 0],
                            [1, 1],
                            [1, 2],
                            [1, 3],
                            [1, 4],
                            [1, 5]
                        ];
                    }
                }
            }
        }


        if (Number(world_unit.ut) === WUT_CITY_LVL_0) {

            world_unit.CityFlagEntite =
                Crafty.e('2D, Canvas, flag_over_city, SpriteAnimation, worldEnt')
                .reel("city_flag", 650, flag_array)
                .animate("city_flag", -1)
                .attr({
                    x: x + 36,
                    y: y + 35,
                    z: z + 10,
                    coord_x: world_unit.x,
                    coord_y: world_unit.y
                })
                .attach(Crafty.e('2D, Canvas, Text, stroke')
                    .attr({
                        x: x + 34,
                        y: y + 38,
                        w: 35,
                        h: 20,
                        avoidCss3dTransforms: true,
                        z: 9 ** 9
                    })
                    .text("")
                    .textColor('white')
                    .textFont({
                        size: '12px',
                        lineHeight: "20px"
                    })
                    .textAlign("center"));


        } else if (Number(world_unit.ut) === WUT_CITY_LVL_1) {

            world_unit.CityFlagEntite =
                Crafty.e('2D, Canvas, flag_over_city, SpriteAnimation, worldEnt')
                .reel("city_flag", 650, flag_array)
                .animate("city_flag", -1)
                .attr({
                    x: x + 36,
                    y: y + 35,
                    z: z + 10,
                    coord_x: world_unit.x,
                    coord_y: world_unit.y
                })
                .attach(Crafty.e('2D, Canvas, Text, stroke')
                    .attr({
                        x: x + 34,
                        y: y + 48,
                        w: 35,
                        h: 20,
                        avoidCss3dTransforms: true,
                        z: 9e15
                    })
                    .text("")
                    .textColor('white')
                    .textFont({
                        size: '12px',
                        lineHeight: "20px"
                    })
                    .textAlign("center"));

        } else if (Number(world_unit.ut) === WUT_CITY_LVL_2) {

            world_unit.CityFlagEntite =
                Crafty.e('2D, Canvas, flag_over_city, SpriteAnimation, worldEnt')
                .reel("city_flag", 650, flag_array)
                .animate("city_flag", -1)
                .attr({
                    x: x + 36,
                    y: y + 35,
                    z: z + 10,
                    coord_x: world_unit.x,
                    coord_y: world_unit.y
                })
                .attach(Crafty.e('2D, Canvas, Text, stroke')
                    .attr({
                        x: x + 34,
                        y: y + 48,
                        w: 35,
                        h: 20,
                        avoidCss3dTransforms: true,
                        z: 9e29
                    })
                    .text("")
                    .textColor('white')
                    .textFont({
                        size: '12px',
                        lineHeight: "20px"
                    })
                    .textAlign("center"));

        } else if (Number(world_unit.ut) === WUT_CITY_LVL_3) {

            world_unit.CityFlagEntite =
                Crafty.e('2D, Canvas, flag_over_city, SpriteAnimation, worldEnt')
                .reel("city_flag", 650, flag_array)
                .animate("city_flag", -1)
                .attr({
                    x: x + 30,
                    y: y + 30,
                    z: z + 10,
                    coord_x: world_unit.x,
                    coord_y: world_unit.y
                })
                .attach(Crafty.e('2D, Canvas, Text, stroke, worldEnt')
                    .attr({
                        x: x + 34,
                        y: y + 60,
                        w: 35,
                        h: 20,
                        avoidCss3dTransforms: true,
                        z: 9e29
                    })
                    .text("" + world_unit.CityFlag)
                    .textColor('white')
                    .textFont({
                        size: '12px',
                        lineHeight: "20px"
                    })
                    .textAlign("center"));

        } else {
            console.log(world_unit)
        }
    });


};

Animation.currentUnitArrow = {};

Animation.currentUnitArrow.arrow = {};
Animation.currentUnitArrow.x = 0;
Animation.currentUnitArrow.y = 0;
Animation.currentUnitArrow.z = 0;



Animation.currentUnitArrow.add = function() {

    Animation.currentUnitArrow.arrow = game.GE.WorldScene.add.image(0, 0, "arrow").setDepth(0).setVisible(false);
    return;


};

Animation.currentUnitArrow.put = function(x, y) {

    Animation.currentUnitArrow.x = game.World.Map.posX(x, y) + 50;
    Animation.currentUnitArrow.y = game.World.Map.posY(x, y) + 5;
    Animation.currentUnitArrow.z = game.World.Map.posZ(x, y) + 1;
    Animation.currentUnitArrow.arrow.setVisible(true);
    Animation.currentUnitArrow.arrow.setPosition(Animation.currentUnitArrow.x, Animation.currentUnitArrow.y);
    Animation.currentUnitArrow.arrow.setDepth(Animation.currentUnitArrow.z);


    if (Animation.currentUnitArrow.tween)
        Animation.currentUnitArrow.tween.remove();

    Animation.currentUnitArrow.tween = game.GE.WorldScene.tweens.add({
        targets: Animation.currentUnitArrow.arrow,
        x: Animation.currentUnitArrow.arrow.x,
        y: Animation.currentUnitArrow.arrow.y + 30,
        ease: 'Linear', // 'Cubic', 'Elastic', 'Bounce', 'Back'
        repeat: -1,
        duration: 1000,
        yoyo: true,
        onYoyo: function() {},
        onRepeat: function() {}
    });


    return;
    if (!$.isEmptyObject(Animation.currentUnitArrow.arrow)) {
        Animation.currentUnitArrow.arrow.setPosition(Animation.currentUnitArrow.x, Animation.currentUnitArrow.y).setDepth(Animation.currentUnitArrow.z);
    } else {

        Animation.currentUnitArrow.arrow =
            game.GE.WorldScene.add.image(Animation.currentUnitArrow.x, Animation.currentUnitArrow.y).setDepth(Animation.currentUnitArrow.z);

        Crafty.e("2D, Canvas, Tween, arrow")
            .attr({
                x: Animation.currentUnitArrow.x,
                y: Animation.currentUnitArrow.y,
                z: Animation.currentUnitArrow.z
            })
            .tween({
                y: Animation.currentUnitArrow.y + 30
            }, 1000, "easeInOutQuad")
            .bind("TweenEnd", function() {
                this.tween({
                    y: Animation.currentUnitArrow.y + (dir ? 30 : 0)
                }, 1000, "easeInOutQuad");
                dir = 1 - dir;
            });

    }


};
game.Equip.getPlayerEquip = function() {

    return $.ajax({

        url: `${API_URL}/api/APlayerEquip/getPlayerEquip`,
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken
        },
        type: 'GET',
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                game.LBase.Error(data);

            game.DPlayer.Equip = JSON.parse(data);
            game.Equip.distributeEquip();
        }
    });


};


game.Equip.distributeEquip = function() {

    for (var iii in game.DPlayer.Heros) {

        game.DPlayer.Heros[iii].Equip = {
            boot: null,
            armor: null,
            shield: null,
            helmet: null,
            sword: null,
            belt: null,
            ring: null,
            steed: null,
            pendant: null,
            necklace: null
        };

        for (var ii in game.DPlayer.Equip) {


            if (Number(game.DPlayer.Equip[ii].id_hero) === Number(game.DPlayer.Heros[iii].idHero)) {


                if (game.DPlayer.Equip[ii].part === "boot")
                    game.DPlayer.Heros[iii].Equip.boot = game.DPlayer.Equip[ii];
                if (game.DPlayer.Equip[ii].part === "armor")
                    game.DPlayer.Heros[iii].Equip.armor = game.DPlayer.Equip[ii];
                if (game.DPlayer.Equip[ii].part === "shield")
                    game.DPlayer.Heros[iii].Equip.shield = game.DPlayer.Equip[ii];
                if (game.DPlayer.Equip[ii].part === "helmet")
                    game.DPlayer.Heros[iii].Equip.helmet = game.DPlayer.Equip[ii];
                if (game.DPlayer.Equip[ii].part === "sword")
                    game.DPlayer.Heros[iii].Equip.sword = game.DPlayer.Equip[ii];
                if (game.DPlayer.Equip[ii].part === "belt")
                    game.DPlayer.Heros[iii].Equip.belt = game.DPlayer.Equip[ii];
                if (game.DPlayer.Equip[ii].part === "necklace")
                    game.DPlayer.Heros[iii].Equip.necklace = game.DPlayer.Equip[ii];
                if (game.DPlayer.Equip[ii].part === "pendant")
                    game.DPlayer.Heros[iii].Equip.pendant = game.DPlayer.Equip[ii];
                if (game.DPlayer.Equip[ii].part === "ring")
                    game.DPlayer.Heros[iii].Equip.ring = game.DPlayer.Equip[ii];
                if (game.DPlayer.Equip[ii].part === "steed")
                    game.DPlayer.Heros[iii].Equip.steed = game.DPlayer.Equip[ii];

            }

        }

    }

};

game.Equip.getEquipUnit = function(idEquip) {
    for (var iii in game.DPlayer.Equip)
        if (Number(game.DPlayer.Equip[iii].id_equip) === Number(idEquip))
            return game.DPlayer.Equip[iii];

    return {};
};

game.Equip.EquipList = {},
    game.Equip.getEquipData = function() {
        $.ajax({
            'url': API_URL + '/js' + game['Config']['JsVersion'] + '/json/equipment/' + UserLag['language'] + '.json',
            success: function(data, _0x18a598, _0x1ed6f5) {
                game['Equip']['EquipList'] = data;
                $.ajax({
                    'url': API_URL + '/api/APlayerEquip/getEquipPower',
                    'data': {
                        token: game['Config']['OuthToken'],
                        server: game['Config']['idServer']
                    },
                    success: function(DataI, _0x23bbdc, _0x2945f2) {
                        if (!game['LBase']['isJson'](DataI))
                            return game['LBase']['Error'](DataI);
                        var JsonData = JSON['parse'](DataI);
                        for (var ii in JsonData) {
                            game['Equip']['EquipList'][`${JsonData[ii]['equip']}_${JsonData[ii]['part']}_${JsonData[ii]['lvl']}`]['Power'] = JsonData[ii];
                        }
                    }
                });
            }
        });
    }

game.Equip.getPlayerAmount = function(EquipType, Part, Lvl = 1) {

    var Count = 0x0;
    for (var ii in game['DPlayer']['Equip']) {
        if (game['DPlayer']['Equip'][ii]['type'] == EquipType &&
            game['DPlayer']['Equip'][ii]['part'] == Part &&
            game['DPlayer']['Equip'][ii]['lvl'] == Lvl)
            Count++;
    }
    return Count;
};
$(document)['on']('PlayerReady', 'html', function() {
    game.Equip.getEquipData();
});

game.Equip.EquipFeature = {
    0: {
        Title: "لا توجد"
    },
    1: {
        Title: "وابل السهام أمام"
    },
    2: {
        Title: "وابل سهام خلف"
    },
    3: {
        Title: "الدرع"
    }
};

var Equipment = {

    secoundryList: ["belt", "necklace", "pendant", "ring", "steed"],

    getName: function(equip, part, lvl = 1) {
        let Equip = game['Equip']['EquipList'][`${equip}_${part}_${lvl}`];
        if (!Equip)
            return "";
        return Equip.name;
    },
    getEquipData: function(equip, part, lvl) {

        if (!game.Equip.EquipList[`${equip}_${part}_${lvl}`])
            return {
                Power: {
                    anti_break: 0,
                    attack: 0,
                    break: 0,
                    damage: 0,
                    defence: 0,
                    equip: "",
                    immunity: 0,
                    lvl: 1,
                    part: "",
                    sp_attr: 0,
                    strike: 0,
                    vitality: 140
                },
                Texture2D: "Texture2D'/Game/images/equip/equip228.equip228'",
                desc: "تزيد من الحيوية والهجوم لدى القوات.",
                image: "images/equip/equip228.jpg",
                long_desc: "من معدّات إحتفالية العامين للقيصر, المخلصين والشجعان فقط من يحصلون عليها. علامةُ فارقة بين المعدّات والأسلحة.",
                name: "مصفح الـڤيكنج",
                orid: 197
            };


        return game.Equip.EquipList[`${equip}_${part}_${lvl}`];
    },
    getImage: function(equip, part, lvl) {
        let Equip = game['Equip']['EquipList'][`${equip}_${part}_${lvl}`];
        if (!Equip)
            return "";
        return Equip.image;
    },

    getPlayerEquip: function() {
        return $.ajax({
            url: "api/city.php",
            type: 'GET',
            data: {
                get_available_equip: true,
                id_player: ID_PLAYER,
                token: TOKEN
            },
            dataType: 'JSON',
            success: function(data, textStatus, jqXHR) {
                available_Equip = data;

                if ($("#equip-list-heroDia").length) {

                    $("#equip-list-heroDia").html(army.getEquipList());

                }

            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.log(errorThrown);
            }

        });
    },
    getPlayerAmount: function(equip, part, lvl) {

        var count = 0;
        for (var iii in game.DPlayer.Heros) {

            for (var jjj in game.DPlayer.Heros[iii]) {

                for (var kkk in game.DPlayer.Heros[iii][jjj].equip) {

                    if (game.DPlayer.Heros[iii][jjj].equip[kkk] &&
                        game.DPlayer.Heros[iii][jjj].equip[kkk].type === equip &&
                        game.DPlayer.Heros[iii][jjj].equip[kkk].part === part) {
                        count++;
                    }
                }

            }

        }

        for (var iii in game.DPlayer.Equip) {

            if (game.DPlayer.Equip[iii] &&
                game.DPlayer.Equip[iii].type === equip &&
                game.DPlayer.Equip[iii].part === part) {
                count++;
            }

        }

        return count;

    },

    'getData': function(Equip, Part, Lvl) {
        return game['Equip']['EquipList'][Equip + '_' + Part + '_' + (Lvl || 0x1)];
    }

};




$.ajax({
    url: "js" + JS_VERSION + "/json/equipment/" + (UserLag.language) + ".json",
    success: function(data, textStatus, jqXHR) {
        EQUIP_DATA = data;
        $.ajax({

            url: "api/equip.php",
            data: {
                GET_EQUIP_POWER: true
            },
            type: 'GET',
            beforeSend: function(xhr) {

            },
            success: function(equip_power, textStatus, jqXHR) {

                var jsonData = JSON.parse(equip_power);
                var secEquip = Equipment.secoundryList;
                var equip;

                for (var ii in jsonData) {

                    if ($.inArray(jsonData[ii].part, secEquip) > -1) {

                        equip = EQUIP_DATA[jsonData[ii].equip]
                            .sec[jsonData[ii].part][jsonData[ii].lvl - 1];
                    } else {
                        equip = EQUIP_DATA[jsonData[ii].equip]
                            [jsonData[ii].part];
                    }

                    equip.attack = jsonData[ii].attack;
                    equip.defence = jsonData[ii].defence;
                    equip.damage = jsonData[ii].damage;
                    equip.vitality = jsonData[ii].vitality;
                    equip.break = jsonData[ii].break;
                    equip.anti_break = jsonData[ii].anti_break;
                    equip.strike = jsonData[ii].strike;
                    equip.immunity = jsonData[ii].immunity;
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    }
});
var TradeCenter = {};

TradeCenter.currentList = [];
TradeCenter.forbiddenList = [];
TradeCenter.playerList = [];

TradeCenter.getTradeList = function(offset) {

    if (!offset)
        offset = 0;
    return $.ajax({
        url: "api/tradeCenter.php",
        data: {
            GET_TRADE_LIST: true,
            offset: offset
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (isJson(data)) {
                TradeCenter.currentList = JSON.parse(data);
            } else {
                alert(data);
            }
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

};


TradeCenter.getListItemById = function(id_item) {

    for (var iii in this.currentList) {
        if (Number(this.currentList[iii].id_item) === Number(id_item)) {
            return this.currentList[iii];
        }
    }

};

TradeCenter.getTradeListTotalCount = function() {


    return $.ajax({
        url: "api/tradeCenter.php",
        data: {
            GET_TOTAL_COUNT: true
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (isJson(data)) {
                TradeCenter.totalCount = JSON.parse(data).item_count;
            } else {
                alert(data);
            }
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

};

TradeCenter.getTradeListForbidden = function() {


    return $.ajax({
        url: "api/tradeCenter.php",
        data: {
            GET_FORBIDDEN_ITEM: true
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (isJson(data)) {
                var jsonData = JSON.parse(data);
                for (var iii in jsonData) {
                    TradeCenter.forbiddenList.push(jsonData[iii].item);
                }
            } else {
                alert(data);
            }
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

};


TradeCenter.getPlayerTradeList = function() {


    return $.ajax({
        url: "api/tradeCenter.php",
        data: {
            GET_PLAYER_TRADE_LIST: true,
            id_player: ID_PLAYER,
            token: TOKEN
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (isJson(data)) {

                var jsonData = JSON.parse(data);
                TradeCenter.playerList = jsonData;

            } else {
                alert(data);
            }
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

};




TradeCenter.getTradeList(0);
TradeCenter.getTradeListTotalCount();
TradeCenter.getTradeListForbidden();
TradeCenter.getPlayerTradeList();



TradeCenter.TradeListContent = function(list, offset) {

    if (!offset)
        offset = 0;

    var tradeList = "";

    for (var iii = 0; iii < 7; iii++) {

        if (list[iii]) {

            tradeList += `<li class="tr " data-offset="${Number(offset) + iii}" data-id-hero="25">
                            <div class="td_1" style="width: 24%; margin-left: 2%;">
                                <div class="image">
                                    <div class="wrapper">
                                        <div class="item-image" style="background-image: url(${Matrial.image(list[iii].item)})">
                                        </div>
                                    </div>
                                </div>
                                <div class="name ellipsis">
                                    ${Matrial.getMatrialName(list[iii].item)}
                                </div>
                            </div>
                            <div class="td_2" style="width: 20%;">${list[iii].p_name}</div>
                            <div class="td_3" style="width: 11%;">
                                <div class="amount">
                                    ${list[iii].amount}
                                </div>
                            </div>
                            <div class="td_4" style="width: 11%;">
                                <div class="amount">
                                    ${list[iii].price}
                                </div>
                            </div>
                            <div class="td_5" style="width: 14%;">
                                ${lastSeen(list[iii].time_stamp)}
                            </div>
                            <div class="td_6" style="width: 18%;">
                                ${ Number(ID_PLAYER) !== Number(list[iii].id_player) ? `<button class="full-btn-3x buy-item-trade-center"
                                        data-item="${list[iii].item}"
                                        data-price="${list[iii].price}" 
                                        data-id-item="${list[iii].id_item}" 
                                        style="width: 45%; margin: auto;"> ${Translate.Button.MenuList.Buy[UserLag.language]}</button>` 
                                    :
                                    `<button class="full-btn-3x cancel-buy-item-trade-center"
                                        data-item="${list[iii].item}"
                                        data-price="${list[iii].price}" 
                                        data-id-item="${list[iii].id_item}" 
                                        style="width: 45%; margin: auto;">الغاء العرض</button>`}
                            </div>
                        </li>
                       `;

        } else {
            tradeList += ` <li class="tr"></li>`;
        }

    }

    var content = `<div id="city-trade-center" class="box_content">
                
                    <div class="th">
                        <div class="td_1 ellipsis" style="width: 24%; margin-left: 2%;">${Translate.General.Item[UserLag.language]}</div>
                        <div class="td_2 ellipsis" style="width: 20%;">${Translate.Title.TH.Lord[UserLag.language]}</div>
                        <div class="td_3 ellipsis" style="width: 11%;">${Translate.Title.TH.Quantity[UserLag.language]}</div>
                        <div class="td_3 ellipsis" style="width: 11%;">${Translate.Title.TH.UnitePrice[UserLag.language]}</div>
                        <div class="td_5 ellipsis" style="width: 14%;">${Translate.Title.TH.Time[UserLag.language]}</div>
                        <div class="td_6 ellipsis" style="width: 18%;">${Translate.Button.General.Action[UserLag.language]}</div>
                    </div>
                    <ol id="trade-list">
                        ${tradeList}
                    </ol>
                    <div  class="right-content-footer cell-3-footer">
                        <div class="right">
                           
                        </div>
                        <div class="middle">
                            <div id="navigate-trade-list" class="wrapper">
                                <button class="GO_L_1" data-direction="dec"></button>
                                <label>${Math.floor( offset/ 7) + 1}/${Math.floor(TradeCenter.totalCount/7) + 1}</label>
                                <button class="GO_R_1" data-direction="inc"></button>
                            </div>
                        </div>
                        <div class="left">
                            <button id="addMatrialToBuy" class="full-btn-3x">${Translate.Button.Building.AddItem[UserLag.language]}</button>
                        </div>
                    </div>
                
            </div>`;
    return content;
};




$(document).on("click", ".buy-item-trade-center", function() {

    var id_item = $(this).data("id-item");

    var listItem = TradeCenter.getListItemById(id_item);


    var msg = `<p>تأكيد استعمال  ( قسائم شراء) لشراء ${Matrial.getMatrialName(listItem.item)} مقابل ${listItem.price} ذهبة للمادة  الواحدة  </p>
                <div><input id="get-amount-to-buy" type="text"  class="only_num input" placeholder="كمية الشراء" min="0"  step="1" max="${Math.min(listItem.amount , Math.floor(game.DPlayer.Player.gold/listItem.price))}" ></div>`;


    alert_box.confirmDialog(msg, function() {

        var amount_to_buy = Math.abs(Number($("#get-amount-to-buy").val() || 0));


        if (!isInt(Number(amount_to_buy))) {
            alert_box.failMessage("لا يمكن ان تكون الارقام عشرية");
            return;
        }

        if (amount_to_buy <= 0 || amount_to_buy > listItem.amount) {

            alert_box.failMessage("الكمية المطلوب شرائها غير صحيحة  برجاء  حاول مرة اخرى");
            return;

        } else if (amount_to_buy > Math.floor(game.DPlayer.Player.gold / listItem.price)) {
            alert_box.failMessage("عذرا ليس لديك ذهب كافى");
            return;
        } else if (Matrial.getPlayerAmount("buy_voucher") < amount_to_buy) {

            alert_box.failMessage("لا يوجد لديك عقود شراء كافية");
            return;
        }

        if (Number(game.DPlayer.Player.porm) < 5) {
            alert_box.failMessage(`لا يمكنك شراء اى صفقة  ورتبتك اقل من ${game.BaseData.Promotion[5].Title}`);
            return;
        }


        if (TradeCenter.forbiddenList.indexOf(listItem.item) >= 0) {

            alert_box.failMessage("غير مسموح بشراء او  بيع هذه المادة فى الوقت الحالى ");
            return;

        }

        $.ajax({

            url: "api/tradeCenter.php",
            data: {

                BUY_ITEM: true,
                id_item: id_item,
                id_player: ID_PLAYER,
                item_table: Matrial.table(listItem.item),
                amount: amount_to_buy,
                token: TOKEN

            },
            type: 'POST',
            beforeSend: function(xhr) {
                $(".buy-item-trade-center").attr("disabled", "disabled");
                waitCursor();
            },
            success: function(data, textStatus, jqXHR) {

                $(".buy-item-trade-center").removeAttr("disabled");
                unwaitCursor();

                if (isJson(data)) {
                    var jsonData = JSON.parse(data);
                } else {
                    alert(data);
                    return;
                }


                if (jsonData.state === "ok") {

                    Matrial.givePlayer(listItem.item, amount_to_buy);
                    alert_box.succesMessage("تمت عملية الشراء بنجاح");

                } else if (jsonData.state === "error_1") {

                    alert_box.failMessage("لم تعد هذة الصفقة موجودة فى الوقت الحالى ");

                } else if (jsonData.state === "error_2") {

                    alert_box.failMessage("اختر عدد صحيح من المواد لشرائة");


                } else if (jsonData.state === "error_3") {

                    alert_box.failMessage("لا يوجد لديك ذهب كافى");

                } else if (jsonData.state === "error_4") {

                    alert_box.failMessage("لم يتم اضافة المواد");

                } else if (jsonData.state === "error_5") {

                    alert_box.failMessage("عدد المواد غير صحيح");

                } else if (jsonData.state === "error_6") {

                    alert_box.failMessage("لا يوجد لديك عقود شراء كافية");

                }


                var firstOffset = $("#trade-list li:first-child").data("offset") || 0;

                TradeCenter.getTradeList(firstOffset).done(function() {

                    $("#city-trade-center").replaceWith(TradeCenter.TradeListContent(TradeCenter.currentList));

                });


            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });


    });


});



$(document).on("click", "#addMatrialToBuy", function() {
    $("#matrial-box button").click();
});




$(document).on("click", ".sell-matrial", function(e) {

    e.stopPropagation();

    var matrial = $(this).data("matrial");

    var msg = `
        <p>تأكيد بيع ${Matrial.getMatrialName(matrial)} </p>
        <div>
            <input  id="amount-to-sell-trade-center" type="text" class="only_num input"  min="0"  max="${Math.min(Matrial.getPlayerAmount(matrial) , Matrial.getPlayerAmount("sell_voucher"))}" placeholder="الكمية"/>
        </div>
        <div>
            <input id="item-price"  type="text" class="only_num input"  min="0"  max="999" placeholder="السعر"/>
        </div>
`;

    alert_box.confirmDialog(msg, function() {

        var amountToSell = Number($("#amount-to-sell-trade-center").val());
        var itemPrice = Number($("#item-price").val());

        if (!isInt(Number(amountToSell)) || !isInt(Number(itemPrice))) {
            alert_box.failMessage("لا يمكن ان تكون الارقام عشرية");
            return;
        }

        if (itemPrice <= 0) {
            alert_box.failMessage(" لا يمكنك بيع المادة  بهذا السعر");
            return;
        }

        if (amountToSell <= 0) {

            alert_box.failMessage("لا يمكنك بيع هذة الكمية");
            return;

        }
        if (amountToSell > Matrial.getPlayerAmount("sell_voucher")) {

            alert_box.failMessage("لا يوجد لديك عقود بيع كافية");
            return;

        }
        if (amountToSell > Matrial.getPlayerAmount(matrial)) {
            alert_box.failMessage(`لا يوجد لديك عدد كافى من (${Matrial.getMatrialName(matrial)})`);
            return;
        }


        if (TradeCenter.forbiddenList.indexOf(matrial) > -1) {
            alert_box.failMessage("غير مسموح بشراء او  بيع هذه المادة فى الوقت الحالى ");
            return;
        }

        if (Number(game.DPlayer.Player.porm) < 7) {
            alert_box.failMessage("لا يمكنك عرض المادة للبيع و رتبتك اقل من موفد");
            return;
        }

        $.ajax({

            url: "api/tradeCenter.php",
            data: {
                SELL_ITEM: true,
                item: matrial,
                price: itemPrice,
                id_player: ID_PLAYER,
                mat_table: Matrial.table(matrial),
                amount: amountToSell,
                token: TOKEN
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (isJson(data))
                    var jsonData = JSON.parse(data);
                else {
                    alert(data);
                    return;
                }


                if (jsonData.state === "ok") {

                    Matrial.takeFrom(matrial, amountToSell);
                    Matrial.takeFrom("sell_voucher", amountToSell);
                    TradeCenter.playerList.push({
                        id_item: jsonData.id_item,
                        id_player: ID_PLAYER,
                        price: itemPrice,
                        item: matrial,
                        time_stamp: $.now() / 1000

                    });
                    $("#dialg_box .nav_bar .left-nav ul .selected").click();
                    alert_box.succesMessage(`تم  اضافة ${amountToSell} ${Matrial.getMatrialName(matrial)}  الى قائمة البيع بنجاح`);



                } else if (jsonData.state === "error_0") {
                    alert_box.failMessage("لا يمكنك بيع هذة الكمية");
                } else if (jsonData.state === "error_1") {
                    alert_box.failMessage(" لا يوجد لديك عدد كافى من المواد");
                } else if (jsonData.state === "error_2") {
                    alert_box.failMessage("");
                } else if (jsonData.state === "error_3") {
                    alert_box.failMessage("لا يوجد لديك عقود بيع كافية");
                } else if (jsonData.state === "error") {
                    alert_box.failMessage("اقل رتبة للبيع  هى موفد");
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });


    });

});



$(document).on("click", "#navigate-trade-list button", function() {


    var direction = $(this).data("direction");

    if (direction === "inc") {

        var firstOffset = $("#trade-list .tr:first-child").data("offset");

        console.log(firstOffset);

        if (firstOffset >= TradeCenter.totalCount - 7) {
            return;
        }


        TradeCenter.getTradeList(Number(firstOffset) + 7).done(function() {

            $("#city-trade-center").replaceWith(TradeCenter.TradeListContent(TradeCenter.currentList, Number(firstOffset) + 7));

        });


    } else if (direction === "dec") {
        var firstOffset = $("#trade-list .tr:first-child");

        if (firstOffset <= 0) {
            return;
        }


        TradeCenter.getTradeList(Number(firstOffset) - 7).done(function() {

            $("#city-trade-center").replaceWith(TradeCenter.TradeListContent(TradeCenter.currentList, Number(firstOffset) - 7));

        });

    }


});



$(document).on("click", ".cancel-buy-item-trade-center", function() {

    var id_item = $(this).data("id-item");


    alert_box.confirmDialog("ـاكيد الغاء عرض  البيع", function() {

        $.ajax({
            url: "api/tradeCenter.php",
            data: {
                CANCEL_SELL_ITEM_OFFFER: true,
                id_player: ID_PLAYER,
                id_item: id_item,
                mat_table: Matrial.table(TradeCenter.getListItemById(id_item).item),
                token: TOKEN
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (isJson(data)) {
                    var jsonData = JSON.parse(data);
                } else {
                    alert(data);
                    return;
                }

                if (jsonData.state === "ok") {

                    alert_box.succesMessage("تم سحب المادة من قائمة البيع بنجاح");
                    Matrial.givePlayer(jsonData.item, jsonData.amount);
                    TradeCenter.totalCount--;

                } else if (jsonData.state === "error_0") {

                    alert_box.failMessage(" لا يوجد هذا العرض");

                } else if (jsonData.state === "error_1") {

                    alert_box.failMessage("لست صاحب هذا العرض");

                } else if (jsonData.state === "error_2") {

                    alert_box.failMessage("حدث خطاء حاول مرة اخرى");

                }

                var firstOffset = $("#trade-list li:first-child").data("offset") || 0;

                TradeCenter.getTradeList(firstOffset).done(function() {

                    $("#city-trade-center").replaceWith(TradeCenter.TradeListContent(TradeCenter.currentList));

                });
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });

    });

});
var Jop = {

    addLabor: function(jopFor, amount) {

        if (jopFor === "farm" || jopFor === "food") {

            game.City.getCity().Jop.food = Number(game.City.getCity().Jop.food) + Number(amount);

        } else if (jopFor === "wood") {

            game.City.getCity().Jop.wood = Number(game.City.getCity().Jop.wood) + Number(amount);

        } else if (jopFor === "stone") {

            game.City.getCity().Jop.stone = Number(game.City.getCity().Jop.stone) + Number(amount);

        } else if (jopFor === "metal") {

            game.City.getCity().Jop.metal = Number(game.City.getCity().Jop.metal) + Number(amount);

        }

    },



    fireLabor: function(jopFor) {

        var amount = Number($("#number-to-dismiss").val());

        if (amount <= 0) {

            alert_box.confirmMessage("لا يمكن طرد هذه الكمية");
            return;

        } else if (amount > Number(game.City.getCity().Jop[jopFor])) {

            alert_box.confirmMessage("لا يمكن طرد  كمية لا تملكها");
            return;

        }
        var idCity = game.CurrentCity.idCity;

        $.ajax({

            url: `${API_URL}/api/ACityJop/fireLabor`,
            data: {
                idCity: idCity,
                amountToFire: amount,
                buildingPlace: $(".box_content").attr("data-building-place"),
                token: game.Config.OuthToken,
                server: game.Config.idServer

            },
            type: 'POST',
            beforeSend: function(xhr) {
                game.City.getCity().Jop[jopFor] -= amount;
                waitCursor();
                $("#dismiss-army-box .two-btn button").attr("disabled", "disabled");
            },
            success: function(data, textStatus, jqXHR) {
                $("#dismiss-army-box .two-btn button").removeAttr("disabled");
                unwaitCursor();
                alert_box.close();

                if (!isJson(data)) {

                    alert(data);
                    return;

                }


                var jsonData = JSON.parse(data);

                if (jsonData.state === "ok") {
                    game.City.getCity(idCity).Jop = jsonData.cityJop;
                    game.City.getCity(idCity).city = jsonData.cityRes;

                    city_profile.refresh_resource_view();
                    alert_box.succesMessage("تم طرد العمال بنجاح");

                } else if (jsonData.state === "error_0") {

                    alert_box.confirmMessage("لا يمكن طرد هذه الكمية");

                } else if (jsonData.state === "error_1") {

                    alert_box.confirmMessage("لا يمكن طرد هذه الكمية");

                }

                buildingClick($(".box_content").attr("data-building-place"), true);

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });


    }

};


Jop.jops = {

    farm: {
        require: {
            food: 10,
            wood: 20,
            stone: 30,
            metal: 15,
            time: 31,
            pop: 1
        },
        produce: "food",
        ar_title: "وظائف الحقل",
        fireBenfit: {
            food: 5,
            wood: 10,
            stone: 15,
            metal: 7
        },
        image: "images/building/building18.jpg"
    },
    wood: {
        require: {
            food: 15,
            wood: 10,
            stone: 20,
            metal: 30,
            time: 31,
            pop: 1
        },
        produce: "wood",
        ar_title: "وظائف الاخشاب",
        fireBenfit: {
            food: 7,
            wood: 5,
            stone: 10,
            metal: 15
        },
        image: "images/building/building19.jpg"
    },
    stone: {
        require: {
            food: 30,
            wood: 15,
            stone: 10,
            metal: 20,
            time: 31,
            pop: 1
        },
        produce: "stone",
        ar_title: "وظائف المحجر",
        fireBenfit: {
            food: 15,
            wood: 7,
            stone: 5,
            metal: 10
        },
        image: "images/building/building20.jpg"
    },
    mine: {
        require: {
            food: 20,
            wood: 30,
            stone: 15,
            metal: 10,
            time: 31,
            pop: 1
        },
        produce: "metal",
        ar_title: "وظائف المنجم",
        fireBenfit: {
            food: 10,
            wood: 15,
            stone: 15,
            metal: 5
        },
        image: "images/building/building21.jpg"
    }

};


$(document).on("click", "#hire-btn button", function() {

    var num_to_hire = Number($("#jop-num-input input").val()) || false;
    var building_type = Number($(".box_content").attr("data-building-type")) || false;
    var building_place = $(".box_content").attr("data-building-place") || false;

    if (num_to_hire < 1) {
        alert_box.confirmMessage("لا يمكنك توظيف هذة الكمية ");
        return;
    }

    for (var index in game.TimedTask.TaskList.Jop) {

        if (Number(game.TimedTask.TaskList.Jop[index].id_city) === Number(game.CurrentCity.City.id_city)) {

            alert_box.confirmMessage("لا يمكنك توظيف اكثر من دفعة عمال فى نفس الوقت");
            return;

        }

    }

    if (Max_of.city_jop(CITY_JOP_REQ[building_place.toUpperCase()], building_place) < num_to_hire) {

        alert_box.confirmMessage("عفوا لا توجد موارد كافية لتوظيف هذا العدد من العمال");
        return;

    } else if (!num_to_hire) {

        alert_box.confirmMessage("عفوا عليك اختيار عدد العمال المراد توظيفهم.");
        return;

    } else if (!building_type) {

        alert_box.confirmMessage("عفوا عليك اختيار نوع التوظيف .");
        return;

    } else if (!building_place) {

        alert_box.confirmMessage("عفوا عليك اختيار مكان التوظيف .");
        return;

    } else {

        var idCity = game.CurrentCity.City.id_city;
        $.ajax({

            url: `${API_URL}/api/ACityJop/hire`,
            data: {
                amountToHire: num_to_hire,
                buildingPlace: building_place,
                idCity: idCity,
                token: game.Config.OuthToken,
                server: game.Config.idServer

            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {


                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data)

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    /* calculate the decrease in city resources*/
                    game.City.getCity(idCity).City = JsonObject.cityRes;

                    for (var index in game.TimedTask.TaskList.Jop)
                        if (Number(game.TimedTask.TaskList.Jop[index].id_city) === Number(idCity))
                            delete(game.TimedTask.TaskList.Jop[index]);
                    for (var ii in JsonObject.JopTaskList)
                        game.TimedTask.TaskList.Jop[JsonObject.JopTaskList[ii].id] = JsonObject.JopTaskList[ii];
                    city_profile.refresh_resource_view();
                    game.TimedTask.refreshListView();


                } else if (json_data.state === "error_1") {

                    alert_box.confirmMessage("لا يمكنك توظيف هذة الكمية ");

                } else if (json_data.state === "error_2") {

                    alert_box.confirmMessage("لا يمكنك توظيف اكثر من دفعة عمال فى نفس الوقت");

                } else if (json_data.state === "no_pop") {
                    alert_box.confirmMessage("لا يوجد سكان كافية للتوظيف");
                } else if (json_data.state === "no_food") {
                    alert_box.confirmMessage("لا يوجد غذاء كافى للتوظيف");
                } else if (json_data.state === "no_wood") {
                    alert_box.confirmMessage("لا يوجد اخشاب كافية للتوظيف");
                } else if (json_data.state === "no_stone") {
                    alert_box.confirmMessage("لا يوجد احجار كافية للتوظيف");
                } else if (json_data.state === "no_metal") {
                    alert_box.confirmMessage("لا يوجد حديد كافى للتوظيف");
                }


            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    }

});




$(document).on("click", "#FIRE-EMPLOYEE button", function() {

    var building_place = $(".box_content").attr("data-building-place") || false;
    alert_box.jopFireEmployee(building_place);

});


$(document).on("click", "#change-city-pro-rate", function() {

    var foodRate = Number($("#food-rate-input").val());
    var woodRate = Number($("#wood-rate-input").val());
    var stoneRate = Number($("#stone-rate-input").val());
    var metalRate = Number($("#metal-rate-input").val());


    if (foodRate > 100 || foodRate < 0) {

        alert_box.failMessage("معدل الغذاء كمية غير مسموحة");
        return;

    }
    if (woodRate > 100 || woodRate < 0) {

        alert_box.failMessage("معدل الغذاء كمية غير مسموحة");
        return;

    }
    if (stoneRate > 100 || stoneRate < 0) {

        alert_box.failMessage("معدل الغذاء كمية غير مسموحة");
        return;

    }
    if (metalRate > 100 || metalRate < 0) {

        alert_box.failMessage("معدل الغذاء كمية غير مسموحة");
        return;

    }

    var idCity = game.CurrentCity.idCity;

    $.ajax({

        url: `${API_URL}/api/ACityPalace/updateProductionRate`,
        data: {
            foodRate: foodRate,
            woodRate: woodRate,
            stoneRate: stoneRate,
            metalRate: metalRate,
            idCity: idCity,
            token: game.Config.OuthToken,
            server: game.Config.idServer

        },
        type: 'POST',
        beforeSend: function(xhr) {
            $("#change-city-pro-rate").attr("disabled", "disabled");
            waitCursor();
        },
        success: function(data, textStatus, jqXHR) {

            $("#change-city-pro-rate").removeAttr("disabled");
            unwaitCursor();

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var jsonData = JSON.parse(data);

            if (jsonData.state === "ok") {

                game.City.getCity(idCity).City = jsonData.City;
                game.City.getCity(idCity).Jop = jsonData.CityJop;
                city_profile.refresh_resource_view();
                alert_box.succesMessage("تم تعديل معدل التوظيف بنجاح");

                $("#dialg_box .left-nav ul .selected").click();

            }



        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

});
$(document).on("click", "#JOIN_ATTACK", function() {

    var x_coord = Number($(this).attr("data-x-coord"));
    var y_coord = Number($(this).attr("data-y-coord"));


    $("#dialg_box").remove();

    BattelField.battelField({
        x_coord: x_coord,
        y_coord: y_coord,
        navBar: BattelFieldNavBar,
        totalBox: true
    });

});



$(document).on("click", "#REQUEST_ORDER", function() {

    var xCoord = Number($(this).attr("data-x-coord"));
    var yCoord = Number($(this).attr("data-y-coord"));


    alert_box.confirmDialog("تأكيد طلب الهجوم", function() {

        $.ajax({

            url: `${API_URL}/api/ABattel/applyForRoleInAttQue`,
            data: {
                xCoord: xCoord,
                yCoord: yCoord,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            success: function(data, textStatus, jqXHR) {
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    game.CurrentWorldUnit.AttackQueList = JsonObject.QueueList;
                    campDB.refreshQueAttackList(xCoord, yCoord);
                    alert_box.succesMessage("تم تفعيل الطلب بنجاح");

                } else if (JsonObject.state === "error_0") {
                    alert_box.confirmMessage("تم حجز دور بالفعل");
                } else if (JsonObject.state === "error_1") {
                    alert_box.confirmMessage("لا يوجد مكان خالى لك اقصى عدد 10");
                } else if (JsonObject.state === "error_3") {
                    alert_box.confirmMessage("رتبتك فى الحلف لا تكفى");
                } else if (JsonObject.state === "error_4") {
                    alert_box.confirmMessage("ليس لديك مواد كافية");
                }

            }

        });

    });

});

$(document).on("click", "#PLUNDE_PRIZE", function() {

    var xCoord = Number($(this).attr("data-x-coord"));
    var yCoord = Number($(this).attr("data-y-coord"));


    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/AWorldUnit/plundePrize`,
        data: {
            xCoord: xCoord,
            yCoord: yCoord,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);
            console.log(data)
            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {
                alert_box.succesMessage(Matrial.prizeToString(JsonObject.PrizeList));
            } else if (JsonObject.state === "error_1_0") {
                alert_box.confirmMessage("لست عضو فى الحلف المسيطر");
            } else if (JsonObject.state === "error_1_1") {
                alert_box.confirmMessage("لست عضوا فى اى حلف");
            } else if (JsonObject.state === "error_1_2") {
                alert_box.confirmMessage("لست عضو فى الحلف المسيطر");
            } else if (JsonObject.state === "error_1_3") {
                alert_box.confirmMessage("لقد حصلت على غنيمة بالفعل");
            } else if (JsonObject.state === "error_1_4") {
                alert_box.confirmMessage("عليك انتظار 72 ساعة داخل الحلف");
            }

        },
        error: function(data, textStatus, jqXHR) {
            console.log(textStatus);
        }

    });

});




$(document).on("click", "#JOIN_ATTACK_SIDE , #JOIN_DEFENCE_SIDE", function() {

    if ($(this).attr("id") === "JOIN_DEFENCE_SIDE") {

        battel_data = {
            x_coord: parseInt($(this).attr("data-x_coord")),
            y_coord: parseInt($(this).attr("data-y_coord")),
            ar_title: $(this).attr("data-title"),
            task: BATTEL_JOIN_DEFENCE,
            time: 0,
            task_title: "انضمام للدفاع مع",
            type: null,
            side: 0,
            id_battel: parseInt($(this).attr("data-id-battel")),
            city_name: "name"
        };

    } else {

        battel_data = {
            x_coord: parseInt($(this).attr("data-x_coord")),
            y_coord: parseInt($(this).attr("data-y_coord")),
            ar_title: $(this).attr("data-title"),
            task: BATTEL_JOIN_ATTACK,
            time: 0,
            task_title: "انضمام للهجوم مع",
            type: null,
            side: 1,
            id_battel: parseInt($(this).attr("data-id-battel")),
            city_name: "name"
        };


    }


    // get hero id 
    var hero_object;

    for (var iii in game.DPlayer.Heros) {
        if (parseInt(game.DPlayer.Heros[iii].Hero.in_city) !== game.Hero.HeroState.HERO_IN_CITY)
            continue;
        if (parseInt(game.DPlayer.Heros[iii].Hero.console) !== 0)
            continue;
        if (game.DPlayer.Heros[iii].Hero.id_city == game.CurrentCity.idCity) {
            game.CurrentHero = game.DPlayer.Heros[iii];
            break;
        }
    }

    $(".close_dialog").click();
    $("#dialg_box").remove();

    var content = army.dialogBoxContent_forCamp(game.CurrentHero, battel_data);
    var dialog_box = army.dialogBox(Translate.Title.Box.Hero[UserLag.language], NavBar.Hero, content);

    dialogBoxShow(dialog_box, function() {

        army.getCurrentArmy(game.CurrentHero);
        $(".left-nav ul li").each(function() {
            if ($(this).attr("head_title") === "camp") {
                $(this).addClass("selected");
            }
        });
        $("#dialg_box").attr("type", "hero");
        $("#city-hero-list").niceScroll(SCROLL_BAR_PROP);

    });





});
const BattelFieldNavBar = [{
    "txt": "أرض المعركة",
    "title": "battelField"
}];

var BattelField = {};
BattelField.SIDE_ATTACK = 1;
BattelField.SIDE_DEFENCE = 0;

BattelField.battelList = [];

BattelField.battelField = function(battel, currentBattels) {

    var list = BattelField.getBattelHeaders(BattelField.battelList, battel.id_battel, false);

    var selectedBattel;

    if (!currentBattels) {

        BattelField
            .getBattelForWorldUnit(battel.x_coord, battel.y_coord)
            .done(function(data) {

                if (!isJson(data)) {
                    alert(data);
                    return;
                }

                console.log(BattelField.battelList)

                BattelField.addToWatchList(battel.x_coord, battel.y_coord);



                var stop = Math.max(13, BattelField.battelList.length);
                list = "";


                list = BattelField.getBattelHeaders(BattelField.battelList, 0, false);

                selectedBattel = BattelField.battelList.length > 0 ? BattelField.battelList[0] : undefined;

                BattelField.battelModel(selectedBattel, list);

            });

    } else if ($.isArray(currentBattels)) {

        selectedBattel = currentBattels.length > 0 ? currentBattels[0] : undefined;



        list = "";
        list += this.getBattelHeaders(currentBattels, battel.id_battel, true);

    }





    if (battel.totalBox) {

        var box = menu_bar.dialogBox(Translate.Title.MenuList.Report[UserLag.language], battel.navBar, `<div class="box_content"></div>`, 0);

        dialogBoxShow(box, function() {

            $("#dialg_box").attr("data-box-for", "battelField");
            $("#dialg_box").attr("data-x-coord", battel.x_coord);
            $("#dialg_box").attr("data-y-coord", battel.y_coord);
            BattelField.battelModel(selectedBattel, list);

        });
    }

    this.battelModel(selectedBattel, list);


};

BattelField.battelModel = function(battel, list) {


    var leftTime = ""; // الوقت المتبقى
    var startTime = ""; //
    var defenceTitle = "";
    var attackTitle = "";
    var idBattel = "";
    var x_coord = "";
    var y_coord = "";
    var defenceNum = "";
    var attackNum = "";
    var hasBattel = false;

    if (typeof battel === "object") {

        var d = new Date(battel.time_start * 1000);
        leftTime = `<span  class="time_counter" time-end="${battel.time_end}"> ${changeTimeFormat(battel.time_end - (Date.now()/1000))} </span>`; // الوقت المتبقى
        startTime = `<span>${(d.getHours() > 12 ? d.getHours() - 12 : d.getHours())+':'+d.getMinutes()+' '+(d.getHours() >= 12 ? "PM" : "AM")}</span>`; //
        defenceTitle = WorldUtil.tooltipHeader(x_coord, y_coord);
        attackTitle = battel.CityName;
        idBattel = battel.id_battel;
        x_coord = battel.x_coord;
        y_coord = battel.y_coord;
        attackNum = battel.attackNum;
        defenceNum = battel.defenceNum;
        hasBattel = true;
    }


    var battelList = `<div class="box_content for_report">
                        <div class="left-content " id="reports_list">
                            <div class="th ellipsis">${Translate.Title.TH.Subject[UserLag.language]}</div>
                            <div id="AllBattelLists">
                                ${list}
                            </div>
                        </div>
                        <div class="right-content ">
                            <div class="rest-time">
                                <h6> الوقت المتبقى: </h6>
                                <span>
                                    ${leftTime}
                                </span>
                            </div>
                            <div class="report_state">
                                <div class="defense-side">
                                    <div class="banner-red">
                                        ${defenceTitle}
                                    </div>
                                    <div class="image">
                                        <div class="wrapper">
                                            <div class="bg-image" style="background-image:url(images/style/defense.png) ; "></div>
                                        </div>

                                        <div class="joined-num">${defenceNum}</div>
                                    </div>
                                    <button class="full-btn btn-green-2x" id="JOIN_DEFENCE_SIDE" 
                                        data-id-battel="${idBattel}" 
                                        data-x_coord="${x_coord}" data-y_coord="${y_coord}" 
                                        data-title="" ${!hasBattel ? 'disabled="disabled"' : ""}>
                                       ${Translate.Button.General.JoinDefence[UserLag.language]}
                                    </button>
                                </div>
                                <div class="attack-side">
                                    <div class="banner-red">
                                        ${attackTitle}
                                    </div>
                                    <div class="image">
                                        <div class="wrapper">
                                            <div class="bg-image" style="background-image:url(images/style/attack.png); "></div>
                                        </div>
                                        <div class="joined-num">${attackNum}</div>
                                    </div>
                                    <button class="full-btn btn-red-2x" id="JOIN_ATTACK_SIDE" data-id-battel="${idBattel}" 
                                        data-x_coord="${x_coord}" data-y_coord="${y_coord}" 
                                        data-title="" ${!hasBattel ? 'disabled="disabled"' : ""}>
                                        ${Translate.Button.General.JoinAttack[UserLag.language]}
                                    </button>
                                </div>
                            </div>
                            <div class="down_report">
                                <div class="reload">
                                    <button class="full-btn  btn-yellow-2x ellipsis">
                                        ${Translate.Button.MenuList.Intelligence[UserLag.language]}
                                    </button>
                                    <button class="full-btn  btn-yellow-2x ellipsis" id="REFRESH_BATTEL_DATA" data-id-battel="">
                                        ${Translate.Button.MenuList.RefreshHero[UserLag.language]} 
                                    </button>
                                </div>
                                <div class="time_start">
                                    وقت البداء: ${startTime}

                                </div>
                            </div>
                        </div>
                    </div>`;
    $(".box_content").replaceWith(battelList);

    if ($("#reports_list .selected").length < 1) {
        $("#reports_list .has_battel:first").addClass("selected");
    }

    $("#reports_list").niceScroll(SCROLL_BAR_PROP);
};



BattelField.getBattelHeaders = function(battels, selectedBattelId, myBattels) {

    var stop = Math.max(13, battels.length);
    var list = "";

    for (var iii = 0; iii < stop; iii++) {

        if (battels[iii]) {
            list += `
                        <div class="tr has_battel ${Number(selectedBattelId) === Number(battels[iii].id_battel) ? "selected" : ""}" 
                            data-id-battel="${battels[iii].id_battel}" data-my-battel="${myBattels}" >
                                        قام الملك ${battels[iii].PlayerName} بانشاء  معركة على ( ${getArabicNumbers(battels[iii].y_coord)} , ${getArabicNumbers(battels[iii].x_coord)})  من المدينة  ${battels[iii].CityName}
                                    </div>`;
        } else {
            list += `<div class="tr"></div>`;
        }

    }

    return list;



};



BattelField.getBattelForWorldUnit = function(x_coord, y_coord) {

    return $.ajax({

        url: `${API_URL}/api/ABattelRunning/getUnitBattel`,
        data: {
            xCoord: x_coord,
            yCoord: y_coord,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var jsonData = JSON.parse(data);

            BattelField.battelList = jsonData;

            console.log(BattelField.battelList);

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

};



$(document).on("click", "#AllBattelLists .has_battel", function() {


    var idBattel = Number($(this).attr("data-id-battel"));
    var myBattel = isJson($(this).attr("data-my-battel")) ? JSON.parse($(this).attr("data-my-battel")) : false;

    var battelList = [];

    if (myBattel)
        battelList = game.Battel.Battels;
    else
        battelList = BattelField.battelList;

    var selectedBattel;



    for (var iii in battelList) {

        if (Number(battelList[iii].id_battel) === idBattel) {
            selectedBattel = battelList[iii];
        }

    }

    var list = BattelField.getBattelHeaders(battelList, selectedBattel.id_battel, myBattel);
    BattelField.battelModel(selectedBattel, list);

});



BattelField.addToWatchList = function(x_coord, y_coord) {
    return;
    ws.send(
        JSON.stringify({
            url: "WS_BattelWatchList/addPlayer",
            data: {
                id_player: ID_PLAYER,
                x_coord: x_coord,
                y_coord: y_coord,
                token: TOKEN
            }

        })
    );

};

BattelField.removeFromWatchList = function(x_coord, y_coord) {

    /* ws.send(
         JSON.stringify(
             {
                 url:"WS_BattelWatchList/removePlayer",
                 data:{
                     idPlayer: ID_PLAYER,
                     x_coord:x_coord,
                     y_coord:y_coord,
                     token:TOKEN
                 }
                 
             }
         )
     );*/

};

BattelField.getBattel = function(id_battel) {



    for (var iii in game.Battel.Battels) {
        if (Number(game.Battel.Battels[iii].id_battel) === Number(id_battel)) {

            return game.Battel.Battels[iii];

        }
    }

    for (var iii in this.battelList) {
        if (Number(this.battelList[iii].id_battel) === Number(id_battel)) {

            return this.battelList[iii];

        }
    }
    return null;
};
var GodGate = {};

GodGate.pointTotxt = {

    "attack": "هجوم",
    "def": "دفاع",
    "dam": "انجراح",
    "vit": "حيوية",
    "break": "إجتياح",
    "anti_break": "تصدى",
    "strike": "تدمير",
    "immunity": "حصانة"

};

GodGate.navBar = [{
    "txt": "أمون رع",
    "title": "god-gate-1"
}, {
    "txt": "خنوم",
    "title": "god-gate-2"
}, {
    "txt": "انوبيس",
    "title": "god-gate-3"
}, {
    "txt": "حورس",
    "title": "god-gate-4"
}];


GodGate.playerGate = {};

GodGate.closed = 0;
GodGate.open = 1;

GodGate.data = {

    point: {
        attack: {
            ar_title: "هجوم",
            max: 50
        },
        defence: {
            ar_title: "دفاع",
            max: 50
        },
        vit: {
            ar_title: "حيوية",
            max: 100
        },
        damage: {
            ar_title: "انجراح",
            max: 50
        },
        "break": {
            ar_title: "إجتياح",
            max: 15
        },
        anti_break: {
            ar_title: "تصدى",
            max: 15
        },
        strike: {
            ar_title: "تدمير",
            max: 15
        },
        immunity: {
            ar_title: "حصانة",
            max: 15
        }
    },
    godName: {
        gate_1: "أمون رع",
        gate_2: "خنوم",
        gate_3: "أنوبيس",
        gate_4: "حورس"
    }

};


GodGate.matrialUse = ["god_point_5", "god_point_30", "god_point_75", "god_point_175", "god_point_750", "god_point_1k", "god_point_2k", "god_point_5k", "god_point_10k", "god_point_50k"];
GodGate.gateRequireMents = {
    gate_1: {
        points: 500,
        porm: 4,
        godName: "امون رع"
    },
    gate_2: {
        points: 1500,
        porm: 10,
        godName: "خنوم"
    },
    gate_3: {
        points: 2500,
        porm: 18,
        godName: "انوبيس"
    },
    gate_4: {
        points: 4000,
        porm: 28,
        godName: "حورس"
    }
};


GodGate.getPlayerGates = function() {

    return $.ajax({

        url: `${API_URL}/api/AGodGate/getGodGateData`,
        data: {
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            GodGate.playerGate = JSON.parse(data);

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

};

$(document).on("PlayerReady", "html", function() {
    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/AGodGate/getRankEffect`,
        data: {
            token: game.Config.OuthToken
        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {
            GodGate.rankEffect = JSON.parse(data);
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });
    $.ajax({

        url: "api/godGate.php",
        data: {

            GLOBAL_GATE_DATA: true

        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {
            GodGate.globalData = JSON.parse(data);
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });
    GodGate.getPlayerGates();
});



GodGate.godGateContent = function() {


    var content = `  
                    <div id="god-gate" class="box_content">
                        <div class="content-wrapper">
                            <div id="godGate-rank">
                                <div class="text">
                                    الترتيب
                                </div>
                            </div>
                            <div id="godGate-help"></div>
                            <div  id="god-1" class="god-container ${GodGate.playerGate.GodGateData.gate_1 ? "" : "gray-filter"}" style="left: 50%; margin-left: -75px;" data-gate="1">
                                <div class="text-val stroke" style="top:112px; margin-left: -45px"> ${GodGate.playerGate.GodGateData.gate_1 ? GodGate.playerGate.GodGateData.gate_1 : "0"} </div>
                            </div>
                            <div id="god-2" class="god-container ${GodGate.playerGate.GodGateData.gate_2 ? "" : "gray-filter"}" style="right: 0px; top: 50%; margin-top: -80px  " data-gate="2">
                                <div class="text-val stroke" style="margin-left: -45px ; top: 108px"> ${GodGate.playerGate.GodGateData.gate_2 ? GodGate.playerGate.GodGateData.gate_2 : "0"} </div>
                            </div>
                            <div id="god-3" class="god-container  ${GodGate.playerGate.GodGateData.gate_3 ? "" : "gray-filter"}"  style="left: 50%; bottom: 0px;  margin-left: -75px;" data-gate="3">
                                <div class="text-val stroke" style="top: 108px; margin-left: -45px"> ${GodGate.playerGate.GodGateData.gate_3 ? GodGate.playerGate.GodGateData.gate_3 : "0"} </div>
                            </div>
                            <div id="god-4" class="god-container  ${GodGate.playerGate.GodGateData.gate_4 ? "" : "gray-filter"}" style="left: 0px; top: 50%; margin-top: -80px " data-gate="4">
                                <div class="text-val stroke" style="margin-left: -67px; top: 94px"> ${GodGate.playerGate.GodGateData.gate_4 ? GodGate.playerGate.GodGateData.gate_4 : "0"} </div>
                            </div>


                            <div class="player-points">
                                <label>${GodGate.playerGate.GodGateData.points}/4000</label>
                                <div class="wrapper">
                                    <button class="pluse add-god-points"></button>
                                </div>
                            </div>
                        </div>
                    </div>`;

    return content;

};



GodGate.askToOpenGate = function(gate) {


    var Needs = GodGate.gateRequireMents["gate_" + gate];

    if (!Needs)
        return;

    if (Number(game.DPlayer.Player.porm) < Needs.porm) {

        alert_box.failMessage(`لا يمكنك فتح البوابة و رتبتك اقل من ${game.BaseData.Promotion[Needs.porm].Title}`);
        return;

    }

    if (Number(GodGate.playerGate.GodGateData.points) < Needs.points) {
        alert_box.failMessage(`ليس لديك (${Needs.points}) نقطة لفتح البوابة`);
        return;
    }


    alert_box.confirmDialog(`تأكيد فتح بوبة التسليح ${GodGate.data.godName["gate_" + gate]}`, function() {


        $.ajax({

            url: `${API_URL}/api/AGodGate/openGate`,
            data: {
                gateIndex: gate,
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {


                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var jsonData = JSON.parse(data);

                if (jsonData.state === "error_2") {

                    alert_box.confirmMessage(`لا يمكنك فتح البوابة و رتبتك اقل من ${game.BaseData.Promotion[Needs.porm].Title}`);

                } else if (jsonData.state === "error_3") {

                    alert_box.confirmMessage(`ليس لديك (${Needs.points}) نقطة لفتح البوابة`);

                } else if (jsonData.state === "ok") {

                    GodGate.playerGate.GodGateData = jsonData.PlayerGate;
                    GodGate.playerGate[("GodGate" + gate)] = jsonData.Gate;

                    $("#god-gate").replaceWith(GodGate.godGateContent());
                    alert_box.succesMessage("تم فتح البوابة بنجاح");

                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    });



};



GodGate.BoxContent = function(gate) {

    var godGate = this.playerGate[("GodGate" + gate)];
    if (!godGate)
        return;


    var totalLocks = 0;

    var listItem = "";

    for (var iii = 1; iii <= 4; iii++) {

        var state = "c_" + iii + "_s";
        var score = "cell_" + iii + "_score";
        var type = "cell_" + iii + "_type";
        if (!GodGate.data.point[godGate[type]]) {
            console.log(godGate[type])
            console.log(type)
            console.log(godGate)
        }

        listItem += `<li class="${Number(godGate[state]) == 2 ? "gray-filter" : ""}" data-index="${iii}" data-score="${score}">
                        <div class="lock">
                            ${Number(godGate[state]) === 0 ? '<label class="chackable"></label>' : ""}
                        </div>
                        <div class="effect score-${GodGate.scoreColor(godGate[type], godGate[score])}">
                            <div class="effct-type font-2 ">${godGate[type] == "" ? "---" : (GodGate.data.point[godGate[type]].ar_title)}</div>
                            <div class="effct-renge font-2">(${Math.floor(Math.max(godGate[score], 1))})</div>
                            <div class="effct-score font-2">${Number(godGate[state]) == 2 ? "(0%)" : `(${Math.floor((godGate[score] / GodGate.data.point[godGate[type]].max) * 100)}%)`}</div>
                        </div>
                        <div class="checkBox">
                            <input type="checkbox" checked="checked">
                            <button class="checkmark ${Number(godGate[state]) === 0 ? "checked" : ""} chackable"></button>
                        </div>
                        <div class="closeWord font-2 ${Number(godGate[state]) != 2 ? "chackable" : ""}">
                            ${godGate[state] == 2 ? `<div class="open-fourth-cell">
                                                        <button id="OpenForthCellGG" data-gate="${gate}" class="pluse"></button>
                                                    </div>` : (Number(godGate[state]) != 1 ? "مغلق" : "") }
                        </div>
                    </li>`;

        totalLocks += Number(godGate[state]) === 0 ? 1 : 0;

    }

    var box = ` <div id="godGateBox" data-gate="${gate}">
                    <div class="content-wrapper">
                        <div class="close-godGateBox">
                            <button></button>
                        </div>
                        <div class="scoreBord">
                            <div class="font-2">
                                ${this.playerGate.GodGateData[("gate_" + gate)]} 
                            </div>
                        </div>
                        <div class="godName">
                            <div class="name font-2">${this.data.godName["gate_" + gate]}</div>
                        </div>
                        <ul>
                            ${listItem}
                            
                        </ul>
                    </div>
                    <div class="btn-wrapper">
                        <div class="btns-group">
                            <button id="change-gate-cell" ${Number(this.playerGate.GodGateData.points) < 50 + totalLocks * 50 ? 'disabled = "disabled"' : ""} class="btn-red-2x">تغير</button>
                            <button class="pluse add-god-points"></button>
                        </div>
                        <div class="text-group">
                            <label>التكلفة : <span >${50 + totalLocks * 50}</span> نقطة</label>
                            <label>لدبك : <span >${this.playerGate.GodGateData.points}</span>  نقطة </label>
                        </div>
                    </div>
                </div>`;

    return box;

};



GodGate.changeGateCells = function(gate) {

    return $.ajax({

        url: `${API_URL}/api/AGodGate/changeGateUnlockedCells`,
        data: {
            gateIndex: gate,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {
            waitCursor();
            $("#change-gate-cell").attr("disabled", 'disabled');
        },
        success: function(data, textStatus, jqXHR) {
            unwaitCursor();

            $("#change-gate-cell").removeAttr("disabled");

            if (isJson(data)) {

                GodGate.getPlayerGates().done(function(data) {
                    $("#godGateBox").replaceWith(GodGate.BoxContent(gate));
                });


            } else {
                alert(data);
            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

};

GodGate.useBoxPoint = function(box, amount) {

    if (!amount) {
        amount = 1;
    }

    $.ajax({

        url: `${API_URL}/api/AGodGate/addGatePoints`,
        data: {
            Item: box,
            amount: amount,
            token: game.Config.OuthToken,
            server: game.Config.idServer

        },
        type: 'POST',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {
            $("#useItemButton").removeAttr("disabled");
            if (!isJson(data)) {
                alert(data);
                return;
            }

            var jsonData = JSON.parse(data);

            GodGate.getPlayerGates().done(function(data) {

                $("#godGateBox").replaceWith(GodGate.BoxContent(gate));
                if ($("#godGateBox").length > 0) {
                    var gate = $("#godGateBox").attr("data-gate");
                    $("#godGateBox").replaceWith(GodGate.BoxContent(gate));
                }

                alert_box.succesMessage(`تم اضافة ${jsonData.PointToAdd} نقطة بنجاح`);

                $("#god-gate").replaceWith(GodGate.godGateContent());
            });
            $(".close_select_menu").trigger("click");
            $("#alert_container .close-alert").trigger("click");

            Matrial.takeFrom(box, amount);


        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });
};



GodGate.OpenFourthCell = function(Gate) {

    var Mat = "skill_book";

    if (Matrial.getPlayerAmount(Mat) <= Gate * 5) {

        $("#over_lay_alert").remove();
        alert_box.confirmMessage(`لا يوجد لديك عدد (${Gate * 10}) من ${Matrial.getMatrialName(Mat)}  فى صندوق الموارد خاصتك`);
        return;

    }
    if (GodGate.playerGate.GodGateData.points < Gate * 5000) {
        $("#over_lay_alert").remove();
        alert_box.confirmMessage(`يجب ان تمتلك اكثر من ${Gate * 5000} نقطة من نقاط التسليح`);
        return;
    }

    $.ajax({
        url: `${API_URL}/api/AGodGate/OpenFourthCell`,
        data: {
            GateIndex: Gate,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {


            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);
            var JsonData = JSON.parse(data);


            if (JsonData.state == "ok") {
                GodGate.getPlayerGates().done(function(data) {
                    $("#godGateBox").replaceWith(GodGate.BoxContent(Gate));
                });
                $(".close_select_menu").trigger("click");
                $("#alert_container .close-alert").trigger("click");
            } else if (JsonData.state == "error_0") {
                alert_box.failMessage(`خطاء نوع البوبة`);
            } else if (JsonData.state == "error_1") {
                alert_box.failMessage(`خطاء نوع البوبة`);
            } else if (JsonData.state == "error_2") {
                alert_box.failMessage(`البوابة مغلقة`);
            } else if (JsonData.state == "error_3") {
                alert_box.failMessage(`ليس لديك نقاط كافية`);
            } else if (JsonData.state == "error_4") {
                alert_box.failMessage(`ليس لديك مواد كافية`);
            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

};

GodGate.scoreColor = function(pointFor, score) {


    if (GodGate.data.point[pointFor]) {
        return Math.floor((score / GodGate.data.point[pointFor].max) * 5);
    }


};



GodGate.rank = function(gate, offset) {

    offset = offset || 0;

    $.ajax({

        url: "api/godGate.php",
        data: {

            GET_RANK_GATE: true,
            gate: gate,
            offset: offset

        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {
            if (!isJson(data)) {
                alert(data);
                return;
            }

            var jsonData = JSON.parse(data);

            var list = "";
            for (var iii = 0; iii < 10; iii++) {

                if (jsonData[iii]) {
                    let Key = GodGate.rankEffect ? Object.keys(GodGate.rankEffect[gate]) : [];
                    let GR = Key.length ? GodGate.rankEffect[gate][Key[0]] : null;;

                    list += `
                            <div class="tr" data-rank="1">
                                 <div class="td_1" style="width: 18%">${Number(offset) + iii + 1}</div>
                                <div class="td_2" style="width: 28%">${jsonData[iii].name}</div>
                                <div class="td_3" style="width: 18%">${Number(jsonData[iii].score)}</div>
                                <div class="td_4" style="width: 18%">${GR ? GR[offset + iii] || 0 : 0}</div>
                                <div class="td_5" style="width: 18%">---</div>
                            </div>`;

                } else {

                    list += `<div class="tr" rank="1"></div>`;

                }

            }
            let Key = GodGate.rankEffect ? Object.keys(GodGate.rankEffect[gate]) : [];
            var content = ` <div class="content rank-list">
                                <div class="th">
                                    <div class="td_1 ellipsis" style="width: 18%">${Translate.Title.TH.Ranking[UserLag.language]}</div>
                                    <div class="td_2 ellipsis" style="width: 28%">${Translate.Title.TH.Lord[UserLag.language]}</div>
                                    <div class="td_3 ellipsis" style="width: 18%">${Translate.Title.TH.TotalPoints[UserLag.language]}</div>
                                    <div class="td_4 ellipsis" style="width: 18%">+ ${GodGate.pointTotxt[Key.length ? Key[0] : "attack"]}</div>
                                    <div class="td_5 ellipsis" style="width: 18%">${Translate.Button.General.Soon[UserLag.language]}</div>
                                </div>
                                ${list}
                            </div>
                            <div class="footer">
                                <div class="li"></div>
                                <div class="li"></div>
                                <div class="li">
                                    <div class="nav_icon" id="nav-gate-rank" data-gate="${gate}" data-offset="${offset}">
                                        <div data-move="most-left"  class="pull-L most-left-btn"></div>
                                        <div data-move="left"       class="pull-L left-btn"></div>
                                        <h1 class="pull-L">  
                                            <span>${Number(offset) / 10 + 1}</span>/${Math.ceil(GodGate.globalData[(gate + "_count")] / 10)}
                                        </h1>
                                        <div data-move="most-right" class="pull-R most-right-btn"></div>        
                                        <div data-move="right"      class="pull-R right-btn"></div>
            
                                  </div>
                                </div>
                                <div class="li">
                                    <button class="show-my-rank btn-yellow-2x font-2"> تصنيفى</button>
                                </div>
                            </div>`;

            $("#Box-mid .content-wrapper").html(content);
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

};




/*  show gode gate*/
$(document).on("click", "#godGateBtnWrapper button", function() {


    var dialog = menu_bar.dialogBox(Translate.Title.MenuList.GodGate[UserLag.language], [], GodGate.godGateContent(), 0);

    dialogBoxShow(dialog);

});




$(document).on("click", "#god-gate .content-wrapper .god-container", function() {

    var gate = $(this).attr("data-gate");

    if (!GodGate.playerGate.GodGateData["gate_" + gate]) {

        GodGate.askToOpenGate(gate);

    } else {

        var over_lay = `<div id="over_lay">${GodGate.BoxContent(gate)}</div>`;
        $("body").append(over_lay);

    }





});


$(document).on("click", "#godGateBox  .content-wrapper .close-godGateBox", function() {

    $("#over_lay").remove();

});


$(document).on("click", "#godGateBox .content-wrapper ul li .chackable", function() {

    var gate = $("#godGateBox").attr("data-gate");
    var index = $(this).parents("li").attr("data-index");

    var godGate = GodGate.playerGate[("GodGate" + gate)];

    godGate[("c_" + index + "_s")] = 1 - godGate[("c_" + index + "_s")];

    $("#godGateBox").replaceWith(GodGate.BoxContent(gate));


    $.ajax({
        url: `${API_URL}/api/AGodGate/changeGateCellState`,
        data: {
            cellIndex: index,
            gateIndex: gate,
            state: godGate[("c_" + index + "_s")],
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {
            waitCursor();
        },
        success: function(data, textStatus, jqXHR) {
            unwaitCursor();
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);


            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {
                GodGate.playerGate[("GodGate" + gate)] = JsonObject.Gate;

            }


            $("#godGateBox").replaceWith(GodGate.BoxContent(gate));
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

});


$(document).on("click", "#change-gate-cell", function() {

    var gate = $("#godGateBox").attr("data-gate");

    if (!gate)
        return;

    var godGate = GodGate.playerGate[("GodGate" + gate)];
    var itemHeigh = false;

    for (var iii = 1; iii <= 3; iii++) {

        var state = "c_" + iii + "_s";
        var score = "cell_" + iii + "_score";
        var type = "cell_" + iii + "_type";

        console.log(type)

        var score_precent = (godGate[score] / GodGate.data.point[godGate[type]].max) * 100;

        if (Number(godGate[state]) === GodGate.open && score_precent >= 90) {
            itemHeigh = true;
        }

    }

    if (itemHeigh) {

        alert_box.confirmDialog("تأكيد تغير نقاط البوابة! <br>  (قد تكون بعض النقاط الحالية عالية ويصعب الحصول عليها مرة اخرى)", function() {
            GodGate.changeGateCells(gate);
        });

    } else {

        GodGate.changeGateCells(gate);

    }




});



$(document).on("click", ".add-god-points", function() {

    var matrial = GodGate.matrialUse;
    BoxOfMatrialToUse(matrial, "add-god-points");

});



$(document).on("click", "#godGate-rank", function() {
    BoxMid.box("تصنيف", GodGate.navBar, "");
    GodGate.rank("gate_1", 0);
    $("#Box-mid .nav-bar ul li:first").addClass("selected")
});


$(document).on("click", "#nav-gate-rank div", function() {

    var direction = $(this).attr("data-move");
    var offset = Number($(this).parents("#nav-gate-rank").attr("data-offset"));
    var gate = $(this).parents("#nav-gate-rank").attr("data-gate");
    var newOffset = 0;

    var maxOffset = Number(GodGate.globalData[(gate + "_count")]);

    if (direction === "left") {

        if (offset <= 0)
            return;

        newOffset = Math.max(0, offset - 10);

    } else if (direction === "most-left") {

        newOffset = 0;

    } else if (direction === "right") {

        newOffset = offset + 10;
        if (newOffset >= maxOffset)
            return;

    } else if (direction === "most-right") {

        newOffset = Math.floor(maxOffset / 10) * 10;

    }


    GodGate.rank(gate, newOffset);
});



$(document).on("click", "#OpenForthCellGG", function() {
    var matrial = ["skill_book"];
    var Gate = $(this).attr("data-gate");

    alert_box.confirmDialog(`تأكيد إستعمال عدد(${Gate * 10}) من ${Matrial.getMatrialName(matrial[0])} + ${Gate * 5000} نقطة تسليح لفتح المهارة الرابعة للبوابة`, function() {
        BoxOfMatrialToUse(matrial, "open-fourth-cell", Gate, Gate);
    });


});
$(document).on("click", "#change-player-password", function() {

    var msg = ` <div>
                    تاكيد تغير كلمة المرور
                </div>
                <div id="change-pass-input-group">
                    <input class="current-pass" type="password" placeholder="كلمة المرور الحالية"/>
                    <input class="new-pass"     type="password" placeholder="كلمة المرور الجديدة"/>
                    <input class="new-pass-con" type="password" placeholder="تأكيد كلمة المرور الجديدة"/>
                </div>`;

    alert_box.confirmDialog(msg, function() {

        var currentPassword = $("#change-pass-input-group .current-pass").val();
        var newPassword = $("#change-pass-input-group .new-pass").val();
        var conNewPassword = $("#change-pass-input-group .new-pass-con").val();

        if (conNewPassword !== newPassword) {
            alert_box.failMessage("كلمة السر غير متطابقة مع كلمة التاكيد");
            return;
        }

        $.ajax({

            url: "api/setting.php",
            data: {

                CHANGE_PLAYER_PASSWORD: true,
                oldPassword: currentPassword,
                newPassword: newPassword,
                id_player: ID_PLAYER,
                token: TOKEN

            },
            type: 'POST',
            beforeSend: function(xhr) {

            },
            success: function(data, textStatus, jqXHR) {

                if (!isJson(data)) {

                    alert(data);
                    return;

                }

                var jsonData = JSON.parse(data);

                if (jsonData.state === "ok") {

                    alert("تم تغير كلمة المرور بنجاح");
                    location.reload();

                } else {

                    alert_box.failMessage("كلمة المرور غير صحيحة");

                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    });

});




$(document).on("click", "#OpenSettingsBox", function() {


    var box = ` <div id="over_lay">
                    <div id="select_from">
                        <div class="head_bar">
                            <img src="images/style/head_bar.png" class="banner">
                            <div class="title">اعدادات</div>
                            <img class="close close_use_menu" src="images/btns/close_b.png">
                        </div>
                        <p style="clear: both"></p>
                        <div id="rank-review" class="player-review">
                            <div class="upper">
                                <div class="th ellipsis">${Translate.Title.TH.Language[UserLag.language]}</div>
                                <div>
                                    <ul id="game-lang-list" class="flex">
                                        <li class="red-btn-wide">
                                            <div class="content-wrapper flex">
                                                <input id="trigger_1" class="choose-lang" type="radio" name="choseLang"  ${UserLag.language === ArLang ? 'checked="true"' : ""} value="${ArLang}">
                                                <label for="trigger_1" class="checker"></label>
                                                <div class="flag">
                                                    <label style="background-image: url(images/style/langFlag/ar.png)"></label>
                                                </div>
                                                <div class="text">
                                                    العربية
                                                </div>
                                            </div>

                                        </li>
                                        <li class="red-btn-wide">
                                            <div class="content-wrapper flex">
                                                <input id="trigger_2" class="choose-lang" type="radio" name="choseLang" ${UserLag.language === EnLan ? 'checked="true"' : ""} value="${EnLan}">
                                                <label for="trigger_2" class="checker"></label>
                                                <div class="flag">
                                                    <label style="background-image: url(images/style/langFlag/en.png)"></label>
                                                </div>
                                                <div class="text">
                                                    English
                                                </div>
                                            </div>
                                        </li>
                                        <li class="red-btn-wide">
                                            <div class="content-wrapper flex">
                                                <input id="trigger_3" class="choose-lang" type="radio" name="choseLang" ${UserLag.language === EsLang ? 'checked="true"' : ""} value="${EsLang}">
                                                <label for="trigger_3" class="checker"></label>
                                                <div class="flag">
                                                    <label style="background-image: url(images/style/langFlag/es.png)"></label>
                                                </div>
                                                <div class="text">
                                                    español
                                                </div>
                                            </div>
                                        </li>
                                        <li class="red-btn-wide">
                                            <div class="content-wrapper flex">
                                                <input id="trigger_4" class="choose-lang" type="radio" name="choseLang" ${UserLag.language === PtLang ? 'checked="true"' : ""} value="${PtLang}">
                                                <label for="trigger_4" class="checker"></label>
                                                <div class="flag">
                                                    <label style="background-image: url(images/style/langFlag/pt.png)"></label>
                                                </div>
                                                <div class="text">
                                                    Português
                                                </div>
                                            </div>
                                        </li>
                                        <li class="red-btn-wide">
                                            <div class="content-wrapper flex">
                                                <input id="trigger_5" class="choose-lang" type="radio" name="choseLang" ${UserLag.language === DeLang ? 'checked="true"' : ""} value="${DeLang}">
                                                <label for="trigger_5" class="checker"></label>
                                                <div class="flag">
                                                    <label style="background-image: url(images/style/langFlag/de.png)"></label>
                                                </div>
                                                <div class="text">
                                                    Deutsch
                                                </div>
                                            </div>
                                        </li>
                                        <li class="red-btn-wide">
                                            <div class="content-wrapper flex">
                                                <input id="trigger_6" class="choose-lang" type="radio" name="choseLang" ${UserLag.language === CnLang ? 'checked="true"' : ""} value="${CnLang}">
                                                <label for="trigger_6" class="checker"></label>
                                                <div class="flag">
                                                    <label style="background-image: url(images/style/langFlag/cn.png)"></label>
                                                </div>
                                                <div class="text">
                                                    中文(简体)
                                                </div>
                                            </div>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div class="down">
                                <div class="th ellipsis"></div>
                            </div>
                        </div>
                    </div>
                </div>`;

    $("#over_lay").remove();
    $("body").append(box);

});




$(document).on("change", "#game-lang-list .choose-lang", function() {

    var lang = $(this).val();
    var oldLang = UserLag.language;
    UserLag.language = lang;
    alert_box.confirmDialog(Translate.Msg.ConfirmChanegeLanguage[lang], function() {

        $.ajax({

            url: "api/language.php",
            data: {
                CHANGE_PLAYER_LANG: true,
                token: TOKEN,
                id_player: ID_PLAYER,
                newLang: lang
            },
            type: 'POST',
            beforeSend: function(xhr) {},
            success: function(data, textStatus, jqXHR) {

                if (isJson(data)) {
                    location.reload();
                }
            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });
        UserLag.language = oldLang;

    });





});



if (UserLag.isDefault) {
    $("#OpenSettingsBox").click();
}
const Emjoi = {

    ":D": "iconfinder_01_EmoticonsHDcom_343133.png",
    ";)": "iconfinder_02_EmoticonsHDcom_343145.png",
    "o{|": "iconfinder_03_EmoticonsHDcom_343126.png",
    ":x)": "iconfinder_04_EmoticonsHDcom_343148.png",
    ":*": "iconfinder_11_EmoticonsHDcom_343153.png",
    ":|": "iconfinder_14_EmoticonsHDcom_343141.png",
    "8)": "iconfinder_18_EmoticonsHDcom_343124.png",
    "8>": "iconfinder_19_EmoticonsHDcom_343161.png",
    ":o": "iconfinder_20_EmoticonsHDcom_343139.png",
    "3:)": "iconfinder_22_EmoticonsHDcom_343170.png",
    "*_*": "iconfinder_26_EmoticonsHDcom_343122.png",
    "._.*": "iconfinder_28_EmoticonsHDcom_343128.png",
    "8o:": "iconfinder_30_EmoticonsHDcom_343169.png",
    "Dx:": "iconfinder_30_EmoticonsHDcom_343169.png",
    ":8*": "iconfinder_31_EmoticonsHDcom_343146.png",
    ":)": "iconfinder_32_EmoticonsHDcom_343171.png",
    "*,": "iconfinder_34_EmoticonsHDcom_343142.png",
    "8:D": "iconfinder_35_EmoticonsHDcom_343158.png",
    "*._.*": "iconfinder_36_EmoticonsHDcom_343143.png",
    "8o": "iconfinder_38_EmoticonsHDcom_343162.png",
    "^._.^": "iconfinder_39_EmoticonsHDcom_343137.png",
    ":/": "iconfinder_42_EmoticonsHDcom_343138.png",
    "^=^": "iconfinder_46_EmoticonsHDcom_343155.png",
    ":lol:": "iconfinder_49_EmoticonsHDcom_343130.png",
    ":'D": "iconfinder_49_EmoticonsHDcom_343130.png",
    ":')": "iconfinder_49_EmoticonsHDcom_343130.png",
    "xD": "iconfinder_49_EmoticonsHDcom_343130.png",
    "XD": "iconfinder_49_EmoticonsHDcom_343130.png",
    "*^_^*": "iconfinder_50_EmoticonsHDcom_343163.png",
    ".^_^.": "iconfinder_50_EmoticonsHDcom_343163.png",
    ":z": "iconfinder_51_EmoticonsHDcom_343165.png",
    ":}": "iconfinder_51_EmoticonsHDcom_343165.png",
    ":3": "iconfinder_51_EmoticonsHDcom_343165.png",
    ":<3": "iconfinder_56_EmoticonsHDcom_343159.png",
    "':D": "iconfinder_58_EmoticonsHDcom_343166.png",
    ":'o": "iconfinder_59_EmoticonsHDcom_343167.png",
    ":'(": "iconfinder_59_EmoticonsHDcom_343167.png",
    "'^o^'": "iconfinder_61_EmoticonsHDcom_343131.png",
    "(^_^)": "iconfinder_65_EmoticonsHDcom_343144.png",
    "^_^)": "iconfinder_69_EmoticonsHDcom_343154.png",
    "^_^": "iconfinder_69_EmoticonsHDcom_343154.png",
    ";):": "iconfinder_67_EmoticonsHDcom_343136.png",
    ">:(": "iconfinder_70_EmoticonsHDcom_343164.png",
    ">:/": "iconfinder_70_EmoticonsHDcom_343164.png",
    ">:@": "iconfinder_70_EmoticonsHDcom_343164.png",
    "<(": "iconfinder_71_EmoticonsHDcom_343132.png",
    "=_=": "iconfinder_79_EmoticonsHDcom_343140.png"

};

var Chat = {};
Chat.msgId = 0;

Chat.msgFrom = function(data) {


    var name = `<div class="reply" data-msg="${data.chatMsg}" data-from="${data.fromName}">(رد)</div>
                <div class="name">[${data.fromName}]:</div> `;

    for (var iii in data.playerTitle) {
        if (!data.playerTitle[iii])
            continue;
        name += `<div class="rank-title rank-title_${iii}">${data.playerTitle[iii]}</div>`;
    }
    return name;
};

Chat.worldMessage = function(data) {


    var user_group_class = data.userGroup;
    var chatMsg = Extract.coords(extractEmjoi(extractUrl(data.chatMsg)));
    var idMsg = (++Chat.msgId);
    var msgContent = ``;
    if (data.quoted) {

        msgContent = `  <div class="with-reply">
                            <p class="quote ellipsis">[${data.quoteFrom}]: ${data.quote}</p>
                            <p class="q-r msg-text" data-msg-org="${data.chatMsg}">${chatMsg}</p>
                        </div>`;
    } else {
        msgContent = `<p class="msg-text flex"  data-msg-org="${data.chatMsg}">
                        ${chatMsg}
                     </p>`;
    }

    var msg = `<div id="mg-id-${idMsg}" data-id-msg="${data.idFrom}-${data.idMsg}" 
                    class="msg-unit world_chat ${"user-group-"+user_group_class}" 
                    data-id-player="${data.idFrom}" data-avatar="${data.p_avatar}" 
                    data-name="${data.fromName}" data-user-group="${data.userGroup}">
                    <div class="msg-from flex">
                        ${Chat.msgFrom(data)}
                    </div>
                    <div class="msg-body flex">${msgContent}</div>
                    <label class="msg-time">${ ('00' + new Date().getHours()).slice(-2)}:${('00' + new Date().getMinutes()).slice(-2)}</label>
                </div>`;

    UserLag.TranslateChatMsg({
        id: idMsg,
        text: data.chatMsg
    });
    var htmlMsg = $($.parseHTML(msg));
    htmlMsg.children(".msg-from").children(".rank-title").css("width", "60px");
    setTimeout(function() {
        htmlMsg.children(".msg-from").children(".rank-title").css("width", "15px");
    }, 1000);

    $("#msg-area").append(htmlMsg);

};

Chat.guildMessage = function(data) {

    var user_group_class = data.userGroup;
    var chatMsg = Extract.coords(extractEmjoi(extractUrl(data.chatMsg)));
    var idMsg = (++Chat.msgId);

    var msg = `<div id="mg-id-${idMsg}" class="msg-unit guild_msg" data-id-player="${data.idFrom}" data-avatar="${data.playerAvatar}" data-name="${data.fromName}">
                    <div class="msg-from flex">
                        ${Chat.msgFrom(data)}
                    </div>
                    <div class="msg-body flex">
                        <p class="msg-text flex" data-msg-org="${data.chatMsg}">
                           ${chatMsg}
                        </p>
                    </div>
                </div>`;

    UserLag.TranslateChatMsg({
        id: idMsg,
        text: data.chatMsg
    });
    var htmlMsg = $($.parseHTML(msg));
    htmlMsg.children(".msg-from").children(".rank-title").css("width", "60px");
    setTimeout(function() {
        htmlMsg.children(".msg-from").children(".rank-title").css("width", "15px");
    }, 1000);
    $("#msg-area").append(htmlMsg);
};

$(document).on("click", "#msg-area .msg-from  .rank-title", function() {

    if ($(this).hasClass("active")) {
        $(this).css({
            "width": "10px",
            "margin-left": "0px"
        });
        $(this).removeClass("active");
    } else {
        $(this).css({
            "width": "60px",
            "margin-left": "5px"
        });
        $(this).addClass("active");
    }
});




Chat.append = function(message) {

    console.log(message)

    var msg = `<div class="msg-unit"  >
                            <div class="msg-body">
                                <P>
                                   ${message}
                                </P>
                            </div>
                        </div>`;
    $("#msg-area").append(msg);

    if ($("#msg-area").getNiceScroll(0).page.maxh - $("#msg-area").getNiceScroll(0).getScrollTop() < 5) {
        setTimeout(function() {
            $("#msg-area").getNiceScroll(0).doScrollTop($("#msg-area").getNiceScroll(0).getContentSize().h, 0);
        }, 100);
    }


};




var Announce = {};


Announce.queu = [];

Announce.global = function(text) {

    Announce.queu.push(text);

    setTimeout(() => {

        var duration = 6000;
        var dest = -500;
        var container = $("#global-announce");


        $("#global-announce .wrapper .text").html(Announce.queu[0]);
        console.log(Announce.queu[0])
        container.css("transform", "rotateX(0deg)");


        setTimeout(() => {

            container.attr("date-statge", "1");
            $("#global-announce .text").animate({
                right: dest
            }, {
                duration: duration,

                complete: function() {

                    container.removeAttr("style");
                    $("#global-announce .wrapper .text").removeAttr("style");
                    // $("#global-announce .wrapper .text").html("");
                    Announce.queu.splice(0, 1);
                },
                step: function(now, fx) {

                    container.attr("data-now", Math.floor((now * duration) / dest));

                }

            });

        }, 1800 + duration - Number(container.attr("data-now")), container);


    }, (Announce.queu.length - 1) * 9000);



};



$(document).on("click", "#msg-area .reply", function() {

    var msg = $(this).attr("data-msg");
    var from = $(this).attr("data-from");

    var Quot = `
                <button class="close-btn"></button>
                <div class="msg-to-reply ellipsis">
                    <bold>[${from}]: </bold>${msg}
                </div>`;

    $("#input-area .quote-wrapper").html(Quot);
    $("#input-area .quote-wrapper").attr("data-quote", msg);
    $("#input-area .quote-wrapper").attr("data-from", from);
    $("#input-area .quote-wrapper .msg-to-reply").width("100%");
    $("#input-area .quote-wrapper").attr("data-has-quote", "true");

});


$(document).on("click", "#input-area .quote-wrapper .close-btn", function() {
    $("#input-area .quote-wrapper").attr("data-has-quote", "false");
    $("#input-area .quote-wrapper").removeAttr("data-quote");
    $("#input-area .quote-wrapper").removeAttr("data-from");
    $("#input-area .quote-wrapper").html("");
});

$(document).on("keyup", "#input-chat input", function(e) {

    e.preventDefault();
    e.stopPropagation();

    if (e.keyCode === 13) {

        $("#expand-chat .send").click();

    }
});


$(document).on("keydown", "#input-chat input", function(e) {

    e.stopPropagation();
});


$(document).on("click", "#expand-chat .send", function() {


    var chat_to = $("#chat-to").attr("data-chat-to");

    if (!chat_to) {

        chat_to = "world";
    }

    var msg = $("#input-chat input").val();

    if (msg.length < 1) {

        return;

    }



    if (chat_to === "world" && player.chat_panne > Date.now() / 1000) {
        alert_box.confirmMessage("  لقد قام المراقب بحظرك من الشات  <br/>\n\
                                            اذا ان لديك اى شكوى يمكنك تقديمها فى صندوق الشكاوى <a href='https://forum.game.com/index.php?forums/14/' target='_blank'>هنا</a>");
        $("#input-chat input").val("");
        return;
    }

    var quoteWrapper = $("#input-area .quote-wrapper");

    if (quoteWrapper.attr("data-has-quote") === "true") {

        var json_obj = {
            url: "Chat/sendMsg",
            data: {
                chat_to: chat_to,
                chat_msg: msg,
                p_name: player.name,
                idPlayer: ID_PLAYER,
                p_avatar: player.avatar,
                quoted: true,
                quote: quoteWrapper.attr("data-quote"),
                quoteFrom: quoteWrapper.attr("data-from")
            }
        };

    } else {

        var json_obj = {

            url: "Chat/sendMsg",
            data: {
                chat_to: chat_to,
                chat_msg: msg,
                p_avatar: player.avatar,
                id_guild: player.id_guild,
            }
        };
    }



    ws.send(JSON.stringify(json_obj));
    $("#input-chat input").val("");
    $("#input-area .quote-wrapper .close-btn").click();


});





$(document).on("click", ".select-list", function() {

    var active = $(this).attr("data-active");

    if (active === "true") {

        $(this).attr("data-active", "false");
        $(this).children(".option").children("ul").hide();
        $(this).children(".option").animate({
            "height": 0
        });

    } else {
        $(this).attr("data-active", "true");
        $(this).children(".option").animate({
            "height": $(this).attr("data-height") + "px"
        }, function() {
            $(this).children("ul").show();
        });
    }

});
/*

Chat.openMediaDevices = async (constraints) => {
    return await navigator.mediaDevices.getUserMedia(constraints);
};

try {
    const stream = Chat.openMediaDevices({'video':false,'audio':true});
    console.log('Got MediaStream:', stream);
} catch(error) {
    console.error('Error accessing media devices.', error);
}*/

game.Contribute.For = {
    'Contribute': 'contribute',
    'EquipUpgrade': 'upgrade'
};

game.Contribute.List = {};

game.Contribute.getList = function() {
    $.ajax({
        'url': `${API_URL }/js${ game['Config']['JsVersion'] }/json/contribute.json`,
        success: function(data, _0x5852fa, _0x1a4a01) {
            game['Contribute']['List'] = data;
        }
    });
};


game['Contribute']['getList']();

game.Contribute.ToUpgradeBox = function(idCont) {
    var Cont = game['Contribute']['List'][idCont];
    var ListOfNeed = Cont['ListOfNeed'][0];
    var Name = '';
    var Image = 'images/tech/no_army.png';
    var Desc = '';
    if (ListOfNeed) {
        if (ListOfNeed['type'] == 'equip') {
            var EquipData = Equipment.getData(ListOfNeed['equip'], ListOfNeed['part'], ListOfNeed['lvl']);
            Image = EquipData['image'];
            Name = EquipData['name'];
            Desc = `   <li>هجوم  + ${EquipData['Power']['attack']} </li>
                            <li>دفاع  + ${EquipData['Power']['defence']} </li>
                            <li>انجراح  + ${EquipData['Power']['damage']} </li>
                            <li>حيوية  + ${EquipData['Power']['vitality']} </li>`;
        } else if (ListOfNeed['type'] == 'item') {
            Image = game['BaseData']['Items'][ListOfNeed['item']]['image'];
            Name = game['BaseData']['Items'][ListOfNeed['item']]['name'];
        }
    }
    return `<div class="flex">
                <div class="prizeCol">
                    <div class="imageCol">
                        <div class="prizeBg">
                            <div class="prizeimage">
                                <div class="matrial_unit">
                                    <img src="images/style/Border-up.png" class="border_up">
                                    <div class="img-inside-box">
                                        <div class="wrapper big-img">
                                            <div class="image" style="background-image: url(${Image})"></div>
                                        </div>
                                    </div> 
                                    <div class="txt-inside-box">
                                        <h2>${Name}</h2>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="wordsCol">
                    <ul>
                        ${Desc}
                    </ul>
                </div>
            </div>`;
};


game.Contribute.PrizeBox = function(idCont) {
    var Cont = game['Contribute']['List'][idCont];
    var Reword = Cont['Reword'][0];
    var Name = '';
    var Image = 'images/tech/no_army.png';
    var Desc = '';
    if (Reword) {
        if (Reword['type'] == 'equip') {
            var EquipData = Equipment['getData'](Reword['equip'], Reword['part'], Reword['lvl']);
            Image = EquipData['image'];
            Name = EquipData['name'];
            Desc = `' <li>هجوم  + ${EquipData['Power']['attack']} </li>
                            <li>دفاع  + ${EquipData['Power']['defence']} </li>
                            <li>انجراح  + ${EquipData['Power']['damage']} </li>
                            <li>حيوية  + ${EquipData['Power']['vitality']} </li>`;
        } else if (Reword['type'] == 'item') {
            Image = game['BaseData']['Items'][Reword['item']]['image'];
            Name = game['BaseData']['Items'][Reword['item']]['name'];
        }
    }
    var ListOfNeed = {};
    for (var ii in Cont['ListOfNeed']) {
        if (Cont['ListOfNeed'][ii]['type'] == 'promotion')
            ListOfNeed = Cont['ListOfNeed'][ii];
    }
    return ` <div class="flex">
                <div class="prizeCol">
                    <div class="imageCol">
                        <div class="prizeBg">
                            <div class="prizeimage">
                                <div class="matrial_unit">
                                    <img src=" images/style/Border-up.png" class="border_up">
                                    <div class="img-inside-box">
                                        <div class="wrapper big-img">
                                            <div class="image" style="background-image: url(${Image})"></div>
                                        </div>
                                    </div> 
                                    <div class="txt-inside-box">
                                        <h2>${Name}</h2>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="wordsCol">
                    <ul>
                       ${Desc}
                    </ul>
                </div>
            </div>
            <div class="ReqFixed">
                <ul>
                    <li class="not-achieved">عدد الجائزة:${Reword['amount']}</li>
                    <li class="${ListOfNeed['promotion'] <= game['DPlayer']['Player']['porm'] ? 'achieved' : 'not-achieved'}">الرتبة: ${game['BaseData']['Promotion'][ListOfNeed['promotion']]['Title']}</li>
                    <li class="rtl">نسبة الحصول: 100%</li>
                </ul>
            </div>`;
};


game.Contribute.RequireList = function(idCont) {
    var Cont = game['Contribute']['List'][idCont];
    var List = '';

    for (var ii = 0; ii < 5; ii++) {
        var amount = 0;
        var amountNeeded = 0;
        var Image = 'images/tech/no_army.png';
        var Btn = '<div class="full-btn-3x">شراء</div>';
        if (Cont['ListOfNeed'][ii]) {
            if (Cont['ListOfNeed'][ii]['type'] == 'equip') {
                amount = Cont['ListOfNeed'][ii]['SelectedList']['length'];
                var Equip = Equipment['getData'](Cont['ListOfNeed'][ii]['equip'], Cont['ListOfNeed'][ii]['part'], Cont['ListOfNeed'][ii]['lvl']);
                Image = Equip['image'];
                Btn = `<div class="full-btn-3x SelectContReq" data-id-cont="${idCont}" data-cont-req-index="${ii}">اختيار</div>`;
                amountNeeded = Cont['ListOfNeed'][ii]['amount'];
            } else if (Cont['ListOfNeed'][ii]['type'] == 'item') {

                amount = Matrial['getPlayerAmount'](Cont['ListOfNeed'][ii]['item']);
                Image = Matrial['getMatrial'](Cont['ListOfNeed'][ii]['item'])['image'];
                Btn = `<div class="full-btn-3x BuyContReq" data-cont-req-index="${ii}">شراء</div>`;
                amountNeeded = Cont['ListOfNeed'][ii]['amount'];

            }
        }
        List += `   <li>
                        <div class="ReqUnit">
                            <div class="Reqimage">
                                <div class="ReqBg">
                                    <div class="Reqimg" style="background-image: url(${Image})"></div>
                                </div>
                            </div>
                            <div class="ReqAmount ${amount >= amountNeeded ? 'achieved' : 'not-achieved'}">${amount} / ${amountNeeded}</div>
                            <div class="ReqTitle">
                                ${Btn}
                            </div>
                        </div>
                    </li>`;
    }
    return `<ul class="flex">
                ${List}
            </ul>`;
};


game['Contribute']['ContributeBox'] = function(idCont) {

    var Cat = game['Contribute']['List'][idCont]['cat'];
    for (var ii in game['Contribute']['List'][idCont]['ListOfNeed'])
        game['Contribute']['List'][idCont]['ListOfNeed'][ii]['SelectedList'] = [];

    return `<div class="topBox flex">
                <div id="contributeBoxToUpgrade" class="col-ii">
                    ${game['Contribute']['ToUpgradeBox'](idCont)}
                </div>
                <div class="col-i">
                    <div class="midCol">
                        <div class="success-rate font-2">
                            نسبة النجاح <br> 100%
                        </div>
                        <div id="${Cat == game['Contribute']['For']['EquipUpgrade'] ? 'ContributeUpStart' : 'ContributeStart'}" data-id-cont="${idCont}" class="full-btn-3x">${Cat == game['Contribute']['For']['EquipUpgrade'] ? 'تطوير' : 'مساهمة'}</div>
                    </div>
                </div>
                <div class="col-ii">
                   ${game['Contribute']['PrizeBox'](idCont)}
                </div>
            </div>
            <div class="bottomBox flex">
                <div class="col-ii" style="width: 25%;">
                    <div class="buttonLList">
                        <div class="buttonWrapper">
                            <div class="full-btn-3x ${Cat == game['Contribute']['For']['EquipUpgrade'] ? 'UpOther' : 'ConOther'}">${Cat == game['Contribute']['For']['EquipUpgrade'] ? 'تطوير اخر' : 'مساهمة اخرى'}</div>
                        </div>
                        <div class="buttonWrapper">
                            <div class="full-btn-3x ${Cat == game['Contribute']['For']['EquipUpgrade'] ? 'ContributeForC' : 'ContributeForUp'}">${Cat == game['Contribute']['For']['EquipUpgrade'] ? 'مساهمة' : 'تطوير'}</div>
                        </div>
                        <div class="buttonWrapper">
                            <div class="full-btn-3x">المعدات الخاصة</div>
                        </div>
                        <div class="buttonWrapper">
                            <div class="full-btn-3x">شراء ذهب</div>
                        </div>
                        <div class="buttonWrapper font-2" style="width: 70%">
                             <img src="images/icons/gold.png" style="width: 18px; vertical-align: middle;"> <label style="line-height: 40px;"> لديك: ${game['DPlayer']['Player']['gold']}</label>
                        </div>
                    </div>
                </div>
                <div id="contributReqList" class="col-iii flex">
                    <div id="ReqListBox" class="ReqList flex">
                        ${ game['Contribute']['RequireList'](idCont) }
                    </div>
                </div>
            </div>`;
};


game['Contribute']['DialogBox'] = function(ContFor) {
    var idCont;
    for (var iii in game['Contribute']['List']) {
        if (game['Contribute']['List'][iii]['cat'] === ContFor) {
            idCont = iii;
            break;
        }
    }
    return `<div id="dialg_box" class="fullBoxContent" style="top: 125px;">
                <div class="head_bar">
                    <img src="images/style/head_bar.png">
                    <div class="title">المساهمة</div>
                </div>
                <div class="nav_bar">
                    <div class="left-nav">
                        <ul> 
                            <li class="ContributeForUp ${ContFor == game['Contribute']['For']['EquipUpgrade'] ? ' selected' : ''}" >
                                تطوير
                            </li> 
                            <li class="ContributeForC ${ContFor == game['Contribute']['For']['Contribute'] ? ' selected' : ''}">
                                مساهمة
                            </li>
                        </ul>
                    </div>
                    <div class="right-nav">
                        <div class="nav_icon">
                            <img class="close_dialog" src="images/btns/close_b.png">
                        </div>
                    </div>
                </div>
                <div class="box_content contributeBox solidBg">
                    ${game['Contribute']['ContributeBox'](idCont)}
                </div>
            </div>`;
};


game.Contribute.ReqSelectListContent = function(idCont, ReqIndex) {
    var Cont = game['Contribute']['List'][idCont];
    var ReqList = Cont['ListOfNeed'][ReqIndex];
    var List = `<div class="th">
                            <div class="td_1 ellipsis" style="width: 60%">المطلوب</div>
                            <div class="td_2 ellipsis" style="width: 20%">متاح</div>
                            <div class="td_3 ellipsis" style="width: 20%">اختر</div>
                        </div>`;
    var Count = 0x0;
    for (var UEqui in game['DPlayer']['Equip']) {
        if (game['DPlayer']['Equip'][UEqui]['type'] != ReqList['equip'])
            continue;
        if (game['DPlayer']['Equip'][UEqui]['part'] != ReqList['part'])
            continue;
        if (game['DPlayer']['Equip'][UEqui]['lvl'] != ReqList['lvl'])
            continue;
        var Btn = `<button class="rightMark" style="background-size: auto 70%; height: 100%; width: 100%; margin: 0px; vertical-align: top"></button>`;
        if (game['DPlayer']['Equip'][UEqui]['id_hero'] > 0x0)
            var Btn = `<button class="uiBtnCloseDown downEquipFromHero"
                                    style="background-size: 85%; height: 100%; width: 100%; margin: 0px; vertical-align: top"
                                    data-id-cont="${idCont}" data-cont-req-index="${ReqIndex}" data-id-equip="${game['DPlayer']['Equip'][UEqui]['id_equip']}" 
                                    data-id-hero="${game['DPlayer']['Equip'][UEqui]['id_hero']}"></button>`;
        List += `'<li class="tr">
                            <div class="td_1" style="width: 20%">
                                <div class="wrapper">
                                    <div class="image" style="background-image: url(${ Equipment['getData'](ReqList['equip'], ReqList['part'], ReqList['lvl'])['image']})"></div>
                                </div>
                            </div>
                            <div class="td_1" style="width: 40%">${ Equipment['getData'](ReqList['equip'], ReqList['part'], ReqList['lvl'])['name']}</div>
                            <div class="td_3" style="width: 20%">${Btn}</div>
                            <div class="td_4" style="width: 20%">
                                <button style="margin:0px; height: 100%; width: 100%; vertical-align: top;"
                                class="${Cont['ListOfNeed'][ReqIndex]['SelectedList']['indexOf'](game['DPlayer']['Equip'][UEqui]['id_equip']) >= 0x0 ? 'uiCheckedBox' : 'uiUnCheckBox'}  full ConSelectReqItem"
                                 data-id-cont="${idCont}" data-cont-req-index="${ReqIndex}" data-id-equip="${game['DPlayer']['Equip'][UEqui]['id_equip']}"></button>
                            </div>
                        </li>`;
        Count++;
        console['log'](Cont['ListOfNeed'][ReqIndex]['SelectedList']['indexOf'](game['DPlayer']['Equip'][UEqui]['id_equip']));
    }
    for (var In = 0x9 - Count; In > 0x0; In--)
        List += '<li class="tr"></li>';
    $('#ContSelList')['html'](List);
};


game.Contribute.ReqSelectList = function(idCont, ReqIndex) {
    var Cont = game['Contribute']['List'][idCont];
    var ListOfNeed = Cont['ListOfNeed'][ReqIndex];
    if (!ListOfNeed)
        return alert_box['failMessage']('لا يمكن اختيار المتاح');
    if (ListOfNeed['type'] != 'equip')
        return alert_box['failMessage']('المعدات فقط هى ما يمكن اختيارها');
    var List = `   <div id="over_lay" class="select_over_lay">
                            <div id="select_from">
                                <div class="head_bar">
                                    <img src="images/style/head_bar.png" class="banner">
                                    <div class="title">قائمة المتاح</div>
                                    <img class="close close_select_menu" src="images/btns/close_b.png">
                                </div>
                                <p style="clear: both"></p>
                                <div id="hero-select-list">
                                    <ol id="ContSelList" style="overflow-y: hidden; outline: currentcolor none medium;" tabindex="4"></ol>
                                    <div>
                                        <div class="configBtn" id="ContSelectedReqConf">
                                            <button class="full-btn-3x" data-id-cont="${ idCont }">تأكيد</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>`;
    $('body')['append'](List);
    game.Contribute.ReqSelectListContent(idCont, ReqIndex);
    $('#ContSelList')['niceScroll'](SCROLL_BAR_PROP);
};



game.Contribute.GetSelectList = function(ContFor, Offset, EquipType = 'all') {
    var StartFrom = 0x0;

    var FoundCount = 0x0;
    var ContUnit = '';
    for (var List in game['Contribute']['List']) {

        var Reword = game['Contribute']['List'][List]['Reword'][0];
        if (game['Contribute']['List'][List]['cat'] != ContFor)
            continue;
        if (Reword['type'] == 'equip' && EquipType != 'all' && Reword['part'] != EquipType)
            continue;
        if (StartFrom < Offset) {
            StartFrom++;
            continue;
        }
        var Name = ' ';
        var Image = 'images/tech/no_army.png';
        if (Reword['type'] == 'equip') {
            Image = Equipment['getData'](Reword['equip'], Reword['part'], Reword['lvl'])['image'];
            Name = Equipment['getData'](Reword['equip'], Reword['part'], Reword['lvl'])['name'];
        } else if (Reword['type'] == 'item') {
            Image = Matrial['getMatrial'](Reword['item'])['image'];
            Name = Matrial['getMatrial'](Reword['item'])['name'];
        }

        ContUnit += `  <div class="unit-contribute" data-id-cont="${List}">
                            <div class="unite-eq">
                                <button style="background-image: url(${Image})" class="avail_equip unitCont"></button>
                            </div>  
                            <div class="title">${Name}</div>
                        </div>`;
        FoundCount++;
        if (FoundCount == 16)
            break;
    }

    for (var iii = FoundCount - 16; iii > 0x0; iii--)
        ContUnit += `  <div class="unit-contribute">
                            <div class="unite-eq">
                                <button style="background-image: url(${ Image })" class="avail_equip unitCont"></button>
                            </div>  
                            <div class="title">${ Name }</div>
                        </div>`;

    $('#SelectContributeList')['html'](ContUnit);

    var offsetMax = 0x0;
    for (var Listi in game['Contribute']['List'])
        if (game['Contribute']['List'][Listi]['cat'] == ContFor) {
            var RewordI = game['Contribute']['List'][Listi]['Reword'][0];
            if (RewordI['type'] == 'equip' && EquipType != 'all' && RewordI['part'] != EquipType)
                continue;
            offsetMax++;
        }

    var Footer = `<div class="wrapper">
                        <div class="left">
                            <button class="GO_L_1 goContListL" data-offset="${ Offset }" data-cont-for="${ContFor}" data-offset-max="${ offsetMax }" data-filter="${ EquipType }"></button>
                        </div>
                        <div class="lable">${ (Math['ceil'](Offset / 16) + 1) }/${ Math['ceil'](offsetMax / 16) }</div>
                        <div class="right">
                            <button class="GO_R_1 goContListR"  data-offset="${ Offset }" data-cont-for="${ContFor}" data-offset-max="${ offsetMax }" data-filter="${ EquipType }"></button>
                        </div>
                    </div>`;
    $('#navigate-btn')['html'](Footer);
};



$(document)['on']('click', '#select_from #navigate-btn .goContListL', function() {
    var Offset = Number($(this)['attr']('data-offset'));
    var ContFor = $(this)['attr']('data-cont-for');
    var Filter = $(this)['attr']('data-filter');
    if (Offset - Offset % 16 - 16 < 0)
        return;
    game.Contribute.GetSelectList(ContFor, Math.max(0x0, Offset - Offset % 16 - 16), Filter);
});


$(document)['on']('click', '#select_from #navigate-btn .goContListR', function() {
    var Offset = Number($(this)['attr']('data-offset'));
    var ContFor = $(this)['attr']('data-cont-for');
    var Filter = $(this)['attr']('data-filter');
    if (Offset - Offset % 16 + 16 >= $(this).attr('data-offset-max'))
        return;
    game.Contribute.GetSelectList(ContFor, Math['max'](0, Offset - Offset % 16 + 16), Filter);
});


game.Contribute.SelectContBox = function(ContFor) {

    var Box = `<div id="over_lay" class="select_over_lay">
                        <div id="select_from" style="width: 520px;margin-left: -260px;">
                            <div class="head_bar">
                                <img src="images/style/head_bar.png" class="banner">
                                <div class="title">قائمة المساهمة</div>
                                <img class="close close_select_menu" src="images/btns/close_b.png">
                            </div>
                            <p style="clear: both"></p>
                            <div style="width: 84%;margin: auto; margin-top: 35px;">
                                <div class="right-content blue-ribbon"> 
                                    <div id="eq-part-select" class="eq-select-bar">
                                        <ul${ ContFor == game.Contribute.For.Contribute ? ' style="display: none;"' : '' } id="FilterContList" data-cont-for="${ ContFor }">
                                            <li class="selected">
                                                <button data-equi-part="all"      class="eq-unit-select-forCont" style="background-image: url(images/icons/hero/eq-list-all.png)"></button>
                                            </li>
                                            <li>
                                                <button data-equi-part="sword"    class="eq-unit-select-forCont" style="background-image: url(images/icons/hero/eq-list-sword.png)"></button>
                                            </li>
                                            <li>
                                                <button data-equi-part="shield"   class="eq-unit-select-forCont" style="background-image: url(images/icons/hero/eq-list-shield.png)"></button>
                                            </li>
                                            <li>
                                                <button data-equi-part="helmet"   class="eq-unit-select-forCont" style="background-image: url(images/icons/hero/eq-list-helmet.png)"></button>
                                            </li>
                                            <li>
                                                <button data-equi-part="armor"    class="eq-unit-select-forCont" style="background-image: url(images/icons/hero/eq-list-armor.png)"></button>
                                            </li>
                                            <li>
                                                <button data-equi-part="belt"     class="eq-unit-select-forCont" style="background-image: url(images/icons/hero/eq-list-belt.png)"></button>
                                            </li>
                                            <li>
                                                <button data-equi-part="ring"     class="eq-unit-select-forCont" style="background-image: url(images/icons/hero/eq-list-ring.png)"></button>
                                            </li>
                                            <li>
                                                <button data-equi-part="necklace" class="eq-unit-select-forCont" style="background-image: url(images/icons/hero/eq-list-necklase.png)"></button>
                                            </li>
                                            <li>
                                                <button data-equi-part="boot"     class="eq-unit-select-forCont" style="background-image: url(images/icons/hero/eq-list-boot.png)"></button>
                                            </li>
                                            <li>
                                                <button data-equi-part="pendant"  class="eq-unit-select-forCont" style="background-image: url(images/icons/hero/eq-list-meskah.png)"></button>
                                            </li>
                                            <li>
                                                <button data-equi-part="steed"    class="eq-unit-select-forCont" style="background-image: url(images/icons/hero/eq-list-horse.png)"></button>
                                            </li>
                                        </ul>
                                    </div>
                                    <div id="SelectContributeList" class="all-eq-table"></div>
                                    <div id="navigate-btn" class="ContNavBtn" style="margin-bottom: 10px;margin-top: 10px;">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>`;
    $('body')['append'](Box);
    game.Contribute.GetSelectList(ContFor, 0);

};

$(document)['on']('click', '#helpGateBtnWrapper', function() {
    dialogBoxShow(game.Contribute.DialogBox(game.Contribute.For.EquipUpgrade));
});


$(document)['on']('click', '.ContributeForUp', function() {
    $('#dialg_box').replaceWith(game['Contribute']['DialogBox'](game['Contribute']['For']['EquipUpgrade']));
});

$(document)['on']('click', '.ContributeForC', function() {
    $('#dialg_box').replaceWith(game['Contribute']['DialogBox'](game['Contribute']['For']['Contribute']));
});

$(document)['on']('click', '.SelectContReq', function() {
    var idCont = $(this)['attr']('data-id-cont');
    var ReqIndex = $(this)['attr']('data-cont-req-index');
    game['Contribute']['ReqSelectList'](idCont, ReqIndex);
});

$(document)['on']('click', '.downEquipFromHero', function() {
    var idEquip = $(this)['attr']('data-id-equip');
    var idHero = $(this)['attr']('data-id-hero');
    var Hero = game.Hero.getHero(idHero);
    var idCont = $(this)['attr']('data-id-cont');
    var ReqIndex = $(this)['attr']('data-cont-req-index');
    if (!Hero) {
        game['Contribute']['ReqSelectListContent'](idCont, ReqIndex);
        return alert_box['failMessage']('هذة المعدة ليست بالبطل');
    }


    var Equip = game['Equip']['getEquipUnit'](idEquip);
    var EquipData = Equipment['getData'](Equip['type'], Equip['part'], Equip['lvl']);

    alert_box['confirmDialog'](`'تاكيد سحب ${ EquipData['name'] } من البطل ${ Hero['Hero']['name'] } (${ Hero['Hero']['lvl'] })'`,
        function() {
            game.Hero.getEquipOffHero(idEquip)['done'](function(data) {
                game['Contribute']['ReqSelectListContent'](idCont, ReqIndex);
                var JsonData = JSON['parse'](data);
                if (JsonData['state'] == 'ok')
                    alert_box['succesMessage']('تم سحب المعدة بنجاح');
            });
        });
});



$(document)['on']('click', '.ConSelectReqItem', function() {
    var idEquip = Number($(this)['attr']('data-id-equip'));
    var idCont = $(this)['attr']('data-id-cont');
    var ReqIndex = $(this)['attr']('data-cont-req-index');
    var Cont = game['Contribute']['List'][idCont];
    var Count = $('#ContSelList .uiCheckedBox')['length'];
    var Equip = game['Equip']['getEquipUnit'](idEquip);

    if (Equip['id_hero'] > 0) {
        alert_box['failMessage']('عليك سحب المعدة من البطل اولا');
        $(this)['removeClass']('uiCheckedBox');
        $(this)['addClass']('uiUnCheckBox');
        game['Contribute']['ReqSelectListContent'](idCont, ReqIndex);
        return;
    }
    if (Count > Cont['ListOfNeed'][ReqIndex]['amount']) {
        $(this)['removeClass']('uiCheckedBox');
        $(this)['addClass']('uiUnCheckBox');
        game['Contribute']['ReqSelectListContent'](idCont, ReqIndex);
        alert_box['succesMessage']('تم تحديد العدد المطلوب');
        return;
    }
    if (Cont['ListOfNeed'][ReqIndex]['SelectedList']['indexOf'](idEquip) >= 0) {
        $(this)['removeClass']('uiCheckedBox');
        $(this)['addClass']('uiUnCheckBox');
        game['Contribute']['ReqSelectListContent'](idCont, ReqIndex);
        return;
    }
    Cont['ListOfNeed'][ReqIndex]['SelectedList'].push(idEquip);
    game['Contribute']['ReqSelectListContent'](idCont, ReqIndex);
});


$(document)['on']('click', '#ContSelectedReqConf button', function() {
    var idCont = $(this)['attr']('data-id-cont');
    $('#over_lay')['remove']();
    $('#ReqListBox')['html'](game['Contribute']['RequireList'](idCont));
});

$(document)['on']('click', '.UpOther', function() {
    game['Contribute']['SelectContBox'](game['Contribute']['For']['EquipUpgrade']);
});

$(document)['on']('click', '.ConOther', function() {
    game['Contribute']['SelectContBox'](game['Contribute']['For']['Contribute']);
});

$(document)['on']('click', '#FilterContList li', function() {
    $('#FilterContList li')['removeClass']('selected');
    $(this)['addClass']('selected');
    var EquiPart = $(this)['children']()['attr']('data-equi-part');
    var ContFor = $('#FilterContList')['attr']('data-cont-for');
    game['Contribute']['GetSelectList'](ContFor, 0, EquiPart);
});


$(document)['on']('click', '.unit-contribute', function() {
    var idCont = $(this)['attr']('data-id-cont');
    $('.close_select_menu')['click']();
    $('.contributeBox')['html'](game['Contribute']['ContributeBox'](idCont));
});



$(document)['on']('click', '#ContributeUpStart', function() {

    var idCont = $(this)['attr']('data-id-cont');
    var Cont = game['Contribute']['List'][idCont];
    if (!Cont['ListOfNeed'][0]['SelectedList'][0])
        return alert_box['failMessage']('عليك اختيار المعدة اولا');

    $.ajax({
        'url': `${API_URL }/api/AContribute/upgradeEquip`,
        'data': {
            'idCont': idCont,
            'idEquip': Cont['ListOfNeed'][0]['SelectedList'][0],
            'idCity': game['CurrentCity']['idCity'],
            server: game['Config']['idServer'],
            token: game['Config']['OuthToken']
        },
        'type': 'POST',
        beforeSend: function(_0x138564) {},
        success: function(data, _0x555139, _0x357269) {

            if (!game['LBase']['isJson'](data))
                return game['LBase']['Error'](data);
            var JsonData = JSON['parse'](data);

            if (JsonData['state'] === 'ok') {

                game['Equip']['getEquipUnit'](JsonData['Equip']['id_equip'])['id_hero'] = JsonData['Equip']['id_hero'];
                game['Equip']['getEquipUnit'](JsonData['Equip']['id_equip'])['on_hero'] = JsonData['Equip']['on_hero'];
                game['Equip']['getEquipUnit'](JsonData['Equip']['id_equip'])['lvl'] = JsonData['Equip']['lvl'];
                game['Equip']['distributeEquip']();
                alert_box['succesMessage']('تم تطوير المعدة بنجاح');
                $('.contributeBox')['html'](game['Contribute']['ContributeBox'](idCont));

            } else if (JsonData['state'] === 'error_0') {

                alert_box['failMessage']('المساهمة غير موجودة');

            } else if (JsonData['state'] === 'error_1') {

                alert_box['failMessage']('لا تمتلك هذة المعدة');

            } else if (JsonData['state'] === 'error_2') {

                alert_box['failMessage']('لا يمكن تطوير معده يستخدمها بطل');

            } else if (JsonData['state'] === 'error_5') {

                alert_box['failMessage']('المتطلبات غير موجودة');
            }
        }
    });
});


$(document)['on']('click', '#ContributeStart', function() {
    var idCont = $(this)['attr']('data-id-cont');
    var Cont = game['Contribute']['List'][idCont];

    $.ajax({
        'url': `${API_URL}/api/AContribute/contribute`,
        'data': {
            'idCont': idCont,
            'idCity': game['CurrentCity']['idCity'],
            server: game['Config']['idServer'],
            token: game['Config']['OuthToken']
        },
        'type': 'POST',
        beforeSend: function(_0x489a69) {},
        success: function(data, _0xbb6f87, _0x319448) {

            if (!game['LBase']['isJson'](data))
                return game['LBase']['Error'](data);
            var JsonData = JSON['parse'](data);

            if (JsonData['state'] === 'ok') {
                alert_box['succesMessage']('تم المساهمة بنجاح');
                Player_profile['refreshMatrialBox']()['done'](function() {
                    $('.contributeBox')['html'](game['Contribute']['ContributeBox'](idCont));
                });
            } else if (JsonData['state'] === 'error_0') {

                alert_box['failMessage']('المساهمة غير موجودة');

            } else if (JsonData['state'] === 'error_5') {

                alert_box['failMessage']('المتطلبات غير موجودة');
            }
        }
    });
});


game.ArenaChallange = {
    'DialogBox': function() {},
    'Arena': {}
};

game.ArenaChallange.Coords = {
    'xCoord': 233,
    'yCoord': 246
};

game.ArenaChallange.MaxHeroCountFactor = {
    "Arena": 1,
    "ArenaTeam": 3,
    "ArenaGuild": 5
};



game.ArenaChallange.getArenaData = function(callBack) {
    return $.ajax({
        url: `${NODE_URL}/api/AArenaChallange/getArenaData`,
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken
        },
        beforeSend: function(_0x202459) {},
        success: function(data, _0x4ce0b4, _0x58fd94) {
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            const JsonObject = JSON.parse(data);
            game.ArenaChallange.Arena = JsonObject.King;
            game.ArenaChallange.ArenaTeam = JsonObject.Team;
            game.ArenaChallange.ArenaGuild = JsonObject.Guild;

            game.ArenaChallange.getFightList().done(function() {
                if (callBack)
                    callBack();
            });
        }
    });
};



game.ArenaChallange.getFightList = function() {
    return $.ajax({
        url: `${NODE_URL}/api/AArenaChallange/getFightList`,
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken
        },
        beforeSend: function(_0x4b6272) {},
        success: function(data, _0x2cd76c, _0x561f87) {
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);
            const JsonObject = JSON.parse(data);
            game.ArenaChallange.Arena.FightList = JsonObject.King.reverse();
            game.ArenaChallange.ArenaTeam.FightList = JsonObject.Team.reverse();
            game.ArenaChallange.ArenaGuild.FightList = JsonObject.Guild.reverse();
        }
    });
};



game.ArenaChallange.DialogBox = function() {
    return `  <div id="dialg_box" class="fullBoxContent" style="top: 125px;">
                        <div class="head_bar">
                            <img src="images/style/head_bar.png">
                            <div class="title">الميدان</div>
                        </div>
                        <div class="nav_bar">
                            <div class="left-nav">
                                <ul> 
                                    <li class="selected" id="SArenaTroops">
                                        القوات
                                    </li> 
                                    <li class="" id="SArenaField">
                                        الميدان
                                    </li>
                                    <li class="" id="SArenaRanking">
                                        التصنيف
                                    </li>
                                </ul>
                            </div>
                            <div id="NavSelectList" class="flex SelectArenaFor"></div>
                            <div class="right-nav">
                                <div class="nav_icon">
                                    <img class="close_dialog" src="images/btns/close_b.png">
                                </div>
                            </div>
                        </div>
                        <div class="box_content arenaChallange">
                            <div id="ArenaChallangeHome" class="fullBoxContent flex"></div>
                        </div>
                    </div>`;
};




game.ArenaChallange.ArenaProfile = function() {

    var ArenaFor = $("#NavSelectList .select-list").attr("data-value");
    if (!ArenaFor)
        ArenaFor = "Arena";

    var Avatar = `<img ondragstart="return false;" src="${ game.BaseData.HeroAvatar[game.DPlayer.Player['avatar']] }">`;
    if (ArenaFor != "Arena") {
        Avatar = `  <div id="ArenaChallangeSlog">
                        <div class="slog" style="background-image: url(images/style/bottom-${game.ArenaChallange[ArenaFor].Arena.slog_btm}.png);"></div>
                        <div class="slog" style="background-image: url(images/style/central-${game.ArenaChallange[ArenaFor].Arena.slog_cnt}.png); margin-top: -78px;"></div>
                        <div class="slog" style="background-image: url(images/style/top-${game.ArenaChallange[ArenaFor].Arena.slog_top}.png); margin-top: -82px;"></div>
                    </div>`;
    }

    var Box = `<div id="ArenaChallangeHome" class="fullBoxContent flex">
                        <div id="heroArenaSelectList">
                            <div class="prize-row">
                                <div style="font-size: 16px;line-height: 40px;direction: rtl;margin-right: 15px;">قائمة الابطال:</div>
                                <div id="selectHeroCity"></div>
                            </div>
                            <div class="RankList heroCityList hero-select-list"><ol class="ol"></ol></div>
                        </div>
                        <div class="heroControlBtns flex">
                            <div class="border"></div>
                            <div class="content">
                                <div class="heroAdding btnBlock">
                                    <button class="full-btn-2x" id="cpGoRight" disabled="disabled">
                                        <label class="cb goRight"></label>
                                    </button>
                                    <button class="full-btn-2x" id="cpGoLeft" disabled="disabled">
                                        <label class="cb goLeft"></label>
                                    </button>
                                </div>
                                <div class="heroOrder btnBlock">
                                    <button class="full-btn-2x" id="cpGoUp" disabled="disabled">
                                        <label class="cb goUp"></label>
                                    </button>
                                    <button class="full-btn-2x" id="cpGoDown" disabled="disabled">
                                        <label class="cb goDown"></label>
                                    </button>
                                </div>
                                <div class="heroConfirm btnBlock">
                                    <button id="refreshArenaHero" class="full-btn-2x">
                                        <label class="cb" style="background-image: url(images/icons/war-icon/enter-city.png)"></label>
                                    </button>
                                    <button id="saveArenaHero" class="full-btn-2x" disabled="disabled">
                                        <label class="cb" style="background-image: url(images/btns/done.png)"></label>
                                    </button>
                                </div>
                            </div>
                            <div class="border"></div>
                        </div>
                        <div id="arenaHeroList" class="arenaHeroList">
                            <div class="prize-row">
                                <div class="banner-red">قائمة الميدان</div>
                            </div>
                            <div class="hero-select-list" class="RankList"><ol></ol></div>
                        </div>
                        <div class="arenaChallangeReview flex">
                            <div class="border"></div>
                            <div class="content">
                                <div class="title">
                                    <h1 class="banner-red">الميدان</h1>
                                </div>
                                <div class="playerProfile flex">
                                    <div class="playerProfileImage">
                                        <div class="avatar">
                                            <div class="avatar-img">
                                               ${Avatar}
                                            </div>
                                        </div>
                                        <div class="avatar-name">
                                            <h2>${ game.ArenaChallange[ArenaFor].Arena.ArenaName || "-----"}</h2>
                                        </div>
                                    </div>
                                    <div class="arenaChallangeProfile">
                                        <ul>
                                            <li>مستوى الميدان: ${ game.ArenaChallange[ArenaFor].Arena['lvl'] || 0}</li>
                                            <li>
                                                <button id="useArenaExpBox" class="pluse"></button>
                                               خبرة: ${ game.ArenaChallange[ArenaFor].Arena.exp || 0}
                                            </li>
                                            <li>فوز: ${ game.ArenaChallange[ArenaFor].Arena.win || 0}</li>
                                            <li>خسارة: ${ game.ArenaChallange[ArenaFor].Arena.lose || 0}</li>
                                            <li>يطل: ${ game.ArenaChallange[ArenaFor].Arena.champion || 0}</li>
                                            <li>تصنيف(الجولة): ${ game.ArenaChallange[ArenaFor].Arena.rank || 0}</li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="th">
                                    جوائز &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; الملك
                                </div>
                                <div class="arenaKingPrize">
                                    <div class="bg prizeList"><ul>${ game.ArenaChallange.PrizeList(WorldUnit.prize.PrizFor.Sp) }</ul></div>
                                </div>
                            </div>
                        </div>
                    </div>`;
    $('#ArenaChallangeHome').replaceWith(Box);
    game.ArenaChallange.HeroList(game.CurrentCity.City.id_city);
    game.ArenaChallange.ArenaHeroList();
    var CityList = [];
    for (var idCity in game.DPlayer.City)
        CityList.push({
            'title': game.DPlayer.City[idCity].City['name'],
            'value': game.DPlayer.City[idCity].City['id_city']
        });
    $('#selectHeroCity').html(game.Ui.Select.make(CityList));
    game.Ui.Select.height = 150;
    $('#heroArenaSelectList .heroCityList ol').niceScroll(SCROLL_BAR_PROP);
    $(".prizeList").niceScroll(SCROLL_BAR_PROP);
};


game.ArenaChallange.HeroList = function(idCity) {
    if (!idCity)
        idCity = Object['keys'](game.DPlayer.City)[0];

    var HeroListHt = '';
    var Count = 0;

    for (var Index in game['DPlayer']['Heros']) {
        var HStateImg = 'images/icons/h_s_incity.png';
        if (game['DPlayer']['Heros'][Index]['Hero']['id_city'] != idCity)
            continue;
        if (Number(game['DPlayer']['Heros'][Index]['Hero']['in_city']) == game['Hero']['HeroState']['HERO_IN_BATTEL'])
            HStateImg = 'images/icons/h_s_attack_2.png';
        else if (game['DPlayer']['Heros'][Index]['Hero']['in_city'] == game['Hero']['HeroState']['HERO_IN_GARISON']) {
            HStateImg = 'images/icons/h_s_support.png';
        }
        if (game['Hero']['isConsole'](game['DPlayer']['Heros'][Index]['Hero']['id_hero']))
            HStateImg = 'images/icons/h_s_console.png';

        HeroListHt += `
                    <li class="tr" data-id-hero="${ game['DPlayer']['Heros'][Index]['Hero']['id_hero'] }">
                        <div class="td" style="width: 25%">
                            <div class="wrapper">
                                <div class="image" style="background-image: url(${ game.BaseData.HeroAvatar[game['DPlayer']['Heros'][Index]['Hero']['avatar']] })">

                                </div>
                            </div>
                        </div>
                        <div class="td" style="width: 35%">
                            <div class="name${ (game['DPlayer']['Heros'][Index]['Hero']['ultra_p'] > 0x0 ? ' POT-HERO' : '') }" style="width: 100%">${ game['DPlayer']['Heros'][Index]['Hero']['name'] }</div>
                        </div>
                        <div class="td flex" style="width: 16%">
                            <button class="full-btn-3x showCityHero flex" data-id-hero="${ game['DPlayer']['Heros'][Index]['Hero']['id_hero'] }"><img src="images/icons/showIcon.png"/></button>
                        </div>
                        <div class="td" style="width: 20%">
                            <div class="lvl">${ game['DPlayer']['Heros'][Index]['Hero']['lvl'] }</div>
                        </div>
                        <div class="td" style="width: 15%">
                            <div class="heroState" style="background-image: url(${ HStateImg })"></div>
                        </div>
                    </li>`;
        Count++;
    }

    if (Count < 11) {
        for (var iii = 0x0; iii < 11 - Count; iii++)
            HeroListHt += '<li class="tr"></li>';
    }
    $('#heroArenaSelectList .heroCityList ol').html('' + HeroListHt);
};


game.ArenaChallange.ArenaHeroList = function() {

    var ArenaFor = $("#NavSelectList .select-list").attr("data-value");
    if (!ArenaFor)
        ArenaFor = "Arena";

    var HeroListHtm = '';
    var Count = 0;
    for (var HIndex in game.ArenaChallange[ArenaFor].HeroList) {
        const Hero = game.ArenaChallange[ArenaFor].HeroList[HIndex];
        HeroListHtm += `<li class="tr" data-id-hero="${Hero.id_hero }" data-index="${ HIndex }">
                        <div class="td" style="width: 25%">
                            <div class="wrapper">
                                <div class="image" style="background-image: url(${ game.BaseData.HeroAvatar[Hero['avatar']] })">

                                </div>
                            </div>
                        </div>
                        <div class="td" style="width: 40%">
                            <div class="name${ (Hero['ultra_p'] > 0 ? ' POT-HERO' : '') }" style="width: 100%">${ Hero.HeroName } (${Hero.PlayerName})</div>
                        </div>
                        <div class="td flex" style="width: 16%">
                            <button class="full-btn-3x showCityHero flex" data-id-hero="${ Hero['id_hero'] }"><img src="images/icons/showIcon.png"/></button>
                        </div>
                        <div class="td" style="width: 20%">
                            <div class="lvl">${ Hero.lvl }</div>
                        </div>
                    </li>`;
        Count++;
    }
    if (Count < 11) {
        for (var iii = 0x0; iii < 11 - Count; iii++)
            HeroListHtm += '<li class="tr"></li>';
    }
    $('#ArenaChallangeHome .arenaHeroList .hero-select-list ol').html('' + HeroListHtm);
};

game.ArenaChallange.PrizeList = function(PrizeFor) {

    var Prize = WorldUnit['prize'].getUnitAllLvlsPrize(WUT_CHALLAGE_FIELD_PLAYER, PrizeFor);
    var ArenaFor = $("#NavSelectList .select-list").attr("data-value");
    if (ArenaFor == 'ArenaTeam')
        Prize = WorldUnit['prize'].getUnitAllLvlsPrize(WUT_CHALLAGE_FIELD_TEAM, PrizeFor);
    if (ArenaFor == 'ArenaGuild')
        Prize = WorldUnit['prize'].getUnitAllLvlsPrize(WUT_CHALLAGE_FIELD_GUILD, PrizeFor);


    var PrizeListHt = '';
    for (var ii in Prize)
        PrizeListHt += `<li>
                        <div class="golden-border">
                            <div class="unit-image" style="background-image: url(${Matrial['image'](Prize[ii]['prize'])})">
                                <div class="amount stroke">(${Prize[ii]['amount_min'] == Prize[ii]['amount_max'] ? Prize[ii]['amount_max'] : `${Prize[ii]['amount_min']}-${Prize[ii]['amount_max']}`})X</div>
                            </div>
                        </div>
                    </li>`;
    return PrizeListHt;
};

game.ArenaChallange.getRankList = function() {
    var RankListHt = '';
    var ArenaFor = $("#NavSelectList .select-list").attr("data-value");
    if (!ArenaFor)
        ArenaFor = "Arena";
    for (var iii = 0; iii < 10; iii++) {
        var Player = game.ArenaChallange[ArenaFor].FightList[iii];
        if (Player)
            RankListHt += `<div class="tr" rank="1">
                                <div class="td ellipsis" style="width: 11%">${ Player.rank }</div>
                                <div class="td ellipsis" style="width: 20%">${ Player.PlayerName || Player.TeamName || Player.GuildName}</div>
                                <div class="td flex ellipsis" style="width: 25%">
                                    <div class="guildIcon">
                                        ${ (Player.idGuild || Player.idTeam ? `<div class="image-slog" style="background-image: url(images/style/bottom-${ Player['slog_btm'] }.png)"></div>
                                            <div class="image-slog" style="background-image: url(images/style/central-${ Player['slog_cnt'] }.png); margin-top: -100%" ></div>
                                            <div class="image-slog" style="background-image: url(images/style/top-${ Player['slog_top'] }.png);  margin-top: -100%"></div>` : '') }
                                        
                                    </div>
                                    <h1 class="guildName">
                                        ${ArenaFor == "Arena" ? (Player['idGuild'] ? Player['GuildName'] : '---') : ""}
                                        ${ArenaFor == "ArenaTeam" ? Player.LeaderName : ""}
                                        ${ArenaFor == "ArenaGuild" ? Player.LeaderName : ""}
                                    </h1>
                                </div>
                                <div class="td ellipsis" style="width: 20%">${ Player['porm'] ? game['BaseData']['Promotion'][Player['porm']]['Title'] : Player.mem_num}</div>
                                <div class="td ellipsis" style="width: 11%">${ Player['arenaLvl'] }</div>
                                <div class="td ellipsis" style="width: 13%">
                                    ${ArenaFor == "Arena" ? `<button class="full-btn-3x ellipsis startFightPlayer" data-id-player="${ Player['idPlayer'] }" >اختر</button>` : ""}
                                    ${ArenaFor == "ArenaTeam" ? `<button class="full-btn-3x ellipsis startFightTeam" data-id-team="${ Player['idTeam'] }" >اختر</button>` : ""}
                                    ${ArenaFor == "ArenaGuild" ? `<button class="full-btn-3x ellipsis startFightGuild" data-id-guild="${ Player['idGuild'] }" >اختر</button>` : ""}
                                </div>
                            </div>`;
        else
            RankListHt += `<div class="tr" rank="1"></div>`;
    }
    $('#arenaChallangeFightList').html(`<div class="th">
                                            <div class="td_1 ellipsis" style="width: 11%">تصنيف</div>
                                            <div class="td_2 ellipsis" style="width: 20%">${ArenaFor == "Arena" ? "الملك" : (ArenaFor == "ArenaTeam" ? "الفريق" : "الحلف")}</div>
                                            <div class="td_3 ellipsis" style="width: 25%">${ArenaFor == "Arena" || ArenaFor == "ArenaGuild" ? "الحلف" : "الفريق"}</div>
                                            <div class="td_4 ellipsis" style="width: 20%">${ArenaFor == "ArenaTeam" || ArenaFor == "ArenaGuild" ? "عدد الأعضاء" : "الرتب"}</div>
                                            <div class="td_4 ellipsis" style="width: 11%">مستوى</div>
                                            <div class="td_7 ellipsis" style="width: 13%">اختر</div>
                                        </div> 
                                    ${RankListHt}`);
};



game.ArenaChallange.ArenaField = function() {

    var ArenaFor = $("#NavSelectList .select-list").attr("data-value");
    if (!ArenaFor)
        ArenaFor = "Arena";

    var FileldList = `  <div id="ArenaChallangeHome" class="fullBoxContent flex">
                            <div class="col-i">
                                <div id="arenaChallangeFightList" class="RankList"></div>
                            </div>
                            <div class="col-ii">
                                <div class="row-i solidBg flex">
                                    <div class="arenaChallangePrief">
                                        <div>
                                            <div class="li">
                                                <label class="lable">وقت الانتهاء: </label>
                                                <label class="time_counter value green"
                                                    time-start="${ Math.floor(Date.now() / 0x3e8) }" 
                                                    time-end="${ (Math.floor(new Date(TimeRest.restEvery12()).getTime() / 0x3e8) - 0x3c) }">
                                                    ${ changeTimeFormat(Math.floor(new Date(TimeRest.restEvery12()).getTime() / 0x3e8) - 0x3c - Math.floor(Date.now() / 0x3e8)) }
                                                </label>
                                            </div>
                                            <div class="li flex">
                                                <div class="lable">وقت الانتظار: </div>
                                                ${ Date.now() / 1000 - game.ArenaChallange[ArenaFor].Arena['lastAttackTime'] < 0xa * 0x3c ?
            `<div class="time_counter value red" time-start="${ Math.floor(Date.now() / 0x3e8) }" 
                                                    time-end="${ (Math.floor(Date.now() / 1000) + (game.ArenaChallange[ArenaFor].Arena['lastAttackTime'] + 60 * 10 - Date.now() / 1000)) }">
                                                    ${ changeTimeFormat(Math.floor(Date.now() / 1000) + (game.ArenaChallange[ArenaFor].Arena['lastAttackTime'] + 60 * 10 - Date.now() / 1000) - Math.floor(Date.now() / 0x3e8)) }
                                                </div>
                                                <div>
                                                    <button id="SpeedUpArenaAtt" class="smallAcce" style="width: 20px; height: 20px; vertical-align: top; margin-right: 10px;"></button></div>` : '' }

                                            </div>
                                            <div class="li">
                                                <label class="lable"> عدد الجولات: </label>
                                                <label class="value"> ${ game.ArenaChallange[ArenaFor].Arena['attempt'] }/10</label>
                                                <label><button id="useAttemptBox" class="pluse"></button></label>
                                            </div>
                                            <div class="li flex">
                                                <label class="lable"> شراء جولات: </label>
                                                <div id="buyArenaChallangeAtt" class="value flex"> 
                                                    <button class="full-btn-3x buyBtn" data-amount="10">+ 10</button>
                                                    <button class="full-btn-3x buyBtn" data-amount="25">+ 25</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row-ii flex">
                                    <div class="prizeListWrapper">
                                        <h1 class="header-2 banner-red">جوائز الفوز</h1>
                                        <ul> ${ game.ArenaChallange.PrizeList(WorldUnit['prize']['PrizFor']['Win']) }</ul>
                                    </div>
                                    <div class="prizeListWrapper">
                                        <h1 class="header-2 banner-red">جوائز الخسارة</h1>
                                        <ul> ${ game.ArenaChallange.PrizeList(WorldUnit['prize']['PrizFor']['Lose']) }</ul>
                                    </div>
                                </div>
                            </div>
                        </div>`;
    $('#ArenaChallangeHome').replaceWith(FileldList);
    game.ArenaChallange['getRankList']();
};


game.ArenaChallange.ArenaRankingList = function(offset, OrderBy = 0) {
    return $.ajax({
        url: API_URL + '/api/AArenaChallange/getRankList',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            offset: offset,
            orderBy: OrderBy
        },
        beforeSend: function(_0x16cf12) {},
        success: function(data, _0x51715d, _0x54c172) {
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonData = JSON.parse(data);
            var RankList = '';

            for (var ii = 0; ii < 10; ii++) {
                if (JsonData[ii]) {
                    RankList += `<div class="tr" rank="1">
                                    <div class="td ellipsis" style="width: 10%">${ (offset + ii + 0x1) }</div>
                                    <div class="td ellipsis" style="width: 20%">${ JsonData[ii]['PlayerName'] }</div>
                                    <div class="td flex ellipsis" style="width: 20%">
                                        <div class="cont">
                                            <div class="guildIcon">
                                            ${ (JsonData[ii]['idGuild'] ? `<div class="image-slog" style="background-image: url(images/style/bottom-${ JsonData[ii]['slog_btm'] }.png)"></div>
                                                    <div class="image-slog" style="background-image: url(images/style/central-${ JsonData[ii]['slog_cnt'] }.png); margin-top: -100%" ></div>
                                                    <div class="image-slog" style="background-image: url(images/style/top-${ JsonData[ii]['slog_top'] }.png);  margin-top: -100%"></div>` : '') }

                                            </div>
                                            <h1 class="guildName">${ (JsonData[ii]['idGuild'] ? JsonData[ii]['GuildName'] : '---') }</h1>
                                        </div>
                                    </div>
                                    <div class="td ellipsis" style="width: 10%">${ game['BaseData']['Promotion'][JsonData[ii]['porm']]['Title'] }</div>
                                    <div class="td ellipsis" style="width: 10%">${ JsonData[ii]['lvl'] }</div>
                                    <div class="td ellipsis" style="width: 10%">${ JsonData[ii]['exp'] }</div>
                                    <div class="td ellipsis" style="width: 10%">${ JsonData[ii].lose }/${ JsonData[ii]['win'] }</div>
                                    <div class="td ellipsis" style="width: 10%">${ JsonData[ii].champion }</div>
                                </div>`;
                } else {
                    RankList += '<div class="tr" rank="1"></div>';

                }
            }
            $('#ArenaChallangeRankList').html(`<div class="th">
                                                    <div class="td ellipsis" style="width: 10%">تصنيف</div>
                                                    <div class="td ellipsis" style="width: 20%">الملك</div>
                                                    <div class="td ellipsis" style="width: 20%">الحلف</div>
                                                    <div class="td ellipsis" style="width: 10%">الرتبة</div>
                                                    <div class="td ellipsis" style="width: 10%">مستوى</div>
                                                    <div class="td ellipsis" style="width: 10%">خبرة</div>
                                                    <div class="td ellipsis" style="width: 10%">فوز/خسارة</div>
                                                    <div class="td ellipsis" style="width: 10%">بطل</div>
                                                </div>
                                            ${RankList} `);
            $('#ArenaChallangeRankCPage').attr('data-offset', offset);
            $('#ArenaChallangeRankCPage').html(Math.floor(offset / 10) + 1);
        }
    });
};



game.ArenaChallange.ArenaRanking = function() {
    var Box = `
                    <div id="ArenaChallangeHome" class="fullBoxContent">
                        <div id ="ArenaChallangeRankList" class="RankList">
                            <div class="th">
                                <div class="td ellipsis" style="width: 10%">تصنيف</div>
                                <div class="td ellipsis" style="width: 20%">الملك</div>
                                <div class="td ellipsis" style="width: 20%">الحلف</div>
                                <div class="td ellipsis" style="width: 10%">الرتبة</div>
                                <div class="td ellipsis" style="width: 10%">مستوى</div>
                                <div class="td ellipsis" style="width: 10%">خبرة</div>
                                <div class="td ellipsis" style="width: 10%">فوز/خسارة</div>
                                <div class="td ellipsis" style="width: 10%">بطل</div>
                            </div>
                            <div class="tr" rank="1"></div>
                            <div class="tr" rank="1"></div>
                            <div class="tr" rank="1"></div>
                            <div class="tr" rank="1"></div>
                            <div class="tr" rank="1"></div>
                            <div class="tr" rank="1"></div>
                            <div class="tr" rank="1"></div>
                            <div class="tr" rank="1"></div>
                            <div class="tr" rank="1"></div>
                            <div class="tr" rank="1"></div>
                        </div>
                        <div class="right-content-footer">  
                            <div class="buttons">  
                                <ul class="flex">  
                                    <li id="show-my-rank">  
                                        <button class="full-btn full-btn-2x full">اعرض تصنيفي</button>  
                                    </li> 
                                    <li>
                                        <div id="ArenaChallangeRankNav" class="nav_icon flex">
                                            <div class="most-left-btn"></div>
                                            <div class="left-btn"></div>
                                            <h1>  <span id="ArenaChallangeRankCPage" data-offset="0">1</span>/${ Math['ceil'](game['ServerData']['player_num'] / 10) }</h1>
                                            <div  class="right-btn"></div>
                                            <div  class="most-right-btn"></div>    
                                        </div>
                                    </li>

                                    <li id="nav_input" class="flex">  
                                        <input type="text" class="only_num input">
                                        <button class="full-btn full-btn-1x ellipsis">  
                                            اذهب الى    
                                        </button>
                                    </li>

                                    <li id="search_select" style=" float: left; width: 85px;">  
                                        <select>
                                            <option value="name" selected="">الاسم</option>
                                        </select>
                                    </li>
                                    <li id="nav_search" class="flex">  
                                        <input type="text" class="input">
                                        <button class="full-btn full-btn-1x ellipsis">  
                                            بحث
                                        </button>
                                    </li>
                                </ul>  
                            </div>  
                        </div>
                    </div>`;
    $('#ArenaChallangeHome').replaceWith(Box);
    game.ArenaChallange['ArenaRankingList'](0);
};

$(document).on('click', '#ArenaChallangeBtnWrapper button', function() {
    dialogBoxShow(game.ArenaChallange['DialogBox'](), function() {
        $("#NavSelectList").html(game.Ui.Select.make(
            [{
                    value: "Arena",
                    title: "ميدان تحدى الملك"
                },
                {
                    value: "ArenaTeam",
                    title: "ميدان تحدى الفريق"
                },
                {
                    value: "ArenaGuild",
                    title: "ميدان تحدى الحلف"
                }
            ],
            0, {
                width: 158,
                height: 200
            }));
        game.ArenaChallange.ArenaProfile();
    });
});


$(document).on("click", "#NavSelectList.SelectArenaFor .unit-option", function() {
    setTimeout(function() {
        $(".left-nav .selected").click();
    }, 150);
});


$(document).on('click', '#SArenaTroops', function() {
    game.ArenaChallange.ArenaProfile();
    game.ArenaChallange.getArenaData().done(function() {
        game.ArenaChallange.ArenaProfile();
    });
});

$(document).on('click', '#SArenaField', function() {
    game.ArenaChallange.ArenaField();
    game.ArenaChallange.getFightList().done(function() {
        game.ArenaChallange.ArenaField();
    });
});

$(document).on('click', '#SArenaRanking', function() {
    game.ArenaChallange['ArenaRanking']();
});

$(document).on('click', '#selectHeroCity .unit-option', function() {
    var idCity = $(this).attr('data-value');
    game.ArenaChallange.HeroList(idCity);
});


$(document).on('click', '#heroArenaSelectList .heroCityList .tr', function() {
    if (!$('#refreshArenaHero').is(':disabled'))
        return alert_box.failMessage('عليك تفعيل زر التعديل اولا');
    var idHero = $(this).attr('data-id-hero');
    if (!idHero)
        return;
    $('#heroArenaSelectList .heroCityList .selected').removeClass('selected');
    $(this)['addClass']('selected');
    $('#cpGoRight').removeAttr('disabled');
    $('#cpGoLeft').attr('disabled', 'disabled');
    $('#cpGoUp').attr('disabled', 'disabled');
    $('#cpGoDown').attr('disabled', 'disabled');

    $('#ArenaChallangeHome .arenaHeroList .hero-select-list .tr').each(function() {
        var idHeroI = $(this).attr('data-id-hero');
        if (!idHeroI)
            return;
        if (idHeroI == idHero) {
            $('#ArenaChallangeHome .arenaHeroList .hero-select-list .selected').removeClass('selected');
            $(this)['addClass']('selected');
            $('#cpGoLeft').removeAttr('disabled');
            $('#cpGoUp').removeAttr('disabled');
            $('#cpGoDown').removeAttr('disabled');
            $('#cpGoRight').attr('disabled', 'disabled');
        }
    });
});


$(document).on('click', '#ArenaChallangeHome .arenaHeroList .hero-select-list .tr', function() {
    if (!$('#refreshArenaHero').is(':disabled'))
        return alert_box.failMessage('عليك تفعيل زر التعديل اولا');
    var idHero = $(this).attr('data-id-hero');
    if (!idHero)
        return;
    $('#ArenaChallangeHome .arenaHeroList .hero-select-list .selected').removeClass('selected');
    $(this)['addClass']('selected');
    $('#cpGoUp').removeAttr('disabled');
    $('#cpGoDown').removeAttr('disabled');
    $('#cpGoLeft').removeAttr('disabled');
    $('#cpGoRight').attr('disabled', 'disabled');

    var Hero = game.Hero.getHero(idHero);
    if (Hero)
        game.ArenaChallange.HeroList(Hero['Hero']['id_city']);

    $('#heroArenaSelectList .heroCityList .tr').each(function() {
        var idHeroI = $(this).attr('data-id-hero');
        if (!idHeroI)
            return;
        if (idHeroI == idHero) {
            $('#heroArenaSelectList .heroCityList .selected').removeClass('selected');
            $(this)['addClass']('selected');
            $('#cpGoLeft').removeAttr('disabled');
            $('#cpGoUp').removeAttr('disabled');
            $('#cpGoDown').removeAttr('disabled');
            $('#cpGoRight').attr('disabled', 'disabled');
        }
    });
});


$(document).on('click', '#cpGoRight', function() {

    var idHero = $('#heroArenaSelectList .heroCityList .selected').attr('data-id-hero');
    if (!idHero)
        return;
    const AllHeros = [].concat(game.ArenaChallange.Arena.HeroList, game.ArenaChallange.ArenaGuild.HeroList, game.ArenaChallange.ArenaTeam.HeroList);
    for (var ii in AllHeros) {
        if (AllHeros[ii].id_hero == idHero)
            return alert_box.failMessage("البطل موجود فى ميدان أخر لا يمكنك إضافة هذا البطل");
    }
    var ArenaFor = $("#NavSelectList .select-list").attr("data-value");
    if (!ArenaFor)
        ArenaFor = "Arena";

    if (game.ArenaChallange[ArenaFor].HeroList.length >= game.ArenaChallange[ArenaFor].Arena['lvl'] * game.ArenaChallange.MaxHeroCountFactor[ArenaFor])
        return alert_box.failMessage('وصل الميدان للحد الاقصى من الابطال');
    const CuHero = game.Hero.getHero(idHero);
    game.ArenaChallange[ArenaFor].HeroList.push({
        'id_hero': idHero,
        HeroName: CuHero.Hero.name,
        PlayerName: game.DPlayer.Player.name,
        avatar: CuHero.Hero.avatar,
        ultra_p: CuHero.Hero.ultra_p,
        lvl: CuHero.Hero.lvl

    });
    game.ArenaChallange.ArenaHeroList();
});


$(document).on('click', '#cpGoLeft', function() {

    var idHero = $('#ArenaChallangeHome .arenaHeroList .hero-select-list .selected').attr('data-id-hero');
    if (!idHero)
        return;
    var ArenaFor = $("#NavSelectList .select-list").attr("data-value");
    if (!ArenaFor)
        ArenaFor = "Arena";



    if (!game.Hero.getHero(idHero)) {
        if (ArenaFor == 'ArenaTeam') {
            if (!game.Team.PlayerTeam || !game.Team.PlayerTeam.Player)
                return alert_box.failMessage("لست عضو فى أى فريق!");
            if (game.Team.PlayerTeam.Player.rank < game.Team.RANK_DATA.LEADER)
                return alert_box.confirmDialog("فقط قائد الفريق هو القادر على حذف أبطال اللاعبين الأخرين \n يمكنك فقط حذف أبطالك من الميدان!");
        } else if (ArenaFor == 'ArenaGuild') {

            if (!game.DPlayer.GuildData)
                return alert_box.failMessage("لست عضو فى أى حلف!");
            if (game.DPlayer.GuildData.rank < Guild.RANK_DATA.MENSTER)
                return alert_box.confirmDialog("فقط رتبة وزير أو أعلى يمكنها حذف أبطال اللاعبين الأخرين \n يمكنك فقط حذف أبطالك من الميدان!");

        }
    }



    game.ArenaChallange[ArenaFor].HeroList.forEach(function(Hero, Index) {
        if (Hero.id_hero == idHero)
            game.ArenaChallange[ArenaFor].HeroList.splice(Index, 1);
    });

    game.ArenaChallange.ArenaHeroList();
});



$(document).on('click', '#cpGoUp', function() {

    var idHero = $('#ArenaChallangeHome .arenaHeroList .hero-select-list .selected').attr('data-id-hero');
    var Index = Number($('#ArenaChallangeHome .arenaHeroList .hero-select-list .selected').attr('data-index'));
    if (!idHero)
        return;
    if (!Index || Index <= 0x0)
        return;
    var ArenaFor = $("#NavSelectList .select-list").attr("data-value");
    if (!ArenaFor)
        ArenaFor = "Arena";

    if (ArenaFor == 'ArenaTeam') {
        if (!game.Team.PlayerTeam || !game.Team.PlayerTeam.Player)
            return alert_box.failMessage("لست عضو فى أى فريق!");
        if (game.Team.PlayerTeam.Player.rank < game.Team.RANK_DATA.LEADER)
            return alert_box.confirmDialog("فقط قائد الفريق هو القادر على إعادة ترتيب الأبطال داخل الميدان!");
    } else if (ArenaFor == 'ArenaGuild') {

        if (!game.DPlayer.GuildData)
            return alert_box.failMessage("لست عضو فى أى حلف!");
        if (game.DPlayer.GuildData.rank < Guild.RANK_DATA.MENSTER)
            return alert_box.confirmDialog("فقط رتبة وزير أو أعلى يمكنها إعادة ترتيب الأبطال داخل الميدان !");

    }

    [game.ArenaChallange[ArenaFor].HeroList[Index - 0x1], game.ArenaChallange[ArenaFor].HeroList[Index]] = [game.ArenaChallange[ArenaFor].HeroList[Index], game.ArenaChallange[ArenaFor].HeroList[Index - 0x1]];

    game.ArenaChallange.ArenaHeroList();
    $('#ArenaChallangeHome .arenaHeroList .hero-select-list .tr').each(function() {
        var idHeroI = $(this).attr('data-id-hero');
        if (!idHeroI)
            return;
        if (idHeroI == idHero)
            $(this).trigger('click');
    });
});


$(document).on('click', '#cpGoDown', function() {
    var idHero = $('#ArenaChallangeHome .arenaHeroList .hero-select-list .selected').attr('data-id-hero');
    var Index = Number($('#ArenaChallangeHome .arenaHeroList .hero-select-list .selected').attr('data-index'));
    if (!idHero)
        return;
    if (Index + 0x1 >= game.ArenaChallange.Arena.HeroList['length'])
        return;
    var ArenaFor = $("#NavSelectList .select-list").attr("data-value");
    if (!ArenaFor)
        ArenaFor = "Arena";

    if (ArenaFor == 'ArenaTeam') {
        if (!game.Team.PlayerTeam || !game.Team.PlayerTeam.Player)
            return alert_box.failMessage("لست عضو فى أى فريق!");
        if (game.Team.PlayerTeam.Player.rank < game.Team.RANK_DATA.LEADER)
            return alert_box.confirmDialog("فقط قائد الفريق هو القادر على إعادة ترتيب الأبطال داخل الميدان!");
    } else if (ArenaFor == 'ArenaGuild') {

        if (!game.DPlayer.GuildData)
            return alert_box.failMessage("لست عضو فى أى حلف!");
        if (game.DPlayer.GuildData.rank < Guild.RANK_DATA.MENSTER)
            return alert_box.confirmDialog("فقط رتبة وزير أو أعلى يمكنها إعادة ترتيب الأبطال داخل الميدان !");

    }
    [game.ArenaChallange[ArenaFor].HeroList[Index], game.ArenaChallange[ArenaFor].HeroList[Index + 1]] = [game.ArenaChallange[ArenaFor].HeroList[Index + 1], game.ArenaChallange[ArenaFor].HeroList[Index]];
    game.ArenaChallange.ArenaHeroList();

    $('#ArenaChallangeHome .arenaHeroList .hero-select-list .tr').each(function() {
        var idHeroI = $(this).attr('data-id-hero');
        if (!idHeroI)
            return;
        if (idHeroI == idHero)
            $(this).trigger('click');
    });
});


$(document).on('click', '#refreshArenaHero', function() {
    alert_box['confirmDialog']('تاكيد تعديل ابطال الميدان', function() {
        $('#saveArenaHero').removeAttr('disabled');
        $('#refreshArenaHero').attr('disabled', 'disabled');
    });
});



$(document).on('click', '#saveArenaHero', function() {

    var ArenaFor = $("#NavSelectList .select-list").attr("data-value");
    if (!ArenaFor)
        ArenaFor = "Arena";

    alert_box.confirmDialog('تأكيد حفظ التعديلات على البطل', function() {
        var idHeros = [];
        for (var ii in game.ArenaChallange[ArenaFor].HeroList)
            idHeros.push(game.ArenaChallange[ArenaFor].HeroList[ii]['id_hero']);
        $.ajax({
            url: `${NODE_URL}/api/AArenaChallange/saveHeroList`,
            data: {
                server: game.Config.idServer,
                token: game.Config.OuthToken,
                HeroList: idHeros.join('-'),
                ArenaFor: ArenaFor
            },
            'type': 'POST',
            beforeSend: function(_0x5880cf) {},
            success: function(data, _0x5bc68d, _0x31f760) {
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var JsonData = JSON.parse(data);
                if (JsonData['state'] == 'error_1')
                    alert_box.failMessage('عدد الابطال اكبر من مستوى الميدان');

                if (JsonData.state == "ok")
                    alert_box.succesMessage("تم حفظ الأبطال بالميدان");
                game.ArenaChallange.getArenaData().done(function() {
                    game.ArenaChallange.ArenaProfile();
                });
            }
        });
    });
});


$(document).on('click', '.startFightPlayer', function() {
    var idPlayerToFight = $(this).attr('data-id-player');
    $.ajax({
        url: `${NODE_URL}/api/AArenaChallange/fightSomeOne`,
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idPlayerToFight: idPlayerToFight
        },
        'type': 'POST',
        beforeSend: function(_0x151a84) {},
        success: function(data, _0x142eb5, _0x5a508d) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonData = JSON.parse(data);

            if (JsonData['state'] == 'ok')
                game.ArenaChallange.getArenaData(function() {
                    game.ArenaChallange.ArenaField();
                });
            else if (JsonData['state'] == 'error_1') {
                alert_box.failMessage('لا يمكنك قتال لاعب فى هذا المستوى');
            } else if (JsonData['state'] == 'error_2') {
                alert_box.failMessage('لا يمكنك قتال لاعب فى هذا المستوى');
            } else if (JsonData['state'] == 'error_3') {
                alert_box.failMessage('عدد الابطال غير كافى للقتال');
            } else if (JsonData['state'] == 'error_4') {
                alert_box.failMessage('وقت الانتظار لم ينتهى');
            } else if (JsonData['state'] == 'error_5') {
                alert_box.failMessage('لا يوجد محاولات كافية');
            }




        }
    });
});

$(document).on('click', '.startFightTeam', function() {

    var idTeamToFight = $(this).attr('data-id-team');
    $.ajax({
        url: `${NODE_URL}/api/AArenaChallange/fightSomeTeam`,
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idTeamToFight: idTeamToFight
        },
        'type': 'POST',
        beforeSend: function(_0x151a84) {},
        success: function(data, _0x142eb5, _0x5a508d) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonData = JSON.parse(data);

            if (JsonData['state'] == 'ok')
                game.ArenaChallange.getArenaData(function() {
                    game.ArenaChallange.ArenaField();
                });
            else if (JsonData['state'] == 'error_1') {
                alert_box.failMessage('لا يمكنك قتال فريق فى هذا المستوى');
            } else if (JsonData['state'] == 'error_2') {
                alert_box.failMessage('لا يمكنك قتال فريق فى هذا المستوى');
            } else if (JsonData['state'] == 'error_3') {
                alert_box.failMessage('عدد الابطال غير كافى للقتال');
            } else if (JsonData['state'] == 'error_4') {
                alert_box.failMessage('وقت الانتظار لم ينتهى');
            } else if (JsonData['state'] == 'error_5') {
                alert_box.failMessage('لا يوجد محاولات كافية');
            }




        }
    });
});

$(document).on('click', '.startFightGuild', function() {

    var idGuildToFight = $(this).attr('data-id-guild');
    $.ajax({
        url: `${NODE_URL}/api/AArenaChallange/fightSomeGuild`,
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            idGuildToFight: idGuildToFight
        },
        'type': 'POST',
        beforeSend: function(_0x151a84) {},
        success: function(data, _0x142eb5, _0x5a508d) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonData = JSON.parse(data);

            if (JsonData['state'] == 'ok')
                game.ArenaChallange.getArenaData(function() {
                    game.ArenaChallange.ArenaField();
                });
            else if (JsonData['state'] == 'error_1') {
                alert_box.failMessage('لا يمكنك قتال حلف فى هذا المستوى');
            } else if (JsonData['state'] == 'error_2') {
                alert_box.failMessage('لا يمكنك قتال حلف فى هذا المستوى');
            } else if (JsonData['state'] == 'error_3') {
                alert_box.failMessage('عدد الابطال غير كافى للقتال');
            } else if (JsonData['state'] == 'error_4') {
                alert_box.failMessage('وقت الانتظار لم ينتهى');
            } else if (JsonData['state'] == 'error_5') {
                alert_box.failMessage('لا يوجد محاولات كافية');
            }




        }
    });
});




$(document).on('click', '#ArenaChallangeRankNav .right-btn', function() {
    var offset = Number($('#ArenaChallangeRankCPage').attr('data-offset')) || 0x0;
    game.ArenaChallange.ArenaRankingList(Math['min'](offset + 10, game['ServerData']['player_num'] - game['ServerData']['player_num'] % 10));
});

$(document).on('click', '#ArenaChallangeRankNav .left-btn', function() {
    var offset = Number($('#ArenaChallangeRankCPage').attr('data-offset')) || 0x0;
    game.ArenaChallange.ArenaRankingList(Math['max'](offset - 0xa, 0));
});

$(document).on('click', '#ArenaChallangeRankNav .most-left-btn', function() {
    game.ArenaChallange.ArenaRankingList(0);
});

$(document).on('click', '#ArenaChallangeRankNav .most-right-btn', function() {
    game.ArenaChallange.ArenaRankingList(game['ServerData']['player_num'] - game['ServerData']['player_num'] % 10);
});


$(document).on('click', '#buyArenaChallangeAtt .buyBtn', function() {
    var ArenaFor = $("#NavSelectList .select-list").attr("data-value");
    if (!ArenaFor)
        ArenaFor = "Arena";
    var amount = $(this).attr('data-amount');
    $.ajax({
        url: API_URL + '/api/AArenaChallange/buyBattelAttempt',
        data: {
            amount: amount,
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            ArenaFor: ArenaFor
        },
        'type': 'POST',
        success: function(data, _0x1cb305, _0x54b6b2) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);
            var JsonData = JSON.parse(data);

            if (JsonData['state'] === 'ok') {

                game.ArenaChallange.getArenaData(function() {
                    game.ArenaChallange.ArenaField();
                });
                Player_profile['getPlayerBaseData']();
                alert_box['succesMessage']('+' + amount + ' محاولة');

            } else if (JsonData['state'] == 'error_0') {
                alert_box['confirmMessage']('ليس لديك ذهب كافى');
            } else if (JsonData['state'] === 'error_1') {
                alert_box['confirmMessage']('لا يمكنك شراء محاولات اكتر من مرة');
            }
        }
    });

});


$(document).on('click', '#SpeedUpArenaAtt', function() {

    var ArenaFor = $("#NavSelectList .select-list").attr("data-value");
    if (!ArenaFor)
        ArenaFor = "Arena";
    alert_box.confirmDialog('تأكيد  تسريع انتظار الجولة مقابل 2 ذهبة', function() {
        $.ajax({
            url: API_URL + '/api/AArenaChallange/speedUpAtte',
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer,
                ArenaFor: ArenaFor
            },
            type: 'POST',
            success: function(data, _0x2b9276, _0x41a972) {
                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);
                var JsonData = JSON.parse(data);
                if (JsonData['state'] === 'ok') {

                    game.ArenaChallange.getArenaData(function() {
                        game.ArenaChallange.ArenaField();
                    });
                    Player_profile.getPlayerBaseData();
                    alert_box.succesMessage('تسريع المحاولة');

                }
            }
        });
    });
});

game.ArenaChallange.addExpByBox = function(idItem) {
    var ArenaFor = $("#NavSelectList .select-list").attr("data-value");
    if (!ArenaFor)
        ArenaFor = "Arena";
    $.ajax({
        url: API_URL + '/api/AArenaChallange/addExpByBox',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            Item: idItem,
            ArenaFor: ArenaFor
        },
        'type': 'POST',
        success: function(data, _0x4a90e5, _0x47cebb) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            $('.close-alert')['click']();
            $('.close_select_menu')['click']();

            var JsonData = JSON.parse(data);
            if (JsonData['state'] == 'ok') {
                alert_box['succesMessage']('خبرة +' + JsonData['Exp']);
                game.ArenaChallange.getArenaData().done(function() {
                    game.ArenaChallange.ArenaProfile();
                });
                Matrial['takeFrom'](idItem, 1);
            } else if (JsonData['state'] == 'error_0') {
                alert_box.failMessage('لا توجد مواد كافية');
            }

        }
    });
};


game.ArenaChallange.addAttByBox = function(idItem) {
    var ArenaFor = $("#NavSelectList .select-list").attr("data-value");
    if (!ArenaFor)
        ArenaFor = "Arena";

    $.ajax({
        url: API_URL + '/api/AArenaChallange/addAttByBox',
        data: {
            server: game.Config.idServer,
            token: game.Config.OuthToken,
            'Item': idItem,
            ArenaFor: ArenaFor
        },
        'type': 'POST',
        success: function(data, _0x326d67, _0x2f42d6) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            $('.close-alert')['click']();
            $('.close_select_menu')['click']();

            var JsonData = JSON.parse(data);
            if (JsonData['state'] == 'ok') {
                alert_box['succesMessage']('محاولة +' + JsonData['Att']);
                Matrial['takeFrom'](idItem, 0x1);
                game.ArenaChallange.getArenaData(function() {
                    game.ArenaChallange.ArenaField();
                });
            } else if (JsonData['state'] == 'error_0') {
                alert_box.failMessage('لا توجد مواد كافية');
            }

        }
    });
};


$(document).on('click', '#useArenaExpBox', function() {
    var Items = ['arena_exp_1', 'arena_exp_5', 'arena_exp_10', 'arena_exp_25'];
    BoxOfMatrialToUse(Items, 'addArenaExp');
});

$(document).on('click', '#useAttemptBox', function() {
    var Items = ['arena_attempt_1', 'arena_attempt_5', 'arena_attempt_10'];
    BoxOfMatrialToUse(Items, 'addArenaAtt');
});

$(document).on('click', '#heroArenaSelectList .showCityHero', function(e) {
    e['stopPropagation']();
    var idHero = $(this).attr('data-id-hero');
    game['Hero']['showHeroDetail'](game.Hero.getHero(idHero));
});


$(document).on('click', '#arenaHeroList .showCityHero', function(e) {
    e['stopPropagation']();
    var idHero = $(this).attr('data-id-hero');
    var Hero = game.Hero.getHero(idHero);
    var HeroArmy = Hero['Army'];

    for (var Index in game.ArenaChallange.Arena.HeroList) {
        if (game.ArenaChallange.Arena.HeroList[Index]['id_hero'] == idHero)
            HeroArmy = game.ArenaChallange.Arena.HeroList[Index];
    }
    var HeroRev = {
        'Hero': Hero['Hero'],
        'Equip': Hero['Equip'],
        'Medal': Hero['Medal'],
        'Army': HeroArmy
    };
    game['Hero']['showHeroDetail'](HeroRev);
});


game.Team = {};

game.Team.Relations = {
    'RelationAllay': 0,
    'RelationEnemy': 1,
    'RelationFriend': 2
};


game.Team.RANK_DATA = {
    NORMAL_MEM: 0,
    SENIOR_MEM: 1,
    OLD_MEM: 2,
    SUPERVISOR: 3,
    MENSTER: 4,
    DEPUTY: 5,
    LEADER: 6

};


game.Team.getPlayerTeam = function() {

    return $.ajax({
        url: `https://${WS_HOST}:${WS_PORT}/api/ATeam/getPlayerTeam`,
        data: {
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            game.Team.PlayerTeam = JSON.parse(data);

            if (game.Team.PlayerTeam.Team) {
                for (var ii in game.Team.PlayerTeam.TeamMember) {
                    if (game.Team.PlayerTeam.TeamMember[ii].id_player == game.DPlayer.Player.id_player)
                        game.Team.PlayerTeam.Player = game.Team.PlayerTeam.TeamMember[ii];
                }

                $("#PlayerTeamWrapper").html(
                    `<button class="">
                            <div class="slog slogBtm" style="background-image: url(images/style/bottom-${game.Team.PlayerTeam.Team.slog_btm}.png)"></div>
                            <div class="slog slogMid" style="background-image: url(images/style/central-${game.Team.PlayerTeam.Team.slog_cnt}.png); margin-top: -64px;" ></div>
                            <div class="slog slogTop" style="background-image: url(images/style/top-${game.Team.PlayerTeam.Team.slog_top}.png); margin-top: -64px;"></div>
                        </button>`);


            } else {
                $("#PlayerTeamWrapper").html(`<button class="NoTeamIcon"></button>`);
            }



        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

};


game.Team.showTeamReview = function(idTeam) {

    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/ATeam/showTeamReview`,
        data: {
            token: game.Config.OuthToken,
            idTeam: idTeam
        },

        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);
            const JsonObject = JSON.parse(data);
            if (!JsonObject.id_team)
                return alert_box.failMessage("هذا الفريق غير موجود");

            console.log(JsonObject)

            const OverLay = `  <div id="over_lay">
                                        <div id="select_from">
                                            <div class="head_bar">
                                                <img src="images/style/head_bar.png" class="banner">
                                                <div class="title">${Translate.Button.Chat.League[UserLag.language]}</div>
                                                <img class="close close_use_menu" src="images/btns/close_b.png">
                                            </div>
                                            <p style="clear: both"></p>
                                            <div id="rank-review">
                                                <div class="upper" style="height: 185px;">
                                                    <div class="table flex">
                                                        <div class="left">
                                                            <img src="images/style/bottom-${JsonObject.slog_btm}.png" style="position: absolute">
                                                            <img src="images/style/central-${JsonObject.slog_cnt}.png" style="position: absolute">
                                                            <img src="images/style/top-${JsonObject.slog_top}.png" style="position: absolute">
                                                        </div>
                                                        <div class="right">
                                                            <div class="t-r">
                                                                <label>${JsonObject.LeaderName}</label>
                                                                <label>: القائد</label>
                                                            </div>
                                                            <div class="t-r">
                                                                <label>${getArabicNumbers(JsonObject.rank)}</label>
                                                                <label>: تصنيف</label>
                                                            </div>
                                                            <div class="t-r">
                                                                <label>${getArabicNumbers(JsonObject.mem_num)}</label>
                                                                <label>: الاعضاء</label>
                                                            </div>
                                                            <div class="t-r">
                                                                <label>${getArabicNumbers(JsonObject.lvl)}</label>
                                                                <label>: مستوى</label>
                                                            </div>
                                                            <div class="t-r">
                                                                <label>${getArabicNumbers(JsonObject.prestige)}</label>
                                                                <label>: برستيج</label>
                                                            </div>
                                                            <div class="t-r">
                                                                <label>${getArabicNumbers(JsonObject.honor)}</label>
                                                                <label>: شرف</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <table>
                                                        <tbody>
    
                                                            <tr>
                                                                <td colspan="3" style="text-align: center; line-height: 34px;">
                                                                    <h1 style="background-image: url(&quot;images/background/profile_name.png&quot;);
                                                                        background-size: 75% 100%;
                                                                        background-repeat: no-repeat;
                                                                        background-position: center;">${JsonObject.name}</h1>
                                                                </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                                <div class="down">
                                                    <div class="th ellipsis">${Translate.Title.TH.Intro[UserLag.language]}</div>
                                                    <p>
                                                        ${JsonObject.word || "لا توجد مقدمة"}
                                                    </p>
                                                    ${!game.Team.PlayerTeam.Team ? `<div class="flexCenter" id="send-team-req" >
                                                                                            <button id="SendTeamJoinReq" class="full-btn full-btn-3x" data-id-team="${JsonObject.id_team}">ارسال دعوة انضمام</button>
                                                                                        </div>` : ""}
                                                </div>
                                            </div>
                                        </div>
                                    </div>`;

            $("body").append(OverLay);
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }


    });

}

$(document).on("click", ".show-team-review", function() {
    const idTeam = $(this).attr("data-id-team");
    game.Team.showTeamReview(idTeam);
});



$(document).on("PlayerReady", "html", function() {
    game.Team.getPlayerTeam();
});




game.Team.noTeamJoin = function() {

    var InvList = "";
    var TeamInv;
    for (var ii = 0; ii < 5; ii++) {
        TeamInv = game.Team.PlayerTeam.TeamInv[ii];
        if (TeamInv) {
            InvList += `<div class="tr" data-id-team="${TeamInv.id_team}">
                            <div class="td_1" style="width: 50%;">${TeamInv.name}</div>
                            <div class="td_2 flex btnList">
                                <button  class="btn full-btn-3x ellipsis rejectTeamInv" data-id-team="${TeamInv.id_team}">الغاء</button>
                                <button  class="btn full-btn-3x ellipsis acceptTeamInv" data-id-team="${TeamInv.id_team}">قبول</button>
                                <button  class="btn full-btn-3x ellipsis show-team-review" data-id-team="${TeamInv.id_team}">عرض</button>
                            </div>
                        </div>`;
        } else {
            InvList += `<div class="tr">
                            <div class="td_1"></div>
                            <div class="td_2"></div>
                        </div>`;
        }

    }
    var TeamReq = "";
    if (game.Team.PlayerTeam.TeamReq.length) {
        TeamReq = `<div id="PlayerTeamReqList" class="tr" data-id-team="${game.Team.PlayerTeam.TeamReq[0].id_team}">
                        <div style="width: 70%;">${game.Team.PlayerTeam.TeamReq[0].name}</div>
                        <div class="flexCenter btnList">
                            <button id="CancelTeamJoinReq" class="btn full-btn-3x ellipsis" data-id-team="${game.Team.PlayerTeam.TeamReq[0].id_team}">الغاء</button>
                            <button  class="btn full-btn-3x ellipsis show-team-review" data-id-team="${game.Team.PlayerTeam.TeamReq[0].id_team}">عرض</button>
                        </div>
                    </div>`
    } else {
        TeamReq = `<div class="tr"></div>`;
    }
    return `   <div id="select_from">
                        <div class="head_bar">
                            <img src="images/style/head_bar.png" class="banner">
                            <div class="title">الفريق</div>
                            <img class="close close_use_menu" id="closeGuildSelFrom" src="images/btns/close_b.png">
                        </div>
                        <p style="clear: both"></p>
                        <div class="container">
                            <div id="two_buttons">
                                <button class="full-btn full-btn-3x pull-R" id="ShowAvailableTeams"> اعرض الفريق المتاح</button>
                                <button class="full-btn full-btn-3x pull-L" id="CreatNewTeam"> انشاء فريق </button>
                            </div>
                            <div id="sent_to">
                                <div class="th">
                                    <div class="td_2 ellipsis">الطلبات المقدمة</div>
                                    <div class="td_1 ellipsis">اختر</div>
                                </div>
                                ${TeamReq}
                            </div>
                            <div id="sent_from">
                                <div class="th">
                                    <div class="td_2 ellipsis">الدعوات من الفرق الأخرى</div>
                                    <div class="td_1 ellipsis">اختر</div>

                                </div>

                                <div id="PlayerTeamInvList">
                                    ${InvList}
                                </div>
                            </div>
                        </div>
                    </div>`;
};


game.Team.DialogBox = function() {

    return `<div id="dialg_box" class="" style="top: 125px;">
                        <div class="head_bar">
                            <img src="images/style/head_bar.png">
                            <div class="title">الفريق</div>
                        </div>
                        <div class="nav_bar">
                            <div id="TeamHeaderNavBar" class="left-nav">
                                <ul>
                                    <li data-nav-to="TeamHomePage"    class="selected">الفريق</li>
                                    <li data-nav-to="TeamFriendPage"  class="">أصدقاء</li>
                                    <li data-nav-to="TeamEnemyPage"   class="">أعداء</li>
                                    <li data-nav-to="TeamRankingPage" class="TeamRankPageCl">تصنيف</li>
                                    <li data-nav-to="TeamHistoryPage" class="">تاريخ الفريق</li>
                                    <li data-nav-to="TeamUpgradePage" class="">تطوير</li>
                                </ul>
                            </div>
                            <div id="TeamNavBarList" class="right-nav">
                                ${game.Team.PlayerTeam.Team ? `
                                <div class="btn full-btn-3x ellipsis" id="TeamAdmins">
                                    إدارة الفريق
                                </div>
                                <div class="drop-list">
                                    <ul>
                                        ${game.Team.PlayerTeam.Player.rank >= game.Team.RANK_DATA.DEPUTY ? `<li id="chang-t-word"> تعديل المقدمة</li>` : ""}
                                        ${game.Team.PlayerTeam.Player.rank >= game.Team.RANK_DATA.DEPUTY ? `<li id="change-t-F_E-list">الاصدقاء والاعداء</li>` : ""}
                                        ${game.Team.PlayerTeam.Player.rank >= game.Team.RANK_DATA.SUPERVISOR ? ` <li id="invite-t">دعوة ملك</li>` : ""}
                                        ${game.Team.PlayerTeam.Player.rank >= game.Team.RANK_DATA.MENSTER ? ` <li id="change-t-slog"> تغير الشعار</li>` : ""}
                                        ${game.Team.PlayerTeam.Player.rank >= game.Team.RANK_DATA.SENIOR_MEM ? ` <li id="resignation-t"> استقالة</li>` : ""}
                                        <li id="PlayerTeamLeave">
                                            الخروج
                                        </li>
                                        ${game.Team.PlayerTeam.Player.rank == game.Team.RANK_DATA.LEADER ? ` <li id="destroy-t">تفكيك</li>` : ""}

                                    </ul>
                                </div>` : ""}
                                <div class="nav_icon">
                                    <img class="close_dialog" src="images/btns/close_b.png">
                                </div>
                            </div>
                        </div>
                        <div class="box_content"></div>
                    </div>`;
};



game.Team.TeamHomePage = function() {
    const PlayerTeam = game.Team.PlayerTeam;
    const Page = ` <div id="TeamBox">
                        <div id="TeamBoxLeft">
                            <div id="TeamProfileBox">
                                <div class="ProfileData">
                                    <div class="TeamSlog">
                                        <div class="SlogContainer">
                                            <div class="slog slogBtm" style="background-image: url(images/style/bottom-${PlayerTeam.Team.slog_btm}.png);"></div>
                                            <div class="slog slogMid" style="background-image: url(images/style/central-${PlayerTeam.Team.slog_cnt}.png); margin-top: -150px;"></div>
                                            <div class="slog slogTop" style="background-image: url(images/style/top-${PlayerTeam.Team.slog_top}.png); margin-top: -150px;"></div>
                                        </div>
                                    </div>
                                    <div class="TeamListData">
                                        <ul>
                                            <li>
                                                <div class="icon" style="background-image: url(images/icons/prestige.png);"></div>
                                                <div class="title stroke">${PlayerTeam.Team.prestige}</div>
                                            </li>
                                            <li>
                                                <div class="icon" style="background-image: url(images/icons/rank-player.png);"></div>
                                                <div class="title stroke">${PlayerTeam.Team.rank}</div>
                                            </li>
                                            <li>
                                                <div class="icon" style="background-image: url(images/icons/honor.png);"></div>
                                                <div class="title stroke">${PlayerTeam.Team.honor}</div>
                                            </li>
                                            <li>
                                                <div class="icon" style="background-image: url(images/icons/stat_streak.png);"></div>
                                                <div class="title stroke">${PlayerTeam.Team.mem_num}</div>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="TeamName">
                                    <button class="name stroke">  <div>${PlayerTeam.Team.name}</div> </button>
                                </div>
                            </div>
                            <div id="TeamIntroBox">
                                <div class="Header">
                                    <h1>نبذة  عن الفريق</h1>
                                </div>
                                <div class="Body">
                                ${PlayerTeam.Team.word}
                                </div>
                            </div>
                        </div>
                        <div id="TeamBoxRight">
                            <div class="PlayerList">
                                <div class="Header">
                                    قائمة اللاعبين
                                </div>
                                <div class="Body">
                                    <ul class="LeaderLi">
                                        <li>
                                            <div class="LPlayerAvaterBg">
                                                <div class="LPlayerAvater" style="background-image: url(${PLAYER_FACES[PlayerTeam.TeamMember[0].avatar]});"></div>
                                                <div class="LPlayerTitle stroke">قائد الفريق</div>
                                            </div>
                                            <div class="LPlayerName stroke">
                                                ${PlayerTeam.TeamMember[0].PlayerName}
                                            </div>
                                        </li>
                                    </ul>
                                    <ol class="TeamMateLi flex">
                                        ${PlayerTeam.TeamMember[1] ? `
                                            <li>
                                                <div class="PlayerAvater" style="background-image: url(${game.BaseData.HeroAvatar[PlayerTeam.TeamMember[1].avatar]});">
                                                    <div class="playerSettingIcon TeamMemberSettingIcon">
                                                        <button class="btn"></button>
                                                    </div>
                                                    <div class="settingList">
                                                        <ul>
                                                            <li>ترقية    &nbsp;&nbsp;↪</li>
                                                            <li>نسبة الجوائز</li>
                                                            <li class="FireGuildMemeber" data-id-player="${PlayerTeam.TeamMember[1].id_player}">طرد</li>
                                                        </ul>
                                                    </div>
                                                    <div class="PlayerAvaterBg"></div>
                                                    <div class="PlayerTitle stroke" style="background-position-y: -48px;">مساعد القائد</div>
                                                </div>
                                                <div class="PlayerName stroke">
                                                    ${PlayerTeam.TeamMember[1].PlayerName}
                                                </div>
                                            </li>` : ``}
                                        
                                        ${PlayerTeam.TeamMember[2] ? `
                                            <li>
                                                <div class="PlayerAvater" style="background-image: url(${game.BaseData.HeroAvatar[PlayerTeam.TeamMember[2].avatar]});">
                                                    <div class="playerSettingIcon TeamMemberSettingIcon">
                                                        <button class="btn"></button>
                                                    </div>
                                                    <div class="settingList">
                                                        <ul>
                                                            <li>ترقية    &nbsp;&nbsp;↪</li>
                                                            <li>نسبة الجوائز</li>
                                                            <li class="FireGuildMemeber" data-id-player="${PlayerTeam.TeamMember[2].id_player}">طرد</li>
                                                        </ul>
                                                    </div>
                                                    <div class="PlayerAvaterBg"></div>
                                                    <div class="PlayerTitle stroke" style="background-position-y: -72px;">مستشار القائد</div>
                                                </div>
                                                <div class="PlayerName stroke">
                                                    ${PlayerTeam.TeamMember[2].PlayerName}
                                                </div>
                                            </li>` : ``}
                                        
                                        ${PlayerTeam.TeamMember[3] ? `
                                            <li>
                                                <div class="PlayerAvater" style="background-image: url(${game.BaseData.HeroAvatar[PlayerTeam.TeamMember[3].avatar]});">
                                                    <div class="playerSettingIcon TeamMemberSettingIcon">
                                                        <button class="btn"></button>
                                                    </div>
                                                    <div class="settingList">
                                                        <ul>
                                                            <li>ترقية    &nbsp;&nbsp;↪</li>
                                                            <li>نسبة الجوائز</li>
                                                            <li class="FireGuildMemeber" data-id-player="${PlayerTeam.TeamMember[3].id_player}">طرد</li>
                                                        </ul>
                                                    </div>
                                                    <div class="PlayerAvaterBg"></div>
                                                    <div class="PlayerTitle stroke" style="background-position-y: -96px;">مقاتل الفريق</div>
                                                </div>
                                                <div class="PlayerName stroke">
                                                ${PlayerTeam.TeamMember[3].PlayerName}
                                                </div>
                                            </li>` : ``}
                                    </ol>
                                </div>
                            </div>
                        </div>
                    </div>`;
    $("#dialg_box .box_content").html(Page);
};

game.Team.InvList = function() {
    const PlayerTeam = game.Team.PlayerTeam;
};

game.Team.TeamReqList = function() {

    const PlayerTeam = game.Team.PlayerTeam;
    let List = "";
    const ListCount = Math.max(PlayerTeam.TeamReq.length, 5);
    for (var iii = 0; iii < ListCount; iii++) {

        if (PlayerTeam.TeamReq[iii]) {
            List += `   <div class="tr flex">
                            <div class="tc-player-avater" style="background-image: url(${game.BaseData.HeroAvatar[PlayerTeam.TeamReq[iii].avatar]});"></div>
                            <div class="tc-player-name">${PlayerTeam.TeamReq[iii].PlayerName}</div>
                            <div class="tc-edit-req">
                                <button class="full-btn-3x btn acceptTeamJoinReq" data-id-player="${PlayerTeam.TeamReq[iii].id_player}">قبول</button>
                                <button class="full-btn-3x btn rejectTeamJoinReq" data-id-player="${PlayerTeam.TeamReq[iii].id_player}">رفض</button>
                                <button class="full-btn-3x btn show-player-profile" data-id-player="${PlayerTeam.TeamReq[iii].id_player}">عرض</button>
                            </div>
                        </div>`;
        } else {
            List += `<div class="tr"></div>`;
        }

    }

    return ` <div class="Header">
                <h1>طلبات الإنضمام</h1>
            </div>
            <div class="Body">
                ${List}
            </div>`;
};

game.Team.TeamInvList = function() {

    const PlayerTeam = game.Team.PlayerTeam;
    let List = "";
    const ListCount = Math.max(PlayerTeam.TeamInv.length, 5);
    for (var iii = 0; iii < ListCount; iii++) {

        if (PlayerTeam.TeamInv[iii]) {
            List += `   <div class="tr flex">
                            <div class="tc-player-avater" style="background-image: url(${game.BaseData.HeroAvatar[PlayerTeam.TeamInv[iii].avatar]});"></div>
                            <div class="tc-player-name">${PlayerTeam.TeamInv[iii].PlayerName}</div>
                            <div class="tc-edit-req">
                                <button class="full-btn-3x btn cancelTeamInv" data-id-idPlayer="${PlayerTeam.TeamInv[iii].id_player}">حذف</button>
                                <button class="full-btn-3x btn show-player-profile" data-id-player="${PlayerTeam.TeamInv[iii].id_player}">عرض</button>
                            </div>
                        </div> `;
        } else {
            List += `<div class="tr"></div>`;
        }

    }

    return `    <div class="Header">
                    <h1>الدعوات</h1>
                </div>
                <div class="Body">
                    ${List}
                </div>`;
};

game.Team.TeamRelationList = function(Relation) {
    const PlayerTeam = game.Team.PlayerTeam;
    let List = "";
    var ListArr = [];
    for (var ii in PlayerTeam.TeamRelation)
        if (PlayerTeam.TeamRelation[ii].relation == Relation)
            ListArr.push(PlayerTeam.TeamRelation[ii]);

    const ListCount = Math.max(ListArr.length, 9);
    for (var iii = 0; iii < ListCount; iii++) {

        if (ListArr[iii]) {
            List += `   <div class="tr">
                            <div class="tc-team flex">
                                <div class="team-slog">
                                    <div class="slog" style="background-image: url(images/style/bottom-${ListArr[iii].slog_btm}.png);"></div>
                                    <div class="slog" style="background-image: url(images/style/central-${ListArr[iii].slog_cnt}.png); margin-top: -40px;"></div>
                                    <div class="slog" style="background-image: url(images/style/top-${ListArr[iii].slog_top}.png); margin-top: -40px;"></div>
                                </div>
                                <div class="team-name">${ListArr[iii].name}</div>
                            </div>
                            <div class="tc-leader flex">
                                <div class="image" style="background-image: url(${game.BaseData.HeroAvatar[ListArr[iii].avater]});"></div>
                                <div class="name"> ${ListArr[iii].PlayerName} </div>
                            </div>
                            <div class="tc-pres flex">${ListArr[iii].prestige}</div>
                            <div class="tc-memNum flex">${ListArr[iii].mem_num}</div>
                            <div class="tc-show">
                                <button class="full-btn-3x btn">عرض</button>
                                <button class="full-btn-3x btn">تعديل</button>
                            </div>
                        </div>`;
        } else {
            List += `<div class="tr"></div>`;
        }
    }
    return `    <div class="Body">
                    <div class="TeamEneFrieList">
                        ${List}
                    </div>
                </div>`
}

game.Team.TeamFriendPage = function() {
    const PlayerTeam = game.Team.PlayerTeam;
    const Page = ` <div id="TeamBox">
                        <div id="TeamBoxLeft">
                            <div id="TeamJoinReqBox" class="TeamInvJoinBox">
                                ${game.Team.TeamReqList()}
                            </div>
                            <div id="TeamInevReqBox" class="TeamInvJoinBox">
                                ${game.Team.TeamInvList()}
                            </div>
                        </div>
                        <div id="TeamBoxRight">
                            <div class="PlayerList">
                                <div class="Header HeaderEnemyFrie flex">
                                    <div class="tc-team">فريق</div>
                                    <div class="tc-leader">القائد</div>
                                    <div class="tc-pres">برستيج</div>
                                    <div class="tc-memNum">عضو</div>
                                    <div class="tc-show">إختر</div>
                                </div>
                                ${game.Team.TeamRelationList(game.Team.Relations.RelationFriend)}
                            </div>
                        </div>
                    </div>`;
    $("#dialg_box .box_content").html(Page);
};

game.Team.TeamEnemyPage = function() {
    const PlayerTeam = game.Team.PlayerTeam;
    const Page = ` <div id="TeamBox">
                        <div id="TeamBoxLeft">
                            <div id="TeamJoinReqBox" class="TeamInvJoinBox">
                                ${game.Team.TeamReqList()}
                            </div>
                            <div id="TeamInevReqBox" class="TeamInvJoinBox">
                                ${game.Team.TeamInvList()}
                            </div>
                        </div>
                        <div id="TeamBoxRight">
                            <div class="PlayerList">
                                <div class="Header HeaderEnemyFrie flex">
                                    <div class="tc-team">فريق</div>
                                    <div class="tc-leader">القائد</div>
                                    <div class="tc-pres">برستيج</div>
                                    <div class="tc-memNum">عضو</div>
                                    <div class="tc-show">إختر</div>
                                </div>
                                ${game.Team.TeamRelationList(game.Team.Relations.RelationEnemy)}
                            </div>
                        </div>
                    </div>`;
    $("#dialg_box .box_content").html(Page);

};

game.Team.getTeamRank = function(offset) {

    return $.ajax({
        url: `https://${WS_HOST}:${WS_PORT}/api/ATeam/getTeamRank`,
        data: {
            token: game.Config.OuthToken,
            offset: offset
        },
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);
            var List = "";
            game.Team.RankList = JSON.parse(data);
            for (var iii = 0; iii < 10; iii++) {
                if (game.Team.RankList[iii]) {
                    List += ` <div class="tr">
                                <div class="tc-rank">${iii + offset + 1}</div>
                                <div class="tc-team flex">
                                    <div class="team-slog">
                                        <div class="slog" style="background-image: url(images/style/bottom-${game.Team.RankList[iii].slog_btm}.png);">
                                        </div>
                                        <div class="slog" style="background-image: url(images/style/central-${game.Team.RankList[iii].slog_cnt}.png); margin-top: -37px;">
                                        </div>
                                        <div class="slog" style="background-image: url(images/style/top-${game.Team.RankList[iii].slog_top}.png); margin-top: -37px;">
                                        </div>
                                    </div>
                                    <div class="team-name">${game.Team.RankList[iii].name}</div>
                                </div>
                                <div class="tc-leader flex">
                                    <div class="image" style="background-image: url(${game.BaseData.HeroAvatar[game.Team.RankList[iii].avatar]});">
                                        <div class="border"></div>
                                    </div>
                                    <div class="name"> ${game.Team.RankList[iii].PlayerName} </div>
                                </div>
                                <div class="tc-pres flex">${game.Team.RankList[iii].prestige}</div>
                                <div class="tc-honor flex">${game.Team.RankList[iii].honor}</div>
                                <div class="tc-memNum flex">${game.Team.RankList[iii].mem_num}</div>
                                <div class="tc-show">
                                    <button class="full-btn-3x btn showTeamReview" data-id-team="${game.Team.RankList[iii].id_team}">عرض</button>
                                </div>
                            </div>`;
                } else {
                    List += `<div class="tr"></div>`
                }

                $("#RankList .Body").html(List)
            }

        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

};

$(document).on("click", ".showTeamReview", function() {

    const idTeam = $(this).attr("data-id-team");
    game.Team.showTeamReview(idTeam);

});

game.Team.RankPage = function(offset) {


    const Box = `<div class="box_content">
                    <div id="TeamBox">
                    <div id="RankList" class="RankPage">
                        <div class="">
                            <div class="Header HeaderEnemyFrie flex">
                                <div class="tc-rank">تصنيف</div>
                                <div class="tc-team">فريق</div>
                                <div class="tc-leader">القائد</div>
                                <div class="tc-pres">برستيج</div>
                                <div class="tc-honor">شرف</div>
                                <div class="tc-memNum">عضو</div>
                                <div class="tc-show">إختر</div>
                            </div>
                            <div class="Body">
                                <div class="">
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                </div>
                <div id="DialBoxFooter" data-rank-for="">
                    <div id="BesideNavBtns">
                        <div class="NavContBtns">
                            <div class="nav-arrows flex">
                                <div data-move="most-left" class="most-left-btn move_p_rank"></div>
                                <div data-move="left"      class="left-btn move_p_rank"></div>
                                <div class="page-count flex stroke"><span id="current_page_num"></span>/<span id="TotalPageNumber"></span></div>
                                <div data-move="right" class="right-btn move_p_rank"></div>
                                <div data-move="most-right" class="most-right-btn move_p_rank"></div>
                            </div>
                            <div id="goToBtnRankCo">
                                <div class="flex">
                                    <input type="text" class="only_num input">
                                    <button class="goBtn btn full-btn full-btn-1x ellipsis">
                                        اذهب الى
                                    </button>
                                </div>
                            </div>
                            <div id="RankSearchSelect">
                                ${game.Ui.Select.make([{value: "ByName", title: "الأسم"}])}
                            </div>
                            <div id="SearchByInput">
                                <div id="nav_search" class="flex">
                                    <input type="text" class="input">
                                    <button class="full-btn full-btn-1x ellipsis">
                                        بحث
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>`;
    $("#dialg_box .box_content").replaceWith(Box);
    game.Team.getTeamRank(offset);
};

game.Team.HistoryPage = function(offset) {


    const Box = `<div id="TeamBox">
                    <div id="RankList">
                        <div class="">
                            <div class="Header HeaderEnemyFrie flex">
                                <div class="tc-rank">تصنيف</div>
                                <div class="tc-team">فريق</div>
                                <div class="tc-leader">القائد</div>
                                <div class="tc-pres">برستيج</div>
                                <div class="tc-honor">شرف</div>
                                <div class="tc-memNum">عضو</div>
                                <div class="tc-show">إختر</div>
                            </div>
                            <div class="Body">
                                <div class="">
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                    <div class="tr"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>`;
    $("#dialg_box .box_content").html(Box);
};

game.Team.changeTeamRelationBox = function() {
    var army_content = `   <div id="alert_box" class="F_E-list">
                                    <div class="row-1"> 
                                        <input id="TeamEneFriInput" type="text" data-id-team="null" class="input">
                                        <label class="th ellipsis">إسم الفريق</label>
                                        <div id="g-search_result"class="search_res">
                                            <ul> 
                                                
                                            </ul>
                                        </div>

                                    </div>
                                    <div class="row-2">
                                        <ul>
                                            <li>    
                                                <input id="trigger_1" type="radio" name="guild_relation" value="${game.Team.Relations.RelationEnemy}" >
                                                <label for="trigger_1" class="checker"></label>
                                                <span> عدو</span>
                                            </li>
                                            <li>    
                                                <input id="trigger_2" type="radio" name="guild_relation" value="${game.Team.Relations.RelationFriend}">
                                                <label for="trigger_2" class="checker"></label>
                                                <span>صديق</span>
                                            </li>
                                            <li>    
                                                <input id="trigger_3" type="radio" name="guild_relation"  checked value="${game.Team.Relations.RelationAllay}">
                                                <label for="trigger_3" class="checker" ></label>
                                                <span> محايد</span>
                                            </li>
                                        </ul>
                                    </div>
                                    <div class="row-3">
                                        <div class="confim-btn">

                                            <button class="full-btn  full-btn-3x"   id="submit-team-relation">
                                                تأكيد
                                            </button>

                                        </div>

                                    </div>
                                </div> `;

    return army_content;
};

$(document).on("click", "#PlayerTeamWrapper button", function() {
    $("#select_from").remove();
    if (game.Team.PlayerTeam.Team)
        dialogBoxShow(game.Team.DialogBox(), function() {
            game.Team.TeamHomePage();
        });
    else {
        dialogBoxShow(game.Team.noTeamJoin());
        game.Team.getPlayerTeam().done(function() {
            $("#select_from").replaceWith(game.Team.noTeamJoin());
        });
    }
});

$(document).on("click", "#CreatNewTeam", function() {

    var box = `  <div id="alert_container" class="bg-general" style=" position:fixed; width: 560px; 
                        z-index:1000;left: 50%;margin-left: -280px; top: 150px; 
                        height:318px"> 
                    <div id="alert_head">    
                        <div>        
                            <img src="images/panner/king_name.png">    
                        </div>       
                        <div id="alert-title">
                             انشاء فريق
                        </div>            
                        <img src="images/btns/close_b.png" class="img-sml close-alert_container">       
                    </div>
                    <div id="alert_box" class="guild_creat" >        
                        <div class="row-one">
                            <div class="pull-L left">
                                <div class="guild_slogan" >
                                    <img src="images/style/bottom-1.png" data-place="bottom" data-cur_image="1">
                                    <img src="images/style/central-1.png" data-place="middle" data-cur_image="1">
                                    <img src="images/style/top-1.png" data-place="top" data-cur_image="1">
                                        
                                </div>
                            </div>
                            <div class="pull-R right">
                                <div class="nav_icon">
                                    <div class="pull-L loop-guild-slogan left-btn" data-direction="left" data-place="top"></div>
                                    <h1>1/21</h1>
                                    <div class="pull-R loop-guild-slogan right-btn" data-direction="right" data-place="top"></div>
                                </div>
                                <div class="nav_icon">
                                    <div class="pull-L loop-guild-slogan left-btn" data-direction="left"  data-place="middle"></div>
                                    <h1>1/4</h1>
                                    <div class="pull-R loop-guild-slogan right-btn"  data-direction="right"  data-place="middle"></div>

                                </div>
                                <div class="nav_icon">
                                    <div class="pull-L loop-guild-slogan left-btn" data-direction="left"  data-place="bottom"></div>
                                    <h1>1/5</h1>
                                    <div class="pull-R loop-guild-slogan right-btn" data-direction="right" data-place="bottom"></div>

                                </div>
                            </div>
                        </div>  
                        <div class="row-two bg-btn-blu" style="background-size: 105% 123%;
                                            background-position: center;
                                            background-repeat: no-repeat;
                                            background-position-y: 0px;">
                            <input type="text" class="input" placeholder="اسم الحلف" id="guild-name"/>
                        </div>
                        <div class="row-three">        
                            <div class="confim-btn">            
                                <button id="ConfCreateTeam" class="full-btn full-btn-2x  enter"  >تاكيد وانشاء</button>    

                            </div>    
                        </div>
                    </div>    
                </div>`;

    $("body").append(box);
    $("#select_from").remove();
});

$(document).on("click", "#ConfCreateTeam", function() {

    if ($("#guild-name").val() === "") {
        alert_box.confirmMessage(" لا يمكن ان يكون اسم الفريق خالى");
        return;
    } else if (game.Team.PlayerTeam.Team != false) {
        alert_box.confirmMessage("أنت بالفعل قائد فريق");
        return;
    } else if ($("#guild-name").val().length < 5) {

        alert_box.confirmMessage("اسم الفريق اقل من 5 حروف");
        return;

    } else if ($("#guild-name").val().length > 20) {

        alert_box.confirmMessage("يجب ان لا يتعدى اسم الفريق عن 20 حرف");
        return;

    } else {
        var idCity = game.CurrentCity.City.id_city;
        $.ajax({
            url: `https://${WS_HOST}:${WS_PORT}/api/ATeam/create`,
            data: {
                guildName: $("#guild-name").val(),
                slogBottom: $(".guild_slogan img:first").attr("data-cur_image"),
                slogTop: $(".guild_slogan img:last").attr("data-cur_image"),
                slogMiddle: $(".guild_slogan img:nth-child(2)").attr("data-cur_image"),
                idCity: idCity,
                token: game.Config.OuthToken
            },
            type: 'GET',
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    $(".close-alert_container").trigger("click");
                    game.Team.getPlayerTeam();
                    alert_box.succesMessage(`تم انشاء فريق ${JsonObject.Team.name} بنجاح`);

                } else if (JsonObject.state == "error_0")
                    return alert_box.confirmMessage("لا يوجد إسم للفريق");
                else if (JsonObject.state == "error_1")
                    return alert_box.confirmMessage("يوجد فريق يحمل نفس الأسم");
                else if (JsonObject.state == "error_2")
                    return alert_box.confirmMessage("أنت بالفعل على قوة فريق أخر");
                else if (JsonObject.state == "error_3")
                    return alert_box.confirmMessage("لا يوجد لديك موارد كافية لإنشاء فريق");
                else if (JsonObject.state == "error_4")
                    return alert_box.confirmMessage("حدث خطاء ما اثناء إنشاء الفريق");
                else
                    alert(data);


            },
            error: function(jqXHR, textStatus, errorThrown) {

            }
        });
    }
});

$(document).on("click", "#TeamHeaderNavBar li", function() {

    const NavTo = $(this).attr("data-nav-to");



    if (!game.Team.PlayerTeam.Team && NavTo != "TeamRankingPage") {
        alert_box.failMessage("لست منضم فى أى فريق !");
        $("#TeamHeaderNavBar li").removeClass("selected");
        $("#TeamHeaderNavBar .TeamRankPageCl").addClass("selected");
        return;
    }

    $("#DialBoxFooter").remove();


    if (NavTo == "TeamHomePage") {
        game.Team.TeamHomePage();
    } else if (NavTo == "TeamFriendPage") {
        game.Team.TeamFriendPage();
    } else if (NavTo == "TeamEnemyPage") {
        game.Team.TeamEnemyPage();
    } else if (NavTo == "TeamRankingPage") {
        game.Team.RankPage(0);
    } else if (NavTo == "TeamHistoryPage") {
        game.Team.HistoryPage(0);
    } else if (NavTo == "TeamUpgradePage") {

    } else {
        alert("sadsad " + NavTo);
    }

});

$(document).on("click", "#TeamAdmins", function() {

    $(this).next(".drop-list").slideToggle();

});

$(document).on("click", "#chang-t-word", function() {

    $("#over_lay").remove();

    var current_guild = `<div id="over_lay">
                            <div id="select_from">
                                <div class="head_bar">
                                    <img src="images/style/head_bar.png" class="banner">
                                    <div class="title">المقدمة</div>
                                    <img class="close close_use_menu" src="images/btns/close_b.png">
                                </div>
                                <p style="clear: both"></p>
                                <div id="rank-review">
                                    <div class="upper">
                                        <div class="upper" style="height: 185px;">
                                            <div class="table flex">
                                                <div class="left">
                                                    <img src="images/style/bottom-${game.Team.PlayerTeam.Team.slog_btm}.png" style="position: absolute">
                                                    <img src="images/style/central-${game.Team.PlayerTeam.Team.slog_cnt}.png" style="position: absolute">
                                                    <img src="images/style/top-${game.Team.PlayerTeam.Team.slog_top}.png" style="position: absolute">
                                                </div>
                                                <div class="right">
                                                    <div class="t-r">
                                                        <label>${game.Team.PlayerTeam.TeamMember[0].PlayerName}</label>
                                                        <label>: القائد</label>
                                                    </div>
                                                    <div class="t-r">
                                                        <label>${getArabicNumbers(game.Team.PlayerTeam.Team.rank)}</label>
                                                        <label>: تصنيف</label>
                                                    </div>
                                                    <div class="t-r">
                                                        <label>${getArabicNumbers(game.Team.PlayerTeam.Team.mem_num)}</label>
                                                        <label>: الاعضاء</label>
                                                    </div>
                                                    <div class="t-r">
                                                        <label>${getArabicNumbers(game.Team.PlayerTeam.Team.lvl)}</label>
                                                        <label>: مستوى</label>
                                                    </div>
                                                    <div class="t-r">
                                                        <label>${getArabicNumbers(game.Team.PlayerTeam.Team.prestige)}</label>
                                                        <label>: برستيج</label>
                                                    </div>
                                                    <div class="t-r">
                                                        <label>${getArabicNumbers(game.Team.PlayerTeam.Team.honor)}</label>
                                                        <label>: شرف</label>
                                                    </div>
                                                </div>
                                            </div>
                                            <table>
                                                <tbody>

                                                    <tr>
                                                        <td colspan="3" style="text-align: center; line-height: 34px;">
                                                            <h1 style="background-image: url(&quot;images/background/profile_name.png&quot;);
                                                                background-size: 75% 100%;
                                                                background-repeat: no-repeat;
                                                                background-position: center;"> ${game.Team.PlayerTeam.Team.name}</h1>
                                                        </td>
                                                    </tr>
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                    <div class="down">
                                        <div class="th ellipsis">${Translate.Title.TH.Intro[UserLag.language]}</div>
                                        <p>
                                            <textarea value="${game.Team.PlayerTeam.Team.word}" class="input">${game.Team.PlayerTeam.Team.word}</textarea>
                                            <button class="full-btn full-btn-3x " id="save-t-intro" > تعديل</button>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>`;


    $("body").append(current_guild);


});

$(document).on("click", "#save-t-intro", function() {

    var self_ = $(this);
    var new_intro = $(this).prev("textarea").val();

    if (new_intro.length === 0) {
        alert_box.failMessage("مقدمة غير مسموح بها ");
        return;

    }
    if (game.Team.PlayerTeam.Player.rank < game.Team.RANK_DATA.LEADER) {
        alert_box.failMessage("غير مسموح بتغير المقدمة  الا بواسطة القائد");
        return;
    }
    if (new_intro == game.Team.PlayerTeam.Team.word) {
        alert_box.confirmMessage("لم يتم تغير المقدمة");
        return;
    }

    $.ajax({
        url: `https://${WS_HOST}:${WS_PORT}/api/ATeam/modifyTeamWord`,

        data: {
            newWord: new_intro,
            token: game.Config.OuthToken
        },
        type: 'GET',
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {

                $("#chang-t-word").click();
                self_.parents("p").html(new_intro);
                alert_box.succesMessage("تم تعديل المقدمة بنجاح");
                game.Team.PlayerTeam.Team = JsonObject.Team;
                $("#TeamHeaderNavBar .selected").click();

            } else if (JsonObject.state == "error_0") {
                alert_box.failMessage("لست عضواً بهذا الفريق");
            } else if (JsonObject.state == "error_1") {
                alert_box.failMessage("لا يمكن تعديل المقدمة إلا بواسطة قائد الفريق");
            } else if (JsonObject.state == "error_2") {
                alert_box.failMessage("لا يمكن أن تكون المقدمة أكثر من 512 حرف");
            }
        }
    });

});

$(document).on("click", "#change-t-F_E-list", function() {


    const box = `   <div id="over_lay_alert">   
                            <div id="guild-alert-box">    
                                <div id="alert_head">          
                                    <div>               
                                        <img src="images/panner/king_name.png">       
                                    </div>       
                                    <div id="alert-title">الاصدقاء و الاعداء        
                                    </div>           
                                    <img src="images/btns/close_b.png" class="img-sml close-alert">  
                                </div>  
                                   ${game.Team.changeTeamRelationBox()}
                            </div>
                        </div>`;
    $("body").append(box);

});

$(document).on("keyup", "#TeamEneFriInput", function() {

    var search_val = $(this).val();

    if (search_val === "") {

        $("#g-search_result ul").html("");
        $("#g-search_result").hide();
        return;
    }


    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/ATeam/searchTeamByName`,
        data: {
            token: game.Config.OuthToken,
            SearchVal: search_val
        },
        type: 'GET',

        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {

            if (!isJson(data))
                return game.LBase.Error(data);

            var json_data = JSON.parse(data);
            console.log(data);

            var list = "";

            for (var iii = 0; iii < json_data.length; iii++) {

                list += `   <li class="SearchTeamUnitRes" data-id-team="${json_data[iii].id_team}" data-t-name = "${json_data[iii].name}"> 
                                <div class="pull-L image">
                                    <img src="images/style/bottom-${json_data[iii].slog_btm}.png">
                                    <img src="images/style/central-${json_data[iii].slog_cnt}.png">
                                    <img src="images/style/top-${json_data[iii].slog_top}.png" >
                                </div>
                                <h1 class="pull-L">${json_data[iii].name}</h1>
                                <h2 class="pull-L">(${getArabicNumbers(json_data[iii].lvl)})</h2>
                            </li>`;

            }

            if (json_data.length) {

                $("#g-search_result").show();
                $("#g-search_result ul").html(list);

            } else {

                $("#g-search_result").hide();
                $("#g-search_result ul").html("");

            }
        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });
});

$(document).on("click", "#g-search_result .SearchTeamUnitRes", function() {

    var id_guild = parseInt($(this).attr("data-id-team"));
    var guild_name = $(this).attr("data-t-name");

    $(".F_E-list .row-1 input").val(guild_name);
    $(".F_E-list .row-1 input").attr("data-id-team", id_guild);
    $(".F_E-list .row-1 input").attr("data-t-name", guild_name);


    $("#g-search_result").hide();
    $("#g-search_result ul").html("");

});

$(document).on('click', '#submit-team-relation', function() {
    var TeamREl = $('.F_E-list input[name=guild_relation]:checked').val();
    var idTeam = parseInt($('.F_E-list .row-1 input')['attr']('data-id-team'));
    if (!idTeam)
        return alert_box.confirmMessage('عليك اختيار الفريق اولا');
    else if (!TeamREl['length'])
        return alert_box.confirmMessage('اختار العلاقة بين الفريقين');

    $.ajax({
        'url': `https://${WS_HOST}:${WS_PORT}/api/ATeam/changeTeamRelation`,
        'data': {
            'idTeam': idTeam,
            'relation': TeamREl,
            'token': game.Config.OuthToken
        },
        'type': 'GET',
        'success': function(data, _0x5b5eee, _0x5af2f1) {
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);
            var JsonData = JSON.parse(data);
            if (JsonData.state == 'ok') {
                $('.close-alert').click();
                alert_box.succesMessage('تم اضافة العلاقة بين الفريقين بنجاح');
                $("#TeamHeaderNavBar .selected").click();
            } else if (JsonData['state'] == 'error_0')
                alert_box['failMessage']('لست عضو فى الفريق');
            else if (JsonData['state'] == 'error_1')
                alert_box['failMessage']('رتيتك فى الفريق لا تسمح');
            else if (JsonData['state'] == 'error_2')
                alert_box['failMessage']('نوع العلاقة غير صالحة')
            else
                alert(data);

        },
        'error': function(_0xf6addd, _0x324ef9, _0x45d39a) {}
    });
});

$(document).on("click", "#invite-t", function() {

    var content = alert_box.alert_content_Guild_Invite();
    var box = `   <div id="over_lay_alert">   
                        <div id="guild-alert-box">    
                            <div id="alert_head">          
                                <div>               
                                    <img src="images/panner/king_name.png">       
                                </div>       
                                <div id="alert-title">دعوة املك
                                </div>           
                                <img src="images/btns/close_b.png" class="img-sml close-alert">  
                            </div>  
                            <div id="alert_box" class="F_E-list">
                                <div class="row-1"> 
                                    <input type="text"  id="SearchByNameForTeam" class="input">
                                    <label class="th ellipsis">${Translate.Title.TH.LordName[UserLag.language]}</label>
                                    <div id="search_result"  class="search_res">
                                        <ul id="SearchTeamRes"> 
                                            
                                        </ul>
                                    </div>

                                </div>
                                
                                <div class="row-3">
                                    <div class="confim-btn">
                                        <button class="full-btn full-btn-3x" id="submit-team-invite">
                                            ارسال دعوة
                                        </button>
                                    </div>
                                </div>
                            </div> 
                        </div>
                    </div>`;
    $("body").append(box);

});

$(document).on("keyup", "#SearchByNameForTeam", function() {

    var segmant = $(this).val();

    if ($.trim(segmant) !== "") {

        searchByName(segmant, true);

    } else {
        $("#search_result ul").empty();
        $("#search_result ").hide();
    }


});

$(document).on("click", "#submit-team-invite", function() {

    var idPlayer = parseInt($("#SearchByNameForTeam").attr("data-id-player"));

    if (!idPlayer)
        return alert_box.confirmMessage("يجب عليك اختيار ملك");


    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/ATeamInvReq/SendPlayerInv`,
        data: {
            token: game.Config.OuthToken,
            idPlayer: idPlayer

        },
        type: 'GET',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {



            $(".close-alert").click();
            if ($("#guild-g_relation").length > 0) {
                showInVitedMembers();
            }
            alert_box.succesMessage('تم ارسال الدعوة بنجح');
            game.Team.getPlayerTeam().done(function() {
                $("#TeamHeaderNavBar .selected").click();
            });



        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

});

$(document).on("click", "#change-t-slog", function() {


    if (!game.Team.PlayerTeam.Team)
        return alert_box.confirmMessage("لا يمكن عرض هذا العنصر");
    $("#alert_container").remove();

    var new_slogan_co = `<div id="alert_container" class="bg-general" style=" position:fixed; width: 560px; 
                                z-index:1000;left: 50%;margin-left: -280px; top: 150px; height: auto;
                                "> 
                            <div id="alert_head">    
                                <div>        
                                    <img src="images/panner/king_name.png">    
                                </div>       
                                <div id="alert-title">
                                    تعديل شعار
                                </div>            
                                <img src="images/btns/close_b.png" class="img-sml close-alert_container">       
                            </div>
                            <div id="alert_box" class="guild_creat">        
                                <div class="row-one">
                                    <div class="pull-L left">
                                        <div class="guild_slogan">
                                            <img src="images/style/bottom-${game.Team.PlayerTeam.Team.slog_btm}.png" data-place="bottom" data-cur_image="1">
                                            <img src="images/style/central-${game.Team.PlayerTeam.Team.slog_cnt}.png" data-place="middle" data-cur_image="1">
                                            <img src="images/style/top-${game.Team.PlayerTeam.Team.slog_top}.png" data-place="top" data-cur_image="1">

                                        </div>
                                    </div>
                                    <div class="pull-R right">
                                        <div class="nav_icon">
                                            <div class="pull-L loop-guild-slogan left-btn" data-direction="left" data-place="top"></div>
                                            <h1>${getArabicNumbers(game.Team.PlayerTeam.Team.slog_top)}/21</h1>
                                            <div class="pull-R loop-guild-slogan right-btn" data-direction="right" data-place="top"></div>
                                        </div>
                                        <div class="nav_icon">
                                            <div class="pull-L loop-guild-slogan left-btn" data-direction="left" data-place="middle"></div>
                                            <h1>${getArabicNumbers(game.Team.PlayerTeam.Team.slog_cnt)}/4</h1>
                                            <div class="pull-R loop-guild-slogan right-btn" data-direction="right" data-place="middle"></div>

                                        </div>
                                        <div class="nav_icon">
                                            <div class="pull-L loop-guild-slogan left-btn" data-direction="left" data-place="bottom"></div>
                                            <h1>${getArabicNumbers(game.Team.PlayerTeam.Team.slog_top)}/5</h1>
                                            <div class="pull-R loop-guild-slogan right-btn" data-direction="right" data-place="bottom"></div>

                                        </div>
                                    </div>
                                </div>  
                                <div class="row-two bg-btn-blu" style="background-size: 105% 123%;
                                                    background-position: center;
                                                    background-repeat: no-repeat;
                                                    background-position-y: 0px;">
                                    <h1 style="color: white; font-size: 16px; line-height: 36px; text-align: center" >${game.Team.PlayerTeam.Team.name}</h1>
                                </div>
                                <div class="row-three">        
                                    <div class="confim-btn">            
                                        <button  class="full-btn full-btn-3x  enter" id="updateTeamSlog"> تعديل الشعار</button>    

                                    </div>    
                                </div>
                            </div>    
                        </div>`;
    $("body").append(new_slogan_co);

});

$(document).on("click", "#updateTeamSlog", function() {
    BoxOfMatrialToUse(['family_slogan'], 'change_g_slog');
});

$(document).on("click", "#SendTeamJoinReq", function() {

    var idTeam = parseInt($(this).attr("data-id-team"));

    $.ajax({

        url: `https://${WS_HOST}:${WS_PORT}/api/ATeamInvReq/sendTeamJoinRequest`,
        data: {
            idTeam: idTeam,
            token: game.Config.OuthToken
        },
        type: 'GET',
        success: function(data, textStatus, jqXHR) {

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state === "ok") {
                alert_box.succesMessage("تم ارسال الدعوة الى المسؤلين للانضمام للفريق");
                $(".close_use_menu").click();
                game.Team.getPlayerTeam();
            }


        },
        error: function(jqXHR, textStatus, errorThrown) {

        }

    });

});

$(document).on("click", ".rejectTeamInv", function() {

    const idTeam = $(this).attr("data-id-team");
    $.ajax({
        url: `https://${WS_HOST}:${WS_PORT}/api/ATeamInvReq/rejectTeamInv`,
        data: {
            idTeam: idTeam,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {},
        success: function(data, textStatus, jqXHR) {
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            console.log(JsonObject)

            if (JsonObject.state == "ok") {
                alert_box.succesMessage("تم الغاء  دعوة الانضمام بنجاح");
                game.Team.PlayerTeam.TeamInv = JsonObject.TeamInv;
                $("#select_from").replaceWith(game.Team.noTeamJoin());

            }


        },
        error: function(jqXHR, textStatus, errorThrown) {}
    });
});

$(document).on("click", ".acceptTeamInv", function() {
    const idTeam = $(this).attr("data-id-team");
    $.ajax({
        url: `https://${WS_HOST}:${WS_PORT}/api/ATeamInvReq/acceptTeamInv`,
        data: {
            idTeam: idTeam,
            token: game.Config.OuthToken,
            server: game.Config.idServer
        },
        type: 'POST',
        beforeSend: function(xhr) {},
        success: function(data, textStatus, jqXHR) {
            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            console.log(JsonObject)

            if (JsonObject.state == "ok") {
                alert_box.succesMessage("تم قبول دعوة الانضمام بنجاح");
                $("#closeGuildSelFrom").click();
                game.Team.getPlayerTeam();
            } else if (JsonObject.state == "error_0") {
                alert_box.failMessage("لا يوجد دعوة لك لدخول الفريق");
            }


        },
        error: function(jqXHR, textStatus, errorThrown) {}
    });
});

$(document).on('click', "#resignation-t", function() {
    if (game.Team.PlayerTeam.Player.rank > game.Team.RANK_DATA.LEADER)
        return alert_box.confirmMessage("لا يمكن للقائد الإستقالة");



    alert_box.confirmDialog("تاكيد الإستقالة من المنصب", function() {

        $.ajax({
            url: `https://${WS_HOST}:${WS_PORT}/api/ATeam/playerTeamResign`,
            data: {
                token: game.Config.OuthToken,
                idTeam: game.Team.PlayerTeam.Team.id_team
            },
            type: 'POST',
            beforeSend: function(xhr) {},
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    $(".close_dialog").click();
                    game.Team.getPlayerTeam();
                    alert_box.succesMessage("تم الإستقالة من الفريق بنجاح!");

                } else if (JsonObject.state == "error_0") {
                    alert_box.failMessage("لست عضوا فى هذا الفريق!");
                } else if (JsonObject.state == "error_1") {
                    alert_box.failMessage("لا يمكنك الإستقالة من المنصب و أنت مدير !")
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {}

        });

    });
});

$(document).on("click", "#PlayerTeamLeave", function() {

    if (game.Team.PlayerTeam.Player.rank > game.Team.RANK_DATA.NORMAL_MEM)
        return alert_box.confirmMessage("لا يمكنك الخروج من الفريق عليك التخلى عن منصبك اولا ");



    alert_box.confirmDialog("تاكيد الخروج من الفريق", function() {

        $.ajax({
            url: `https://${WS_HOST}:${WS_PORT}/api/ATeam/playerTeamLeave`,
            data: {
                token: game.Config.OuthToken,
                idTeam: game.Team.PlayerTeam.Team.id_team
            },
            type: 'POST',
            beforeSend: function(xhr) {},
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    $(".close_dialog").click();
                    game.Team.getPlayerTeam();
                    alert_box.succesMessage("تم الخروج من الفريق بنجاح!");

                } else if (JsonObject.state == "error_0") {
                    alert_box.failMessage("لست عضوا فى هذا الفريق!");
                } else if (JsonObject.state == "error_1") {
                    alert_box.failMessage("لا يمكنك الخروج من الفريق إلا و انت عضو عادى !")
                } else if (JsonObject.state == "error_2") {
                    alert_box.failMessage("لا يمكنك ترك الفريق فارغ من الأعضاء!");
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {}

        });

    });

});

$(document).on("click", "#destroy-t", function() {

    if (game.Team.PlayerTeam.Player.rank != game.Team.RANK_DATA.LEADER)
        return alert_box.confirmMessage("يجب انت تكون مدير الفريق   لتتمكن من تفكيك الفريق");


    alert_box.confirmDialog("تاكيد تفكيك الفريق! , اذا تم تاكيد تفكيك الفريق سيتم طرد جميع الاعضاء ولن تتمكن من  ارجاع الفريق ثانية", function() {

        $.ajax({

            url: `${NODE_URL}/api/ATeam/disbandTeam`,
            data: {
                token: game.Config.OuthToken,
                server: game.Config.idServer
            },
            type: 'POST',
            beforeSend: function(xhr) {},
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    game.Team.getPlayerTeam();
                    alert_box.succesMessage("تم تفكيك الفريق بنجاح");
                    $(".close_dialog").click();

                } else {
                    alert(data);
                }


            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    });

});


$(document).on("click", "#ShowAvailableTeams", function() {
    $("#select_from").remove();
    dialogBoxShow(game.Team.DialogBox(), function() {
        $("#TeamHeaderNavBar li").removeClass("selected");
        $("#TeamHeaderNavBar .TeamRankPageCl").addClass("selected");
        game.Team.RankPage(0);
    });
});

$(document).on("click", "#CancelTeamJoinReq", function() {

    alert_box.confirmDialog("تأكيد إلغاء طلب الإنضمام", function() {
        $.ajax({
            url: `https://${WS_HOST}:${WS_PORT}/api/ATeamInvReq/cancelTeamJoinReq`,
            data: {
                token: game.Config.OuthToken
            },
            type: 'POST',
            beforeSend: function(xhr) {},
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    alert_box.succesMessage("تم الغاء طلب الانضمام بنجاح");
                    game.Team.getPlayerTeam().done(function() {
                        $("#select_from").replaceWith(game.Team.noTeamJoin());
                    });

                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    });

});

/* <button class="full-btn-3x btn acceptTeamJoinReq" data-id-player="${PlayerTeam.TeamReq[iii].id_req}">قبول</button>
                                <button class="full-btn-3x btn rejectTeamJoinReq" */

$(document).on("click", ".acceptTeamJoinReq", function() {

    const idPlayer = $(this).attr("data-id-player");

    alert_box.confirmDialog("تأكيد قبول طلب الإنضمام", function() {
        $.ajax({
            url: `https://${WS_HOST}:${WS_PORT}/api/ATeamInvReq/acceptTeamJoinReq`,
            data: {
                token: game.Config.OuthToken,
                idPlayer: idPlayer
            },
            type: 'POST',
            beforeSend: function(xhr) {},
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    alert_box.succesMessage("تم قبول طلب الانضمام بنجاح");
                    $("#TeamHeaderNavBar .selected").click();
                    game.Team.getPlayerTeam().done(function() {
                        $("#TeamHeaderNavBar .selected").click();
                    });

                } else if (JsonObject.state == "error_0") {
                    alert_box.failMessage("لست منضم فى فريق");
                } else if (JsonObject.state == "error_1") {
                    alert_box.failMessage("لا يوجد طلب لهذا اللاعب");
                } else if (JsonObject.state == "error_2") {
                    alert_box.failMessage("رتبتك فى الفريق لا تسمح");
                } else if (JsonObject.state == "error_3") {
                    alert_box.failMessage("اللاعب فى فريق أخر");
                } else if (JsonObject.state == "error_4") {
                    alert_box.failMessage("طلب الإنضمام ليس لنفس الفريق");
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    });

});

$(document).on("click", ".cancelTeamInv", function() {

    const idPlayer = $(this).attr("data-id-player");

    alert_box.confirmDialog("تأكيد رفض طلب الإنضمام", function() {
        $.ajax({
            url: `https://${WS_HOST}:${WS_PORT}/api/ATeamInvReq/cancelTeamInv`,
            data: {
                token: game.Config.OuthToken,
                idPlayer: idPlayer
            },
            type: 'POST',
            beforeSend: function(xhr) {},
            success: function(data, textStatus, jqXHR) {

                if (!game.LBase.isJson(data))
                    return game.LBase.Error(data);

                var JsonObject = JSON.parse(data);

                if (JsonObject.state === "ok") {

                    alert_box.succesMessage("تم إلغاء دعوة الانضمام بنجاح");
                    $("#TeamHeaderNavBar .selected").click();
                    game.Team.getPlayerTeam().done(function() {
                        $("#TeamHeaderNavBar .selected").click();
                    });

                } else if (JsonObject.state == "error_0") {
                    alert_box.failMessage("لا يوجد طلب لهذا اللاعب");
                } else if (JsonObject.state == "error_1") {
                    alert_box.failMessage("لست منضم فى فريق");
                } else if (JsonObject.state == "error_2") {
                    alert_box.failMessage("رتبتك فى الفريق لا تسمح");
                }

            },
            error: function(jqXHR, textStatus, errorThrown) {

            }

        });

    });

});



$(document).on("click", ".TeamMemberSettingIcon", function() {
    $(this).next().slideToggle();
});

$(document).on("click", ".FireGuildMemeber", function() {

    var idPlayer = $(this).attr("data-id-player");
    $.ajax({
        url: `${NODE_URL}/api/ATeam/fireTeamMember`,
        data: {
            idMember: idPlayer,
            token: game.Config.OuthToken
        },
        type: 'POST',
        beforeSend: function(xhr) {

        },
        success: function(data, textStatus, jqXHR) {
            $("#TeamHeaderNavBar .selected").click();

            if (!game.LBase.isJson(data))
                return game.LBase.Error(data);

            var JsonObject = JSON.parse(data);

            if (JsonObject.state == "ok") {
                alert_box.succesMessage("تم طرد اللاعب بنجاح");
            } else if (JsonObject.state == "error_0") {
                alert_box.failMessage("اللاعب ليس من ضمن أعضاء الفريق");
            } else if (JsonObject.state == "error_1") {
                alert_box.failMessage("لست مدير الفريق");
            } else if (JsonObject.state == "error_2") {
                alert_box.failMessage("لست قائد الفريق");
            } else if (JsonObject.state == "error_3") {
                alert_box.failMessage("لا يمكنك طرد قائد الفريق");
            }


        },
        error: function(jqXHR, textStatus, errorThrown) {

        }
    });

});
game.Ui.Select.menuList = function(list, selectedIndex) {

    var optionList = "";

    for (var iii in list) {
        if (Number(iii) === Number(selectedIndex)) {
            optionList += `<li class="unit-option selected-op" data-title="${list[iii].title}" data-value="${list[iii].value}">${list[iii].title}</li>`;
        } else {
            optionList += `<li class="unit-option" data-title="${list[iii].title}" data-value="${list[iii].value}" data-index="${iii}">${list[iii].title}</li>`;
        }
    }

    return `<ul style="display : none">${optionList}</ul>`;
};


game.Ui.Select.make = function(list, selectedIndex, Style) {

    if (typeof selectedIndex != "number")
        selectedIndex = 0;
    var Height = 266;
    var Width = 160;
    if (typeof Style == "object") {
        Height = Style.height || 266;
        Width = Style.width || 160;
    }



    return `
            <div class="select-list" data-value="${list[selectedIndex].value}" data-active="false" data-height="${Height}" data-width="${Width}">
                <div class="select select-input">
                    <div class="value">${list[selectedIndex].title}</div>
                </div>
                <div class="option" style="width: ${Width}px;" >${this.menuList(list, selectedIndex)}</div>
            </div>`;

};


$(document).on("click", ".select-list .unit-option", function() {

    var title = $(this).attr("data-title");
    var value = $(this).attr("data-value");
    $(this).parents(".select-list").children('.option').children("ul").children().removeClass("selected-op");
    $(this).addClass("selected-op");
    $(this).parents(".select-list").attr("data-value", value);
    $(this).parents(".select-list").children('.select-input').children('.value').html(title);
    //$(".select-list .value").html(title);


});

$(document)['on']('click', '.uiCheckedBox', function() {
    $(this)['removeClass']('uiCheckedBox'), $(this)['addClass']('uiUnCheckBox');
});
$(document)['on']('click', '.uiUnCheckBox', function() {
    $(this)['addClass']('uiCheckedBox'), $(this)['removeClass']('uiUnCheckBox');
});
$(document)['on']('click', '.uiCheckedRadio', function() {
    $(this)['removeClass']('uiCheckedRadio'), $(this)['addClass']('uiUnCheckedRadio');
});
$(document)['on']('click', '.uiUnCheckedRadio', function() {
    $(this)['addClass']('uiCheckedRadio'), $(this)['removeClass']('uiUnCheckedRadio');
});

console.log = () => {}